{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","ngMetadataName","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","InjectFlags","ɵ0","token","Inject","Optional","Self","SkipSelf","Host","ɵ1","attributeName","Attribute","getClosureSafeProperty","objWithPropertyToExtract","Error","fillProperties","source","ɵɵdefineInjectable","opts","providedIn","undefined","defineInjectable","ɵɵdefineInjector","options","providers","imports","getInjectableDef","type","def","NG_INJECTABLE_DEF","getInjectorDef","NG_INJECTOR_DEF","ngInjectableDef","ngInjectorDef","stringify","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","fn","R3ResolvedDependencyType","__globalThis","globalThis","__window","window","__self","WorkerGlobalScope","__global","_global","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","InjectionToken","_desc","__NG_ELEMENT_ID__","INJECTOR","THROW_IF_NOT_FOUND","NG_TEMP_TOKEN_PATH","NG_TOKEN_PATH","NEW_LINE","NO_NEW_LINE","SOURCE","USE_VALUE","provide","String","useValue","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","injectInjectorOnly","flags","Default","injectRootLimpMode","get","ɵɵinject","inject","notFoundValue","injectableDef","injectArgs","types","arg","isArray","j","NullInjector","catchInjectorError","injectorErrorName","tokenPath","message","formatError","text","obj","charAt","substr","context","parts","JSON","replace","angularCoreDiEnv","ɵɵgetFactoryOf","getFactoryOf","typeAny","Type","Function","isType","v","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","INHERITED_CLASS_WITH_DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","result","_ownParameters","parentCtor","isDelegateCtor","typeStr","test","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","fill","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","keys","forEach","prop","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getPrototypeOf","getReflect","reflectDependencies","convertDependencies","deps","compiler","dep","reflectDependency","host","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","compileInjectable","srcMeta","hasAProvider","isUseClassProvider","isUseFactoryProvider","isUseValueProvider","isUseExistingProvider","compilerMeta","typeArgumentCount","ctorDeps","userDeps","useClass","useFactory","useExisting","USE_VALUE$1","USE_VALUE$2","EMPTY_ARRAY","convertInjectableProviderToFactory","provider","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","Injectable","SWITCH_COMPILE_INJECTABLE","SWITCH_COMPILE_INJECTABLE__POST_R3__","render2CompileInjectable","injectableType","throwMultipleComponentError","tNode","tagName","throwMixedMultiProviderError","addAllToArray","items","arr","flatten","list","dst","item","slice","deepForEach","input","APP_ROOT","NOT_YET","CIRCULAR","EMPTY_ARRAY$1","NULL_INJECTOR","getNullInjector","createInjector","defType","parent","additionalProviders","R3Injector","_this","records","Map","injectorDefTypes","Set","onDestroy","_destroyed","dedupStack","injectorDef","processInjectorType","processProvider","set","makeRecord","isRootInjector","has","enumerable","configurable","destroy","assertNotDestroyed","service","ngOnDestroy","clear","previousInjector","record","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","tokens","defOrWrappedDef","parents","ngModule","isDuplicate","add","importTypesWithProviders_1","imported","_loop_1","ngModule_1","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","multi","existing","multiRecord_1","throwCyclicDependencyError","hasOnDestroy","getUndecoratedInjectableFactory","paramLength","inheritedInjectableDef","getInheritedInjectableDef","console","warn","isExistingProvider","isFactoryProvider","classRef_1","throwInvalidProviderError","ngModuleDetail","hasDeps","INJECTOR_IMPL","INJECTOR_IMPL__PRE_R3__","StaticInjector","Injector","NULL","IDENT","EMPTY","CIRCULAR$1","MULTI_PROVIDER_FN","_records","useNew","recursivelyProcessProviders","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","multiProvider","multiProviderMixError","tryResolveToken","resolveToken","NO_NEW_LINE$1","depRecords","depRecord","childRecord","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","originalError","errMsg","wrappedError","msg","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","id","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProvider","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","from","some","_createDependency","paramMetadata","ChangeDetectionStrategy","ChangeDetectorStatus","Query","UNDEFINED","ReflectiveInjector","resolve","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","_getByReflectiveDependency","instantiationError","originalException","originalStack","first","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","ANALYZE_FOR_ENTRY_COMPONENTS","ContentChildren","selector","data","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","resolveComponentResources","resourceResolver","componentResolved","urlMap","cachedResourceResolve","url","promise","resp","then","unwrapResponse","componentResourceResolutionQueue","component","promises","templateUrl","template","styleUrls","styles","styleOffset","styleUrl","style","splice","fullyResolved","Promise","all","componentDefResolved","componentDefPendingResolution","delete","clearResolutionOfComponentResourcesQueue","ɵChangeDetectorStatus","ViewEncapsulation","componentNeedsResolution","old","response","noSideEffects","EMPTY_OBJ","EMPTY_ARRAY$2","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_LOCALE_ID_DEF","ngLocaleIdDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","_renderCompCount","ɵɵdefineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","consts","vars","ngContentSelectors","hostBindings","contentQueries","inputs","outputs","exportAs","onChanges","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","_","setInput","schemas","tView","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","ɵɵsetComponentScope","getComponentDef","getDirectiveDef","getPipeDef","ɵɵdefineNgModule","bootstrap","declarations","transitiveCompileScopes","ɵɵsetNgModuleScope","scope","getNgModuleDef","secondary","newLookup","minifiedKey","publicName","declaredName","ɵɵdefineBase","baseDefinition","ɵɵdefineDirective","ɵɵdefinePipe","pipeDef","pure","getBaseDef","throwNotFound","isDifferent","a","renderStringify","stringifyForError","defaultScheduler","requestAnimationFrame","setTimeout","ɵɵresolveWindow","element","ownerDocument","defaultView","ɵɵresolveDocument","ɵɵresolveBody","body","INTERPOLATION_DELIMITER","isPropMetadataString","str","maybeUnwrapFn","HOST","TVIEW","FLAGS","PARENT","NEXT","QUERIES","T_HOST","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR$1","RENDERER_FACTORY","RENDERER","SANITIZER","CHILD_HEAD","CHILD_TAIL","CONTENT_QUERIES","DECLARATION_VIEW","PREORDER_HOOK_FLAGS","HEADER_OFFSET","throwError","TYPE","ACTIVE_INDEX","NATIVE","CONTAINER_HEADER_OFFSET","isLView","isLContainer","isContentQueryHost","isComponent","isComponentDef","isRootView","registerPreOrderHooks","directiveIndex","directiveDef","nodeIndex","initialPreOrderHooksLength","initialPreOrderCheckHooksLength","preOrderHooks","preOrderCheckHooks","registerPostOrderHooks","firstTemplatePass","directiveStart","end","directiveEnd","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executePreOrderHooks","currentView","checkNoChangesMode","currentNodeIndex","executeHooks","firstPassHooks","checkHooks","initPhaseState","hooksToCall","callHooks","initPhase","nodeIndexLimit","lastNodeIndexFound","callHook","isInitHook","hook","directive","_stylingState","_stateStorage","_stylingElement","STYLING_INDEX_START_VALUE","BIT_MASK_START_VALUE","getStylingState","readFromMap","classesBitMask","classesIndex","stylesBitMask","stylesIndex","resetStylingState","elementDepthCount","MONKEY_PATCH_KEY_NAME","unwrapRNode","getNativeByIndex","lView","getNativeByTNode","getNativeByTNodeOrNull","getTNode","view","loadInternal","getComponentViewByIndex","hostView","slotValue","readPatchedData","readPatchedLView","viewAttachedToContainer","resetPreOrderHookFlags","bindingsEnabled","currentDirectiveDef","setCurrentDirectiveDef","ɵɵenableBindings","ɵɵdisableBindings","getLView","previousOrParentTNode","isParent","MIN_DIRECTIVE_ID","activeDirectiveId","activeDirectiveSuperClassDepthPosition","activeDirectiveSuperClassHeight","setActiveHostElement","elementIndex","_selectedIndex","setSelectedIndex","incrementActiveDirectiveId","adjustActiveDirectiveSuperClassDepthPosition","delta","Math","max","ɵɵrestoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","_isParent","setTNodeAndViewData","getIsParent","setIsNotParent","isCreationMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","bindingRootIndex","getBindingRoot","setBindingRoot","currentQueryIndex","getCurrentQueryIndex","setCurrentQueryIndex","enterView","newView","hostTNode","oldView","bindingStartIndex","nextContextImpl","level","walkUpViews","nestingLevel","leaveView","safeToRunHooks","getSelectedIndex","_currentSanitizer","_currentNamespace","ɵɵnamespaceSVG","ɵɵnamespaceMathML","ɵɵnamespaceHTML","namespaceHTMLInternal","setCurrentStyleSanitizer","sanitizer","getCurrentStyleSanitizer","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","removeChild","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","attrName","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","match","sanitizeSrcset","srcset","split","trim","tagSet","tags","e_1","_b","_c","e_1_1","return","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","ARIA_ATTRS","VALID_ATTRS","SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","current","traverseContent","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","parentNode","nodeName","toLowerCase","elAttr","lower","encodeEntities","node","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","parent_1","isTemplateElement","content","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","ɵɵsanitizeHtml","getSanitizer","sanitize","HTML","document","ɵɵsanitizeStyle","unsafeStyle","STYLE","ɵɵsanitizeUrl","unsafeUrl","URL","ɵɵsanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ɵɵsanitizeScript","unsafeScript","SCRIPT","getUrlSanitizer","tag","ɵɵsanitizeUrlOrResourceUrl","ɵɵdefaultStyleSanitizer","doSanitizeValue","RendererStyleFlags3","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","NodeInjectorFactory","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","MAP_BASED_ENTRY_PROP_NAME","updateLastDirectiveIndex","lastDirectiveIndex","currentValue","markContextToPersistState","setConfig","getConfig","getProp","getPropConfig","isSanitizationRequired","getGuardMask","setGuardMask","maskValue","config","getValuesCount","getBindingValue","offset","getDefaultValue","allowStylingFlush","isContextLocked","stateIsPersisted","getPropValuesStartPosition","hasValueChanged","compareValueA","compareValueB","isStylingValueDefined","concatString","separator","hyphenate","getStylingMapArray","isStylingContext$1","getInitialStylingValue","hasClassInput","hasStyleInput","getMapProp","setMapValue","getMapValue","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","getLContext","mpValue","isComponentInstance","instance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","native","createLContext","attachPatchData","rElement","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","CorePlayerHandler","_players","flushPlayers","player","state","play","queuePlayer","DEFAULT_TEMPLATE_DIRECTIVE_INDEX","ANIMATION_PROP_PREFIX","getStylingContextFromLView","viewData","storageIndex","wrapper","isStylingContext","stylingTemplate","allocStylingContext","templateStyleContext","createEmptyStylingContext","wrappedElement","initialStyles","initialClasses","allocateOrUpdateDirectiveIntoContext","singlePropValuesIndex","styleSanitizer","directiveRegistry","limit","propValuesStartPosition","isAnimationProp","getPlayerContext","stylingContext","setUpAttributes","attrs","isProc","namespaceURI","attrVal","setAttribute","setAttributeNS","setProperty","isNameOnlyAttributeMarker","marker","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","getLViewParent","findComponentView","rootTNode","getRootContext","viewOrComponent","getRootView","componentOrLView","includeViewProviders","setIncludeViewProviders","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","diPublicInInjector","bloomAdd","bloomBit","mask","b6","b5","tData","injectAttributeImpl","attrNameToInject","classes","attrsLength","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","NodeInjector","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","searchTokensOnInjector","NOT_FOUND","moduleInjector","previousInjectImplementation","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","cptViewProvidersCount","endIndex","providerTokenOrDef","dirDef","lData","isFactory","previousIncludeViewProviders","injectorView","isFirstHostTNode","_tNode","_lView","ɵɵgetInheritedFactory","getDebugContext","getOriginalError","defaultErrorLogger","ErrorHandler","_console","handleError","_findOriginalError","_findContext","errorLogger","getErrorLogger","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","NG_TEMPLATE_SELECTOR","isCssClassMatching","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","nodeAttrs","nameOnlyMarkerIdx","getNameOnlyMarkerIndex","skipToNextSelector","isPositive","selectorAttrValue","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","isInlineTemplate","bindingsMode","maybeAttrName","matchTemplateAttribute","isNodeMatchingSelectorList","isSelectorInSelectorList","selectorListLoop","currentSelectorInList","DEFAULT_GUARD_MASK_VALUE","STYLING_INDEX_FOR_MAP_BINDING","DEFAULT_BINDING_VALUE","DEFAULT_SIZE_VALUE","deferredBindingQueue","updateClassBinding","bindingIndex","deferRegistration","forceUpdate","isMapBased","updateBindingData","updateStyleBinding","counterIndex","sanitizationRequired","deferBindingRegistration","flushDeferredBindings","registerBinding","changed","countId","bindingValue","registered","found","valuesCount","allocateNewContextEntry","addBindingIntoContext","firstValueIndex","lastValueIndex","maybeApplyStyling","allowFlush","bitMask","styleSetter","lockAndFinalizeContext","initialValues","updateInitialStylingOnContext","initialStyling","lockContext","contextHasUpdates","applyStyling","bindingData","bitMaskValue","applyStylingFn","normalizeBitMaskValue","stylingMapsSyncFn","getStylingMapsSyncFn","_activeStylingMapApplyFn","mapsMode","valueApplied","valuesCountUpToDefault","defaultValue","valueAppliedWithinMap","setStyle","nativeStyle","DashCase","removeStyle","removeProperty","setClass","className","classList","addClass","removeClass","remove","renderStylingMap","stylingValues","isClassBased","stylingMapArr","NO_CHANGE","ELEMENT_MARKER","COMMENT_MARKER","syncStylingMap","targetProp","targetPropValueWasApplied","runTheSyncAlgorithm","loopUntilEnd","innerSyncStylingMap","currentMapIndex","cursor","getCurrentSyncCursor","mapIndex","MAP_CURSORS","iteratedTooFar","isTargetPropMatched","valueIsDefined","resolveInnerMapMode","isValueAllowedToBeApplied","useDefault","valueToApply","bindingIndexToApply","setCurrentSyncCursor","indexValue","resetSyncCursors","activateStylingMapFeature","setStylingMapsSyncFn","currentMode","isExactMatch","innerMode","doApplyValue","addItemToStylingMap","allowOverwrite","propAtIndex","applied","stylingMapToString","attrValue","stylingMapToStringMap","stringMap","TStylingContextDebug","entries","guardMask","bindingsStartPosition","sources","NodeStylingDebug","_data","_isClassBased","_sanitizer","overrideSanitizer","_mapValues","toDebug","debug","assertDefined","actual","toHtml","includeChildren","isTextNode","textContent","readLViewValue","TNode","tView_","propertyMetadataStartIndex","propertyMetadataEndIndex","localNames","initialInputs","tViews","projectionNext","projection","onElementCreationFns","LViewDebug","_raw_lView","__raw__flags__","creationMode","firstViewPass","checkAlways","dirty","attached","destroyed","isRoot","indexWithinInitPhase","toDebugNodes","debugNodes","tNodeCursor","rawValue","componentLViewDebug","nodes","cleanup","rendererFactory","childHead","childTail","declarationView","queries","tHost","childViews","__other__","LContainerDebug","_raw_lContainer","I18NDebugItem","__raw_opCode","ɵɵselect","selectInternal","I18nMutateOpCodesDebug","__raw_opCodes","__lView","results","opCode","commentValue","code","I18nUpdateOpCodesDebug","icus","checkBit","skipCodes","tIcuIndex","tIcu","sanitizeFn","_CLEAN_PROMISE","refreshDescendantViews","refreshDynamicEmbeddedViews","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","setHostBindings","selectedIndex","expandoInstructions","expandoStartIndex","currentDirectiveIndex","currentElementIndex","instruction","providerCount","staticContentQueries","refreshChildComponents","viewAttachedToChangeDetector","syncViewWithBlueprint","componentView","componentTView","checkView","directiveDefIdx","elementCreate","overriddenRenderer","rendererToUse","namespace","getNamespace","createElementNS","createLView","tHostNode","getOrCreateTNode","adjustedIndex","createTNodeAtIndex","createTNode","assignTViewNodeToLView","tParentNode","viewToRender","_previousOrParentTNode","tickRootContext","executeTemplate","getRenderFlags","renderComponentOrTemplate","templateFn","normalExecutionPath","creationModeIsActive","begin","rf","prevSelectedIndex","executeContentQueries","createDirectivesAndLocals","localRefExtractor","getBindingsEnabled","resolveDirectives","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","findDirectiveMatches","registry","matches","instantiateAllDirectives","start","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","invokeHostBindingsInCreationMode","saveResolvedLocalsInData","localIndex","getOrCreateTView","createTView","viewIndex","initialViewLength","createViewBlueprint","viewQueryStartIndex","staticViewQueries","pipeRegistry","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","tParent","generatePropertyAliases","direction","propStore","isInput","defs","propertyAliasMap","internalName","ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","elementPropertyInternal","nativeOnly","loadRendererFn","inputData","dataValue","initializeTNodeInputs","setInputsForProperty","markDirtyIfOnPush","childComponentLView","savePropertyDebugData","lastBindingIndex","bindingMetadata","previousExpandoLength","directiveCount","postProcessBaseDirective","setInputsFromAttrs","initialInputData","generateInitialInputs","i_1","minifiedInputName","privateName","queueComponentIndexForCheck","numberOfDirectives","directiveFactory","nodeInjectorFactory","addToViewTree","elementAttributeInternal","strValue","createLContainer","hostNative","isForViewContainerRef","lViewOrLContainer","markViewDirty","scheduleTick","rootContext","res_1","nothingScheduled","clean","scheduler","playerHandler","rootComponent","detectChangesInternal","detectChangesInRootView","hostTView","executeViewQueryFn","storeBindingMetadata","prefix","suffix","CLEAN_PROMISE","getCleanup","getTViewCleanup","loadComponentRenderer","errorHandler","textBindingInternal","setValue","renderInitialStyling","applyOnCreateInstructions","fns","ɵɵallocHostVars","count","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","_symbolIterator","getSymbolIterator","Symbol_1","getOwnPropertyNames","looseIdentical","isNaN","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject","updateBinding","getBinding","bindingUpdated","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","ɵɵproperty","bindReconciledValue","ɵɵattribute","bound","interpolationV","isBindingUpdated","interpolation1","v0","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","ɵɵattributeInterpolate1","interpolatedValue","ɵɵattributeInterpolate2","ɵɵattributeInterpolate3","ɵɵattributeInterpolate4","ɵɵattributeInterpolate5","ɵɵattributeInterpolate6","ɵɵattributeInterpolate7","ɵɵattributeInterpolate8","ɵɵattributeInterpolateV","interpolated","markDirty","getLContainer","embeddedView","container","getContainerRenderParent","tViewNode","nativeParentNode","executeActionOnElementOrContainer","action","lNodeToHandle","beforeNode","lContainer","rNode","nativeInsertBefore","nativeRemoveNode","destroyNode","executeActionOnContainer","renderParent","anchor","executeActionOnView","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","indexInContainer","containerLength","detachView","removeIndex","viewToDetach","removeView","detachedView","destroyLView","destroyViewTree","rootView","cleanUpView","firstView","getParentState","executeOnDestroys","removeListeners","tCleanup","lCleanup","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","insertBefore","nativeAppendOrInsertBefore","nativeAppendChild","childEl","childTNode","getRenderParent","getHighestElementOrICUContainer","getHostNative","isIcuCase","ShadowDom","Native","anchorNode","getNativeAnchorNode","parentTNode","getBeforeNodeForView","childEl_1","childEl_1_1","viewIndexInContainer","nextViewIndex","tViewNodeChild","isHostElement","nativeParent","nativeRemoveChild","appendProjectedNodes","tProjectionNode","selectorIndex","projectedView","nodeToProject","appendProjectedNode","appendProjectedChildren","ngContainerChildTNode","projectionView","projectedTNode","nodeOrContainer","viewRootTNode","executeActionOnNode","executeActionOnElementContainerOrIcuContainer","executeActionOnProjection","componentLView","projectionTNode","projectedComponentLView","ɵɵcontainer","containerInternal","addTContainerToQueries","ɵɵtemplate","tContainerNode","ɵɵcontainerRefreshStart","ɵɵcontainerRefreshEnd","nextIndex","insertNodeBeforeViews","addNode","comment","createComment","store","ɵɵreference","getContextLView","ɵɵload","ɵɵdirectiveInject","ɵɵinjectAttribute","ɵɵstyling","tNode_1","directiveStylingIndex_1","getActiveDirectiveStylingIndex","updateLastDirectiveIndex$1","ɵɵstyleSanitizer","ɵɵstyleProp","stylePropInternal","_stylingProp","resolveStylePropValue","resolvedValue","deferStylingUpdate","ɵɵclassProp","defer","updated","getClassesContext","getStylesContext","ɵɵstyleMap","updateDirectiveInputValue","_stylingMap","ɵɵclassMap","classMapInternal","valueHasChanged","normalizeIntoStylingMap","newValues","normalizeProps","allValuesTrue","newValue","normalizeStylingDirectiveInputValue","initialValue","forceClassesAsString","forceStylesAsString","ɵɵstylingApply","getRenderer","flushStyling","classesContext","stylesContext","persistState","allowFlushClasses","allowFlushStyles","classesFlushed","stylesFlushed","deleteStylingStateFromStorage","storeStylingState","registerInitialStylingOnTNode","startIndex","hasAdditionalInitialStyling","attr","getActiveDirectiveId","getActiveDirectiveSuperClassDepth","getContext","allocTStylingContext","getActiveDirectiveSuperClassHeight","ɵɵelementStart","lastAttrIndex","getElementDepthCount","increaseElementDepthCount","currentQueries","clone","ɵɵelementEnd","decreaseElementDepthCount","setDirectiveStylingInput","ɵɵelement","ɵɵelementHostAttrs","hostElementIndex","stylingInputs","ɵɵelementContainerStart","ɵɵelementContainerEnd","ɵɵelementContainer","ɵɵembeddedViewStart","viewBlockId","containerTNode","scanForView","startIdx","viewAtPositionId","setIsParent","getOrCreateEmbeddedTView","containerTViews","createView","ɵɵembeddedViewEnd","viewHost","ɵɵgetCurrentView","isPromise","isObservable","subscribe","ɵɵlistener","eventName","listenerFn","useCapture","eventTargetResolver","listenerInternal","ɵɵcomponentHostSyntheticListener","processOutputs","lCleanupIndex","existingListener","hasDirectives","findExistingListener","tNodeIdx","cleanupEventName","listenerIdxInLCleanup","__ngNextListenerFn__","wrapListener","cleanupFn","listen","addEventListener","propsLength","subscription","idx","executeListenerWithErrorHandling","wrapWithPreventDefault","wrapListenerIn_markDirtyAndPreventDefault","nextListenerFn","preventDefault","returnValue","ɵɵnextContext","matchingProjectionSlotIndex","projectionSlots","wildcardNgContentIndex","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","ɵɵprojectionDef","componentNode","projectionHeads","tails","componentChild","slotIndex","delayProjection","setDelayProjection","ɵɵprojection","ɵɵpropertyInterpolate","ɵɵpropertyInterpolate1","ɵɵpropertyInterpolate2","ɵɵpropertyInterpolate3","ɵɵpropertyInterpolate4","ɵɵpropertyInterpolate5","ɵɵpropertyInterpolate6","ɵɵpropertyInterpolate7","ɵɵpropertyInterpolate8","ɵɵpropertyInterpolateV","ɵɵtext","textNative","ɵɵtextBinding","ɵɵtextInterpolate","ɵɵtextInterpolate1","ɵɵtextInterpolate2","ɵɵtextInterpolate3","ɵɵtextInterpolate4","ɵɵtextInterpolate5","ɵɵtextInterpolate6","ɵɵtextInterpolate7","ɵɵtextInterpolate8","ɵɵtextInterpolateV","ɵɵclassMapInterpolate1","ɵɵclassMapInterpolate2","ɵɵclassMapInterpolate3","ɵɵclassMapInterpolate4","ɵɵclassMapInterpolate5","ɵɵclassMapInterpolate6","ɵɵclassMapInterpolate7","ɵɵclassMapInterpolate8","ɵɵclassMapInterpolateV","ɵɵstylePropInterpolate1","valueSuffix","ɵɵstylePropInterpolate2","ɵɵstylePropInterpolate3","ɵɵstylePropInterpolate4","ɵɵstylePropInterpolate5","ɵɵstylePropInterpolate6","ɵɵstylePropInterpolate7","ɵɵstylePropInterpolate8","ɵɵstylePropInterpolateV","ɵɵhostProperty","ɵɵupdateSyntheticHostBinding","getPlayers","ref","playerContext","getPlayersInternal","players","nonFactoryPlayersStart","getComponent","loadLContextFromNode","getComponentAtNodeIndex","getContext$1","getViewComponent","loadLContext","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","isBrowserEvents","listener","getListeners","listeners","firstParam","secondParam","name_1","listenerElement","callback","useCaptureOrIndx","sort","sortListeners","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","resetComponentState","resetAllStylingState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","SimpleChange","previousValue","firstChange","isFirstChange","ɵɵNgOnChangesFeature","NgOnChangesFeatureImpl","ngInherit","definition","ngOnChanges","ngOnChangesSetInput","wrapOnChanges","wrapOnChangesHook_inPreviousChangesStorage","simpleChangesStore","getSimpleChangesStore","setSimpleChangesStore","SIMPLE_CHANGES_STORE","previousChange","ɵɵInheritDefinitionFeature","superType","getSuperType","superDef","baseDef","writeableDef","maybeUnwrapEmpty","baseViewQuery","baseContentQueries","baseHostBindings","inheritHostBindings","inheritViewQuery","inheritContentQueries","superHostBindings","superViewQuery","superContentQueries","features_1","features_1_1","superPrototype","prevViewQuery","ctx","prevContentQueries","prevHostBindings","resolveProvider$1","lInjectablesBlueprint","providerFactory","beginIndex","isClassProvider","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","multiResolve","factories","componentCount","multiProviders","ɵɵProvidersFeature","viewProviders","processProvidersFn","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","R3ElementRef","R3TemplateRef","R3ViewContainerRef","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","tNodeChild","nativeNode","componentHost","currentProjectedNode","_lookUpContext","detach","storeCleanupFn","markForCheck","reattach","detectChanges","checkNoChanges","checkNoChangesInternal","attachToViewContainerRef","vcRef","detachFromAppRef","renderDetachView","attachToAppRef","appRef","RootViewRef","_view","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_hostLContainer","_injectorIndex","createEmbeddedView","createEmbeddedViewAndNode","viewRef","hostContainer","createViewRef","componentIndex","hostComponentView","noop","RendererStyleFlags2","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Version","Renderer2","SWITCH_RENDERER2_FACTORY","VERSION","full","major","minor","patch","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","find","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","expressionChangedAfterItHasBeenCheckedError","currValue","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView$1","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","pop","EMPTY_CONTEXT","getComponentViewDefinitionFactory","componentFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","elDef","elData","ViewContainerRef_","templateRef","insert","createComponent","ngModuleRef","contextInjector","parentInjector","componentRef","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","move","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","disposables","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","delegate","selectorOrNode","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","setElementProperty","propertyName","propertyValue","setElementAttribute","attributeValue","ns","setBindingDebugInfo","setElementClass","isAdd","setElementStyle","styleName","styleValue","invokeElementMethod","methodName","setText","animate","moduleType","bootstrapComponents","NgModuleRef_","_moduleType","_bootstrapComponents","_destroyListeners","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","outputIndex","directChildFlags","childMatchedQueries","query","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","output","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","changes","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ComponentFactoryResolver$1","ComponentFactory$1","toRefArray","array","nonMinified","LocaleDataIndex","ROOT_CONTEXT","SCHEDULER","isBoundToModule","isInternalRootView","rootViewInjector","createChainedInjector","hostRNode","rootFlags","isIsolated","tElementNode","rootLView","oldLView","nodesforSlot","ComponentRef$1","_rootLView","destroyCbs","LOCALE_DATA","ɵLocaleDataIndex","u","localeEn","plural","floor","abs","getLocalePluralCase","locale","findLocaleData","PluralCase","normalizedLocale","parentLocale","MARKER","ICU_BLOCK_REGEXP","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","ROOT_TEMPLATE_ID","PP_MULTI_VALUE_PLACEHOLDERS_REGEXP","PP_PLACEHOLDERS_REGEXP","PP_ICU_VARS_REGEXP","PP_ICU_PLACEHOLDERS_REGEXP","PP_ICUS_REGEXP","PP_CLOSE_TEMPLATE_REGEXP","PP_TEMPLATE_ID_REGEXP","extractParts","pattern","prevPos","braceStack","braces","lastIndex","exec","pos","block","parseICUBlock","substring_1","cases","icuType","mainBinding","binding","parseInt","blocks","assertGreaterThan","expected","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","min","i18nVarsCount","parentIndexStack","ɵɵi18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","replaceNgsp","NGSP_UNICODE_REGEXP","getTranslationForTemplate","search","phIndex","icuNodeIndex","icuStart","hasBinding","textNodeIndex","allocExpando","numSlotsToAlloc","update","appendI18nNode","previousTNode","ɵɵi18nPostprocess","replacements","matches_1","templateIdsStack_1","phs","tmpl","placeholders","placeholder","templateId","isCloseTemplateTag","currentTemplateId","_type","_idx","shift","ɵɵi18nEnd","i18nEndFirstPass","rootIndex","tI18n","lastCreatedNode","visitedNodes","readCreateOpCodes","removeNode","createDynamicNodeAtIndex","currentTNode","textRNode","destinationNodeIndex","elementNodeIndex","commentNodeIndex","commentRNode","activeCaseIndex","tagNameValue","removedPhTNode","removedPhRNode","ɵɵi18n","ɵɵi18nAttributes","i18nAttributesFirstPass","previousElementIndex","changeMask","shiftsCounter","ɵɵi18nExp","ɵɵi18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","icuTNode","removeCodes","removeOpCode","activeIndex","caseIndex","getCaseIndex","resolvedCase","getPluralCase","getLocaleId","LOCALE_ID","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","opCodes","parseNodes","currentNode","nestedIcusToCreate","newIndex","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","ngDevMode","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","TRANSLATIONS","LOCALIZE_PH_REGEXP","ɵɵi18nLocalize","setLocaleId","localeId","assertSameOrNotExisting","incoming","registerNgModuleType","getRegisteredNgModuleType","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","getNgLocaleIdDef","_r3Injector","NgModuleFactory$1","ɵɵpureFunction0","slotOffset","pureFn","thisArg","ɵɵpureFunction1","exp","ɵɵpureFunction2","ɵɵpureFunction3","ɵɵpureFunction4","ɵɵpureFunction5","exp5","ɵɵpureFunction6","exp6","ɵɵpureFunction7","exp7","ɵɵpureFunction8","exp8","ɵɵpureFunctionV","exps","ɵɵpipe","pipeName","getPipeDef$1","pipeInstance","ɵɵpipeBind1","unwrapValue$1","isPure","transform","ɵɵpipeBind2","ɵɵpipeBind3","ɵɵpipeBind4","ɵɵpipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","sink","Subscription","Subject","symbolIterator","_results","QueryList","symbol","proto","filter","reduce","init","toArray","reset","resultsTree","last","notifyOnChanges","setDirty","LQuery","predicate","containerValues","LQueries_","shallow","deep","track","queryList","descend","read","createLQuery","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","removeView$1","viewValuesIdx","getIdxOfMatchingSelector","queryByReadToken","matchingIdx","queryByTemplateRef","templateRefToken","templateRefResult","queryRead","queryByTNodeType","insertBeforeContainer","addMatch","matchingValue","insertBeforeViewMatches","createPredicate","_valuesTree","createQueryListInLView","isStatic","_static","storeCleanupWithContext","ɵɵqueryRefresh","queryListImpl","ɵɵstaticViewQuery","viewQueryInternal","ɵɵviewQuery","ɵɵloadViewQuery","ɵɵcontentQuery","contentQueryInternal","contentQuery","tViewContentQueries","ɵɵstaticContentQuery","ɵɵloadContentQuery","ɵɵtemplateRefExtractor","angularCoreEnv","EMPTY_ARRAY$4","moduleQueue","flushingModuleQueue","flushModuleScopingQueueAsMuchAsPossible","every","isResolvedDeclaration","setScopeOnDeclaredComponents","declaration","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","allowDuplicateDeclarationsInRoot","expandModuleWithProviders","emitInline","compileInjector","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","compilation","dir","pipe","processNgModuleFn","isNgModule","scopes","exported","declared","importedType","importedScope","entry","exportedType","exportedScope","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","directiveMetadata","typeSourceSpan","createParseSourceSpan","preserveWhitespaces","interpolation","usesInheritance","addBaseDefToUndecoratedParents","hasSelectorScope","compileDirective","sourceMapUrl","facade","extendsDirectlyFromObject","extractQueriesMetadata","isContentQuery","lifecycle","usesOnChanges","part","viewQueries","objPrototype","extractBaseDefMetadata","compileBase","hasHostDecorators","field","ann","metadataName","bindingPropertyName","isQueryAnn","queriesMeta","_loop_2","annotations_1","isInputAnn","convertToR3QueryMetadata","splitByComma","piece","static","compilePipe","typeName","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","Input","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","preR3NgModuleCompile","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","random","MissingTranslationStrategy","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","LOCALE_ID$1","TRANSLATIONS$1","TRANSLATIONS_FORMAT","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","detectWTF","wtf","createScope","leave","leaveScope","startTimeRange","rangeType","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","wtfStartTimeRange","wtfEndTimeRange","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_R3__","createCompiler","compileNgModuleFactory","ApplicationRef","ngDoBootstrap","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","ApplicationRef_1","componentOrFactory","isBoundToModule__PRE_R3__","cf","compRef","_unloadComponent","_loadComponent","_tickScope","_d","_e","_f","attachView","NgModuleFactoryLoader","getModuleFactory__PRE_R3__","noModuleError","getModuleFactory","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","_config","load","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewRef$1","EmbeddedViewRef","DebugEventListener","DebugNode__PRE_R3__","_debugContext","DebugElement__PRE_R3__","addChild","providerTokens","childNodes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","collectPropertyBindings","getFirstBindingIndex","metadataIndex","currentBindingIndex","metadataParts","hostProperties","collectHostPropertyBindings","hostPropIndex","collectClassNames","debugElement","tNodeAttrs","lowercaseTNodeAttrs","eAttrs","_getStylingDebugInfo","children","getDebugNode__POST_R3__","_queryAllR3","elementsOnly","_queryNodeChildrenR3","rootNativeNode","_addQueryMatchR3","_queryNodeChildrenInContainerR3","head","head_1","head_1_1","nextTNode","nextLView","childView","debugNode","getDebugNode","_nativeNodeToDebugNode","NG_DEBUG_PROPERTY","getDebugNode__PRE_R3__","indexDebugNode","DebugNode","DebugElement","platformCore","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","ViewAction","ApplicationModule","parentEl","listenToElementOutputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","checkAndUpdateElementValue","securityContext","renderValue","unit","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","hostViewDef","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","BoundPlayerFactory","ɵangular_packages_core_core_r","ɵangular_packages_core_core_o","ɵangular_packages_core_core_p","ɵangular_packages_core_core_q","ɵangular_packages_core_core_s","ɵangular_packages_core_core_f","ɵangular_packages_core_core_m","ɵangular_packages_core_core_n","ɵangular_packages_core_core_l","ɵangular_packages_core_core_k","ɵangular_packages_core_core_b","ɵangular_packages_core_core_a","ɵangular_packages_core_core_c","ɵangular_packages_core_core_d","ɵangular_packages_core_core_e","ɵangular_packages_core_core_j","ɵangular_packages_core_core_t","ɵangular_packages_core_core_v","ɵangular_packages_core_core_u","ɵangular_packages_core_core_y","ɵangular_packages_core_core_w","ɵangular_packages_core_core_x","ɵangular_packages_core_core_bb","ɵangular_packages_core_core_bc","ɵangular_packages_core_core_bd","ɵangular_packages_core_core_be","ɵangular_packages_core_core_bf","ɵangular_packages_core_core_bj","ɵangular_packages_core_core_bp","ɵangular_packages_core_core_bo","ɵangular_packages_core_core_g","ɵangular_packages_core_core_h","ɵangular_packages_core_core_i","ɵangular_packages_core_core_bh","ɵangular_packages_core_core_bn","ɵangular_packages_core_core_bk","ɵangular_packages_core_core_bl","ɵangular_packages_core_core_bq","ɵangular_packages_core_core_z","ɵangular_packages_core_core_ba","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵNoopNgZone","ɵComponentFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵsetCurrentInjector","ɵgetInjectableDef","ɵAPP_ROOT","ɵivyEnabled","ɵCodegenComponentFactoryResolver","ɵclearResolutionOfComponentResourcesQueue","ɵresolveComponentResources","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵgetLocalePluralCase","ɵfindLocaleData","ɵLOCALE_DATA","ɵdetectChanges","ɵrenderComponent","renderComponent","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetDirectives","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","ɵi18nConfigureLocalize","i18nConfigureLocalize","translations","ɵsetLocaleId","ɵDEFAULT_LOCALE_ID","ɵsetClassMetadata","setClassMetadata","clazz","parentPrototype","parentConstructor","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵresetCompiledComponents","resetCompiledComponents","ɵflushModuleScopingQueueAsMuchAsPossible","ɵtransitiveScopesFor","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵNG_ELEMENT_ID","ɵNG_COMPONENT_DEF","ɵNG_DIRECTIVE_DEF","ɵNG_PIPE_DEF","ɵNG_MODULE_DEF","ɵNG_BASE_DEF","ɵNG_INJECTABLE_DEF","ɵNG_INJECTOR_DEF","ɵbindPlayerFactory","bindPlayerFactory","ɵaddPlayer","addPlayer","getOrCreatePlayerContext","allocPlayerContext","addPlayerInternal","playerContextIndex","ɵgetPlayers","ɵcompileNgModuleFactory__POST_R3__","compileNgModuleFactory__POST_R3__","isComponentResourceResolutionQueueEmpty","compilerProviders","_mergeArrays","resourceLoader","ResourceLoader","ɵisBoundToModule__POST_R3__","isBoundToModule__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵgetDebugNode__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","injectChangeDetectorRef","ɵCompiler_compileModuleSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","_lContainer","_hostTNode","_hostView","getParentInjectorTNode","startTNode","parentTNode_1","viewAmount","allocateContainerIfNeeded","adjustedIdx","_adjustIndex","commentNode","nativeNextSibling","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","nodeAtIndex","getOrCreateRenderer2","ɵgetModuleFactory__POST_R3__","getModuleFactory__POST_R3__","ɵregisterNgModuleType","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵcreateInjector","ɵINJECTOR_IMPL__POST_R3__","INJECTOR_IMPL__POST_R3__","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","ns_1","resolveRendererType2","isFilled","None","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v8.2.0-next.2+33.sha-9c954eb.with-local-changes\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0 = function (token) { return ({ token: token }); };\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', ɵ0);\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n    var ɵ1 = function (attributeName) { return ({ attributeName: attributeName }); };\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', ɵ1);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        /** Check self and check parent injector if needed */\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't ascend to ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineInjectable(opts) {\n        return {\n            token: opts.token, providedIn: opts.providedIn || null, factory: opts.factory,\n            value: undefined,\n        };\n    }\n    /**\n     * @deprecated in v8, delete after v10. This API should be used only be generated code, and that\n     * code should now use ɵɵdefineInjectable instead.\n     * @publicApi\n     */\n    var defineInjectable = ɵɵdefineInjectable;\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function ɵɵdefineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` for `type` in a way which is immune to accidentally reading inherited\n     * value.\n     *\n     * @param type A type which may have its own (non-inherited) `ngInjectableDef`.\n     */\n    function getInjectableDef(type) {\n        var def = type[NG_INJECTABLE_DEF];\n        // The definition read above may come from a base class. `hasOwnProperty` is not sufficient to\n        // distinguish this case, as in older browsers (e.g. IE10) static property inheritance is\n        // implemented by copying the properties.\n        //\n        // Instead, the ngInjectableDef's token is compared to the type, and if they don't match then the\n        // property was not defined directly on the type itself, and was likely inherited. The definition\n        // is only returned if the type matches the def.token.\n        return def && def.token === type ? def : null;\n    }\n    /**\n     * Read the `ngInjectableDef` for `type` or read the `ngInjectableDef` from one of its ancestors.\n     *\n     * @param type A type which may have `ngInjectableDef`, via inheritance.\n     *\n     * @deprecated Will be removed in v10, where an error will occur in the scenario if we find the\n     * `ngInjectableDef` on an ancestor only.\n     */\n    function getInheritedInjectableDef(type) {\n        if (type && type[NG_INJECTABLE_DEF]) {\n            // TODO(FW-1307): Re-add ngDevMode when closure can handle it\n            // ngDevMode &&\n            console.warn(\"DEPRECATED: DI is instantiating a token \\\"\" + type.name + \"\\\" that inherits its @Injectable decorator but does not provide one itself.\\n\" +\n                (\"This will become an error in v10. Please add @Injectable() to the \\\"\" + type.name + \"\\\" class.\"));\n            return type[NG_INJECTABLE_DEF];\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        var fn = type;\n        if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef) {\n            return fn();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __globalThis = typeof globalThis !== 'undefined' && globalThis;\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Always use __globalThis if available, which is the spec-defined global variable across all\n    // environments, then fallback to __global first, because in Node tests both __global and\n    // __window may be defined and _global should be __global in that case.\n    var _global = __globalThis || __global || __window || __self;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global['ng'];\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parameterized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            this.ngInjectableDef = undefined;\n            if (typeof options == 'number') {\n                // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n                // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n                // We are using it to assign `-1` which is used to identify `Injector`.\n                this.__NG_ELEMENT_ID__ = options;\n            }\n            else if (options !== undefined) {\n                this.ngInjectableDef = ɵɵdefineInjectable({\n                    token: this,\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n    );\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var SOURCE = '__source';\n    var ɵ0$1 = getClosureSafeProperty;\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: ɵ0$1 });\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function ɵɵinject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * Injects a token from the currently active injector.\n     *\n     * Must be used in the context of a factory function such as one defined for an\n     * `InjectionToken`. Throws an error if not called from such a context.\n     *\n     * Within such a factory function, using this function to request injection of a dependency\n     * is faster and more type-safe than providing an additional array of dependencies\n     * (as has been common with `useFactory` providers).\n     *\n     * @param token The injection token for the dependency to be injected.\n     * @param flags Optional flags that control how injection is executed.\n     * The flags correspond to injection strategies that can be specified with\n     * parameter decorators `@Host`, `@Self`, `@SkipSef`, and `@Optional`.\n     * @returns True if injection is successful, null otherwise.\n     *\n     * @usageNotes\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     * @publicApi\n     */\n    var inject = ɵɵinject;\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = resolveForwardRef(types[i]);\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional' || meta === Optional) {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf' || meta === SkipSelf) {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self' || meta === Self) {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject || meta === Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(ɵɵinject(type, flags));\n            }\n            else {\n                args.push(ɵɵinject(arg));\n            }\n        }\n        return args;\n    }\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (notFoundValue === THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                var error = new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n                error.name = 'NullInjectorError';\n                throw error;\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    function catchInjectorError(e, token, injectorErrorName, source) {\n        var tokenPath = e[NG_TEMP_TOKEN_PATH];\n        if (token[SOURCE]) {\n            tokenPath.unshift(token[SOURCE]);\n        }\n        e.message = formatError('\\n' + e.message, tokenPath, injectorErrorName, source);\n        e[NG_TOKEN_PATH] = tokenPath;\n        e[NG_TEMP_TOKEN_PATH] = null;\n        throw e;\n    }\n    function formatError(text, obj, injectorErrorName, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"\" + injectorErrorName + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreDiEnv = {\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵgetFactoryOf': getFactoryOf,\n    };\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var INHERITED_CLASS_WITH_DELEGATE_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(\\)\\s*{\\s+super\\(\\.\\.\\.arguments\\)/;\n    /**\n     * Determine whether a stringified type is a class which delegates its constructor\n     * to its parent.\n     *\n     * This is not trivial since compiled code can actually contain a constructor function\n     * even if the original source code did not. For instance, when the child class contains\n     * an initialized instance property.\n     */\n    function isDelegateCtor(typeStr) {\n        return DELEGATE_CTOR.test(typeStr) || INHERITED_CLASS_WITH_DELEGATE_CTOR.test(typeStr) ||\n            (INHERITED_CLASS.test(typeStr) && !INHERITED_CLASS_WITH_CTOR.test(typeStr));\n    }\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] && paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (isDelegateCtor(typeStr)) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.ownPropMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            return this._ownPropMetadata(typeOrFunc, getParentCtor(typeOrFunc)) || {};\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n            return;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n                    var meta = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        typeArgumentCount: 0,\n                        providedIn: meta.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined,\n                    };\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta.useClass;\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreDiEnv, \"ng:///\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var ɵ0$2 = getClosureSafeProperty;\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: ɵ0$2 });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$1 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$3 = getClosureSafeProperty;\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: ɵ0$3 });\n    var EMPTY_ARRAY = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$2 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return ɵɵinject(existingProvider_1.useExisting); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$4 = function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); };\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, ɵ0$4);\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function render2CompileInjectable(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ngInjectableDef = ɵɵdefineInjectable({\n                token: injectableType,\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var locationString = typeof location !== 'undefined' ? location.toString() : '';\n        var newCounters = {\n            namedConstructors: locationString.indexOf('ngDevMode=namedConstructors') != -1,\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererAppendChild: 0,\n            rendererInsertBefore: 0,\n            rendererCreateComment: 0,\n            styleMap: 0,\n            styleMapCacheMiss: 0,\n            classMap: 0,\n            classMapCacheMiss: 0,\n            styleProp: 0,\n            stylePropCacheMiss: 0,\n            classProp: 0,\n            classPropCacheMiss: 0,\n            flushStyling: 0,\n            classesApplied: 0,\n            stylesApplied: 0,\n            stylingWritePersistedState: 0,\n            stylingReadPersistedState: 0,\n        };\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n        var allowNgDevModeTrue = locationString.indexOf('ngDevMode=false') === -1;\n        _global['ngDevMode'] = allowNgDevModeTrue && newCounters;\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * then we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     *\n     * NOTE: changes to the `ngDevMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n    function throwMixedMultiProviderError() {\n        throw new Error(\"Cannot mix multi providers and regular providers\");\n    }\n    function throwInvalidProviderError(ngModuleType, providers, provider) {\n        var ngModuleDetail = '';\n        if (ngModuleType && providers) {\n            var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n            ngModuleDetail =\n                \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n        }\n        throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Equivalent to ES6 spread, add each item to an array.\n    *\n    * @param items The items to add\n    * @param arr The array to which you want to add the items\n    */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n    /**\n     * Flattens an array.\n     */\n    function flatten(list, dst) {\n        if (dst === undefined)\n            dst = list;\n        for (var i = 0; i < list.length; i++) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                // we need to inline it.\n                if (dst === list) {\n                    // Our assumption that the list was already flat was wrong and\n                    // we need to clone flat since we need to write to it.\n                    dst = list.slice(0, i);\n                }\n                flatten(item, dst);\n            }\n            else if (dst !== list) {\n                dst.push(item);\n            }\n        }\n        return dst;\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR === undefined) {\n            NULL_INJECTOR = new NullInjector();\n        }\n        return NULL_INJECTOR;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders, name) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent, name);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent, source) {\n            var _this = this;\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            this._destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            var dedupStack = [];\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n            // Source name, used for debugging\n            this.source = source || (typeof def === 'object' ? null : stringify(def));\n        }\n        Object.defineProperty(R3Injector.prototype, \"destroyed\", {\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this._destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                return nextInjector.get(token, flags & exports.InjectFlags.Optional ? null : notFoundValue);\n            }\n            catch (e) {\n                if (e.name === 'NullInjectorError') {\n                    var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n                    path.unshift(stringify(token));\n                    if (previousInjector) {\n                        // We still have a parent injector, keep throwing\n                        throw e;\n                    }\n                    else {\n                        // Format & throw the final error message when we don't have any previous injector\n                        return catchInjectorError(e, token, 'R3InjectorError', this.source);\n                    }\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.toString = function () {\n            var tokens = [], records = this.records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"R3Injector[\" + tokens.join(', ') + \"]\";\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this._destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         *\n         * If an `InjectorTypeWithProviders` that declares providers besides the type is specified,\n         * the function will return \"true\" to indicate that the providers of the type definition need\n         * to be processed. This allows us to process providers of injector types after all imports of\n         * an injector definition are processed. (following View Engine semantics: see FW-1349)\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return false;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return false;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                var importTypesWithProviders_1;\n                try {\n                    deepForEach(def.imports, function (imported) {\n                        if (_this.processInjectorType(imported, parents, dedupStack)) {\n                            if (importTypesWithProviders_1 === undefined)\n                                importTypesWithProviders_1 = [];\n                            // If the processed import is an injector type with providers, we store it in the\n                            // list of import types with providers, so that we can process those afterwards.\n                            importTypesWithProviders_1.push(imported);\n                        }\n                    });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n                // Imports which are declared with providers (TypeWithProviders) need to be processed\n                // after all imported modules are processed. This is similar to how View Engine\n                // processes/merges module imports in the metadata resolver. See: FW-1349.\n                if (importTypesWithProviders_1 !== undefined) {\n                    var _loop_1 = function (i) {\n                        var _a = importTypesWithProviders_1[i], ngModule_1 = _a.ngModule, providers = _a.providers;\n                        deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModule_1, providers || EMPTY_ARRAY$1); });\n                    };\n                    for (var i = 0; i < importTypesWithProviders_1.length; i++) {\n                        _loop_1(i);\n                    }\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            return (ngModule !== undefined &&\n                defOrWrappedDef.providers !== undefined);\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throwMixedMultiProviderError();\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throwMixedMultiProviderError();\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR) {\n                throwCyclicDependencyError(stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        // Most tokens will have an ngInjectableDef directly on them, which specifies a factory directly.\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef !== null) {\n            return injectableDef.factory;\n        }\n        // If the token is an NgModule, it's also injectable but the factory is on its ngInjectorDef.\n        var injectorDef = getInjectorDef(token);\n        if (injectorDef !== null) {\n            return injectorDef.factory;\n        }\n        // InjectionTokens should have an ngInjectableDef and thus should be handled above.\n        // If it's missing that, it's an error.\n        if (token instanceof InjectionToken) {\n            throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n        }\n        // Undecorated types can sometimes be created if they have no constructor arguments.\n        if (token instanceof Function) {\n            return getUndecoratedInjectableFactory(token);\n        }\n        // There was no way to resolve a factory for this token.\n        throw new Error('unreachable');\n    }\n    function getUndecoratedInjectableFactory(token) {\n        // If the token has parameters then it has dependencies that we cannot resolve implicitly.\n        var paramLength = token.length;\n        if (paramLength > 0) {\n            var args = new Array(paramLength).fill('?');\n            throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n        }\n        // The constructor function appears to have no parameters.\n        // This might be because it inherits from a super-class. In which case, use an ngInjectableDef\n        // from an ancestor if there is one.\n        // Otherwise this really is a simple class with no dependencies, so return a factory that\n        // just instantiates the zero-arg constructor.\n        var inheritedInjectableDef = getInheritedInjectableDef(token);\n        if (inheritedInjectableDef !== null) {\n            return function () { return inheritedInjectableDef.factory(token); };\n        }\n        else {\n            return function () { return new token(); };\n        }\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return ɵɵinject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    throwInvalidProviderError(ngModuleType, providers, provider);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function isValueProvider(value) {\n        return value !== null && typeof value == 'object' && USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function isClassProvider(value) {\n        return !!value.useClass;\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return value !== null && typeof value === 'object' &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function INJECTOR_IMPL__PRE_R3__(providers, parent, name) {\n        return new StaticInjector(providers, parent, name);\n    }\n    function INJECTOR_IMPL__POST_R3__(providers, parent, name) {\n        return createInjector({ name: name }, parent, providers, name);\n    }\n    var INJECTOR_IMPL = INJECTOR_IMPL__PRE_R3__;\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return INJECTOR_IMPL(options, parent, '');\n            }\n            else {\n                return INJECTOR_IMPL(options.providers, options.parent, options.name || '');\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = ɵɵdefineInjectable({\n            token: Injector,\n            providedIn: 'any',\n            factory: function () { return ɵɵinject(INJECTOR); },\n        });\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Injector.__NG_ELEMENT_ID__ = -1;\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR$1 = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var NO_NEW_LINE$1 = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = Injector.NULL; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                return catchInjectorError(e, token, 'StaticInjectorError', this.source);\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR$1) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR$1) {\n                throw Error(NO_NEW_LINE$1 + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR$1;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? Injector.NULL : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj, 'StaticInjectorError'));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI token that you can use to create a virtual [provider](guide/glossary#provider)\n     * that will populate the `entryComponents` field of components and NgModules\n     * based on its `useValue` property value.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) are added to the `entryComponents` property.\n     *\n     * @usageNotes\n     *\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on a router configuration that refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    var ɵ0$5 = function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    };\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', ɵ0$5, Query);\n    var ɵ1$1 = function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    };\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', ɵ1$1, Query);\n    var ɵ2 = function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    };\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', ɵ2, Query);\n    var ɵ3 = function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    };\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', ɵ3, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         * This strategy applies to all child directives and cannot be overridden.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n     * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n     *\n     * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n     * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n     *\n     * // Use browser's `fetch()` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into `template` strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible for returning a `Promise` to the\n     * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var componentResolved = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component, type) {\n            var promises = [];\n            if (component.templateUrl) {\n                promises.push(cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                }));\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                promises.push(cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                }));\n            });\n            var fullyResolved = Promise.all(promises).then(function () { return componentDefResolved(type); });\n            componentResolved.push(fullyResolved);\n        });\n        clearResolutionOfComponentResourcesQueue();\n        return Promise.all(componentResolved).then(function () { return undefined; });\n    }\n    var componentResourceResolutionQueue = new Map();\n    // Track when existing ngComponentDef for a Type is waiting on resources.\n    var componentDefPendingResolution = new Set();\n    function maybeQueueResolutionOfComponentResources(type, metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.set(type, metadata);\n            componentDefPendingResolution.add(type);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return !!((component.templateUrl && !component.hasOwnProperty('template')) ||\n            component.styleUrls && component.styleUrls.length);\n    }\n    function clearResolutionOfComponentResourcesQueue() {\n        var old = componentResourceResolutionQueue;\n        componentResourceResolutionQueue = new Map();\n        return old;\n    }\n    function isComponentResourceResolutionQueueEmpty() {\n        return componentResourceResolutionQueue.size === 0;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n    function componentDefResolved(type) {\n        componentDefPendingResolution.delete(type);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY$2 = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        // These property accesses can be ignored because ngDevMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_OBJ);\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_ARRAY$2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_LOCALE_ID_DEF = getClosureSafeProperty({ ngLocaleIdDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    // TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @codeGenApi\n     */\n    function ɵɵdefineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onChanges: null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY$2,\n            _: null,\n            setInput: null,\n            schemas: componentDefinition.schemas || null,\n            tView: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n            // Add ngInjectableDef so components are reachable through the module injector by default\n            // (unless it has already been set by the @Injectable decorator). This is mostly to\n            // support injecting components in tests. In real application code, components should\n            // be retrieved through the node injector, so this isn't a problem.\n            if (!type.hasOwnProperty(NG_INJECTABLE_DEF)) {\n                type[NG_INJECTABLE_DEF] =\n                    ɵɵdefineInjectable({ token: type, factory: componentDefinition.factory });\n            }\n        });\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵsetComponentScope(type, directives, pipes) {\n        var def = type.ngComponentDef;\n        def.directiveDefs = function () { return directives.map(extractDirectiveDef); };\n        def.pipeDefs = function () { return pipes.map(extractPipeDef); };\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵdefineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY$2,\n            declarations: def.declarations || EMPTY_ARRAY$2,\n            imports: def.imports || EMPTY_ARRAY$2,\n            exports: def.exports || EMPTY_ARRAY$2,\n            transitiveCompileScopes: null,\n            schemas: def.schemas || null,\n            id: def.id || null,\n        };\n        return res;\n    }\n    /**\n     * Adds the module metadata that is necessary to compute the module's transitive scope to an\n     * existing module definition.\n     *\n     * Scope metadata of modules is not used in production builds, so calls to this function can be\n     * marked pure to tree-shake it from the bundle, allowing for all referenced declarations\n     * to become eligible for tree-shaking as well.\n     *\n     * @codeGenApi\n     */\n    function ɵɵsetNgModuleScope(type, scope) {\n        return noSideEffects(function () {\n            var ngModuleDef = getNgModuleDef(type, true);\n            ngModuleDef.declarations = scope.declarations || EMPTY_ARRAY$2;\n            ngModuleDef.imports = scope.imports || EMPTY_ARRAY$2;\n            ngModuleDef.exports = scope.exports || EMPTY_ARRAY$2;\n        });\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```ts\n     * class ShouldBeInherited {\n     *   static ngBaseDef = ɵɵdefineBase({\n     *      ...\n     *   })\n     * }\n     * ```\n     *\n     * @param baseDefinition The base definition parameters\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n            viewQuery: baseDefinition.viewQuery || null,\n            contentQueries: baseDefinition.contentQueries || null,\n            hostBindings: baseDefinition.hostBindings || null\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```ts\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = ɵɵdefineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     *\n     * @codeGenApi\n     */\n    var ɵɵdefineDirective = ɵɵdefineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefinePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getBaseDef(type) {\n        return type[NG_BASE_DEF] || null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MODULE_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have 'ngModuleDef' property.\");\n        }\n        return ngModuleDef;\n    }\n    function getNgLocaleIdDef(type) {\n        return type[NG_LOCALE_ID_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    /**\n     * Used for stringify render output in Ivy.\n     * Important! This function is very performance-sensitive and we should\n     * be extra careful not to introduce megamorphic reads in it.\n     */\n    function renderStringify(value) {\n        if (typeof value === 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Used to stringify a value so that it can be displayed in an error message.\n     * Important! This function contains a megamorphic read and should only be\n     * used for error messages.\n     */\n    function stringifyForError(value) {\n        if (typeof value === 'function')\n            return value.name || value.toString();\n        if (typeof value === 'object' && value != null && typeof value.type === 'function') {\n            return value.type.name || value.type.toString();\n        }\n        return renderStringify(value);\n    }\n    var ɵ0$6 = function () {\n        return (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n            setTimeout // everything else\n        ).bind(_global);\n    };\n    var defaultScheduler = (ɵ0$6)();\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n    /**\n     * The special delimiter we use to separate property names, prefixes, and suffixes\n     * in property binding metadata. See storeBindingMetadata().\n     *\n     * We intentionally use the Unicode \"REPLACEMENT CHARACTER\" (U+FFFD) as a delimiter\n     * because it is a very uncommon character that is unlikely to be part of a user's\n     * property names or interpolation strings. If it is in fact used in a property\n     * binding, DebugElement.properties will not return the correct value for that\n     * binding. However, there should be no runtime effect for real applications.\n     *\n     * This character is typically rendered as a question mark inside of a diamond.\n     * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)\n     *\n     */\n    var INTERPOLATION_DELIMITER = \"\\uFFFD\";\n    /**\n     * Determines whether or not the given string is a property metadata string.\n     * See storeBindingMetadata().\n     */\n    function isPropMetadataString(str) {\n        return str.indexOf(INTERPOLATION_DELIMITER) >= 0;\n    }\n    /**\n     * Unwrap a value which might be behind a closure (for forward declaration reasons).\n     */\n    function maybeUnwrapFn(value) {\n        if (value instanceof Function) {\n            return value();\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var HOST = 0;\n    var TVIEW = 1;\n    var FLAGS = 2;\n    var PARENT = 3;\n    var NEXT = 4;\n    var QUERIES = 5;\n    var T_HOST = 6;\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var CHILD_HEAD = 14;\n    var CHILD_TAIL = 15;\n    var CONTENT_QUERIES = 16;\n    var DECLARATION_VIEW = 17;\n    var PREORDER_HOOK_FLAGS = 18;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 20;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotSame(actual, expected, msg) {\n        if (actual === expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        // If we're in a worker, `Node` will not be defined.\n        assertEqual((typeof Node !== 'undefined' && node instanceof Node) ||\n            (typeof node === 'object' && node != null &&\n                node.constructor.name === 'WebWorkerRenderNode'), true, \"The provided value must be an instance of a DOM Node but got \" + stringify(node));\n    }\n    function assertDataInRange(arr, index) {\n        var maxLen = arr ? arr.length : 0;\n        assertLessThan(index, maxLen, \"Index expected to be less than \" + maxLen + \" but got \" + index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Special location which allows easy identification of type. If we have an array which was\n     * retrieved from the `LView` and that array has `true` at `TYPE` location, we know it is\n     * `LContainer`.\n     */\n    var TYPE = 1;\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 2;\n    // PARENT, NEXT, QUERIES and T_HOST are indices 3, 4, 5 and 6.\n    // As we already have these constants in LView, we don't need to re-create them.\n    var NATIVE = 7;\n    var VIEW_REFS = 8;\n    /**\n     * Size of LContainer's header. Represents the index after which all views in the\n     * container will be inserted. We need to keep a record of current views so we know\n     * which views are already in the DOM (and don't need to be re-added) and so we can\n     * remove views from the DOM when they are no longer required.\n     */\n    var CONTAINER_HEADER_OFFSET = 9;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * True if `value` is `LView`.\n    * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n    */\n    function isLView(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'object';\n    }\n    /**\n     * True if `value` is `LContainer`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function isLContainer(value) {\n        return Array.isArray(value) && value[TYPE] === true;\n    }\n    /**\n     * True if `value` is `StylingContext`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function isStylingContext(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'number';\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 4 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 1 /* isComponent */) === 1 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 512 /* IsRoot */) !== 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertTNodeForLView(tNode, lView) {\n        tNode.hasOwnProperty('tView_') && assertEqual(tNode.tView_, lView[TVIEW], 'This TNode does not belong to this LView.');\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode, 'previousOrParentTNode should exist!');\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertLContainerOrUndefined(value) {\n        value && assertEqual(isLContainer(value), true, 'Expecting LContainer or undefined or null');\n    }\n    function assertLContainer(value) {\n        assertDefined(value, 'LContainer must be defined');\n        assertEqual(isLContainer(value), true, 'Expecting LContainer');\n    }\n    function assertLViewOrUndefined(value) {\n        value && assertEqual(isLView(value), true, 'Expecting LView or undefined or null');\n    }\n    function assertLView(value) {\n        assertDefined(value, 'LView must be defined');\n        assertEqual(isLView(value), true, 'Expecting LView');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n     *\n     * Must be run *only* on the first template pass.\n     *\n     * Sets up the pre-order hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * @param directiveIndex The index of the directive in LView\n     * @param directiveDef The definition containing the hooks to setup in tView\n     * @param tView The current TView\n     * @param nodeIndex The index of the node to which the directive is attached\n     * @param initialPreOrderHooksLength the number of pre-order hooks already registered before the\n     * current process, used to know if the node index has to be added to the array. If it is -1,\n     * the node index is never added.\n     * @param initialPreOrderCheckHooksLength same as previous for pre-order check hooks\n     */\n    function registerPreOrderHooks(directiveIndex, directiveDef, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        var onChanges = directiveDef.onChanges, onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n        if (initialPreOrderHooksLength >= 0 &&\n            (!tView.preOrderHooks || initialPreOrderHooksLength === tView.preOrderHooks.length) &&\n            (onChanges || onInit || doCheck)) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(nodeIndex);\n        }\n        if (initialPreOrderCheckHooksLength >= 0 &&\n            (!tView.preOrderCheckHooks ||\n                initialPreOrderCheckHooksLength === tView.preOrderCheckHooks.length) &&\n            (onChanges || doCheck)) {\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(nodeIndex);\n        }\n        if (onChanges) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, onChanges);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, onChanges);\n        }\n        if (onInit) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(-directiveIndex, onInit);\n        }\n        if (doCheck) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, doCheck);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, doCheck);\n        }\n    }\n    /**\n     *\n     * Loops through the directives on the provided `tNode` and queues hooks to be\n     * run that are not initialization hooks.\n     *\n     * Should be executed during `elementEnd()` and similar to\n     * preserve hook execution order. Content, view, and destroy hooks for projected\n     * components and directives must be called *before* their hosts.\n     *\n     * Sets up the content, view, and destroy hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n     * separately at `elementStart`.\n     *\n     * @param tView The current TView\n     * @param tNode The TNode whose directives are to be searched for hooks to queue\n     */\n    function registerPostOrderHooks(tView, tNode) {\n        if (tView.firstTemplatePass) {\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n                var directiveDef = tView.data[i];\n                if (directiveDef.afterContentInit) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(-i, directiveDef.afterContentInit);\n                }\n                if (directiveDef.afterContentChecked) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                    (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, directiveDef.afterContentChecked);\n                }\n                if (directiveDef.afterViewInit) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(-i, directiveDef.afterViewInit);\n                }\n                if (directiveDef.afterViewChecked) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                    (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n                }\n                if (directiveDef.onDestroy != null) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n                }\n            }\n        }\n    }\n    /**\n     * Executing hooks requires complex logic as we need to deal with 2 constraints.\n     *\n     * 1. Init hooks (ngOnInit, ngAfterContentInit, ngAfterViewInit) must all be executed once and only\n     * once, across many change detection cycles. This must be true even if some hooks throw, or if\n     * some recursively trigger a change detection cycle.\n     * To solve that, it is required to track the state of the execution of these init hooks.\n     * This is done by storing and maintaining flags in the view: the {@link InitPhaseState},\n     * and the index within that phase. They can be seen as a cursor in the following structure:\n     * [[onInit1, onInit2], [afterContentInit1], [afterViewInit1, afterViewInit2, afterViewInit3]]\n     * They are are stored as flags in LView[FLAGS].\n     *\n     * 2. Pre-order hooks can be executed in batches, because of the select instruction.\n     * To be able to pause and resume their execution, we also need some state about the hook's array\n     * that is being processed:\n     * - the index of the next hook to be executed\n     * - the number of init hooks already found in the processed part of the  array\n     * They are are stored as flags in LView[PREORDER_HOOK_FLAGS].\n     */\n    /**\n     * Executes necessary hooks at the start of executing a template.\n     *\n     * Executes hooks that are to be run during the initialization of a directive such\n     * as `onChanges`, `onInit`, and `doCheck`.\n     *\n     * @param lView The current view\n     * @param tView Static data for the view containing the hooks to be executed\n     * @param checkNoChangesMode Whether or not we're in checkNoChanges mode.\n     * @param @param currentNodeIndex 2 cases depending the the value:\n     * - undefined: execute hooks only from the saved index until the end of the array (pre-order case,\n     * when flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executePreOrderHooks(currentView, tView, checkNoChangesMode, currentNodeIndex) {\n        if (!checkNoChangesMode) {\n            executeHooks(currentView, tView.preOrderHooks, tView.preOrderCheckHooks, checkNoChangesMode, 0 /* OnInitHooksToBeRun */, currentNodeIndex !== undefined ? currentNodeIndex : null);\n        }\n    }\n    /**\n     * Executes hooks against the given `LView` based off of whether or not\n     * This is the first pass.\n     *\n     * @param currentView The view instance data to run the hooks against\n     * @param firstPassHooks An array of hooks to run if we're in the first view pass\n     * @param checkHooks An Array of hooks to run if we're not in the first view pass.\n     * @param checkNoChangesMode Whether or not we're in no changes mode.\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending the the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeHooks(currentView, firstPassHooks, checkHooks, checkNoChangesMode, initPhaseState, currentNodeIndex) {\n        if (checkNoChangesMode)\n            return;\n        var hooksToCall = (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhaseState ?\n            firstPassHooks :\n            checkHooks;\n        if (hooksToCall) {\n            callHooks(currentView, hooksToCall, initPhaseState, currentNodeIndex);\n        }\n        // The init phase state must be always checked here as it may have been recursively updated\n        if (currentNodeIndex == null &&\n            (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhaseState &&\n            initPhaseState !== 3 /* InitPhaseCompleted */) {\n            currentView[FLAGS] &= 1023 /* IndexWithinInitPhaseReset */;\n            currentView[FLAGS] += 1 /* InitPhaseStateIncrementer */;\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending the the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function callHooks(currentView, arr, initPhase, currentNodeIndex) {\n        var startIndex = currentNodeIndex !== undefined ?\n            (currentView[PREORDER_HOOK_FLAGS] & 65535 /* IndexOfTheNextPreOrderHookMaskMask */) :\n            0;\n        var nodeIndexLimit = currentNodeIndex != null ? currentNodeIndex : -1;\n        var lastNodeIndexFound = 0;\n        for (var i = startIndex; i < arr.length; i++) {\n            var hook = arr[i + 1];\n            if (typeof hook === 'number') {\n                lastNodeIndexFound = arr[i];\n                if (currentNodeIndex != null && lastNodeIndexFound >= currentNodeIndex) {\n                    break;\n                }\n            }\n            else {\n                var isInitHook = arr[i] < 0;\n                if (isInitHook)\n                    currentView[PREORDER_HOOK_FLAGS] += 65536 /* NumberOfInitHooksCalledIncrementer */;\n                if (lastNodeIndexFound < nodeIndexLimit || nodeIndexLimit == -1) {\n                    callHook(currentView, initPhase, arr, i);\n                    currentView[PREORDER_HOOK_FLAGS] =\n                        (currentView[PREORDER_HOOK_FLAGS] & 4294901760 /* NumberOfInitHooksCalledMask */) + i +\n                            2;\n                }\n                i++;\n            }\n        }\n    }\n    /**\n     * Execute one hook against the current `LView`.\n     *\n     * @param currentView The current view\n     * @param initPhaseState the current state of the init phase\n     * @param arr The array in which the hooks are found\n     * @param i The current index within the hook data array\n     */\n    function callHook(currentView, initPhase, arr, i) {\n        var isInitHook = arr[i] < 0;\n        var hook = arr[i + 1];\n        var directiveIndex = isInitHook ? -arr[i] : arr[i];\n        var directive = currentView[directiveIndex];\n        if (isInitHook) {\n            var indexWithintInitPhase = currentView[FLAGS] >> 10 /* IndexWithinInitPhaseShift */;\n            // The init phase state must be always checked here as it may have been recursively\n            // updated\n            if (indexWithintInitPhase <\n                (currentView[PREORDER_HOOK_FLAGS] >> 16 /* NumberOfInitHooksCalledShift */) &&\n                (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n                currentView[FLAGS] += 1024 /* IndexWithinInitPhaseIncrementer */;\n                hook.call(directive);\n            }\n        }\n        else {\n            hook.call(directive);\n        }\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * --------\n     *\n     * // TODO(matsko): add updateMask info\n     *\n     * This file contains all state-based logic for styling in Angular.\n     *\n     * Styling in Angular is evaluated with a series of styling-specific\n     * template instructions which are called one after another each time\n     * change detection occurs in Angular.\n     *\n     * Styling makes use of various temporary, state-based variables between\n     * instructions so that it can better cache and optimize its values.\n     * These values are usually populated and cleared when an element is\n     * exited in change detection (once all the instructions are run for\n     * that element).\n     *\n     * There are, however, situations where the state-based values\n     * need to be stored and used at a later point. This ONLY occurs when\n     * there are template-level as well as host-binding-level styling\n     * instructions on the same element. The example below shows exactly\n     * what could be:\n     *\n     * ```html\n     * <!-- two sources of styling: the template and the directive -->\n     * <div [style.width]=\"width\" dir-that-sets-height></div>\n     * ```\n     *\n     * If and when this situation occurs, the current styling state is\n     * stored in a storage map value and then later accessed once the\n     * host bindings are evaluated. Once styling for the current element\n     * is over then the map entry will be cleared.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    var _stylingState = null;\n    var _stateStorage = new Map();\n    // this value is not used outside this file and is only here\n    // as a caching check for when the element changes.\n    var _stylingElement = null;\n    var STYLING_INDEX_START_VALUE = 1;\n    var BIT_MASK_START_VALUE = 0;\n    function getStylingState(element, readFromMap) {\n        if (!_stylingElement || element !== _stylingElement) {\n            _stylingElement = element;\n            if (readFromMap) {\n                _stylingState = _stateStorage.get(element) || null;\n                ngDevMode && ngDevMode.stylingReadPersistedState++;\n            }\n            _stylingState = _stylingState || {\n                classesBitMask: BIT_MASK_START_VALUE,\n                classesIndex: STYLING_INDEX_START_VALUE,\n                stylesBitMask: BIT_MASK_START_VALUE,\n                stylesIndex: STYLING_INDEX_START_VALUE,\n            };\n        }\n        return _stylingState;\n    }\n    function resetStylingState() {\n        _stylingState = null;\n        _stylingElement = null;\n    }\n    function storeStylingState(element, state) {\n        ngDevMode && ngDevMode.stylingWritePersistedState++;\n        _stateStorage.set(element, state);\n    }\n    function deleteStylingStateFromStorage(element) {\n        _stateStorage.delete(element);\n    }\n    function resetAllStylingState() {\n        resetStylingState();\n        _stateStorage.clear();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * For efficiency reasons we often put several different data types (`RNode`, `LView`, `LContainer`,\n     * `StylingContext`) in same location in `LView`. This is because we don't want to pre-allocate\n     * space for it because the storage is sparse. This file contains utilities for dealing with such\n     * data types.\n     *\n     * How do we know what is stored at a given location in `LView`.\n     * - `Array.isArray(value) === false` => `RNode` (The normal storage value)\n     * - `Array.isArray(value) === true` => then the `value[0]` represents the wrapped value.\n     *   - `typeof value[TYPE] === 'object'` => `LView`\n     *      - This happens when we have a component at a given location\n     *   - `typeof value[TYPE] === 'number'` => `StylingContext`\n     *      - This happens when we have style/class binding at a given location.\n     *   - `typeof value[TYPE] === true` => `LContainer`\n     *      - This happens when we have `LContainer` binding at a given location.\n     *\n     *\n     * NOTE: it is assumed that `Array.isArray` and `typeof` operations are very efficient.\n     */\n    /**\n     * Returns `RNode`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapRNode(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return unwrapRNode(lView[index + HEADER_OFFSET]);\n    }\n    /**\n     * Retrieve an `RNode` for a given `TNode` and `LView`.\n     *\n     * This function guarantees in dev mode to retrieve a non-null `RNode`.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNode(tNode, lView) {\n        ngDevMode && assertTNodeForLView(tNode, lView);\n        ngDevMode && assertDataInRange(lView, tNode.index);\n        var node = unwrapRNode(lView[tNode.index]);\n        ngDevMode && assertDomNode(node);\n        return node;\n    }\n    /**\n     * Retrieve an `RNode` or `null` for a given `TNode` and `LView`.\n     *\n     * Some `TNode`s don't have associated `RNode`s. For example `Projection`\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNodeOrNull(tNode, lView) {\n        ngDevMode && assertTNodeForLView(tNode, lView);\n        var index = tNode.index;\n        var node = index == -1 ? null : unwrapRNode(lView[index]);\n        ngDevMode && node !== null && assertDomNode(node);\n        return node;\n    }\n    /**\n     * A helper function that returns `true` if a given `TNode` has any matching directives.\n     */\n    function hasDirectives(tNode) {\n        return tNode.directiveEnd > tNode.directiveStart;\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function loadInternal(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        var slotValue = hostView[nodeIndex];\n        var lView = isLView(slotValue) ? slotValue : slotValue[HOST];\n        return lView;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    /**\n     * Returns a boolean for whether the view is attached to the change detection tree.\n     *\n     * Note: This determines whether a view should be checked, not whether it's inserted\n     * into a container. For that, you'll want `viewAttachedToContainer` below.\n     */\n    function viewAttachedToChangeDetector(view) {\n        return (view[FLAGS] & 128 /* Attached */) === 128 /* Attached */;\n    }\n    /** Returns a boolean for whether the view is attached to a container. */\n    function viewAttachedToContainer(view) {\n        return isLContainer(view[PARENT]);\n    }\n    /**\n     * Resets the pre-order hook flags of the view.\n     * @param lView the LView on which the flags are reset\n     */\n    function resetPreOrderHookFlags(lView) {\n        lView[PREORDER_HOOK_FLAGS] = 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    var currentDirectiveDef = null;\n    function getCurrentDirectiveDef() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        currentDirectiveDef = def;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵenableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵdisableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    /**\n     * Used as the starting directive id value.\n     *\n     * All subsequent directives are incremented from this value onwards.\n     * The reason why this value is `1` instead of `0` is because the `0`\n     * value is reserved for the template.\n     */\n    var MIN_DIRECTIVE_ID = 1;\n    var activeDirectiveId = MIN_DIRECTIVE_ID;\n    /**\n     * Position depth (with respect from leaf to root) in a directive sub-class inheritance chain.\n     */\n    var activeDirectiveSuperClassDepthPosition = 0;\n    /**\n     * Total count of how many directives are a part of an inheritance chain.\n     *\n     * When directives are sub-classed (extended) from one to another, Angular\n     * needs to keep track of exactly how many were encountered so it can accurately\n     * generate the next directive id (once the next directive id is visited).\n     * Normally the next directive id just a single incremented value from the\n     * previous one, however, if the previous directive is a part of an inheritance\n     * chain (a series of sub-classed directives) then the incremented value must\n     * also take into account the total amount of sub-classed values.\n     *\n     * Note that this value resets back to zero once the next directive is\n     * visited (when `incrementActiveDirectiveId` or `setActiveHostElement`\n     * is called).\n     */\n    var activeDirectiveSuperClassHeight = 0;\n    /**\n     * Sets the active directive host element and resets the directive id value\n     * (when the provided elementIndex value has changed).\n     *\n     * @param elementIndex the element index value for the host element where\n     *                     the directive/component instance lives\n     */\n    function setActiveHostElement(elementIndex) {\n        if (elementIndex === void 0) { elementIndex = null; }\n        if (_selectedIndex !== elementIndex) {\n            setSelectedIndex(elementIndex == null ? -1 : elementIndex);\n            activeDirectiveId = elementIndex == null ? 0 : MIN_DIRECTIVE_ID;\n            activeDirectiveSuperClassDepthPosition = 0;\n            activeDirectiveSuperClassHeight = 0;\n        }\n    }\n    /**\n     * Returns the current id value of the current directive.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (id == 1)\n     * dirTwo->hostBindings() (id == 2)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function getActiveDirectiveId() {\n        return activeDirectiveId;\n    }\n    /**\n     * Increments the current directive id value.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (index = 1)\n     * // increment\n     * dirTwo->hostBindings() (index = 2)\n     *\n     * Depending on whether or not a previous directive had any inherited\n     * directives present, that value will be incremented in addition\n     * to the id jumping up by one.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function incrementActiveDirectiveId() {\n        activeDirectiveId += 1 + activeDirectiveSuperClassHeight;\n        // because we are dealing with a new directive this\n        // means we have exited out of the inheritance chain\n        activeDirectiveSuperClassDepthPosition = 0;\n        activeDirectiveSuperClassHeight = 0;\n    }\n    /**\n     * Set the current super class (reverse inheritance) position depth for a directive.\n     *\n     * For example we have two directives: Child and Other (but Child is a sub-class of Parent)\n     * <div child-dir other-dir></div>\n     *\n     * // increment\n     * parentInstance->hostBindings() (depth = 1)\n     * // decrement\n     * childInstance->hostBindings() (depth = 0)\n     * otherInstance->hostBindings() (depth = 0 b/c it's a different directive)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     */\n    function adjustActiveDirectiveSuperClassDepthPosition(delta) {\n        activeDirectiveSuperClassDepthPosition += delta;\n        // we keep track of the height value so that when the next directive is visited\n        // then Angular knows to generate a new directive id value which has taken into\n        // account how many sub-class directives were a part of the previous directive.\n        activeDirectiveSuperClassHeight =\n            Math.max(activeDirectiveSuperClassHeight, activeDirectiveSuperClassDepthPosition);\n    }\n    /**\n     * Returns he current depth of the super/sub class inheritance chain.\n     *\n     * This will return how many inherited directive/component classes\n     * exist in the current chain.\n     *\n     * ```typescript\n     * @Directive({ selector: '[super-dir]' })\n     * class SuperDir {}\n     *\n     * @Directive({ selector: '[sub-dir]' })\n     * class SubDir extends SuperDir {}\n     *\n     * // if `<div sub-dir>` is used then the super class height is `1`\n     * // if `<div super-dir>` is used then the super class height is `0`\n     * ```\n     */\n    function getActiveDirectiveSuperClassHeight() {\n        return activeDirectiveSuperClassHeight;\n    }\n    /**\n     * Returns the current super class (reverse inheritance) depth for a directive.\n     *\n     * This is designed to help instruction code distinguish different hostBindings\n     * calls from each other when a directive has extended from another directive.\n     * Normally using the directive id value is enough, but with the case\n     * of parent/sub-class directive inheritance more information is required.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     */\n    function getActiveDirectiveSuperClassDepth() {\n        return activeDirectiveSuperClassDepthPosition;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     *\n     * @codeGenApi\n     */\n    function ɵɵrestoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode, _isParent) {\n        previousOrParentTNode = tNode;\n        isParent = _isParent;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        ngDevMode && assertLViewOrUndefined(view);\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsNotParent() {\n        isParent = false;\n    }\n    function setIsParent() {\n        isParent = true;\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        if (view === void 0) { view = lView; }\n        return (view[FLAGS] & 4 /* CreationMode */) === 4 /* CreationMode */;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Current index of a View or Content Query which needs to be processed next.\n     * We iterate over the list of Queries and increment current query index at every step.\n     */\n    var currentQueryIndex = 0;\n    function getCurrentQueryIndex() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueryIndex;\n    }\n    function setCurrentQueryIndex(value) {\n        currentQueryIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        ngDevMode && assertLViewOrUndefined(newView);\n        var oldView = lView;\n        if (newView) {\n            var tView = newView[TVIEW];\n            bindingRootIndex = tView.bindingStartIndex;\n        }\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n        setCurrentStyleSanitizer(null);\n        resetAllStylingState();\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     * @param safeToRunHooks Whether the runtime is in a state where running lifecycle hooks is valid.\n     * This is not always the case (for example, the application may have crashed and `leaveView` is\n     * being executed while unwinding the call stack).\n     */\n    function leaveView(newView, safeToRunHooks) {\n        var tView = lView[TVIEW];\n        if (isCreationMode(lView)) {\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        else {\n            try {\n                resetPreOrderHookFlags(lView);\n                safeToRunHooks && executeHooks(lView, tView.viewHooks, tView.viewCheckHooks, checkNoChangesMode, 2 /* AfterViewInitHooksToBeRun */, undefined);\n            }\n            finally {\n                // Views are clean and in update mode after being checked, so these bits are cleared\n                lView[FLAGS] &= ~(64 /* Dirty */ | 8 /* FirstLViewPass */);\n                lView[BINDING_INDEX] = tView.bindingStartIndex;\n            }\n        }\n        enterView(newView, null);\n    }\n    var _selectedIndex = -1;\n    /**\n     * Gets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function getSelectedIndex() {\n        return _selectedIndex;\n    }\n    /**\n     * Sets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function setSelectedIndex(index) {\n        _selectedIndex = index;\n        // we have now jumped to another element\n        // therefore the state is stale\n        resetStylingState();\n    }\n    var _currentNamespace = null;\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/2000/svg'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/1998/MathML/'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceHTML() {\n        namespaceHTMLInternal();\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     */\n    function namespaceHTMLInternal() {\n        _currentNamespace = null;\n    }\n    function getNamespace() {\n        return _currentNamespace;\n    }\n    var _currentSanitizer;\n    function setCurrentStyleSanitizer(sanitizer) {\n        _currentSanitizer = sanitizer;\n    }\n    function getCurrentStyleSanitizer() {\n        return _currentSanitizer;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type);\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either an allowed protocol (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var e_2, _a;\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // Accessibility attributes as per WAI-ARIA 1.1 (W3C Working Draft 14 December 2018)\n    var ARIA_ATTRS = tagSet('aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,' +\n        'aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,' +\n        'aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,' +\n        'aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,' +\n        'aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,' +\n        'aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,' +\n        'aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS, ARIA_ATTRS);\n    // Elements whose content should not be traversed/preserved, if the elements themselves are invalid.\n    //\n    // Typically, `<invalid>Some content</invalid>` would traverse (and in this case preserve)\n    // `Some content`, but strip `invalid-element` opening/closing tags. For some elements, though, we\n    // don't want to preserve the content, if the elements themselves are going to be removed.\n    var SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS = tagSet('script,style,template');\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var traverseContent = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    traverseContent = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (traverseContent && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Sanitizes an opening element tag (if valid) and returns whether the element's contents should\n         * be traversed. Element content must always be traversed (even if the element itself is not\n         * valid/safe), unless the element is one of `SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS`.\n         *\n         * @param element The element to sanitize.\n         * @return True if the element's contents should be traversed.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return !SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS.hasOwnProperty(tagName);\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|Z|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, renderStringify(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(renderStringify(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(renderStringify(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return ɵɵsanitizeResourceUrl;\n        }\n        return ɵɵsanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     *\n     * @publicApi\n     */\n    var ɵɵdefaultStyleSanitizer = function (prop, value, mode) {\n        mode = mode || 3 /* ValidateAndSanitize */;\n        var doSanitizeValue = true;\n        if (mode & 1 /* ValidateProperty */) {\n            doSanitizeValue = prop === 'background-image' || prop === 'background' ||\n                prop === 'border-image' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image' || prop === 'clip-path';\n        }\n        if (mode & 2 /* SanitizeOnly */) {\n            return doSanitizeValue ? ɵɵsanitizeStyle(value) : value;\n        }\n        else {\n            return doSanitizeValue;\n        }\n    };\n    function validateAgainstEventProperties(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            throw new Error(msg);\n        }\n    }\n    function validateAgainstEventAttributes(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            throw new Error(msg);\n        }\n    }\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj !== null && typeof obj == 'object' &&\n            Object.getPrototypeOf(obj) == NodeInjectorFactory.prototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    var MAP_BASED_ENTRY_PROP_NAME = '--MAP--';\n    /**\n     * Creates a new instance of the `TStylingContext`.\n     *\n     * The `TStylingContext` is used as a manifest of all style or all class bindings on\n     * an element. Because it is a T-level data-structure, it is only created once per\n     * tNode for styles and for classes. This function allocates a new instance of a\n     * `TStylingContext` with the initial values (see `interfaces.ts` for more info).\n     */\n    function allocTStylingContext(initialStyling) {\n        // because map-based bindings deal with a dynamic set of values, there\n        // is no way to know ahead of time whether or not sanitization is required.\n        // For this reason the configuration will always mark sanitization as active\n        // (this means that when map-based values are applied then sanitization will\n        // be checked against each property).\n        var mapBasedConfig = 1 /* SanitizationRequired */;\n        var context = [\n            initialStyling || null,\n            0 /* Initial */,\n            // the LastDirectiveIndex value in the context is used to track which directive is the last\n            // to call `stylingApply()`. The `-1` value implies that no directive has been set yet.\n            -1,\n            mapBasedConfig,\n            0,\n            MAP_BASED_ENTRY_PROP_NAME,\n        ];\n        return context;\n    }\n    /**\n     * Sets the provided directive as the last directive index in the provided `TStylingContext`.\n     *\n     * Styling in Angular can be applied from the template as well as multiple sources of\n     * host bindings. This means that each binding function (the template function or the\n     * hostBindings functions) will generate styling instructions as well as a styling\n     * apply function (i.e. `stylingApply()`). Because host bindings functions and the\n     * template function are independent from one another this means that the styling apply\n     * function will be called multiple times. By tracking the last directive index (which\n     * is what happens in this function) the styling algorithm knows exactly when to flush\n     * styling (which is when the last styling apply function is executed).\n     */\n    function updateLastDirectiveIndex(context, lastDirectiveIndex) {\n        var currentValue = context[2 /* LastDirectiveIndexPosition */];\n        if (lastDirectiveIndex !== currentValue) {\n            context[2 /* LastDirectiveIndexPosition */] = lastDirectiveIndex;\n            if (currentValue === 0 && lastDirectiveIndex > 0) {\n                markContextToPersistState(context);\n            }\n        }\n    }\n    function getConfig(context) {\n        return context[1 /* ConfigPosition */];\n    }\n    function setConfig(context, value) {\n        context[1 /* ConfigPosition */] = value;\n    }\n    function getProp(context, index) {\n        return context[index + 2 /* PropOffset */];\n    }\n    function getPropConfig(context, index) {\n        return context[index + 0 /* ConfigAndGuardOffset */] &\n            1 /* Mask */;\n    }\n    function isSanitizationRequired(context, index) {\n        return (getPropConfig(context, index) & 1 /* SanitizationRequired */) > 0;\n    }\n    function getGuardMask(context, index) {\n        var configGuardValue = context[index + 0 /* ConfigAndGuardOffset */];\n        return configGuardValue >> 1 /* TotalBits */;\n    }\n    function setGuardMask(context, index, maskValue) {\n        var config = getPropConfig(context, index);\n        var guardMask = maskValue << 1 /* TotalBits */;\n        context[index + 0 /* ConfigAndGuardOffset */] = config | guardMask;\n    }\n    function getValuesCount(context, index) {\n        return context[index + 1 /* ValuesCountOffset */];\n    }\n    function getBindingValue(context, index, offset) {\n        return context[index + 3 /* BindingsStartOffset */ + offset];\n    }\n    function getDefaultValue(context, index) {\n        var valuesCount = getValuesCount(context, index);\n        return context[index + 3 /* BindingsStartOffset */ + valuesCount - 1];\n    }\n    /**\n     * Temporary function which determines whether or not a context is\n     * allowed to be flushed based on the provided directive index.\n     */\n    function allowStylingFlush(context, index) {\n        return (context && index === context[2 /* LastDirectiveIndexPosition */]) ? true :\n            false;\n    }\n    function lockContext(context) {\n        setConfig(context, getConfig(context) | 1 /* Locked */);\n    }\n    function isContextLocked(context) {\n        return (getConfig(context) & 1 /* Locked */) > 0;\n    }\n    function stateIsPersisted(context) {\n        return (getConfig(context) & 2 /* PersistStateValues */) > 0;\n    }\n    function markContextToPersistState(context) {\n        setConfig(context, getConfig(context) | 2 /* PersistStateValues */);\n    }\n    function getPropValuesStartPosition(context) {\n        return 6 /* MapBindingsBindingsStartPosition */ +\n            context[4 /* MapBindingsValuesCountPosition */];\n    }\n    function hasValueChanged(a, b) {\n        var compareValueA = Array.isArray(a) ? a[0 /* RawValuePosition */] : a;\n        var compareValueB = Array.isArray(b) ? b[0 /* RawValuePosition */] : b;\n        // these are special cases for String based values (which are created as artifacts\n        // when sanitization is bypassed on a particular value)\n        if (compareValueA instanceof String) {\n            compareValueA = compareValueA.toString();\n        }\n        if (compareValueB instanceof String) {\n            compareValueB = compareValueB.toString();\n        }\n        return isDifferent(compareValueA, compareValueB);\n    }\n    /**\n     * Determines whether the provided styling value is truthy or falsy.\n     */\n    function isStylingValueDefined(value) {\n        // the reason why null is compared against is because\n        // a CSS class value that is set to `false` must be\n        // respected (otherwise it would be treated as falsy).\n        // Empty string values are because developers usually\n        // set a value to an empty string to remove it.\n        return value != null && value !== '';\n    }\n    function concatString(a, b, separator) {\n        if (separator === void 0) { separator = ' '; }\n        return a + ((b.length && a.length) ? separator : '') + b;\n    }\n    function hyphenate(value) {\n        return value.replace(/[a-z][A-Z]/g, function (v) { return v.charAt(0) + '-' + v.charAt(1); }).toLowerCase();\n    }\n    /**\n     * Returns an instance of `StylingMapArray`.\n     *\n     * This function is designed to find an instance of `StylingMapArray` in case it is stored\n     * inside of an instance of `TStylingContext`. When a styling context is created it\n     * will copy over an initial styling values from the tNode (which are stored as a\n     * `StylingMapArray` on the `tNode.classes` or `tNode.styles` values).\n     */\n    function getStylingMapArray(value) {\n        return isStylingContext$1(value) ?\n            value[0 /* InitialStylingValuePosition */] :\n            value;\n    }\n    function isStylingContext$1(value) {\n        // the StylingMapArray is in the format of [initial, prop, string, prop, string]\n        // and this is the defining value to distinguish between arrays\n        return Array.isArray(value) &&\n            value.length >= 6 /* MapBindingsBindingsStartPosition */ &&\n            typeof value[1] !== 'string';\n    }\n    function getInitialStylingValue(context) {\n        var map = getStylingMapArray(context);\n        return map && map[0 /* RawValuePosition */] || '';\n    }\n    function hasClassInput(tNode) {\n        return (tNode.flags & 8 /* hasClassInput */) !== 0;\n    }\n    function hasStyleInput(tNode) {\n        return (tNode.flags & 16 /* hasStyleInput */) !== 0;\n    }\n    function getMapProp(map, index) {\n        return map[index + 0 /* PropOffset */];\n    }\n    function setMapValue(map, index, value) {\n        map[index + 1 /* ValueOffset */] = value;\n    }\n    function getMapValue(map, index) {\n        return map[index + 1 /* ValueOffset */];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var ɵ0$7 = function (hostElement, rendererType) { return document; };\n    var domRendererFactory3 = {\n        createRenderer: ɵ0$7\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = unwrapRNode(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = unwrapRNode(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNodeOrNull(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY$2;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 1 /* isComponent */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 1 /* isComponent */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                result[tNode.localNames[i]] = lView[localIndex];\n                localIndex++;\n            }\n            return result;\n        }\n        return null;\n    }\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent && player.state === 0 /* Pending */) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The default directive styling index value for template-based bindings.\n     *\n     * All host-level bindings (e.g. `hostStyleProp` and `hostStyleMap`) are\n     * assigned a directive styling index value based on the current directive\n     * uniqueId and the directive super-class inheritance depth. But for template\n     * bindings they always have the same directive styling index value.\n     */\n    var DEFAULT_TEMPLATE_DIRECTIVE_INDEX = 0;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANIMATION_PROP_PREFIX = '@';\n    function createEmptyStylingContext(wrappedElement, sanitizer, initialStyles, initialClasses) {\n        var context = [\n            wrappedElement || null,\n            0,\n            [],\n            initialStyles || [null, null],\n            initialClasses || [null, null],\n            [0, 0],\n            [0],\n            [0],\n            null,\n            null,\n        ];\n        // whenever a context is created there is always a `null` directive\n        // that is registered (which is a placeholder for the \"template\").\n        allocateOrUpdateDirectiveIntoContext(context, DEFAULT_TEMPLATE_DIRECTIVE_INDEX);\n        return context;\n    }\n    /**\n     * Allocates (registers) a directive into the directive registry within the provided styling\n     * context.\n     *\n     * For each and every `[style]`, `[style.prop]`, `[class]`, `[class.name]` binding\n     * (as well as static style and class attributes) a directive, component or template\n     * is marked as the owner. When an owner is determined (this happens when the template\n     * is first passed over) the directive owner is allocated into the styling context. When\n     * this happens, each owner gets its own index value. This then ensures that once any\n     * style and/or class binding are assigned into the context then they are marked to\n     * that directive's index value.\n     *\n     * @param context the target StylingContext\n     * @param directiveRef the directive that will be allocated into the context\n     * @returns the index where the directive was inserted into\n     */\n    function allocateOrUpdateDirectiveIntoContext(context, directiveIndex, singlePropValuesIndex, styleSanitizer) {\n        if (singlePropValuesIndex === void 0) { singlePropValuesIndex = -1; }\n        var directiveRegistry = context[2 /* DirectiveRegistryPosition */];\n        var index = directiveIndex * 2 /* Size */;\n        // we preemptively make space into the directives array and then\n        // assign values slot-by-slot to ensure that if the directive ordering\n        // changes then it will still function\n        var limit = index + 2 /* Size */;\n        for (var i = directiveRegistry.length; i < limit; i += 2 /* Size */) {\n            // -1 is used to signal that the directive has been allocated, but\n            // no actual style or class bindings have been registered yet...\n            directiveRegistry.push(-1, null);\n        }\n        var propValuesStartPosition = index + 0 /* SinglePropValuesIndexOffset */;\n        if (singlePropValuesIndex >= 0 && directiveRegistry[propValuesStartPosition] === -1) {\n            directiveRegistry[propValuesStartPosition] = singlePropValuesIndex;\n            directiveRegistry[index + 1 /* StyleSanitizerOffset */] =\n                styleSanitizer || null;\n        }\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        // the HEADER values contain arrays which also need\n        // to be copied over into the new context\n        for (var i = 0; i < 10 /* SingleStylesStartPosition */; i++) {\n            var value = templateStyleContext[i];\n            if (Array.isArray(value)) {\n                context[i] = value.slice();\n            }\n        }\n        context[0 /* ElementPosition */] = element;\n        // this will prevent any other directives from extending the context\n        context[1 /* MasterFlagPosition */] |= 16 /* BindingAllocationLocked */;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `styling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContextFromLView(index, viewData) {\n        var storageIndex = index;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LView or an LContainer\n            var stylingTemplate = getTNode(index - HEADER_OFFSET, viewData).stylingTemplate;\n            if (wrapper !== viewData) {\n                storageIndex = HOST;\n            }\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isAnimationProp(name) {\n        return name[0] === ANIMATION_PROP_PREFIX;\n    }\n    function forceClassesAsString(classes) {\n        if (classes && typeof classes !== 'string') {\n            classes = Object.keys(classes).join(' ');\n        }\n        return classes || '';\n    }\n    function forceStylesAsString(styles) {\n        var str = '';\n        if (styles) {\n            var props = Object.keys(styles);\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                str += (i ? ';' : '') + (prop + \":\" + styles[prop]);\n            }\n        }\n        return str;\n    }\n    function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n        ref = ref || element;\n        if (playerContextIndex) {\n            playerContext[playerContextIndex] = player;\n        }\n        else {\n            playerContext.push(player);\n        }\n        if (player) {\n            player.addEventListener(200 /* Destroyed */, function () {\n                var index = playerContext.indexOf(player);\n                var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                // if the player is being removed from the factory side of the context\n                // (which is where the [style] and [class] bindings do their thing) then\n                // that side of the array cannot be resized since the respective bindings\n                // have pointer index values that point to the associated factory instance\n                if (index) {\n                    if (index < nonFactoryPlayerIndex) {\n                        playerContext[index] = null;\n                    }\n                    else {\n                        playerContext.splice(index, 1);\n                    }\n                }\n                player.destroy();\n            });\n            var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n            playerHandler.queuePlayer(player, ref);\n            return true;\n        }\n        return false;\n    }\n    function getPlayersInternal(playerContext) {\n        var players = [];\n        var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n        // add all factory-based players (which are a part of [style] and [class] bindings)\n        for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n            var player = playerContext[i];\n            if (player) {\n                players.push(player);\n            }\n        }\n        // add all custom players (not a part of [style] and [class] bindings)\n        for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n            players.push(playerContext[i]);\n        }\n        return players;\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getLContext(target);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return null;\n        }\n        var lView = context.lView, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContextFromLView(nodeIndex, lView);\n        return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n    }\n    function getPlayerContext(stylingContext) {\n        return stylingContext[9 /* PlayerContext */];\n    }\n    function allocPlayerContext(data) {\n        return data[9 /* PlayerContext */] =\n            [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n    }\n    function throwInvalidRefError() {\n        throw new Error('Only elements that exist in an Angular application can be used for animations');\n    }\n\n    /**\n     * Assigns all attribute values to the provided element via the inferred renderer.\n     *\n     * This function accepts two forms of attribute entries:\n     *\n     * default: (key, value):\n     *  attrs = [key1, value1, key2, value2]\n     *\n     * namespaced: (NAMESPACE_MARKER, uri, name, value)\n     *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n     *\n     * The `attrs` array can contain a mix of both the default and namespaced entries.\n     * The \"default\" values are set without a marker, but if the function comes across\n     * a marker value then it will attempt to set a namespaced value. If the marker is\n     * not of a namespaced value then the function will quit and return the index value\n     * where it stopped during the iteration of the attrs array.\n     *\n     * See [AttributeMarker] to understand what the namespace marker value is.\n     *\n     * Note that this instruction does not support assigning style and class values to\n     * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n     * are applied to an element.\n     *\n     * @param native The element that the attributes will be assigned to\n     * @param attrs The attribute array of values that will be assigned to the element\n     * @returns the index value that was last accessed in the attributes array\n     */\n    function setUpAttributes(native, attrs) {\n        var renderer = getLView()[RENDERER];\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                // only namespaces are supported. Other value types (such as style/class\n                // entries) are not supported in this function.\n                if (value !== 0 /* NamespaceURI */) {\n                    break;\n                }\n                // we just landed on the marker value ... therefore\n                // we should skip to the next entry\n                i++;\n                var namespaceURI = attrs[i++];\n                var attrName = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n            }\n            else {\n                // attrName is string;\n                var attrName = value;\n                var attrVal = attrs[++i];\n                // Standard attributes\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (isAnimationProp(attrName)) {\n                    if (isProc) {\n                        renderer.setProperty(native, attrName, attrVal);\n                    }\n                }\n                else {\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                }\n                i++;\n            }\n        }\n        // another piece of code may iterate over the same attributes array. Therefore\n        // it may be helpful to return the exact spot where the attributes array exited\n        // whether by running into an unsupported marker or if all the static values were\n        // iterated over.\n        return i;\n    }\n    /**\n     * Test whether the given value is a marker that indicates that the following\n     * attribute values in a `TAttributes` array are only the names of attributes,\n     * and not name-value pairs.\n     * @param marker The attribute marker to test.\n     * @returns true if the marker is a \"name-only\" marker (e.g. `Bindings`, `Template` or `I18n`).\n     */\n    function isNameOnlyAttributeMarker(marker) {\n        return marker === 3 /* Bindings */ || marker === 4 /* Template */ ||\n            marker === 6 /* I18n */;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /// Parent Injector Utils ///////////////////////////////////////////////////////////////\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Gets the parent LView of the passed LView, if the PARENT is an LContainer, will get the parent of\n     * that LContainer, which is an LView\n     * @param lView the lView whose parent to get\n     */\n    function getLViewParent(lView) {\n        ngDevMode && assertLView(lView);\n        var parent = lView[PARENT];\n        return isLContainer(parent) ? parent[PARENT] : parent;\n    }\n    /**\n     * Retrieve the root view from any component or `LView` by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrLView any component or `LView`\n     */\n    function getRootView(componentOrLView) {\n        ngDevMode && assertDefined(componentOrLView, 'component');\n        var lView = isLView(componentOrLView) ? componentOrLView : readPatchedLView(componentOrLView);\n        while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n            lView = getLViewParent(lView);\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Given an `LView`, find the closest declaration view which is not an embedded view.\n     *\n     * This method searches for the `LView` associated with the component which declared the `LView`.\n     *\n     * This function may return itself if the `LView` passed in is not an embedded `LView`. Otherwise\n     * it walks the declaration parents until it finds a component view (non-embedded-view.)\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[T_HOST];\n        while (rootTNode !== null && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n            lView = lView[DECLARATION_VIEW];\n            rootTNode = lView[T_HOST];\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated. It does this by walking the parent views until it\n     * gets to the root view, then getting the context off of that.\n     *\n     * @param viewOrComponent the `LView` or component to get the root context for.\n     */\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 1 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentLView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[T_HOST];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[T_HOST] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, tView, token) {\n        bloomAdd(injectorIndex, tView, token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        if (attrNameToInject === 'class') {\n            return getInitialStylingValue(tNode.classes);\n        }\n        if (attrNameToInject === 'style') {\n            return getInitialStylingValue(tNode.styles);\n        }\n        var attrs = tNode.attrs;\n        if (attrs) {\n            var attrsLength = attrs.length;\n            var i = 0;\n            while (i < attrsLength) {\n                var value = attrs[i];\n                // If we hit a `Bindings` or `Template` marker then we are done.\n                if (isNameOnlyAttributeMarker(value))\n                    break;\n                // Skip namespaced attributes\n                if (value === 0 /* NamespaceURI */) {\n                    // we skip the next two values\n                    // as namespaced attributes looks like\n                    // [..., AttributeMarker.NamespaceURI, 'http://someuri.com/test', 'test:exist',\n                    // 'existValue', ...]\n                    i = i + 2;\n                }\n                else if (typeof value === 'number') {\n                    // Skip to the first value of the marked attribute.\n                    i++;\n                    while (i < attrsLength && typeof attrs[i] === 'string') {\n                        i++;\n                    }\n                }\n                else if (value === attrNameToInject) {\n                    return attrs[i + 1];\n                }\n                else {\n                    i = i + 2;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n     * filter. Negative values are reserved for special objects.\n     *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                var savePreviousOrParentTNode = getPreviousOrParentTNode();\n                var saveLView = getLView();\n                setTNodeAndViewData(tNode, lView);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + stringifyForError(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                if (bloomHash === -1) {\n                    // `-1` is a special value used to identify `Injector` types.\n                    return new NodeInjector(tNode, lView);\n                }\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? findComponentView(lView)[T_HOST] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR$1];\n            // switch to `injectInjectorOnly` implementation for module injector, since module injector\n            // should not have access to Component/Directive DI scope (that may happen through\n            // `directiveInject` implementation)\n            var previousInjectImplementation = setInjectImplementation(undefined);\n            try {\n                if (moduleInjector) {\n                    return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n                else {\n                    return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n            }\n            finally {\n                setInjectImplementation(previousInjectImplementation);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringifyForError(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponent(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, currentTView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param tView The tView we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, tView, token, canAccessViewProviders, isHostSpecialCase) {\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringifyForError(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(undefined, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     *   When the returned value is negative then it represents special values such as `Injector`.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        // Negative token IDs are used for special objects such as `Injector`\n        return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetFactoryOf(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = ɵɵgetFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * THIS FILE CONTAINS CODE WHICH SHOULD BE TREE SHAKEN AND NEVER CALLED FROM PRODUCTION CODE!!!\n     */\n    /**\n     * Creates an `Array` construction with a given name. This is useful when\n     * looking for memory consumption to see what time of array it is.\n     *\n     *\n     * @param name Name to give to the constructor\n     * @returns A subclass of `Array` if possible. This can only be done in\n     *          environments which support `class` construct.\n     */\n    function createNamedArrayType(name) {\n        // This should never be called in prod mode, so let's verify that is the case.\n        if (ngDevMode) {\n            try {\n                // We need to do it this way so that TypeScript does not down-level the below code.\n                var FunctionConstructor = createNamedArrayType.constructor;\n                return (new FunctionConstructor('Array', \"return class ABC extends Array{}\"))(Array);\n            }\n            catch (e) {\n                // If it does not work just give up and fall back to regular Array.\n                return Array;\n            }\n        }\n        else {\n            throw new Error('Looks like we are in \\'prod mode\\', but we are creating a named Array type, which is wrong! Check your code');\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be performed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode:\n     * - in the \"directive matching\" mode we do _not_ take TContainer's tagName into account if it is\n     * different from NG_TEMPLATE_SELECTOR (value different from NG_TEMPLATE_SELECTOR indicates that a\n     * tag name was extracted from * syntax so we would match the same directive twice);\n     * - in the \"projection\" mode, we use a tag name potentially extracted from the * syntax processing\n     * (applicable to TNodeType.Container only).\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        var tagNameToCompare = tNode.type === 0 /* Container */ && !isProjectionMode ?\n            NG_TEMPLATE_SELECTOR :\n            tNode.tagName;\n        return currentSelector === tagNameToCompare;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data of the node to match\n     * @param selector The selector to try matching against the node.\n     * @param isProjectionMode if `true` we are matching for content projection, otherwise we are doing\n     * directive matching.\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs || [];\n        // Find the index of first attribute that has no value, only a name.\n        var nameOnlyMarkerIdx = getNameOnlyMarkerIndex(nodeAttrs);\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                // special case for matching against classes when a tNode has been instantiated with\n                // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n                if ((mode & 8 /* CLASS */) && tNode.classes) {\n                    if (!isCssClassMatching(getInitialStylingValue(tNode.classes), selectorAttrValue)) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                    continue;\n                }\n                var isInlineTemplate = tNode.type == 0 /* Container */ && tNode.tagName !== NG_TEMPLATE_SELECTOR;\n                var attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs, isInlineTemplate, isProjectionMode);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    if (attrIndexInNode > nameOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(nodeAttrs[attrIndexInNode], 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    var compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                    if (compareAgainstClassName &&\n                        !isCssClassMatching(compareAgainstClassName, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines the attribute's definition array for a node to find the index of the\n     * attribute that matches the given `name`.\n     *\n     * NOTE: This will not match namespaced attributes.\n     *\n     * Attribute matching depends upon `isInlineTemplate` and `isProjectionMode`.\n     * The following table summarizes which types of attributes we attempt to match:\n     *\n     * ===========================================================================================================\n     * Modes                   | Normal Attributes | Bindings Attributes | Template Attributes | I18n\n     * Attributes\n     * ===========================================================================================================\n     * Inline + Projection     | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Inline + Directive      | NO                | NO                  | YES                 | NO\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Projection | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Directive  | YES               | YES                 | NO                  | YES\n     * ===========================================================================================================\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     * @param isInlineTemplate true if the node being matched is an inline template (e.g. `*ngFor`)\n     * rather than a manually expanded template node (e.g `<ng-template>`).\n     * @param isProjectionMode true if we are matching against content projection otherwise we are\n     * matching against directives.\n     */\n    function findAttrIndexInNode(name, attrs, isInlineTemplate, isProjectionMode) {\n        if (attrs === null)\n            return -1;\n        var i = 0;\n        if (isProjectionMode || !isInlineTemplate) {\n            var bindingsMode = false;\n            while (i < attrs.length) {\n                var maybeAttrName = attrs[i];\n                if (maybeAttrName === name) {\n                    return i;\n                }\n                else if (maybeAttrName === 3 /* Bindings */ || maybeAttrName === 6 /* I18n */) {\n                    bindingsMode = true;\n                }\n                else if (maybeAttrName === 1 /* Classes */) {\n                    var value = attrs[++i];\n                    // We should skip classes here because we have a separate mechanism for\n                    // matching classes in projection mode.\n                    while (typeof value === 'string') {\n                        value = attrs[++i];\n                    }\n                    continue;\n                }\n                else if (maybeAttrName === 4 /* Template */) {\n                    // We do not care about Template attributes in this scenario.\n                    break;\n                }\n                else if (maybeAttrName === 0 /* NamespaceURI */) {\n                    // Skip the whole namespaced attribute and value. This is by design.\n                    i += 4;\n                    continue;\n                }\n                // In binding mode there are only names, rather than name-value pairs.\n                i += bindingsMode ? 1 : 2;\n            }\n            // We did not match the attribute\n            return -1;\n        }\n        else {\n            return matchTemplateAttribute(attrs, name);\n        }\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(5 /* ProjectAs */);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    function getNameOnlyMarkerIndex(nodeAttrs) {\n        for (var i = 0; i < nodeAttrs.length; i++) {\n            var nodeAttr = nodeAttrs[i];\n            if (isNameOnlyAttributeMarker(nodeAttr)) {\n                return i;\n            }\n        }\n        return nodeAttrs.length;\n    }\n    function matchTemplateAttribute(attrs, name) {\n        var i = attrs.indexOf(4 /* Template */);\n        if (i > -1) {\n            i++;\n            while (i < attrs.length) {\n                if (attrs[i] === name)\n                    return i;\n                i++;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Checks whether a selector is inside a CssSelectorList\n     * @param selector Selector to be checked.\n     * @param list List in which to look for the selector.\n     */\n    function isSelectorInSelectorList(selector, list) {\n        selectorListLoop: for (var i = 0; i < list.length; i++) {\n            var currentSelectorInList = list[i];\n            if (selector.length !== currentSelectorInList.length) {\n                continue;\n            }\n            for (var j = 0; j < selector.length; j++) {\n                if (selector[j] !== currentSelectorInList[j]) {\n                    continue selectorListLoop;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * --------\n     *\n     * This file contains the core logic for styling in Angular.\n     *\n     * All styling bindings (i.e. `[style]`, `[style.prop]`, `[class]` and `[class.name]`)\n     * will have their values be applied through the logic in this file.\n     *\n     * When a binding is encountered (e.g. `<div [style.width]=\"w\">`) then\n     * the binding data will be populated into a `TStylingContext` data-structure.\n     * There is only one `TStylingContext` per `TNode` and each element instance\n     * will update its style/class binding values in concert with the styling\n     * context.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    // The first bit value reflects a map-based binding value's bit.\n    // The reason why it's always activated for every entry in the map\n    // is so that if any map-binding values update then all other prop\n    // based bindings will pass the guard check automatically without\n    // any extra code or flags.\n    var DEFAULT_GUARD_MASK_VALUE = 1;\n    /**\n     * The guard/update mask bit index location for map-based bindings.\n     *\n     * All map-based bindings (i.e. `[style]` and `[class]` )\n     */\n    var STYLING_INDEX_FOR_MAP_BINDING = 0;\n    /**\n     * Default fallback value for a styling binding.\n     *\n     * A value of `null` is used here which signals to the styling algorithm that\n     * the styling value is not present. This way if there are no other values\n     * detected then it will be removed once the style/class property is dirty and\n     * diffed within the styling algorithm present in `flushStyling`.\n     */\n    var DEFAULT_BINDING_VALUE = null;\n    /**\n     * Default size count value for a new entry in a context.\n     *\n     * A value of `1` is used here because each entry in the context has a default\n     * property.\n     */\n    var DEFAULT_SIZE_VALUE = 1;\n    var deferredBindingQueue = [];\n    /**\n     * Visits a class-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a class-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time it's called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateClassBinding(context, data, element, prop, bindingIndex, value, deferRegistration, forceUpdate) {\n        var isMapBased = !prop;\n        var state = getStylingState(element, stateIsPersisted(context));\n        var index = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : state.classesIndex++;\n        var updated = updateBindingData(context, data, index, prop, bindingIndex, value, deferRegistration, forceUpdate, false);\n        if (updated || forceUpdate) {\n            // We flip the bit in the bitMask to reflect that the binding\n            // at the `index` slot has changed. This identifies to the flushing\n            // phase that the bindings for this particular CSS class need to be\n            // applied again because on or more of the bindings for the CSS\n            // class have changed.\n            state.classesBitMask |= 1 << index;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Visits a style-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a style-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time it's called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateStyleBinding(context, data, element, prop, bindingIndex, value, sanitizer, deferRegistration, forceUpdate) {\n        var isMapBased = !prop;\n        var state = getStylingState(element, stateIsPersisted(context));\n        var index = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : state.stylesIndex++;\n        var sanitizationRequired = isMapBased ?\n            true :\n            (sanitizer ? sanitizer(prop, null, 1 /* ValidateProperty */) : false);\n        var updated = updateBindingData(context, data, index, prop, bindingIndex, value, deferRegistration, forceUpdate, sanitizationRequired);\n        if (updated || forceUpdate) {\n            // We flip the bit in the bitMask to reflect that the binding\n            // at the `index` slot has changed. This identifies to the flushing\n            // phase that the bindings for this particular property need to be\n            // applied again because on or more of the bindings for the CSS\n            // property have changed.\n            state.stylesBitMask |= 1 << index;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Called each time a binding value has changed within the provided `TStylingContext`.\n     *\n     * This function is designed to be called from `updateStyleBinding` and `updateClassBinding`.\n     * If called during the first update pass, the binding will be registered in the context.\n     * If the binding does get registered and the `deferRegistration` flag is true then the\n     * binding data will be queued up until the context is later flushed in `applyStyling`.\n     *\n     * This function will also update binding slot in the provided `LStylingData` with the\n     * new binding entry (if it has changed).\n     *\n     * @returns whether or not the binding value was updated in the `LStylingData`.\n     */\n    function updateBindingData(context, data, counterIndex, prop, bindingIndex, value, deferRegistration, forceUpdate, sanitizationRequired) {\n        if (!isContextLocked(context)) {\n            if (deferRegistration) {\n                deferBindingRegistration(context, counterIndex, prop, bindingIndex, sanitizationRequired);\n            }\n            else {\n                deferredBindingQueue.length && flushDeferredBindings();\n                // this will only happen during the first update pass of the\n                // context. The reason why we can't use `tNode.firstTemplatePass`\n                // here is because its not guaranteed to be true when the first\n                // update pass is executed (remember that all styling instructions\n                // are run in the update phase, and, as a result, are no more\n                // styling instructions that are run in the creation phase).\n                registerBinding(context, counterIndex, prop, bindingIndex, sanitizationRequired);\n            }\n        }\n        var changed = forceUpdate || hasValueChanged(data[bindingIndex], value);\n        if (changed) {\n            data[bindingIndex] = value;\n        }\n        return changed;\n    }\n    /**\n     * Schedules a binding registration to be run at a later point.\n     *\n     * The reasoning for this feature is to ensure that styling\n     * bindings are registered in the correct order for when\n     * directives/components have a super/sub class inheritance\n     * chains. Each directive's styling bindings must be\n     * registered into the context in reverse order. Therefore all\n     * bindings will be buffered in reverse order and then applied\n     * after the inheritance chain exits.\n     */\n    function deferBindingRegistration(context, counterIndex, prop, bindingIndex, sanitizationRequired) {\n        deferredBindingQueue.unshift(context, counterIndex, prop, bindingIndex, sanitizationRequired);\n    }\n    /**\n     * Flushes the collection of deferred bindings and causes each entry\n     * to be registered into the context.\n     */\n    function flushDeferredBindings() {\n        var i = 0;\n        while (i < deferredBindingQueue.length) {\n            var context = deferredBindingQueue[i++];\n            var count = deferredBindingQueue[i++];\n            var prop = deferredBindingQueue[i++];\n            var bindingIndex = deferredBindingQueue[i++];\n            var sanitizationRequired = deferredBindingQueue[i++];\n            registerBinding(context, count, prop, bindingIndex, sanitizationRequired);\n        }\n        deferredBindingQueue.length = 0;\n    }\n    /**\n     * Registers the provided binding (prop + bindingIndex) into the context.\n     *\n     * This function is shared between bindings that are assigned immediately\n     * (via `updateBindingData`) and at a deferred stage. When called, it will\n     * figure out exactly where to place the binding data in the context.\n     *\n     * It is needed because it will either update or insert a styling property\n     * into the context at the correct spot.\n     *\n     * When called, one of two things will happen:\n     *\n     * 1) If the property already exists in the context then it will just add\n     *    the provided `bindingValue` to the end of the binding sources region\n     *    for that particular property.\n     *\n     *    - If the binding value is a number then it will be added as a new\n     *      binding index source next to the other binding sources for the property.\n     *\n     *    - Otherwise, if the binding value is a string/boolean/null type then it will\n     *      replace the default value for the property if the default value is `null`.\n     *\n     * 2) If the property does not exist then it will be inserted into the context.\n     *    The styling context relies on all properties being stored in alphabetical\n     *    order, so it knows exactly where to store it.\n     *\n     *    When inserted, a default `null` value is created for the property which exists\n     *    as the default value for the binding. If the bindingValue property is inserted\n     *    and it is either a string, number or null value then that will replace the default\n     *    value.\n     *\n     * Note that this function is also used for map-based styling bindings. They are treated\n     * much the same as prop-based bindings, but, because they do not have a property value\n     * (since it's a map), all map-based entries are stored in an already populated area of\n     * the context at the top (which is reserved for map-based entries).\n     */\n    function registerBinding(context, countId, prop, bindingValue, sanitizationRequired) {\n        var registered = false;\n        if (prop) {\n            // prop-based bindings (e.g `<div [style.width]=\"w\" [class.foo]=\"f\">`)\n            var found = false;\n            var i = getPropValuesStartPosition(context);\n            while (i < context.length) {\n                var valuesCount = getValuesCount(context, i);\n                var p = getProp(context, i);\n                found = prop <= p;\n                if (found) {\n                    // all style/class bindings are sorted by property name\n                    if (prop < p) {\n                        allocateNewContextEntry(context, i, prop, sanitizationRequired);\n                    }\n                    addBindingIntoContext(context, false, i, bindingValue, countId);\n                    break;\n                }\n                i += 3 /* BindingsStartOffset */ + valuesCount;\n            }\n            if (!found) {\n                allocateNewContextEntry(context, context.length, prop, sanitizationRequired);\n                addBindingIntoContext(context, false, i, bindingValue, countId);\n                registered = true;\n            }\n        }\n        else {\n            // map-based bindings (e.g `<div [style]=\"s\" [class]=\"{className:true}\">`)\n            // there is no need to allocate the map-based binding region into the context\n            // since it is already there when the context is first created.\n            addBindingIntoContext(context, true, 3 /* MapBindingsPosition */, bindingValue, countId);\n            registered = true;\n        }\n        return registered;\n    }\n    function allocateNewContextEntry(context, index, prop, sanitizationRequired) {\n        // 1,2: splice index locations\n        // 3: each entry gets a config value (guard mask + flags)\n        // 4. each entry gets a size value (which is always one because there is always a default binding\n        // value)\n        // 5. the property that is getting allocated into the context\n        // 6. the default binding value (usually `null`)\n        var config = sanitizationRequired ? 1 /* SanitizationRequired */ :\n            0 /* Default */;\n        context.splice(index, 0, config, DEFAULT_SIZE_VALUE, prop, DEFAULT_BINDING_VALUE);\n        setGuardMask(context, index, DEFAULT_GUARD_MASK_VALUE);\n    }\n    /**\n     * Inserts a new binding value into a styling property tuple in the `TStylingContext`.\n     *\n     * A bindingValue is inserted into a context during the first update pass\n     * of a template or host bindings function. When this occurs, two things\n     * happen:\n     *\n     * - If the bindingValue value is a number then it is treated as a bindingIndex\n     *   value (a index in the `LView`) and it will be inserted next to the other\n     *   binding index entries.\n     *\n     * - Otherwise the binding value will update the default value for the property\n     *   and this will only happen if the default value is `null`.\n     *\n     * Note that this function also handles map-based bindings and will insert them\n     * at the top of the context.\n     */\n    function addBindingIntoContext(context, isMapBased, index, bindingValue, countId) {\n        var valuesCount = getValuesCount(context, index);\n        var firstValueIndex = index + 3 /* BindingsStartOffset */;\n        var lastValueIndex = firstValueIndex + valuesCount;\n        if (!isMapBased) {\n            // prop-based values all have default values, but map-based entries do not.\n            // we want to access the index for the default value in this case and not just\n            // the bindings...\n            lastValueIndex--;\n        }\n        if (typeof bindingValue === 'number') {\n            // the loop here will check to see if the binding already exists\n            // for the property in the context. Why? The reason for this is\n            // because the styling context is not \"locked\" until the first\n            // flush has occurred. This means that if a repeated element\n            // registers its styling bindings then it will register each\n            // binding more than once (since its duplicated). This check\n            // will prevent that from happening. Note that this only happens\n            // when a binding is first encountered and not each time it is\n            // updated.\n            for (var i = firstValueIndex; i <= lastValueIndex; i++) {\n                var indexAtPosition = context[i];\n                if (indexAtPosition === bindingValue)\n                    return;\n            }\n            context.splice(lastValueIndex, 0, bindingValue);\n            context[index + 1 /* ValuesCountOffset */]++;\n            // now that a new binding index has been added to the property\n            // the guard mask bit value (at the `countId` position) needs\n            // to be included into the existing mask value.\n            var guardMask = getGuardMask(context, index) | (1 << countId);\n            setGuardMask(context, index, guardMask);\n        }\n        else if (bindingValue !== null && context[lastValueIndex] == null) {\n            context[lastValueIndex] = bindingValue;\n        }\n    }\n    /**\n     * Applies all pending style and class bindings to the provided element.\n     *\n     * This function will attempt to flush styling via the provided `classesContext`\n     * and `stylesContext` context values. This function is designed to be run from\n     * the `stylingApply()` instruction (which is run at the very end of styling\n     * change detection) and will rely on any state values that are set from when\n     * any styling bindings update.\n     *\n     * This function may be called multiple times on the same element because it can\n     * be called from the template code as well as from host bindings. In order for\n     * styling to be successfully flushed to the element (which will only happen once\n     * despite this being called multiple times), the following criteria must be met:\n     *\n     * - `flushStyling` is called from the very last directive that has styling for\n     *    the element (see `allowStylingFlush()`).\n     * - one or more bindings for classes or styles has updated (this is checked by\n     *   examining the classes or styles bit mask).\n     *\n     * If the style and class values are successfully applied to the element then\n     * the temporary state values for the element will be cleared. Otherwise, if\n     * this did not occur then the styling state is persisted (see `state.ts` for\n     * more information on how this works).\n     */\n    function flushStyling(renderer, data, classesContext, stylesContext, element, directiveIndex, styleSanitizer) {\n        ngDevMode && ngDevMode.flushStyling++;\n        var persistState = classesContext ? stateIsPersisted(classesContext) :\n            (stylesContext ? stateIsPersisted(stylesContext) : false);\n        var allowFlushClasses = allowStylingFlush(classesContext, directiveIndex);\n        var allowFlushStyles = allowStylingFlush(stylesContext, directiveIndex);\n        // deferred bindings are bindings which are scheduled to register with\n        // the context at a later point. These bindings can only registered when\n        // the context will be 100% flushed to the element.\n        if (deferredBindingQueue.length && (allowFlushClasses || allowFlushStyles)) {\n            flushDeferredBindings();\n        }\n        var state = getStylingState(element, persistState);\n        var classesFlushed = maybeApplyStyling(renderer, element, data, classesContext, allowFlushClasses, state.classesBitMask, setClass, null);\n        var stylesFlushed = maybeApplyStyling(renderer, element, data, stylesContext, allowFlushStyles, state.stylesBitMask, setStyle, styleSanitizer);\n        if (classesFlushed && stylesFlushed) {\n            resetStylingState();\n            if (persistState) {\n                deleteStylingStateFromStorage(element);\n            }\n        }\n        else if (persistState) {\n            storeStylingState(element, state);\n        }\n    }\n    function maybeApplyStyling(renderer, element, data, context, allowFlush, bitMask, styleSetter, styleSanitizer) {\n        if (allowFlush && context) {\n            lockAndFinalizeContext(context);\n            if (contextHasUpdates(context, bitMask)) {\n                ngDevMode && (styleSanitizer ? ngDevMode.stylesApplied++ : ngDevMode.classesApplied++);\n                applyStyling(context, renderer, element, data, bitMask, styleSetter, styleSanitizer);\n                return true;\n            }\n        }\n        return allowFlush;\n    }\n    function contextHasUpdates(context, bitMask) {\n        return context && bitMask > BIT_MASK_START_VALUE;\n    }\n    /**\n     * Locks the context (so no more bindings can be added) and also copies over initial class/style\n     * values into their binding areas.\n     *\n     * There are two main actions that take place in this function:\n     *\n     * - Locking the context:\n     *   Locking the context is required so that the style/class instructions know NOT to\n     *   register a binding again after the first update pass has run. If a locking bit was\n     *   not used then it would need to scan over the context each time an instruction is run\n     *   (which is expensive).\n     *\n     * - Patching initial values:\n     *   Directives and component host bindings may include static class/style values which are\n     *   bound to the host element. When this happens, the styling context will need to be informed\n     *   so it can use these static styling values as defaults when a matching binding is falsy.\n     *   These initial styling values are read from the initial styling values slot within the\n     *   provided `TStylingContext` (which is an instance of a `StylingMapArray`). This inner map will\n     *   be updated each time a host binding applies its static styling values (via `elementHostAttrs`)\n     *   so these values are only read at this point because this is the very last point before the\n     *   first style/class values are flushed to the element.\n     */\n    function lockAndFinalizeContext(context) {\n        if (!isContextLocked(context)) {\n            var initialValues = getStylingMapArray(context);\n            if (initialValues) {\n                updateInitialStylingOnContext(context, initialValues);\n            }\n            lockContext(context);\n        }\n    }\n    /**\n     * Runs through the provided styling context and applies each value to\n     * the provided element (via the renderer) if one or more values are present.\n     *\n     * This function will iterate over all entries present in the provided\n     * `TStylingContext` array (both prop-based and map-based bindings).-\n     *\n     * Each entry, within the `TStylingContext` array, is stored alphabetically\n     * and this means that each prop/value entry will be applied in order\n     * (so long as it is marked dirty in the provided `bitMask` value).\n     *\n     * If there are any map-based entries present (which are applied to the\n     * element via the `[style]` and `[class]` bindings) then those entries\n     * will be applied as well. However, the code for that is not a part of\n     * this function. Instead, each time a property is visited, then the\n     * code below will call an external function called `stylingMapsSyncFn`\n     * and, if present, it will keep the application of styling values in\n     * map-based bindings up to sync with the application of prop-based\n     * bindings.\n     *\n     * Visit `styling_next/map_based_bindings.ts` to learn more about how the\n     * algorithm works for map-based styling bindings.\n     *\n     * Note that this function is not designed to be called in isolation (use\n     * `applyClasses` and `applyStyles` to actually apply styling values).\n     */\n    function applyStyling(context, renderer, element, bindingData, bitMaskValue, applyStylingFn, sanitizer) {\n        var bitMask = normalizeBitMaskValue(bitMaskValue);\n        var stylingMapsSyncFn = getStylingMapsSyncFn();\n        var mapsGuardMask = getGuardMask(context, 3 /* MapBindingsPosition */);\n        var applyAllValues = (bitMask & mapsGuardMask) > 0;\n        var mapsMode = applyAllValues ? 1 /* ApplyAllValues */ : 0 /* TraverseValues */;\n        var i = getPropValuesStartPosition(context);\n        while (i < context.length) {\n            var valuesCount = getValuesCount(context, i);\n            var guardMask = getGuardMask(context, i);\n            if (bitMask & guardMask) {\n                var valueApplied = false;\n                var prop = getProp(context, i);\n                var valuesCountUpToDefault = valuesCount - 1;\n                var defaultValue = getBindingValue(context, i, valuesCountUpToDefault);\n                // case 1: apply prop-based values\n                // try to apply the binding values and see if a non-null\n                // value gets set for the styling binding\n                for (var j = 0; j < valuesCountUpToDefault; j++) {\n                    var bindingIndex = getBindingValue(context, i, j);\n                    var value = bindingData[bindingIndex];\n                    if (isStylingValueDefined(value)) {\n                        var finalValue = sanitizer && isSanitizationRequired(context, i) ?\n                            sanitizer(prop, value, 2 /* SanitizeOnly */) :\n                            value;\n                        applyStylingFn(renderer, element, prop, finalValue, bindingIndex);\n                        valueApplied = true;\n                        break;\n                    }\n                }\n                // case 2: apply map-based values\n                // traverse through each map-based styling binding and update all values up to\n                // the provided `prop` value. If the property was not applied in the loop above\n                // then it will be attempted to be applied in the maps sync code below.\n                if (stylingMapsSyncFn) {\n                    // determine whether or not to apply the target property or to skip it\n                    var mode = mapsMode | (valueApplied ? 4 /* SkipTargetProp */ :\n                        2 /* ApplyTargetProp */);\n                    var valueAppliedWithinMap = stylingMapsSyncFn(context, renderer, element, bindingData, applyStylingFn, sanitizer, mode, prop, defaultValue);\n                    valueApplied = valueApplied || valueAppliedWithinMap;\n                }\n                // case 3: apply the default value\n                // if the value has not yet been applied then a truthy value does not exist in the\n                // prop-based or map-based bindings code. If and when this happens, just apply the\n                // default value (even if the default value is `null`).\n                if (!valueApplied) {\n                    applyStylingFn(renderer, element, prop, defaultValue);\n                }\n            }\n            i += 3 /* BindingsStartOffset */ + valuesCount;\n        }\n        // the map-based styling entries may have not applied all their\n        // values. For this reason, one more call to the sync function\n        // needs to be issued at the end.\n        if (stylingMapsSyncFn) {\n            stylingMapsSyncFn(context, renderer, element, bindingData, applyStylingFn, sanitizer, mapsMode);\n        }\n    }\n    function normalizeBitMaskValue(value) {\n        // if pass => apply all values (-1 implies that all bits are flipped to true)\n        if (value === true)\n            return -1;\n        // if pass => skip all values\n        if (value === false)\n            return 0;\n        // return the bit mask value as is\n        return value;\n    }\n    var _activeStylingMapApplyFn = null;\n    function getStylingMapsSyncFn() {\n        return _activeStylingMapApplyFn;\n    }\n    function setStylingMapsSyncFn(fn) {\n        _activeStylingMapApplyFn = fn;\n    }\n    /**\n     * Assigns a style value to a style property for the given element.\n     */\n    var setStyle = function (renderer, native, prop, value) {\n        // the reason why this may be `null` is either because\n        // it's a container element or it's a part of a test\n        // environment that doesn't have styling. In either\n        // case it's safe not to apply styling to the element.\n        var nativeStyle = native.style;\n        if (value) {\n            // opacity, z-index and flexbox all have number values\n            // and these need to be converted into strings so that\n            // they can be assigned properly.\n            value = value.toString();\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            renderer && isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                (nativeStyle && nativeStyle.setProperty(prop, value));\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            renderer && isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                (nativeStyle && nativeStyle.removeProperty(prop));\n        }\n    };\n    /**\n     * Adds/removes the provided className value to the provided element.\n     */\n    var setClass = function (renderer, native, className, value) {\n        if (className !== '') {\n            // the reason why this may be `null` is either because\n            // it's a container element or it's a part of a test\n            // environment that doesn't have styling. In either\n            // case it's safe not to apply styling to the element.\n            var classList = native.classList;\n            if (value) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                renderer && isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                    (classList && classList.add(className));\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                renderer && isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                    (classList && classList.remove(className));\n            }\n        }\n    };\n    /**\n     * Iterates over all provided styling entries and renders them on the element.\n     *\n     * This function is used alongside a `StylingMapArray` entry. This entry is not\n     * the same as the `TStylingContext` and is only really used when an element contains\n     * initial styling values (e.g. `<div style=\"width:200px\">`), but no style/class bindings\n     * are present. If and when that happens then this function will be called to render all\n     * initial styling values on an element.\n     */\n    function renderStylingMap(renderer, element, stylingValues, isClassBased) {\n        var stylingMapArr = getStylingMapArray(stylingValues);\n        if (stylingMapArr) {\n            for (var i = 1 /* ValuesStartPosition */; i < stylingMapArr.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(stylingMapArr, i);\n                var value = getMapValue(stylingMapArr, i);\n                if (isClassBased) {\n                    setClass(renderer, element, prop, value, null);\n                }\n                else {\n                    setStyle(renderer, element, prop, value, null);\n                }\n            }\n        }\n    }\n    /**\n     * Registers all initial styling entries into the provided context.\n     *\n     * This function will iterate over all entries in the provided `initialStyling` ar}ray and register\n     * them as default (initial) values in the provided context. Initial styling values in a context are\n     * the default values that are to be applied unless overwritten by a binding.\n     *\n     * The reason why this function exists and isn't a part of the context construction is because\n     * host binding is evaluated at a later stage after the element is created. This means that\n     * if a directive or component contains any initial styling code (i.e. `<div class=\"foo\">`)\n     * then that initial styling data can only be applied once the styling for that element\n     * is first applied (at the end of the update phase). Once that happens then the context will\n     * update itself with the complete initial styling for the element.\n     */\n    function updateInitialStylingOnContext(context, initialStyling) {\n        // `-1` is used here because all initial styling data is not a spart\n        // of a binding (since it's static)\n        var INITIAL_STYLING_COUNT_ID = -1;\n        for (var i = 1 /* ValuesStartPosition */; i < initialStyling.length; i += 2 /* TupleSize */) {\n            var value = getMapValue(initialStyling, i);\n            if (value) {\n                var prop = getMapProp(initialStyling, i);\n                registerBinding(context, INITIAL_STYLING_COUNT_ID, prop, value, false);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachDebugObject(obj, debug) {\n        Object.defineProperty(obj, 'debug', { value: debug, enumerable: false });\n    }\n\n    /**\n     * --------\n     *\n     * This file contains the algorithm logic for applying map-based bindings\n     * such as `[style]` and `[class]`.\n     *\n     * --------\n     */\n    /**\n     * Used to apply styling values presently within any map-based bindings on an element.\n     *\n     * Angular supports map-based styling bindings which can be applied via the\n     * `[style]` and `[class]` bindings which can be placed on any HTML element.\n     * These bindings can work independently, together or alongside prop-based\n     * styling bindings (e.g. `<div [style]=\"x\" [style.width]=\"w\">`).\n     *\n     * If a map-based styling binding is detected by the compiler, the following\n     * AOT code is produced:\n     *\n     * ```typescript\n     * styleMap(ctx.styles); // styles = {key:value}\n     * classMap(ctx.classes); // classes = {key:value}|string\n     * ```\n     *\n     * If and when either of the instructions above are evaluated, then the code\n     * present in this file is included into the bundle. The mechanism used, to\n     * activate support for map-based bindings at runtime is possible via the\n     * `activeStylingMapFeature` function (which is also present in this file).\n     *\n     * # The Algorithm\n     * Whenever a map-based binding updates (which is when the identity of the\n     * map-value changes) then the map is iterated over and a `StylingMapArray` array\n     * is produced. The `StylingMapArray` instance is stored in the binding location\n     * where the `BINDING_INDEX` is situated when the `styleMap()` or `classMap()`\n     * instruction were called. Once the binding changes, then the internal `bitMask`\n     * value is marked as dirty.\n     *\n     * Styling values are applied once CD exits the element (which happens when\n     * the `select(n)` instruction is called or the template function exits). When\n     * this occurs, all prop-based bindings are applied. If a map-based binding is\n     * present then a special flushing function (called a sync function) is made\n     * available and it will be called each time a styling property is flushed.\n     *\n     * The flushing algorithm is designed to apply styling for a property (which is\n     * a CSS property or a className value) one by one. If map-based bindings\n     * are present, then the flushing algorithm will keep calling the maps styling\n     * sync function each time a property is visited. This way, the flushing\n     * behavior of map-based bindings will always be at the same property level\n     * as the current prop-based property being iterated over (because everything\n     * is alphabetically sorted).\n     *\n     * Let's imagine we have the following HTML template code:\n     *\n     * ```html\n     * <div [style]=\"{width:'100px', height:'200px', 'z-index':'10'}\"\n     *      [style.width.px]=\"200\">...</div>\n     * ```\n     *\n     * When CD occurs, both the `[style]` and `[style.width]` bindings\n     * are evaluated. Then when the styles are flushed on screen, the\n     * following operations happen:\n     *\n     * 1. `[style.width]` is attempted to be written to the element.\n     *\n     * 2.  Once that happens, the algorithm instructs the map-based\n     *     entries (`[style]` in this case) to \"catch up\" and apply\n     *     all values up to the `width` value. When this happens the\n     *     `height` value is applied to the element (since it is\n     *     alphabetically situated before the `width` property).\n     *\n     * 3. Since there are no more prop-based entries anymore, the\n     *    loop exits and then, just before the flushing ends, it\n     *    instructs all map-based bindings to \"finish up\" applying\n     *    their values.\n     *\n     * 4. The only remaining value within the map-based entries is\n     *    the `z-index` value (`width` got skipped because it was\n     *    successfully applied via the prop-based `[style.width]`\n     *    binding). Since all map-based entries are told to \"finish up\",\n     *    the `z-index` value is iterated over and it is then applied\n     *    to the element.\n     *\n     * The most important thing to take note of here is that prop-based\n     * bindings are evaluated in order alongside map-based bindings.\n     * This allows all styling across an element to be applied in O(n)\n     * time (a similar algorithm is that of the array merge algorithm\n     * in merge sort).\n     */\n    var syncStylingMap = function (context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, defaultValue) {\n        var targetPropValueWasApplied = false;\n        // once the map-based styling code is activate it is never deactivated. For this reason a\n        // check to see if the current styling context has any map based bindings is required.\n        var totalMaps = getValuesCount(context, 3 /* MapBindingsPosition */);\n        if (totalMaps) {\n            var runTheSyncAlgorithm = true;\n            var loopUntilEnd = !targetProp;\n            // If the code is told to finish up (run until the end), but the mode\n            // hasn't been flagged to apply values (it only traverses values) then\n            // there is no point in iterating over the array because nothing will\n            // be applied to the element.\n            if (loopUntilEnd && (mode & ~1 /* ApplyAllValues */)) {\n                runTheSyncAlgorithm = false;\n                targetPropValueWasApplied = true;\n            }\n            if (runTheSyncAlgorithm) {\n                targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp || null, 0, defaultValue || null);\n            }\n            if (loopUntilEnd) {\n                resetSyncCursors();\n            }\n        }\n        return targetPropValueWasApplied;\n    };\n    /**\n     * Recursive function designed to apply map-based styling to an element one map at a time.\n     *\n     * This function is designed to be called from the `syncStylingMap` function and will\n     * apply map-based styling data one map at a time to the provided `element`.\n     *\n     * This function is recursive and it will call itself if a follow-up map value is to be\n     * processed. To learn more about how the algorithm works, see `syncStylingMap`.\n     */\n    function innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex, defaultValue) {\n        var targetPropValueWasApplied = false;\n        var totalMaps = getValuesCount(context, 3 /* MapBindingsPosition */);\n        if (currentMapIndex < totalMaps) {\n            var bindingIndex = getBindingValue(context, 3 /* MapBindingsPosition */, currentMapIndex);\n            var stylingMapArr = data[bindingIndex];\n            var cursor = getCurrentSyncCursor(currentMapIndex);\n            while (cursor < stylingMapArr.length) {\n                var prop = getMapProp(stylingMapArr, cursor);\n                var iteratedTooFar = targetProp && prop > targetProp;\n                var isTargetPropMatched = !iteratedTooFar && prop === targetProp;\n                var value = getMapValue(stylingMapArr, cursor);\n                var valueIsDefined = isStylingValueDefined(value);\n                // the recursive code is designed to keep applying until\n                // it reaches or goes past the target prop. If and when\n                // this happens then it will stop processing values, but\n                // all other map values must also catch up to the same\n                // point. This is why a recursive call is still issued\n                // even if the code has iterated too far.\n                var innerMode = iteratedTooFar ? mode : resolveInnerMapMode(mode, valueIsDefined, isTargetPropMatched);\n                var innerProp = iteratedTooFar ? targetProp : prop;\n                var valueApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, innerMode, innerProp, currentMapIndex + 1, defaultValue);\n                if (iteratedTooFar) {\n                    if (!targetPropValueWasApplied) {\n                        targetPropValueWasApplied = valueApplied;\n                    }\n                    break;\n                }\n                if (!valueApplied && isValueAllowedToBeApplied(mode, isTargetPropMatched)) {\n                    var useDefault = isTargetPropMatched && !valueIsDefined;\n                    var valueToApply = useDefault ? defaultValue : value;\n                    var bindingIndexToApply = useDefault ? bindingIndex : null;\n                    var finalValue = sanitizer ?\n                        sanitizer(prop, valueToApply, 3 /* ValidateAndSanitize */) :\n                        valueToApply;\n                    applyStylingFn(renderer, element, prop, finalValue, bindingIndexToApply);\n                    valueApplied = true;\n                }\n                targetPropValueWasApplied = valueApplied && isTargetPropMatched;\n                cursor += 2 /* TupleSize */;\n            }\n            setCurrentSyncCursor(currentMapIndex, cursor);\n            // this is a fallback case in the event that the styling map is `null` for this\n            // binding but there are other map-based bindings that need to be evaluated\n            // afterwards. If the `prop` value is falsy then the intention is to cycle\n            // through all of the properties in the remaining maps as well. If the current\n            // styling map is too short then there are no values to iterate over. In either\n            // case the follow-up maps need to be iterated over.\n            if (stylingMapArr.length === 1 /* ValuesStartPosition */ || !targetProp) {\n                return innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex + 1, defaultValue);\n            }\n        }\n        return targetPropValueWasApplied;\n    }\n    /**\n     * Enables support for map-based styling bindings (e.g. `[style]` and `[class]` bindings).\n     */\n    function activateStylingMapFeature() {\n        setStylingMapsSyncFn(syncStylingMap);\n    }\n    /**\n     * Used to determine the mode for the inner recursive call.\n     *\n     * If an inner map is iterated on then this is done so for one\n     * of two reasons:\n     *\n     * - value is being applied:\n     *   if the value is being applied from this current styling\n     *   map then there is no need to apply it in a deeper map.\n     *\n     * - value is being not applied:\n     *   apply the value if it is found in a deeper map.\n     *\n     * When these reasons are encountered the flags will for the\n     * inner map mode will be configured.\n     */\n    function resolveInnerMapMode(currentMode, valueIsDefined, isExactMatch) {\n        var innerMode = currentMode;\n        if (!valueIsDefined && !(currentMode & 4 /* SkipTargetProp */) &&\n            (isExactMatch || (currentMode & 1 /* ApplyAllValues */))) {\n            // case 1: set the mode to apply the targeted prop value if it\n            // ends up being encountered in another map value\n            innerMode |= 2 /* ApplyTargetProp */;\n            innerMode &= ~4 /* SkipTargetProp */;\n        }\n        else {\n            // case 2: set the mode to skip the targeted prop value if it\n            // ends up being encountered in another map value\n            innerMode |= 4 /* SkipTargetProp */;\n            innerMode &= ~2 /* ApplyTargetProp */;\n        }\n        return innerMode;\n    }\n    /**\n     * Decides whether or not a prop/value entry will be applied to an element.\n     *\n     * To determine whether or not a value is to be applied,\n     * the following procedure is evaluated:\n     *\n     * First check to see the current `mode` status:\n     *  1. If the mode value permits all props to be applied then allow.\n     *    - But do not allow if the current prop is set to be skipped.\n     *  2. Otherwise if the current prop is permitted then allow.\n     */\n    function isValueAllowedToBeApplied(mode, isTargetPropMatched) {\n        var doApplyValue = (mode & 1 /* ApplyAllValues */) > 0;\n        if (!doApplyValue) {\n            if (mode & 2 /* ApplyTargetProp */) {\n                doApplyValue = isTargetPropMatched;\n            }\n        }\n        else if ((mode & 4 /* SkipTargetProp */) && isTargetPropMatched) {\n            doApplyValue = false;\n        }\n        return doApplyValue;\n    }\n    /**\n     * Used to keep track of concurrent cursor values for multiple map-based styling bindings present on\n     * an element.\n     */\n    var MAP_CURSORS = [];\n    /**\n     * Used to reset the state of each cursor value being used to iterate over map-based styling\n     * bindings.\n     */\n    function resetSyncCursors() {\n        for (var i = 0; i < MAP_CURSORS.length; i++) {\n            MAP_CURSORS[i] = 1 /* ValuesStartPosition */;\n        }\n    }\n    /**\n     * Returns an active cursor value at a given mapIndex location.\n     */\n    function getCurrentSyncCursor(mapIndex) {\n        if (mapIndex >= MAP_CURSORS.length) {\n            MAP_CURSORS.push(1 /* ValuesStartPosition */);\n        }\n        return MAP_CURSORS[mapIndex];\n    }\n    /**\n     * Sets a cursor value at a given mapIndex location.\n     */\n    function setCurrentSyncCursor(mapIndex, indexValue) {\n        MAP_CURSORS[mapIndex] = indexValue;\n    }\n    /**\n     * Used to convert a {key:value} map into a `StylingMapArray` array.\n     *\n     * This function will either generate a new `StylingMapArray` instance\n     * or it will patch the provided `newValues` map value into an\n     * existing `StylingMapArray` value (this only happens if `bindingValue`\n     * is an instance of `StylingMapArray`).\n     *\n     * If a new key/value map is provided with an old `StylingMapArray`\n     * value then all properties will be overwritten with their new\n     * values or with `null`. This means that the array will never\n     * shrink in size (but it will also not be created and thrown\n     * away whenever the {key:value} map entries change).\n     */\n    function normalizeIntoStylingMap(bindingValue, newValues, normalizeProps) {\n        var stylingMapArr = Array.isArray(bindingValue) ? bindingValue : [null];\n        stylingMapArr[0 /* RawValuePosition */] = newValues || null;\n        // because the new values may not include all the properties\n        // that the old ones had, all values are set to `null` before\n        // the new values are applied. This way, when flushed, the\n        // styling algorithm knows exactly what style/class values\n        // to remove from the element (since they are `null`).\n        for (var j = 1 /* ValuesStartPosition */; j < stylingMapArr.length; j += 2 /* TupleSize */) {\n            setMapValue(stylingMapArr, j, null);\n        }\n        var props = null;\n        var map;\n        var allValuesTrue = false;\n        if (typeof newValues === 'string') { // [class] bindings allow string values\n            if (newValues.length) {\n                props = newValues.split(/\\s+/);\n                allValuesTrue = true;\n            }\n        }\n        else {\n            props = newValues ? Object.keys(newValues) : null;\n            map = newValues;\n        }\n        if (props) {\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                var newProp = normalizeProps ? hyphenate(prop) : prop;\n                var value = allValuesTrue ? true : map[prop];\n                addItemToStylingMap(stylingMapArr, newProp, value, true);\n            }\n        }\n        return stylingMapArr;\n    }\n    /**\n     * Inserts the provided item into the provided styling array at the right spot.\n     *\n     * The `StylingMapArray` type is a sorted key/value array of entries. This means\n     * that when a new entry is inserted it must be placed at the right spot in the\n     * array. This function figures out exactly where to place it.\n     */\n    function addItemToStylingMap(stylingMapArr, prop, value, allowOverwrite) {\n        for (var j = 1 /* ValuesStartPosition */; j < stylingMapArr.length; j += 2 /* TupleSize */) {\n            var propAtIndex = getMapProp(stylingMapArr, j);\n            if (prop <= propAtIndex) {\n                var applied = false;\n                if (propAtIndex === prop) {\n                    var valueAtIndex = stylingMapArr[j];\n                    if (allowOverwrite || !isStylingValueDefined(valueAtIndex)) {\n                        applied = true;\n                        setMapValue(stylingMapArr, j, value);\n                    }\n                }\n                else {\n                    applied = true;\n                    stylingMapArr.splice(j, 0, prop, value);\n                }\n                return applied;\n            }\n        }\n        stylingMapArr.push(prop, value);\n        return true;\n    }\n    /**\n     * Converts the provided styling map array into a string.\n     *\n     * Classes => `one two three`\n     * Styles => `prop:value; prop2:value2`\n     */\n    function stylingMapToString(map, isClassBased) {\n        var str = '';\n        for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n            var prop = getMapProp(map, i);\n            var value = getMapValue(map, i);\n            var attrValue = concatString(prop, isClassBased ? '' : value, ':');\n            str = concatString(str, attrValue, isClassBased ? ' ' : '; ');\n        }\n        return str;\n    }\n    /**\n     * Converts the provided styling map array into a key value map.\n     */\n    function stylingMapToStringMap(map) {\n        var stringMap = {};\n        if (map) {\n            for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(map, i);\n                var value = getMapValue(map, i);\n                stringMap[prop] = value;\n            }\n        }\n        return stringMap;\n    }\n\n    /**\n     * Instantiates and attaches an instance of `TStylingContextDebug` to the provided context.\n     */\n    function attachStylingDebugObject(context) {\n        var debug = new TStylingContextDebug(context);\n        attachDebugObject(context, debug);\n        return debug;\n    }\n    /**\n     * A human-readable debug summary of the styling data present within `TStylingContext`.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var TStylingContextDebug = /** @class */ (function () {\n        function TStylingContextDebug(context) {\n            this.context = context;\n        }\n        Object.defineProperty(TStylingContextDebug.prototype, \"isLocked\", {\n            get: function () { return isContextLocked(this.context); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TStylingContextDebug.prototype, \"entries\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context.\n             *\n             * See `TStylingTupleSummary`.\n             */\n            get: function () {\n                var context = this.context;\n                var entries = {};\n                var start = 3 /* MapBindingsPosition */;\n                var i = start;\n                while (i < context.length) {\n                    var valuesCount = getValuesCount(context, i);\n                    // the context may contain placeholder values which are populated ahead of time,\n                    // but contain no actual binding values. In this situation there is no point in\n                    // classifying this as an \"entry\" since no real data is stored here yet.\n                    if (valuesCount) {\n                        var prop = getProp(context, i);\n                        var guardMask = getGuardMask(context, i);\n                        var defaultValue = getDefaultValue(context, i);\n                        var sanitizationRequired = isSanitizationRequired(context, i);\n                        var bindingsStartPosition = i + 3 /* BindingsStartOffset */;\n                        var sources = [];\n                        for (var j = 0; j < valuesCount; j++) {\n                            sources.push(context[bindingsStartPosition + j]);\n                        }\n                        entries[prop] = { prop: prop, guardMask: guardMask, sanitizationRequired: sanitizationRequired, valuesCount: valuesCount, defaultValue: defaultValue, sources: sources };\n                    }\n                    i += 3 /* BindingsStartOffset */ + valuesCount;\n                }\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TStylingContextDebug;\n    }());\n    /**\n     * A human-readable debug summary of the styling data present for a `DebugNode` instance.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var NodeStylingDebug = /** @class */ (function () {\n        function NodeStylingDebug(context, _data, _isClassBased) {\n            this.context = context;\n            this._data = _data;\n            this._isClassBased = _isClassBased;\n            this._sanitizer = null;\n        }\n        /**\n         * Overrides the sanitizer used to process styles.\n         */\n        NodeStylingDebug.prototype.overrideSanitizer = function (sanitizer) { this._sanitizer = sanitizer; };\n        Object.defineProperty(NodeStylingDebug.prototype, \"summary\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context and\n             * what their runtime representation is.\n             *\n             * See `LStylingSummary`.\n             */\n            get: function () {\n                var entries = {};\n                this._mapValues(function (prop, value, bindingIndex) {\n                    entries[prop] = { prop: prop, value: value, bindingIndex: bindingIndex };\n                });\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NodeStylingDebug.prototype, \"values\", {\n            /**\n             * Returns a key/value map of all the styles/classes that were last applied to the element.\n             */\n            get: function () {\n                var entries = {};\n                this._mapValues(function (prop, value) { entries[prop] = value; });\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NodeStylingDebug.prototype._mapValues = function (fn) {\n            // there is no need to store/track an element instance. The\n            // element is only used when the styling algorithm attempts to\n            // style the value (and we mock out the stylingApplyFn anyway).\n            var mockElement = {};\n            var hasMaps = getValuesCount(this.context, 3 /* MapBindingsPosition */) > 0;\n            if (hasMaps) {\n                activateStylingMapFeature();\n            }\n            var mapFn = function (renderer, element, prop, value, bindingIndex) { fn(prop, value, bindingIndex || null); };\n            var sanitizer = this._isClassBased ? null : (this._sanitizer || getCurrentStyleSanitizer());\n            applyStyling(this.context, null, mockElement, this._data, true, mapFn, sanitizer);\n        };\n        return NodeStylingDebug;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /*\n     * This file contains conditionally attached classes which provide human readable (debug) level\n     * information for `LView`, `LContainer` and other internal data structures. These data structures\n     * are stored internally as array which makes it very difficult during debugging to reason about the\n     * current state of the system.\n     *\n     * Patching the array with extra property does change the array's hidden class' but it does not\n     * change the cost of access, therefore this patching should not have significant if any impact in\n     * `ngDevMode` mode. (see: https://jsperf.com/array-vs-monkey-patch-array)\n     *\n     * So instead of seeing:\n     * ```\n     * Array(30) [Object, 659, null, …]\n     * ```\n     *\n     * You get to see:\n     * ```\n     * LViewDebug {\n     *   views: [...],\n     *   flags: {attached: true, ...}\n     *   nodes: [\n     *     {html: '<div id=\"123\">', ..., nodes: [\n     *       {html: '<span>', ..., nodes: null}\n     *     ]}\n     *   ]\n     * }\n     * ```\n     */\n    var LViewArray = ngDevMode && createNamedArrayType('LView');\n    var LVIEW_EMPTY; // can't initialize here or it will not be tree shaken, because `LView`\n    // constructor could have side-effects.\n    /**\n     * This function clones a blueprint and creates LView.\n     *\n     * Simple slice will keep the same type, and we need it to be LView\n     */\n    function cloneToLView(list) {\n        if (LVIEW_EMPTY === undefined)\n            LVIEW_EMPTY = new LViewArray();\n        return LVIEW_EMPTY.concat(list);\n    }\n    /**\n     * This class is a debug version of Object literal so that we can have constructor name show up in\n     * debug tools in ngDevMode.\n     */\n    var TViewConstructor = /** @class */ (function () {\n        function TView(id, //\n        blueprint, //\n        template, //\n        viewQuery, //\n        node, //\n        data, //\n        bindingStartIndex, //\n        viewQueryStartIndex, //\n        expandoStartIndex, //\n        expandoInstructions, //\n        firstTemplatePass, //\n        staticViewQueries, //\n        staticContentQueries, //\n        preOrderHooks, //\n        preOrderCheckHooks, //\n        contentHooks, //\n        contentCheckHooks, //\n        viewHooks, //\n        viewCheckHooks, //\n        destroyHooks, //\n        cleanup, //\n        contentQueries, //\n        components, //\n        directiveRegistry, //\n        pipeRegistry, //\n        firstChild, //\n        schemas) {\n            this.id = id;\n            this.blueprint = blueprint;\n            this.template = template;\n            this.viewQuery = viewQuery;\n            this.node = node;\n            this.data = data;\n            this.bindingStartIndex = bindingStartIndex;\n            this.viewQueryStartIndex = viewQueryStartIndex;\n            this.expandoStartIndex = expandoStartIndex;\n            this.expandoInstructions = expandoInstructions;\n            this.firstTemplatePass = firstTemplatePass;\n            this.staticViewQueries = staticViewQueries;\n            this.staticContentQueries = staticContentQueries;\n            this.preOrderHooks = preOrderHooks;\n            this.preOrderCheckHooks = preOrderCheckHooks;\n            this.contentHooks = contentHooks;\n            this.contentCheckHooks = contentCheckHooks;\n            this.viewHooks = viewHooks;\n            this.viewCheckHooks = viewCheckHooks;\n            this.destroyHooks = destroyHooks;\n            this.cleanup = cleanup;\n            this.contentQueries = contentQueries;\n            this.components = components;\n            this.directiveRegistry = directiveRegistry;\n            this.pipeRegistry = pipeRegistry;\n            this.firstChild = firstChild;\n            this.schemas = schemas;\n        }\n        return TView;\n    }());\n    var TNodeConstructor = /** @class */ (function () {\n        function TNode(tView_, //\n        type, //\n        index, //\n        injectorIndex, //\n        directiveStart, //\n        directiveEnd, //\n        propertyMetadataStartIndex, //\n        propertyMetadataEndIndex, //\n        flags, //\n        providerIndexes, //\n        tagName, //\n        attrs, //\n        localNames, //\n        initialInputs, //\n        inputs, //\n        outputs, //\n        tViews, //\n        next, //\n        projectionNext, //\n        child, //\n        parent, //\n        stylingTemplate, //\n        projection, //\n        onElementCreationFns, //\n        styles, //\n        classes) {\n            this.tView_ = tView_;\n            this.type = type;\n            this.index = index;\n            this.injectorIndex = injectorIndex;\n            this.directiveStart = directiveStart;\n            this.directiveEnd = directiveEnd;\n            this.propertyMetadataStartIndex = propertyMetadataStartIndex;\n            this.propertyMetadataEndIndex = propertyMetadataEndIndex;\n            this.flags = flags;\n            this.providerIndexes = providerIndexes;\n            this.tagName = tagName;\n            this.attrs = attrs;\n            this.localNames = localNames;\n            this.initialInputs = initialInputs;\n            this.inputs = inputs;\n            this.outputs = outputs;\n            this.tViews = tViews;\n            this.next = next;\n            this.projectionNext = projectionNext;\n            this.child = child;\n            this.parent = parent;\n            this.stylingTemplate = stylingTemplate;\n            this.projection = projection;\n            this.onElementCreationFns = onElementCreationFns;\n            this.styles = styles;\n            this.classes = classes;\n        }\n        Object.defineProperty(TNode.prototype, \"type_\", {\n            get: function () {\n                switch (this.type) {\n                    case 0 /* Container */:\n                        return 'TNodeType.Container';\n                    case 3 /* Element */:\n                        return 'TNodeType.Element';\n                    case 4 /* ElementContainer */:\n                        return 'TNodeType.ElementContainer';\n                    case 5 /* IcuContainer */:\n                        return 'TNodeType.IcuContainer';\n                    case 1 /* Projection */:\n                        return 'TNodeType.Projection';\n                    case 2 /* View */:\n                        return 'TNodeType.View';\n                    default:\n                        return 'TNodeType.???';\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"flags_\", {\n            get: function () {\n                var flags = [];\n                if (this.flags & 8 /* hasClassInput */)\n                    flags.push('TNodeFlags.hasClassInput');\n                if (this.flags & 4 /* hasContentQuery */)\n                    flags.push('TNodeFlags.hasContentQuery');\n                if (this.flags & 16 /* hasStyleInput */)\n                    flags.push('TNodeFlags.hasStyleInput');\n                if (this.flags & 1 /* isComponent */)\n                    flags.push('TNodeFlags.isComponent');\n                if (this.flags & 32 /* isDetached */)\n                    flags.push('TNodeFlags.isDetached');\n                if (this.flags & 2 /* isProjected */)\n                    flags.push('TNodeFlags.isProjected');\n                return flags.join('|');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TNode;\n    }());\n    var TViewData = ngDevMode && createNamedArrayType('TViewData');\n    var TVIEWDATA_EMPTY; // can't initialize here or it will not be tree shaken, because `LView`\n    // constructor could have side-effects.\n    /**\n     * This function clones a blueprint and creates TData.\n     *\n     * Simple slice will keep the same type, and we need it to be TData\n     */\n    function cloneToTViewData(list) {\n        if (TVIEWDATA_EMPTY === undefined)\n            TVIEWDATA_EMPTY = new TViewData();\n        return TVIEWDATA_EMPTY.concat(list);\n    }\n    var LViewBlueprint = ngDevMode && createNamedArrayType('LViewBlueprint');\n    var MatchesArray = ngDevMode && createNamedArrayType('MatchesArray');\n    var TViewComponents = ngDevMode && createNamedArrayType('TViewComponents');\n    var TNodeLocalNames = ngDevMode && createNamedArrayType('TNodeLocalNames');\n    var TNodeInitialInputs = ngDevMode && createNamedArrayType('TNodeInitialInputs');\n    var TNodeInitialData = ngDevMode && createNamedArrayType('TNodeInitialData');\n    var LCleanup = ngDevMode && createNamedArrayType('LCleanup');\n    var TCleanup = ngDevMode && createNamedArrayType('TCleanup');\n    function attachLViewDebug(lView) {\n        attachDebugObject(lView, new LViewDebug(lView));\n    }\n    function attachLContainerDebug(lContainer) {\n        attachDebugObject(lContainer, new LContainerDebug(lContainer));\n    }\n    function toDebug(obj) {\n        if (obj) {\n            var debug = obj.debug;\n            assertDefined(debug, 'Object does not have a debug representation.');\n            return debug;\n        }\n        else {\n            return obj;\n        }\n    }\n    /**\n     * Use this method to unwrap a native element in `LView` and convert it into HTML for easier\n     * reading.\n     *\n     * @param value possibly wrapped native DOM node.\n     * @param includeChildren If `true` then the serialized HTML form will include child elements (same\n     * as `outerHTML`). If `false` then the serialized HTML form will only contain the element itself\n     * (will not serialize child elements).\n     */\n    function toHtml(value, includeChildren) {\n        if (includeChildren === void 0) { includeChildren = false; }\n        var node = unwrapRNode(value);\n        if (node) {\n            var isTextNode = node.nodeType === Node.TEXT_NODE;\n            var outerHTML = (isTextNode ? node.textContent : node.outerHTML) || '';\n            if (includeChildren || isTextNode) {\n                return outerHTML;\n            }\n            else {\n                var innerHTML = node.innerHTML;\n                return outerHTML.split(innerHTML)[0] || null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    var LViewDebug = /** @class */ (function () {\n        function LViewDebug(_raw_lView) {\n            this._raw_lView = _raw_lView;\n        }\n        Object.defineProperty(LViewDebug.prototype, \"flags\", {\n            /**\n             * Flags associated with the `LView` unpacked into a more readable state.\n             */\n            get: function () {\n                var flags = this._raw_lView[FLAGS];\n                return {\n                    __raw__flags__: flags,\n                    initPhaseState: flags & 3 /* InitPhaseStateMask */,\n                    creationMode: !!(flags & 4 /* CreationMode */),\n                    firstViewPass: !!(flags & 8 /* FirstLViewPass */),\n                    checkAlways: !!(flags & 16 /* CheckAlways */),\n                    dirty: !!(flags & 64 /* Dirty */),\n                    attached: !!(flags & 128 /* Attached */),\n                    destroyed: !!(flags & 256 /* Destroyed */),\n                    isRoot: !!(flags & 512 /* IsRoot */),\n                    indexWithinInitPhase: flags >> 10 /* IndexWithinInitPhaseShift */,\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lView[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"host\", {\n            get: function () { return toHtml(this._raw_lView[HOST], true); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"context\", {\n            get: function () { return this._raw_lView[CONTEXT]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"nodes\", {\n            /**\n             * The tree of nodes associated with the current `LView`. The nodes have been normalized into a\n             * tree structure with relevant details pulled out for readability.\n             */\n            get: function () {\n                var lView = this._raw_lView;\n                var tNode = lView[TVIEW].firstChild;\n                return toDebugNodes(tNode, lView);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"__other__\", {\n            /**\n             * Additional information which is hidden behind a property. The extra level of indirection is\n             * done so that the debug view would not be cluttered with properties which are only rarely\n             * relevant to the developer.\n             */\n            get: function () {\n                return {\n                    tView: this._raw_lView[TVIEW],\n                    cleanup: this._raw_lView[CLEANUP],\n                    injector: this._raw_lView[INJECTOR$1],\n                    rendererFactory: this._raw_lView[RENDERER_FACTORY],\n                    renderer: this._raw_lView[RENDERER],\n                    sanitizer: this._raw_lView[SANITIZER],\n                    childHead: toDebug(this._raw_lView[CHILD_HEAD]),\n                    next: toDebug(this._raw_lView[NEXT]),\n                    childTail: toDebug(this._raw_lView[CHILD_TAIL]),\n                    declarationView: toDebug(this._raw_lView[DECLARATION_VIEW]),\n                    contentQueries: this._raw_lView[CONTENT_QUERIES],\n                    queries: this._raw_lView[QUERIES],\n                    tHost: this._raw_lView[T_HOST],\n                    bindingIndex: this._raw_lView[BINDING_INDEX],\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childViews\", {\n            /**\n             * Normalized view of child views (and containers) attached at this location.\n             */\n            get: function () {\n                var childViews = [];\n                var child = this.__other__.childHead;\n                while (child) {\n                    childViews.push(child);\n                    child = child.__other__.next;\n                }\n                return childViews;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LViewDebug;\n    }());\n    /**\n     * Turns a flat list of nodes into a tree by walking the associated `TNode` tree.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function toDebugNodes(tNode, lView) {\n        if (tNode) {\n            var debugNodes = [];\n            var tNodeCursor = tNode;\n            while (tNodeCursor) {\n                var rawValue = lView[tNode.index];\n                var native = unwrapRNode(rawValue);\n                var componentLViewDebug = toDebug(readLViewValue(rawValue));\n                var styles = isStylingContext$1(tNode.styles) ?\n                    new NodeStylingDebug(tNode.styles, lView) :\n                    null;\n                var classes = isStylingContext$1(tNode.classes) ?\n                    new NodeStylingDebug(tNode.classes, lView, true) :\n                    null;\n                debugNodes.push({\n                    html: toHtml(native),\n                    native: native, styles: styles, classes: classes,\n                    nodes: toDebugNodes(tNode.child, lView),\n                    component: componentLViewDebug,\n                });\n                tNodeCursor = tNodeCursor.next;\n            }\n            return debugNodes;\n        }\n        else {\n            return null;\n        }\n    }\n    var LContainerDebug = /** @class */ (function () {\n        function LContainerDebug(_raw_lContainer) {\n            this._raw_lContainer = _raw_lContainer;\n        }\n        Object.defineProperty(LContainerDebug.prototype, \"activeIndex\", {\n            get: function () { return this._raw_lContainer[ACTIVE_INDEX]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"views\", {\n            get: function () {\n                return this._raw_lContainer.slice(CONTAINER_HEADER_OFFSET)\n                    .map(toDebug);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lContainer[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"queries\", {\n            get: function () { return this._raw_lContainer[QUERIES]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"host\", {\n            get: function () { return this._raw_lContainer[HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"native\", {\n            get: function () { return this._raw_lContainer[NATIVE]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"__other__\", {\n            get: function () {\n                return {\n                    next: toDebug(this._raw_lContainer[NEXT]),\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LContainerDebug;\n    }());\n    /**\n     * Return an `LView` value if found.\n     *\n     * @param value `LView` if any\n     */\n    function readLViewValue(value) {\n        while (Array.isArray(value)) {\n            // This check is not quite right, as it does not take into account `StylingContext`\n            // This is why it is in debug, not in util.ts\n            if (value.length >= HEADER_OFFSET - 1)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    var I18NDebugItem = /** @class */ (function () {\n        function I18NDebugItem(__raw_opCode, _lView, nodeIndex, type) {\n            this.__raw_opCode = __raw_opCode;\n            this._lView = _lView;\n            this.nodeIndex = nodeIndex;\n            this.type = type;\n        }\n        Object.defineProperty(I18NDebugItem.prototype, \"tNode\", {\n            get: function () { return getTNode(this.nodeIndex, this._lView); },\n            enumerable: true,\n            configurable: true\n        });\n        return I18NDebugItem;\n    }());\n    /**\n     * Turns a list of \"Create\" & \"Update\" OpCodes into a human-readable list of operations for\n     * debugging purposes.\n     * @param mutateOpCodes mutation opCodes to read\n     * @param updateOpCodes update opCodes to read\n     * @param icus list of ICU expressions\n     * @param lView The view the opCodes are acting on\n     */\n    function attachI18nOpCodesDebug(mutateOpCodes, updateOpCodes, icus, lView) {\n        attachDebugObject(mutateOpCodes, new I18nMutateOpCodesDebug(mutateOpCodes, lView));\n        attachDebugObject(updateOpCodes, new I18nUpdateOpCodesDebug(updateOpCodes, icus, lView));\n        if (icus) {\n            icus.forEach(function (icu) {\n                icu.create.forEach(function (icuCase) { attachDebugObject(icuCase, new I18nMutateOpCodesDebug(icuCase, lView)); });\n                icu.update.forEach(function (icuCase) {\n                    attachDebugObject(icuCase, new I18nUpdateOpCodesDebug(icuCase, icus, lView));\n                });\n            });\n        }\n    }\n    var I18nMutateOpCodesDebug = /** @class */ (function () {\n        function I18nMutateOpCodesDebug(__raw_opCodes, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nMutateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    var opCode = __raw_opCodes[i];\n                    var result = void 0;\n                    if (typeof opCode === 'string') {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Create Text Node',\n                            nodeIndex: __raw_opCodes[++i],\n                            text: opCode,\n                        };\n                    }\n                    if (typeof opCode === 'number') {\n                        switch (opCode & 7 /* MASK_OPCODE */) {\n                            case 1 /* AppendChild */:\n                                var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                                result = new I18NDebugItem(opCode, __lView, destinationNodeIndex, 'AppendChild');\n                                break;\n                            case 0 /* Select */:\n                                var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, nodeIndex, 'Select');\n                                break;\n                            case 5 /* ElementEnd */:\n                                var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'ElementEnd');\n                                break;\n                            case 4 /* Attr */:\n                                elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'Attr');\n                                result['attrName'] = __raw_opCodes[++i];\n                                result['attrValue'] = __raw_opCodes[++i];\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        switch (opCode) {\n                            case COMMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'COMMENT_MARKER',\n                                    commentValue: __raw_opCodes[++i],\n                                    nodeIndex: __raw_opCodes[++i],\n                                };\n                                break;\n                            case ELEMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'ELEMENT_MARKER',\n                                };\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Unknown Op Code',\n                            code: opCode,\n                        };\n                    }\n                    results.push(result);\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nMutateOpCodesDebug;\n    }());\n    var I18nUpdateOpCodesDebug = /** @class */ (function () {\n        function I18nUpdateOpCodesDebug(__raw_opCodes, icus, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.icus = icus;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nUpdateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes, icus = _a.icus;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    // bit code to check if we should apply the next update\n                    var checkBit = __raw_opCodes[i];\n                    // Number of opCodes to skip until next set of update codes\n                    var skipCodes = __raw_opCodes[++i];\n                    var value = '';\n                    for (var j = i + 1; j <= (i + skipCodes); j++) {\n                        var opCode = __raw_opCodes[j];\n                        if (typeof opCode === 'string') {\n                            value += opCode;\n                        }\n                        else if (typeof opCode == 'number') {\n                            if (opCode < 0) {\n                                // It's a binding index whose value is negative\n                                // We cannot know the value of the binding so we only show the index\n                                value += \"\\uFFFD\" + (-opCode - 1) + \"\\uFFFD\";\n                            }\n                            else {\n                                var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                                var tIcuIndex = void 0;\n                                var tIcu = void 0;\n                                switch (opCode & 3 /* MASK_OPCODE */) {\n                                    case 1 /* Attr */:\n                                        var attrName = __raw_opCodes[++j];\n                                        var sanitizeFn = __raw_opCodes[++j];\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Attr',\n                                            attrValue: value, attrName: attrName, sanitizeFn: sanitizeFn,\n                                        });\n                                        break;\n                                    case 0 /* Text */:\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Text', nodeIndex: nodeIndex,\n                                            text: value,\n                                        });\n                                        break;\n                                    case 2 /* IcuSwitch */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        var result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuSwitch');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['mainBinding'] = value;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                    case 3 /* IcuUpdate */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuUpdate');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    i += skipCodes;\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nUpdateOpCodesDebug;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Selects an element for later binding instructions.\n     *\n     * Used in conjunction with instructions like {@link property} to act on elements with specified\n     * indices, for example those created with {@link element} or {@link elementStart}.\n     *\n     * ```ts\n     * (rf: RenderFlags, ctx: any) => {\n     *   if (rf & 1) {\n     *     element(0, 'div');\n     *   }\n     *   if (rf & 2) {\n     *     select(0); // Select the <div/> created above.\n     *     property('title', 'test');\n     *   }\n     *  }\n     * ```\n     * @param index the index of the item to act on with the following instructions\n     *\n     * @codeGenApi\n     */\n    function ɵɵselect(index) {\n        ngDevMode && assertGreaterThan(index, -1, 'Invalid index');\n        ngDevMode &&\n            assertLessThan(index, getLView().length - HEADER_OFFSET, 'Should be within range for the view data');\n        var lView = getLView();\n        selectInternal(lView, index);\n    }\n    function selectInternal(lView, index) {\n        // Flush the initial hooks for elements in the view that have been added up to this point.\n        executePreOrderHooks(lView, lView[TVIEW], getCheckNoChangesMode(), index);\n        // We must set the selected index *after* running the hooks, because hooks may have side-effects\n        // that cause other template functions to run, thus updating the selected index, which is global\n        // state. If we run `setSelectedIndex` *before* we run the hooks, in some cases the selected index\n        // will be altered by the time we leave the `ɵɵselect` instruction.\n        setSelectedIndex(index);\n    }\n\n    var ɵ0$8 = function () { return Promise.resolve(null); };\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = (ɵ0$8)();\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(lView) {\n        var tView = lView[TVIEW];\n        var creationMode = isCreationMode(lView);\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = false;\n        // Resetting the bindingIndex of the current LView as the next steps may trigger change detection.\n        lView[BINDING_INDEX] = tView.bindingStartIndex;\n        // If this is a creation pass, we should not call lifecycle hooks or evaluate bindings.\n        // This will be done in the update pass.\n        if (!creationMode) {\n            var checkNoChangesMode = getCheckNoChangesMode();\n            executePreOrderHooks(lView, tView, checkNoChangesMode, undefined);\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            refreshContentQueries(tView, lView);\n            resetPreOrderHookFlags(lView);\n            executeHooks(lView, tView.contentHooks, tView.contentCheckHooks, checkNoChangesMode, 1 /* AfterContentInitHooksToBeRun */, undefined);\n            setHostBindings(tView, lView);\n        }\n        // We resolve content queries specifically marked as `static` in creation mode. Dynamic\n        // content queries are resolved during change detection (i.e. update mode), after embedded\n        // views are refreshed (see block above).\n        if (creationMode && tView.staticContentQueries) {\n            refreshContentQueries(tView, lView);\n        }\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        var selectedIndex = getSelectedIndex();\n        try {\n            if (tView.expandoInstructions) {\n                var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n                setBindingRoot(bindingRootIndex);\n                var currentDirectiveIndex = -1;\n                var currentElementIndex = -1;\n                for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                    var instruction = tView.expandoInstructions[i];\n                    if (typeof instruction === 'number') {\n                        if (instruction <= 0) {\n                            // Negative numbers mean that we are starting new EXPANDO block and need to update\n                            // the current element and directive index.\n                            currentElementIndex = -instruction;\n                            setActiveHostElement(currentElementIndex);\n                            // Injector block and providers are taken into account.\n                            var providerCount = tView.expandoInstructions[++i];\n                            bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                            currentDirectiveIndex = bindingRootIndex;\n                        }\n                        else {\n                            // This is either the injector size (so the binding root can skip over directives\n                            // and get to the first set of host bindings on this node) or the host var count\n                            // (to get to the next set of host bindings on this node).\n                            bindingRootIndex += instruction;\n                        }\n                        setBindingRoot(bindingRootIndex);\n                    }\n                    else {\n                        // If it's not a number, it's a host binding function that needs to be executed.\n                        if (instruction !== null) {\n                            viewData[BINDING_INDEX] = bindingRootIndex;\n                            var hostCtx = unwrapRNode(viewData[currentDirectiveIndex]);\n                            instruction(2 /* Update */, hostCtx, currentElementIndex);\n                            // Each directive gets a uniqueId value that is the same for both\n                            // create and update calls when the hostBindings function is called. The\n                            // directive uniqueId is not set anywhere--it is just incremented between\n                            // each hostBindings call and is useful for helping instruction code\n                            // uniquely determine which directive is currently active when executed.\n                            incrementActiveDirectiveId();\n                        }\n                        currentDirectiveIndex++;\n                    }\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(selectedIndex);\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView, lView) {\n        if (tView.contentQueries != null) {\n            setCurrentQueryIndex(0);\n            for (var i = 0; i < tView.contentQueries.length; i++) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                ngDevMode &&\n                    assertDefined(directiveDef.contentQueries, 'contentQueries function should be defined');\n                directiveDef.contentQueries(2 /* Update */, lView[directiveDefIdx], directiveDefIdx);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i]);\n            }\n        }\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || getLView()[RENDERER];\n        var namespace = getNamespace();\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, namespace);\n        }\n        else {\n            if (namespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(namespace, name);\n            }\n        }\n        return native;\n    }\n    function createLView(parentLView, tView, context, flags, host, tHostNode, rendererFactory, renderer, sanitizer, injector) {\n        var lView = ngDevMode ? cloneToLView(tView.blueprint) : tView.blueprint.slice();\n        lView[HOST] = host;\n        lView[FLAGS] = flags | 4 /* CreationMode */ | 128 /* Attached */ | 8 /* FirstLViewPass */;\n        resetPreOrderHookFlags(lView);\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n        lView[T_HOST] = tHostNode;\n        ngDevMode && attachLViewDebug(lView);\n        return lView;\n    }\n    function getOrCreateTNode(tView, tHostNode, index, type, name, attrs) {\n        // Keep this function short, so that the VM will inline it.\n        var adjustedIndex = index + HEADER_OFFSET;\n        var tNode = tView.data[adjustedIndex] ||\n            createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs, index);\n        setPreviousOrParentTNode(tNode, true);\n        return tNode;\n    }\n    function createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs, index) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        var parent = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && parent !== tHostNode;\n        var tParentNode = parentInSameView ? parent : null;\n        var tNode = tView.data[adjustedIndex] =\n            createTNode(tView, tParentNode, type, adjustedIndex, name, attrs);\n        // The first node is not always the one at index 0, in case of i18n, index 0 can be the\n        // instruction `i18nStart` and the first node has the index 1 or more\n        if (index === 0 || !tView.firstChild) {\n            tView.firstChild = tNode;\n        }\n        // Now link ourselves into the tree.\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        return tNode;\n    }\n    function assignTViewNodeToLView(tView, tParentNode, index, lView) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        var tNode = tView.node;\n        if (tNode == null) {\n            ngDevMode && tParentNode &&\n                assertNodeOfPossibleTypes(tParentNode, 3 /* Element */, 0 /* Container */);\n            tView.node = tNode = createTNode(tView, tParentNode, //\n            2 /* View */, index, null, null);\n        }\n        return lView[T_HOST] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     *\n     * @param view The LView containing the blueprint to adjust\n     * @param numSlotsToAlloc The number of slots to alloc in the LView, should be >0\n     */\n    function allocExpando(view, numSlotsToAlloc) {\n        ngDevMode && assertGreaterThan(numSlotsToAlloc, 0, 'The number of slots to alloc should be greater than 0');\n        if (numSlotsToAlloc > 0) {\n            var tView = view[TVIEW];\n            if (tView.firstTemplatePass) {\n                for (var i = 0; i < numSlotsToAlloc; i++) {\n                    tView.blueprint.push(null);\n                    tView.data.push(null);\n                    view.push(null);\n                }\n                // We should only increment the expando start index if there aren't already directives\n                // and injectors saved in the \"expando\" section\n                if (!tView.expandoInstructions) {\n                    tView.expandoStartIndex += numSlotsToAlloc;\n                }\n                else {\n                    // Since we're adding the dynamic nodes into the expando section, we need to let the host\n                    // bindings know that they should skip x slots\n                    tView.expandoInstructions.push(numSlotsToAlloc);\n                }\n            }\n        }\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, queries, injectorIndex) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setPreviousOrParentTNode(null, true);\n        var lView = createLView(declarationView, tView, context, 16 /* CheckAlways */, null, null);\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        assignTViewNodeToLView(tView, null, -1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        setPreviousOrParentTNode(_previousOrParentTNode, _isParent);\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor\n     * inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        var oldView;\n        if (viewToRender[FLAGS] & 512 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(getRootContext(viewToRender));\n        }\n        else {\n            // Will become true if the `try` block executes with no errors.\n            var safeToRunHooks = false;\n            try {\n                setPreviousOrParentTNode(null, true);\n                oldView = enterView(viewToRender, viewToRender[T_HOST]);\n                resetPreOrderHookFlags(viewToRender);\n                executeTemplate(viewToRender, tView.template, getRenderFlags(viewToRender), context);\n                // This must be set to false immediately after the first creation run because in an\n                // ngFor loop, all the views will be created together before update mode runs and turns\n                // off firstTemplatePass. If we don't set it here, instances will perform directive\n                // matching, etc again and again.\n                viewToRender[TVIEW].firstTemplatePass = false;\n                refreshDescendantViews(viewToRender);\n                safeToRunHooks = true;\n            }\n            finally {\n                leaveView(oldView, safeToRunHooks);\n                setPreviousOrParentTNode(_previousOrParentTNode, _isParent);\n            }\n        }\n    }\n    function renderComponentOrTemplate(hostView, context, templateFn) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var oldView = enterView(hostView, hostView[T_HOST]);\n        var normalExecutionPath = !getCheckNoChangesMode();\n        var creationModeIsActive = isCreationMode(hostView);\n        // Will become true if the `try` block executes with no errors.\n        var safeToRunHooks = false;\n        try {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (creationModeIsActive) {\n                // creation mode pass\n                templateFn && executeTemplate(hostView, templateFn, 1 /* Create */, context);\n                refreshDescendantViews(hostView);\n                hostView[FLAGS] &= ~4 /* CreationMode */;\n            }\n            // update mode pass\n            resetPreOrderHookFlags(hostView);\n            templateFn && executeTemplate(hostView, templateFn, 2 /* Update */, context);\n            refreshDescendantViews(hostView);\n            safeToRunHooks = true;\n        }\n        finally {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView, safeToRunHooks);\n        }\n    }\n    function executeTemplate(lView, templateFn, rf, context) {\n        namespaceHTMLInternal();\n        var prevSelectedIndex = getSelectedIndex();\n        try {\n            setActiveHostElement(null);\n            if (rf & 2 /* Update */) {\n                // When we're updating, have an inherent ɵɵselect(0) so we don't have to generate that\n                // instruction for most update blocks\n                selectInternal(lView, 0);\n            }\n            templateFn(rf, context);\n        }\n        finally {\n            setSelectedIndex(prevSelectedIndex);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. Update block and create block are\n     * always run separately.\n     */\n    function getRenderFlags(view) {\n        return isCreationMode(view) ? 1 /* Create */ : 2 /* Update */;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    function executeContentQueries(tView, tNode, lView) {\n        if (isContentQueryHost(tNode)) {\n            var start = tNode.directiveStart;\n            var end = tNode.directiveEnd;\n            for (var directiveIndex = start; directiveIndex < end; directiveIndex++) {\n                var def = tView.data[directiveIndex];\n                if (def.contentQueries) {\n                    def.contentQueries(1 /* Create */, lView[directiveIndex], directiveIndex);\n                }\n            }\n        }\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, lView, tNode, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, findDirectiveMatches(tView, lView, tNode), tNode, localRefs || null);\n        }\n        instantiateAllDirectives(tView, lView, tNode);\n        invokeDirectivesHostBindings(tView, lView, tNode);\n        saveResolvedLocalsInData(lView, tNode, localRefExtractor);\n        setActiveHostElement(null);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param def ComponentDef\n     * @returns TView\n     */\n    function getOrCreateTView(def) {\n        return def.tView || (def.tView = createTView(-1, def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     * @param viewQuery View queries for this view\n     * @param schemas Schemas for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery, schemas) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = ngDevMode ?\n            new TViewConstructor(viewIndex, // id: number,\n            blueprint, // blueprint: LView,\n            templateFn, // template: ComponentTemplate<{}>|null,\n            viewQuery, // viewQuery: ViewQueriesFunction<{}>|null,\n            null, // node: TViewNode|TElementNode|null,\n            cloneToTViewData(blueprint).fill(null, bindingStartIndex), // data: TData,\n            bindingStartIndex, // bindingStartIndex: number,\n            initialViewLength, // viewQueryStartIndex: number,\n            initialViewLength, // expandoStartIndex: number,\n            null, // expandoInstructions: ExpandoInstructions|null,\n            true, // firstTemplatePass: boolean,\n            false, // staticViewQueries: boolean,\n            false, // staticContentQueries: boolean,\n            null, // preOrderHooks: HookData|null,\n            null, // preOrderCheckHooks: HookData|null,\n            null, // contentHooks: HookData|null,\n            null, // contentCheckHooks: HookData|null,\n            null, // viewHooks: HookData|null,\n            null, // viewCheckHooks: HookData|null,\n            null, // destroyHooks: HookData|null,\n            null, // cleanup: any[]|null,\n            null, // contentQueries: number[]|null,\n            null, // components: number[]|null,\n            typeof directives === 'function' ?\n                directives() :\n                directives, // directiveRegistry: DirectiveDefList|null,\n            typeof pipes === 'function' ? pipes() : pipes, // pipeRegistry: PipeDefList|null,\n            null, // firstChild: TNode|null,\n            schemas) :\n            {\n                id: viewIndex,\n                blueprint: blueprint,\n                template: templateFn,\n                viewQuery: viewQuery,\n                node: null,\n                data: blueprint.slice().fill(null, bindingStartIndex),\n                bindingStartIndex: bindingStartIndex,\n                viewQueryStartIndex: initialViewLength,\n                expandoStartIndex: initialViewLength,\n                expandoInstructions: null,\n                firstTemplatePass: true,\n                staticViewQueries: false,\n                staticContentQueries: false,\n                preOrderHooks: null,\n                preOrderCheckHooks: null,\n                contentHooks: null,\n                contentCheckHooks: null,\n                viewHooks: null,\n                viewCheckHooks: null,\n                destroyHooks: null,\n                cleanup: null,\n                contentQueries: null,\n                components: null,\n                directiveRegistry: typeof directives === 'function' ? directives() : directives,\n                pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n                firstChild: null,\n                schemas: schemas,\n            };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new (ngDevMode ? LViewBlueprint : Array)(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringifyForError(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param tView `TView` to which this `TNode` belongs (used only in `ngDevMode`)\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(tView, tParent, type, adjustedIndex, tagName, attrs) {\n        ngDevMode && ngDevMode.tNode++;\n        var injectorIndex = tParent ? tParent.injectorIndex : -1;\n        return ngDevMode ? new TNodeConstructor(tView, // tView_: TView\n        type, // type: TNodeType\n        adjustedIndex, // index: number\n        injectorIndex, // injectorIndex: number\n        -1, // directiveStart: number\n        -1, // directiveEnd: number\n        -1, // propertyMetadataStartIndex: number\n        -1, // propertyMetadataEndIndex: number\n        0, // flags: TNodeFlags\n        0, // providerIndexes: TNodeProviderIndexes\n        tagName, // tagName: string|null\n        attrs, // attrs: (string|AttributeMarker|(string|SelectorFlags)[])[]|null\n        null, // localNames: (string|number)[]|null\n        undefined, // initialInputs: (string[]|null)[]|null|undefined\n        undefined, // inputs: PropertyAliases|null|undefined\n        undefined, // outputs: PropertyAliases|null|undefined\n        null, // tViews: ITView|ITView[]|null\n        null, // next: ITNode|null\n        null, // projectionNext: ITNode|null\n        null, // child: ITNode|null\n        tParent, // parent: TElementNode|TContainerNode|null\n        null, // stylingTemplate: StylingContext|null\n        null, // projection: number|(ITNode|RNode[])[]|null\n        null, // onElementCreationFns: Function[]|null\n        null, // newStyles: TStylingContext|null\n        null) :\n            {\n                type: type,\n                index: adjustedIndex,\n                injectorIndex: injectorIndex,\n                directiveStart: -1,\n                directiveEnd: -1,\n                propertyMetadataStartIndex: -1,\n                propertyMetadataEndIndex: -1,\n                flags: 0,\n                providerIndexes: 0,\n                tagName: tagName,\n                attrs: attrs,\n                localNames: null,\n                initialInputs: undefined,\n                inputs: undefined,\n                outputs: undefined,\n                tViews: null,\n                next: null,\n                projectionNext: null,\n                child: null,\n                parent: tParent,\n                stylingTemplate: null,\n                projection: null,\n                onElementCreationFns: null,\n                styles: null,\n                classes: null,\n            };\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param tNode\n     * @param direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNode, direction) {\n        var tView = getLView()[TVIEW];\n        var propStore = null;\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (end > start) {\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, publicName, internalName) :\n                            (propStore[publicName] = [i, publicName, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Mapping between attributes names that don't correspond to their element property names.\n     * Note: this mapping has to be kept in sync with the equally named mapping in the template\n     * type-checking machinery of ngtsc.\n     */\n    var ATTR_TO_PROP = {\n        'class': 'className',\n        'for': 'htmlFor',\n        'formaction': 'formAction',\n        'innerHtml': 'innerHTML',\n        'readonly': 'readOnly',\n        'tabindex': 'tabIndex',\n    };\n    function elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        var lView = getLView();\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData;\n        var dataValue;\n        if (!nativeOnly && (inputData = initializeTNodeInputs(tNode)) &&\n            (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */) {\n                    /**\n                     * dataValue is an array containing runtime input or output names for the directives:\n                     * i+0: directive instance index\n                     * i+1: publicName\n                     * i+2: privateName\n                     *\n                     * e.g. [0, 'change', 'change-minified']\n                     * we want to set the reflected property with the privateName: dataValue[i+2]\n                     */\n                    for (var i = 0; i < dataValue.length; i += 3) {\n                        setNgReflectProperty(lView, element, tNode.type, dataValue[i + 2], value);\n                    }\n                }\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            propName = ATTR_TO_PROP[propName] || propName;\n            if (ngDevMode) {\n                validateAgainstEventProperties(propName);\n                validateAgainstUnknownProperties(lView, element, propName, tNode);\n                ngDevMode.rendererSetProperty++;\n            }\n            savePropertyDebugData(tNode, lView, propName, lView[TVIEW].data, nativeOnly);\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the\n            // property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // If the node is a container and the property didn't\n            // match any of the inputs or schemas we should throw.\n            if (ngDevMode && !matchingSchemas(lView, tNode.tagName)) {\n                throw createUnknownPropertyError(propName, tNode);\n            }\n        }\n    }\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        ngDevMode && assertLView(lView);\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 16 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 64 /* Dirty */;\n        }\n    }\n    function setNgReflectProperty(lView, element, type, attrName, value) {\n        var _a;\n        var renderer = lView[RENDERER];\n        attrName = normalizeDebugBindingName(attrName);\n        var debugValue = normalizeDebugBindingValue(value);\n        if (type === 3 /* Element */) {\n            if (value == null) {\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element, attrName) :\n                    element.removeAttribute(attrName);\n            }\n            else {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n        }\n        else {\n            var textContent = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setValue(element, textContent);\n            }\n            else {\n                element.textContent = textContent;\n            }\n        }\n    }\n    function validateAgainstUnknownProperties(hostView, element, propName, tNode) {\n        // If the tag matches any of the schemas we shouldn't throw.\n        if (matchingSchemas(hostView, tNode.tagName)) {\n            return;\n        }\n        // If prop is not a known property of the HTML element...\n        if (!(propName in element) &&\n            // and we are in a browser context... (web worker nodes should be skipped)\n            typeof Node === 'function' && element instanceof Node &&\n            // and isn't a synthetic animation property...\n            propName[0] !== ANIMATION_PROP_PREFIX) {\n            // ... it is probably a user error and we should throw.\n            throw createUnknownPropertyError(propName, tNode);\n        }\n    }\n    function matchingSchemas(hostView, tagName) {\n        var schemas = hostView[TVIEW].schemas;\n        if (schemas !== null) {\n            for (var i = 0; i < schemas.length; i++) {\n                var schema = schemas[i];\n                if (schema === NO_ERRORS_SCHEMA ||\n                    schema === CUSTOM_ELEMENTS_SCHEMA && tagName && tagName.indexOf('-') > -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n    * Stores debugging data for this property binding on first template pass.\n    * This enables features like DebugElement.properties.\n    */\n    function savePropertyDebugData(tNode, lView, propName, tData, nativeOnly) {\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        // Bind/interpolation functions save binding metadata in the last binding index,\n        // but leave the property name blank. If the interpolation delimiter is at the 0\n        // index, we know that this is our first pass and the property name still needs to\n        // be set.\n        var bindingMetadata = tData[lastBindingIndex];\n        if (bindingMetadata[0] == INTERPOLATION_DELIMITER) {\n            tData[lastBindingIndex] = propName + bindingMetadata;\n            // We don't want to store indices for host bindings because they are stored in a\n            // different part of LView (the expando section).\n            if (!nativeOnly) {\n                if (tNode.propertyMetadataStartIndex == -1) {\n                    tNode.propertyMetadataStartIndex = lastBindingIndex;\n                }\n                tNode.propertyMetadataEndIndex = lastBindingIndex + 1;\n            }\n        }\n    }\n    /**\n    * Creates an error that should be thrown when encountering an unknown property on an element.\n    * @param propName Name of the invalid property.\n    * @param tNode Node on which we encountered the error.\n    */\n    function createUnknownPropertyError(propName, tNode) {\n        return new Error(\"Template error: Can't bind to '\" + propName + \"' since it isn't a known property of '\" + tNode.tagName + \"'.\");\n    }\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in\n        // tsickle.\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'should run on first template pass only');\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            var initialPreOrderHooksLength = (tView.preOrderHooks && tView.preOrderHooks.length) || 0;\n            var initialPreOrderCheckHooksLength = (tView.preOrderCheckHooks && tView.preOrderCheckHooks.length) || 0;\n            var nodeIndex = tNode.index - HEADER_OFFSET;\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, viewData, def, def.factory);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                registerPreOrderHooks(directiveDefIdx, def, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!tView.firstTemplatePass && start < end) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, directive, def, i);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = tView.firstTemplatePass;\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        var selectedIndex = getSelectedIndex();\n        try {\n            setActiveHostElement(elementIndex);\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                var directive = viewData[i];\n                if (def.hostBindings) {\n                    invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass);\n                    // Each directive gets a uniqueId value that is the same for both\n                    // create and update calls when the hostBindings function is called. The\n                    // directive uniqueId is not set anywhere--it is just incremented between\n                    // each hostBindings call and is useful for helping instruction code\n                    // uniquely determine which directive is currently active when executed.\n                    incrementActiveDirectiveId();\n                }\n                else if (firstTemplatePass) {\n                    expando.push(null);\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(selectedIndex);\n        }\n    }\n    function invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass) {\n        var previousExpandoLength = expando.length;\n        setCurrentDirectiveDef(def);\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        def.hostBindings(1 /* Create */, directive, elementIndex);\n        setCurrentDirectiveDef(null);\n        // `hostBindings` function may or may not contain `allocHostVars` call\n        // (e.g. it may not if it only contains host listeners), so we need to check whether\n        // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n        // expando block, to make sure we execute it for DI cycle\n        if (previousExpandoLength === expando.length && firstTemplatePass) {\n            expando.push(def.hostBindings);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(viewData, directive, def, directiveDefIdx) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        postProcessBaseDirective(viewData, previousOrParentTNode, directive);\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, directive, def, previousOrParentTNode);\n        }\n        if (viewData[TVIEW].firstTemplatePass && def.contentQueries) {\n            previousOrParentTNode.flags |= 4 /* hasContentQuery */;\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, previousOrParentTNode, directive) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        attachPatchData(directive, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'should run on first template pass only');\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = ngDevMode ? new MatchesArray() : []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, viewData), tView, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 1 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 1 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(previousOrParentTNode) {\n        var tView = getLView()[TVIEW];\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        (tView.components || (tView.components = ngDevMode ? new TViewComponents() : [])).push(previousOrParentTNode.index);\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames =\n                ngDevMode ? new TNodeLocalNames() : [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs) {\n                for (var i = 0; i < def.exportAs.length; i++) {\n                    exportsMap[def.exportAs[i]] = index;\n                }\n            }\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 1 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = flags & 1 /* isComponent */;\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, previousOrParentTNode, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        var tView = getOrCreateTView(def);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, createLView(lView, tView, null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, lView[previousOrParentTNode.index], previousOrParentTNode, rendererFactory, rendererFactory.createRenderer(native, def)));\n        componentView[T_HOST] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        lView[previousOrParentTNode.index] = componentView;\n        if (lView[TVIEW].firstTemplatePass) {\n            queueComponentIndexForCheck(previousOrParentTNode);\n        }\n    }\n    function elementAttributeInternal(index, name, value, lView, sanitizer, namespace) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && validateAgainstEventAttributes(name);\n        var element = getNativeByIndex(index, lView);\n        var renderer = lView[RENDERER];\n        if (value == null) {\n            ngDevMode && ngDevMode.rendererRemoveAttribute++;\n            isProceduralRenderer(renderer) ? renderer.removeAttribute(element, name, namespace) :\n                element.removeAttribute(name);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            var tNode = getTNode(index, lView);\n            var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setAttribute(element, name, strValue, namespace);\n            }\n            else {\n                namespace ? element.setAttributeNS(namespace, name, strValue) :\n                    element.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param def The directive def that contains the list of inputs\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, def, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, def.inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            var setInput = def.setInput;\n            for (var i = 0; i < initialInputs.length;) {\n                var publicName = initialInputs[i++];\n                var privateName = initialInputs[i++];\n                var value = initialInputs[i++];\n                if (setInput) {\n                    def.setInput(instance, value, publicName, privateName);\n                }\n                else {\n                    instance[privateName] = value;\n                }\n                if (ngDevMode) {\n                    var lView = getLView();\n                    var nativeElement = getNativeByTNode(tNode, lView);\n                    setNgReflectProperty(lView, nativeElement, tNode.type, privateName, value);\n                }\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = ngDevMode ? new TNodeInitialInputs() : []);\n        // Ensure that we don't create sparse arrays\n        for (var i_1 = initialInputData.length; i_1 <= directiveIndex; i_1++) {\n            initialInputData.push(null);\n        }\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            else if (attrName === 5 /* ProjectAs */) {\n                // Skip over the `ngProjectAs` value.\n                i += 2;\n                continue;\n            }\n            // If we hit any other attribute markers, we're done anyway. None of those are valid inputs.\n            if (typeof attrName === 'number')\n                break;\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] ||\n                    (initialInputData[directiveIndex] = ngDevMode ? new TNodeInitialData() : []);\n                inputsToStore.push(attrName, minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    // Not sure why I need to do `any` here but TS complains later.\n    var LContainerArray = ngDevMode && createNamedArrayType('LContainer');\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, tNode, isForViewContainerRef) {\n        ngDevMode && assertDomNode(native);\n        ngDevMode && assertLView(currentView);\n        // https://jsperf.com/array-literal-vs-new-array-really\n        var lContainer = new (ngDevMode ? LContainerArray : Array)(hostNative, // host native\n        true, // Boolean `true` in this position signifies that this is an `LContainer`\n        isForViewContainerRef ? -1 : 0, // active index\n        currentView, // parent\n        null, // next\n        null, // queries\n        tNode, // t_host\n        native, // native,\n        null);\n        ngDevMode && attachLContainerDebug(lContainer);\n        return lContainer;\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes\n     * them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        for (var current = lView[CHILD_HEAD]; current !== null; current = current[NEXT]) {\n            // Note: current can be an LView or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LView\n            // header.\n            if (current[ACTIVE_INDEX] === -1 && isLContainer(current)) {\n                for (var i = CONTAINER_HEADER_OFFSET; i < current.length; i++) {\n                    var dynamicViewData = current[i];\n                    // The directives and pipes are not needed here as an existing view is only being\n                    // refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT]);\n                }\n            }\n        }\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex) {\n        var lView = getLView();\n        ngDevMode && assertDataInRange(lView, adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].data[adjustedElementIndex], 3 /* Element */);\n        // Only components in creation mode, attached CheckAlways\n        // components or attached, dirty OnPush components should be checked\n        if ((viewAttachedToChangeDetector(hostView) || isCreationMode(lView)) &&\n            hostView[FLAGS] & (16 /* CheckAlways */ | 64 /* Dirty */)) {\n            syncViewWithBlueprint(hostView);\n            checkView(hostView, hostView[CONTEXT]);\n        }\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param lViewOrLContainer The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, lViewOrLContainer) {\n        // TODO(benlesh/misko): This implementation is incorrect, because it always adds the LContainer\n        // to\n        // the end of the queue, which means if the developer retrieves the LContainers from RNodes out\n        // of\n        // order, the change detection will run out of order, as the act of retrieving the the\n        // LContainer\n        // from the RNode is what adds it to the queue.\n        if (lView[CHILD_HEAD]) {\n            lView[CHILD_TAIL][NEXT] = lViewOrLContainer;\n        }\n        else {\n            lView[CHILD_HEAD] = lViewOrLContainer;\n        }\n        lView[CHILD_TAIL] = lViewOrLContainer;\n        return lViewOrLContainer;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView) {\n            lView[FLAGS] |= 64 /* Dirty */;\n            var parent_1 = getLViewParent(lView);\n            // Stop traversing up as soon as you find a root view that wasn't attached to any container\n            if (isRootView(lView) && !parent_1) {\n                return lView;\n            }\n            // continue otherwise\n            lView = parent_1;\n        }\n        return null;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLView(rootComponent), rootComponent);\n        }\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        try {\n            if (isCreationMode(view)) {\n                checkView(view, context); // creation mode pass\n            }\n            checkView(view, context); // update mode pass\n        }\n        catch (error) {\n            handleError(view, error);\n            throw error;\n        }\n        finally {\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    function checkNoChangesInternal(view, context) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInternal(view, context);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck.\n     */\n    function checkView(hostView, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[T_HOST]);\n        var templateFn = hostTView.template;\n        var creationMode = isCreationMode(hostView);\n        // Will become true if the `try` block executes with no errors.\n        var safeToRunHooks = false;\n        try {\n            resetPreOrderHookFlags(hostView);\n            creationMode && executeViewQueryFn(1 /* Create */, hostTView, component);\n            executeTemplate(hostView, templateFn, getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView);\n            // Only check view queries again in creation mode if there are static view queries\n            if (!creationMode || hostTView.staticViewQueries) {\n                executeViewQueryFn(2 /* Update */, hostTView, component);\n            }\n            safeToRunHooks = true;\n        }\n        finally {\n            leaveView(oldView, safeToRunHooks);\n        }\n    }\n    function executeViewQueryFn(flags, tView, component) {\n        var viewQuery = tView.viewQuery;\n        if (viewQuery) {\n            setCurrentQueryIndex(tView.viewQueryStartIndex);\n            viewQuery(flags, component);\n        }\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates binding metadata for a particular binding and stores it in\n     * TView.data. These are generated in order to support DebugElement.properties.\n     *\n     * Each binding / interpolation will have one (including attribute bindings)\n     * because at the time of binding, we don't know to which instruction the binding\n     * belongs. It is always stored in TView.data at the index of the last binding\n     * value in LView (e.g. for interpolation8, it would be stored at the index of\n     * the 8th value).\n     *\n     * @param lView The LView that contains the current binding index.\n     * @param prefix The static prefix string\n     * @param suffix The static suffix string\n     *\n     * @returns Newly created binding metadata string for this binding or null\n     */\n    function storeBindingMetadata(lView, prefix, suffix) {\n        if (prefix === void 0) { prefix = ''; }\n        if (suffix === void 0) { suffix = ''; }\n        var tData = lView[TVIEW].data;\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        var value = INTERPOLATION_DELIMITER + prefix + INTERPOLATION_DELIMITER + suffix;\n        return tData[lastBindingIndex] == null ? (tData[lastBindingIndex] = value) : null;\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode.inputs === undefined) {\n            // mark inputs as checked\n            tNode.inputs = generatePropertyAliases(tNode, 0 /* Input */);\n        }\n        return tNode.inputs;\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = ngDevMode ? new LCleanup() : []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = ngDevMode ? new TCleanup() : []);\n    }\n    /**\n     * There are cases where the sub component's renderer needs to be included\n     * instead of the current renderer (see the componentSyntheticHost* instructions).\n     */\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    /** Handles an error thrown in an LView. */\n    function handleError(lView, error) {\n        var injector = lView[INJECTOR$1];\n        var errorHandler = injector ? injector.get(ErrorHandler, null) : null;\n        errorHandler && errorHandler.handleError(error);\n    }\n    /**\n     * Set the inputs of directives at the current node to corresponding value.\n     *\n     * @param lView the `LView` which contains the directives.\n     * @param inputs mapping between the public \"input\" name and privately-known,\n     * possibly minified, property names to write to.\n     * @param value Value to set.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        var tView = lView[TVIEW];\n        for (var i = 0; i < inputs.length;) {\n            var index = inputs[i++];\n            var publicName = inputs[i++];\n            var privateName = inputs[i++];\n            var instance = lView[index];\n            ngDevMode && assertDataInRange(lView, index);\n            var def = tView.data[index];\n            var setInput = def.setInput;\n            if (setInput) {\n                def.setInput(instance, value, publicName, privateName);\n            }\n            else {\n                instance[privateName] = value;\n            }\n        }\n    }\n    /**\n     * Updates a text binding at a given index in a given LView.\n     */\n    function textBindingInternal(lView, index, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'value should not be NO_CHANGE');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var element = getNativeByIndex(index, lView);\n        ngDevMode && assertDefined(element, 'native element should exist');\n        ngDevMode && ngDevMode.rendererSetText++;\n        var renderer = lView[RENDERER];\n        isProceduralRenderer(renderer) ? renderer.setValue(element, value) : element.textContent = value;\n    }\n    /**\n     * Renders all initial styling (class and style values) on to the element from the tNode.\n     *\n     * All initial styling data (i.e. any values extracted from the `style` or `class` attributes\n     * on an element) are collected into the `tNode.styles` and `tNode.classes` data structures.\n     * These values are populated during the creation phase of an element and are then later\n     * applied once the element is instantiated. This function applies each of the static\n     * style and class entries to the element.\n     */\n    function renderInitialStyling(renderer, native, tNode) {\n        renderStylingMap(renderer, native, tNode.classes, true);\n        renderStylingMap(renderer, native, tNode.styles, false);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function applyOnCreateInstructions(tNode) {\n        // there may be some instructions that need to run in a specific\n        // order because the CREATE block in a directive runs before the\n        // CREATE block in a template. To work around this instructions\n        // can get access to the function array below and defer any code\n        // to run after the element is created.\n        var fns;\n        if (fns = tNode.onElementCreationFns) {\n            for (var i = 0; i < fns.length; i++) {\n                fns[i]();\n            }\n            tNode.onElementCreationFns = null;\n        }\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[T_HOST];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[T_HOST];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     *\n     * @codeGenApi\n     */\n    function ɵɵallocHostVars(count) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (!tView.firstTemplatePass)\n            return;\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n     */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /**\n     * On the first template pass, we need to reserve space for host binding values\n     * after directives are matched (so all directives are saved, then bindings).\n     * Because we are updating the blueprint, we only need to do this once.\n     */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, bindingIndex);\n        ngDevMode &&\n            assertNotSame(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        var oldValue = lView[bindingIndex];\n        if (isDifferent(oldValue, value)) {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                // View engine didn't report undefined values as changed on the first checkNoChanges pass\n                // (before the change detection was run).\n                var oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;\n                if (!devModeEqual(oldValueToCompare, value)) {\n                    throwErrorIfNoChangesMode(oldValue === NO_CHANGE, oldValueToCompare, value);\n                }\n            }\n            lView[bindingIndex] = value;\n            return true;\n        }\n        return false;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a selected element.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵproperty(propName, value, sanitizer) {\n        var index = getSelectedIndex();\n        ngDevMode && assertNotEqual(index, -1, 'selected index cannot be -1');\n        var lView = getLView();\n        var bindReconciledValue = bind(lView, value);\n        if (bindReconciledValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, bindReconciledValue, sanitizer);\n        }\n        return ɵɵproperty;\n    }\n    /**\n     * Creates a single value binding.\n     *\n     * @param lView Current view\n     * @param value Value to diff\n     */\n    function bind(lView, value) {\n        var bindingIndex = lView[BINDING_INDEX]++;\n        storeBindingMetadata(lView);\n        return bindingUpdated(lView, bindingIndex, value) ? value : NO_CHANGE;\n    }\n\n    /**\n     * Updates the value of or removes a bound attribute on an Element.\n     *\n     * Used in the case of `[attr.title]=\"value\"`\n     *\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param namespace Optional namespace to use when setting the attribute.\n     *\n     * @codeGenApi\n     */\n    function ɵɵattribute(name, value, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var bound = bind(lView, value);\n        if (bound !== NO_CHANGE) {\n            elementAttributeInternal(index, name, bound, lView, sanitizer, namespace);\n        }\n        return ɵɵattribute;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(lView, values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var isBindingUpdated = false;\n        var tData = lView[TVIEW].data;\n        var bindingIndex = lView[BINDING_INDEX];\n        if (tData[bindingIndex] == null) {\n            // 2 is the index of the first static interstitial value (ie. not prefix)\n            for (var i = 2; i < values.length; i += 2) {\n                tData[bindingIndex++] = values[i];\n            }\n            bindingIndex = lView[BINDING_INDEX];\n        }\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            isBindingUpdated = bindingUpdated(lView, bindingIndex++, values[i]) || isBindingUpdated;\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        storeBindingMetadata(lView, values[0], values[values.length - 1]);\n        if (!isBindingUpdated) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += renderStringify(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(lView, prefix, v0, suffix) {\n        var different = bindingUpdated(lView, lView[BINDING_INDEX]++, v0);\n        storeBindingMetadata(lView, prefix, suffix);\n        return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 2 expressions.\n     */\n    function interpolation2(lView, prefix, v0, i0, v1, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated2(lView, bindingIndex, v0, v1);\n        lView[BINDING_INDEX] += 2;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            lView[TVIEW].data[bindingIndex] = i0;\n        }\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 3 expressions.\n     */\n    function interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Create an interpolation binding with 4 expressions.\n     */\n    function interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 5 expressions.\n     */\n    function interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 6 expressions.\n     */\n    function interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 7 expressions.\n     */\n    function interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 8 expressions.\n     */\n    function interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n            tData[bindingIndex + 6] = i6;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n            NO_CHANGE;\n    }\n\n    /**\n     *\n     * Update an interpolated attribute on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate1(attrName, prefix, v0, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate2(attrName, prefix, v0, i0, v1, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate3(attrName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate4(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate5(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate6(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate7(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate8(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate8;\n    }\n    /**\n     * Update an interpolated attribute on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param attrName The name of the attribute to update.\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolateV(attrName, values, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolated, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getLContainer(tNode, embeddedView) {\n        ngDevMode && assertLView(embeddedView);\n        var container = embeddedView[PARENT];\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // The parent isn't an LContainer if the embedded view hasn't been attached yet.\n            return isLContainer(container) ? container : null;\n        }\n        else {\n            ngDevMode && assertLContainer(container);\n            // This is a inline view node (e.g. embeddedViewStart)\n            return container;\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeActionOnElementOrContainer(action, renderer, parent, lNodeToHandle, beforeNode) {\n        ngDevMode && assertDefined(lNodeToHandle, '\\'lNodeToHandle\\' is undefined');\n        var lContainer;\n        var isComponent = false;\n        // We are expecting an RNode, but in the case of a component or LContainer the `RNode` is wrapped\n        // in an array which needs to be unwrapped. We need to know if it is a component and if\n        // it has LContainer so that we can process all of those cases appropriately.\n        if (isLContainer(lNodeToHandle)) {\n            lContainer = lNodeToHandle;\n        }\n        else if (isLView(lNodeToHandle)) {\n            isComponent = true;\n            ngDevMode && assertDefined(lNodeToHandle[HOST], 'HOST must be defined for a component LView');\n            lNodeToHandle = lNodeToHandle[HOST];\n        }\n        var rNode = unwrapRNode(lNodeToHandle);\n        ngDevMode && assertDomNode(rNode);\n        if (action === 0 /* Insert */) {\n            nativeInsertBefore(renderer, parent, rNode, beforeNode || null);\n        }\n        else if (action === 1 /* Detach */) {\n            nativeRemoveNode(renderer, rNode, isComponent);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(rNode);\n        }\n        if (lContainer != null) {\n            executeActionOnContainer(renderer, action, lContainer, parent, beforeNode);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(renderStringify(value)) :\n            renderer.createTextNode(renderStringify(value));\n    }\n    function addRemoveViewFromContainer(lView, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(lView[TVIEW].node, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = lView[RENDERER];\n            var action = insertMode ? 0 /* Insert */ : 1 /* Detach */;\n            executeActionOnView(renderer, action, lView, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Detach a `LView` from the DOM by detaching its nodes.\n     *\n     * @param lView the `LView` to be detached.\n     */\n    function renderDetachView(lView) {\n        executeActionOnView(lView[RENDERER], 1 /* Detach */, lView, null, null);\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        var lViewOrLContainer = rootView[CHILD_HEAD];\n        if (!lViewOrLContainer) {\n            return cleanUpView(rootView);\n        }\n        while (lViewOrLContainer) {\n            var next = null;\n            if (isLView(lViewOrLContainer)) {\n                // If LView, traverse down to child.\n                next = lViewOrLContainer[CHILD_HEAD];\n            }\n            else {\n                ngDevMode && assertLContainer(lViewOrLContainer);\n                // If container, traverse down to its first LView.\n                var firstView = lViewOrLContainer[CONTAINER_HEADER_OFFSET];\n                if (firstView)\n                    next = firstView;\n            }\n            if (!next) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (lViewOrLContainer && !lViewOrLContainer[NEXT] && lViewOrLContainer !== rootView) {\n                    cleanUpView(lViewOrLContainer);\n                    lViewOrLContainer = getParentState(lViewOrLContainer, rootView);\n                }\n                cleanUpView(lViewOrLContainer || rootView);\n                next = lViewOrLContainer && lViewOrLContainer[NEXT];\n            }\n            lViewOrLContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param index Which index in the container to insert the child view into\n     */\n    function insertView(lView, lContainer, index) {\n        ngDevMode && assertLView(lView);\n        ngDevMode && assertLContainer(lContainer);\n        var indexInContainer = CONTAINER_HEADER_OFFSET + index;\n        var containerLength = lContainer.length;\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            lContainer[indexInContainer - 1][NEXT] = lView;\n        }\n        if (index < containerLength - CONTAINER_HEADER_OFFSET) {\n            lView[NEXT] = lContainer[indexInContainer];\n            lContainer.splice(CONTAINER_HEADER_OFFSET + index, 0, lView);\n        }\n        else {\n            lContainer.push(lView);\n            lView[NEXT] = null;\n        }\n        lView[PARENT] = lContainer;\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 128 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex) {\n        if (lContainer.length <= CONTAINER_HEADER_OFFSET)\n            return;\n        var indexInContainer = CONTAINER_HEADER_OFFSET + removeIndex;\n        var viewToDetach = lContainer[indexInContainer];\n        if (viewToDetach) {\n            if (removeIndex > 0) {\n                lContainer[indexInContainer - 1][NEXT] = viewToDetach[NEXT];\n            }\n            lContainer.splice(CONTAINER_HEADER_OFFSET + removeIndex, 1);\n            addRemoveViewFromContainer(viewToDetach, false);\n            if ((viewToDetach[FLAGS] & 128 /* Attached */) &&\n                !(viewToDetach[FLAGS] & 256 /* Destroyed */) && viewToDetach[QUERIES]) {\n                viewToDetach[QUERIES].removeView();\n            }\n            viewToDetach[PARENT] = null;\n            viewToDetach[NEXT] = null;\n            // Unsets the attached flag\n            viewToDetach[FLAGS] &= ~128 /* Attached */;\n        }\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, removeIndex) {\n        var detachedView = detachView(lContainer, removeIndex);\n        detachedView && destroyLView(detachedView);\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param lView The view to be destroyed.\n     */\n    function destroyLView(lView) {\n        if (!(lView[FLAGS] & 256 /* Destroyed */)) {\n            var renderer = lView[RENDERER];\n            if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n                executeActionOnView(renderer, 2 /* Destroy */, lView, null, null);\n            }\n            destroyViewTree(lView);\n        }\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param lViewOrLContainer The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(lViewOrLContainer, rootView) {\n        var tNode;\n        if (isLView(lViewOrLContainer) && (tNode = lViewOrLContainer[T_HOST]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, lViewOrLContainer);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return lViewOrLContainer[PARENT] === rootView ? null : lViewOrLContainer[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(view) {\n        if (isLView(view) && !(view[FLAGS] & 256 /* Destroyed */)) {\n            // Usually the Attached flag is removed when the view is detached from its parent, however\n            // if it's a root view, the flag won't be unset hence why we're also removing on destroy.\n            view[FLAGS] &= ~128 /* Attached */;\n            // Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook\n            // runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If\n            // We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.\n            // This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is\n            // really more of an \"afterDestroy\" hook if you think about it.\n            view[FLAGS] |= 256 /* Destroyed */;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[T_HOST];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n            // For embedded views still attached to a container: remove query result from this view.\n            if (viewAttachedToContainer(view) && view[QUERIES]) {\n                view[QUERIES].removeView();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup !== null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a native DOM listener\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        unwrapRNode(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // native DOM listener registered with Renderer3\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            for (var i = 0; i < destroyHooks.length; i += 2) {\n                var context = view[destroyHooks[i]];\n                // Only call the destroy hook if the context has been requested.\n                if (!(context instanceof NodeInjectorFactory)) {\n                    destroyHooks[i + 1].call(context);\n                }\n            }\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is made for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tNode, currentView) {\n        // Nodes of the top-most view can be inserted eagerly.\n        if (isRootView(currentView)) {\n            return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n        }\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parent = getHighestElementOrICUContainer(tNode);\n        var renderParent = parent.parent;\n        // If the parent is null, then we are inserting across views: either into an embedded view or a\n        // component view.\n        if (renderParent == null) {\n            var hostTNode = currentView[T_HOST];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                return getHostNative(currentView);\n            }\n        }\n        else {\n            var isIcuCase = parent && parent.type === 5 /* IcuContainer */;\n            // If the parent of this node is an ICU container, then it is represented by comment node and we\n            // need to use it as an anchor. If it is projected then its direct parent node is the renderer.\n            if (isIcuCase && parent.flags & 2 /* isProjected */) {\n                return getNativeByTNode(parent, currentView).parentNode;\n            }\n            ngDevMode && assertNodeType(renderParent, 3 /* Element */);\n            if (renderParent.flags & 1 /* isComponent */ && !isIcuCase) {\n                var tData = currentView[TVIEW].data;\n                var tNode_1 = tData[renderParent.index];\n                var encapsulation = tData[tNode_1.directiveStart].encapsulation;\n                // We've got a parent which is an element in the current view. We just need to verify if the\n                // parent element is not a component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would then move it to its final destination. Note that we can't\n                // make this assumption when using the Shadow DOM, because the native projection placeholders\n                // (<content> or <slot>) have to be in place as elements are being inserted.\n                if (encapsulation !== exports.ViewEncapsulation.ShadowDom &&\n                    encapsulation !== exports.ViewEncapsulation.Native) {\n                    return null;\n                }\n            }\n            return getNativeByTNode(renderParent, currentView);\n        }\n    }\n    /**\n     * Gets the native host element for a given view. Will return null if the current view does not have\n     * a host element.\n     */\n    function getHostNative(currentView) {\n        ngDevMode && assertLView(currentView);\n        var hostTNode = currentView[T_HOST];\n        return hostTNode && hostTNode.type === 3 /* Element */ ?\n            getNativeByTNode(hostTNode, getLViewParent(currentView)) :\n            null;\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        ngDevMode && ngDevMode.rendererInsertBefore++;\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    function nativeAppendChild(renderer, parent, child) {\n        ngDevMode && ngDevMode.rendererAppendChild++;\n        if (isProceduralRenderer(renderer)) {\n            renderer.appendChild(parent, child);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    }\n    function nativeAppendOrInsertBefore(renderer, parent, child, beforeNode) {\n        if (beforeNode !== null) {\n            nativeInsertBefore(renderer, parent, child, beforeNode);\n        }\n        else {\n            nativeAppendChild(renderer, parent, child);\n        }\n    }\n    /** Removes a node from the DOM given its native parent. */\n    function nativeRemoveChild(renderer, parent, child, isHostElement) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.removeChild(parent, child, isHostElement);\n        }\n        else {\n            parent.removeChild(child);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Finds a native \"anchor\" node for cases where we can't append a native child directly\n     * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.\n     * @param parentTNode\n     * @param lView\n     */\n    function getNativeAnchorNode(parentTNode, lView) {\n        if (parentTNode.type === 2 /* View */) {\n            var lContainer = getLContainer(parentTNode, lView);\n            var index = lContainer.indexOf(lView, CONTAINER_HEADER_OFFSET) - CONTAINER_HEADER_OFFSET;\n            return getBeforeNodeForView(index, lContainer);\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */) {\n            return getNativeByTNode(parentTNode, lView);\n        }\n        return null;\n    }\n    /**\n     * Appends the `child` native node (or a collection of nodes) to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The native child (or children) that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var e_1, _a;\n        var renderParent = getRenderParent(childTNode, currentView);\n        if (renderParent != null) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[T_HOST];\n            var anchorNode = getNativeAnchorNode(parentTNode, currentView);\n            if (Array.isArray(childEl)) {\n                try {\n                    for (var childEl_1 = __values(childEl), childEl_1_1 = childEl_1.next(); !childEl_1_1.done; childEl_1_1 = childEl_1.next()) {\n                        var nativeNode = childEl_1_1.value;\n                        nativeAppendOrInsertBefore(renderer, renderParent, nativeNode, anchorNode);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (childEl_1_1 && !childEl_1_1.done && (_a = childEl_1.return)) _a.call(childEl_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n            else {\n                nativeAppendOrInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n        }\n    }\n    /**\n     * Gets the top-level element or an ICU container if those containers are nested.\n     *\n     * @param tNode The starting TNode for which we should skip element and ICU containers\n     * @returns The TNode of the highest level ICU container or element container\n     */\n    function getHighestElementOrICUContainer(tNode) {\n        while (tNode.parent != null && (tNode.parent.type === 4 /* ElementContainer */ ||\n            tNode.parent.type === 5 /* IcuContainer */)) {\n            tNode = tNode.parent;\n        }\n        return tNode;\n    }\n    function getBeforeNodeForView(viewIndexInContainer, lContainer) {\n        var nextViewIndex = CONTAINER_HEADER_OFFSET + viewIndexInContainer + 1;\n        if (nextViewIndex < lContainer.length) {\n            var lView = lContainer[nextViewIndex];\n            ngDevMode && assertDefined(lView[T_HOST], 'Missing Host TNode');\n            var tViewNodeChild = lView[T_HOST].child;\n            return tViewNodeChild !== null ? getNativeByTNodeOrNull(tViewNodeChild, lView) :\n                lContainer[NATIVE];\n        }\n        else {\n            return lContainer[NATIVE];\n        }\n    }\n    /**\n     * Removes a native node itself using a given renderer. To remove the node we are looking up its\n     * parent from the native tree as not all platforms / browsers support the equivalent of\n     * node.remove().\n     *\n     * @param renderer A renderer to be used\n     * @param rNode The native node that should be removed\n     * @param isHostElement A flag indicating if a node to be removed is a host of a component.\n     */\n    function nativeRemoveNode(renderer, rNode, isHostElement) {\n        var nativeParent = nativeParentNode(renderer, rNode);\n        if (nativeParent) {\n            nativeRemoveChild(renderer, nativeParent, rNode, isHostElement);\n        }\n    }\n    /**\n     * Appends nodes to a target projection place. Nodes to insert were previously re-distribution and\n     * stored on a component host level.\n     * @param lView A LView where nodes are inserted (target LView)\n     * @param tProjectionNode A projection node where previously re-distribution should be appended\n     * (target insertion place)\n     * @param selectorIndex A bucket from where nodes to project should be taken\n     * @param componentView A where projectable nodes were initially created (source view)\n     */\n    function appendProjectedNodes(lView, tProjectionNode, selectorIndex, componentView) {\n        var projectedView = componentView[PARENT];\n        var componentNode = componentView[T_HOST];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        if (Array.isArray(nodeToProject)) {\n            appendChild(nodeToProject, tProjectionNode, lView);\n        }\n        else {\n            while (nodeToProject) {\n                if (!(nodeToProject.flags & 32 /* isDetached */)) {\n                    if (nodeToProject.type === 1 /* Projection */) {\n                        appendProjectedNodes(lView, tProjectionNode, nodeToProject.projection, findComponentView(projectedView));\n                    }\n                    else {\n                        // This flag must be set now or we won't know that this node is projected\n                        // if the nodes are inserted into a container later.\n                        nodeToProject.flags |= 2 /* isProjected */;\n                        appendProjectedNode(nodeToProject, tProjectionNode, lView, projectedView);\n                    }\n                }\n                nodeToProject = nodeToProject.projectionNext;\n            }\n        }\n    }\n    /**\n     * Loops over all children of a TNode container and appends them to the DOM\n     *\n     * @param ngContainerChildTNode The first child of the TNode container\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedChildren(ngContainerChildTNode, tProjectionNode, currentView, projectionView) {\n        while (ngContainerChildTNode) {\n            appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n            ngContainerChildTNode = ngContainerChildTNode.next;\n        }\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            for (var i = CONTAINER_HEADER_OFFSET; i < nodeOrContainer.length; i++) {\n                addRemoveViewFromContainer(nodeOrContainer[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else if (projectedTNode.type === 5 /* IcuContainer */) {\n            // The node we are adding is an ICU container which is why we also need to project all the\n            // children nodes that might have been created previously and are linked to this anchor\n            var ngContainerChildTNode = projectedTNode.child;\n            appendProjectedChildren(ngContainerChildTNode, ngContainerChildTNode, projectionView, projectionView);\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                appendProjectedChildren(projectedTNode.child, tProjectionNode, currentView, projectionView);\n            }\n            if (isLContainer(nodeOrContainer)) {\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n    /**\n     * `executeActionOnView` performs an operation on the view as specified in `action` (insert, detach,\n     * destroy)\n     *\n     * Inserting a view without projection or containers at top level is simple. Just iterate over the\n     * root nodes of the View, and for each node perform the `action`.\n     *\n     * Things get more complicated with containers and projections. That is because coming across:\n     * - Container: implies that we have to insert/remove/destroy the views of that container as well\n     *              which in turn can have their own Containers at the View roots.\n     * - Projection: implies that we have to insert/remove/destroy the nodes of the projection. The\n     *               complication is that the nodes we are projecting can themselves have Containers\n     *               or other Projections.\n     *\n     * As you can see this is a very recursive problem. While the recursive implementation is not the\n     * most efficient one, trying to unroll the nodes non-recursively results in very complex code that\n     * is very hard (to maintain). We are sacrificing a bit of performance for readability using a\n     * recursive implementation.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function executeActionOnView(renderer, action, lView, renderParent, beforeNode) {\n        var tView = lView[TVIEW];\n        ngDevMode && assertNodeType(tView.node, 2 /* View */);\n        var viewRootTNode = tView.node.child;\n        while (viewRootTNode !== null) {\n            executeActionOnNode(renderer, action, lView, viewRootTNode, renderParent, beforeNode);\n            viewRootTNode = viewRootTNode.next;\n        }\n    }\n    /**\n     * `executeActionOnProjection` performs an operation on the projection specified by `action`\n     * (insert, detach, destroy).\n     *\n     * Inserting a projection requires us to locate the projected nodes from the parent component. The\n     * complication is that those nodes themselves could be re-projected from their parent component.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param tProjectionNode projection TNode to process\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function executeActionOnProjection(renderer, action, lView, tProjectionNode, renderParent, beforeNode) {\n        var componentLView = findComponentView(lView);\n        var componentNode = componentLView[T_HOST];\n        ngDevMode && assertDefined(componentNode.projection, 'Element nodes for which projection is processed must have projection defined.');\n        var nodeToProject = componentNode.projection[tProjectionNode.projection];\n        if (nodeToProject !== undefined) {\n            if (Array.isArray(nodeToProject)) {\n                for (var i = 0; i < nodeToProject.length; i++) {\n                    var rNode = nodeToProject[i];\n                    ngDevMode && assertDomNode(rNode);\n                    executeActionOnElementOrContainer(action, renderer, renderParent, rNode, beforeNode);\n                }\n            }\n            else {\n                var projectionTNode = nodeToProject;\n                var projectedComponentLView = componentLView[PARENT];\n                while (projectionTNode !== null) {\n                    executeActionOnNode(renderer, action, projectedComponentLView, projectionTNode, renderParent, beforeNode);\n                    projectionTNode = projectionTNode.projectionNext;\n                }\n            }\n        }\n    }\n    /**\n     * `executeActionOnContainer` performs an operation on the container and its views as specified by\n     * `action` (insert, detach, destroy)\n     *\n     * Inserting a Container is complicated by the fact that the container may have Views which\n     * themselves have containers or projections.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lContainer The LContainer which needs to be inserted, detached, destroyed.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function executeActionOnContainer(renderer, action, lContainer, renderParent, beforeNode) {\n        ngDevMode && assertLContainer(lContainer);\n        var anchor = lContainer[NATIVE]; // LContainer has its own before node.\n        var native = unwrapRNode(lContainer);\n        // An LContainer can be created dynamically on any node by injecting ViewContainerRef.\n        // Asking for a ViewContainerRef on an element will result in a creation of a separate anchor node\n        // (comment in the DOM) that will be different from the LContainer's host node. In this particular\n        // case we need to execute action on 2 nodes:\n        // - container's host node (this is done in the executeNodeAction)\n        // - container's host node (this is done here)\n        if (anchor !== native) {\n            executeActionOnElementOrContainer(action, renderer, renderParent, anchor, beforeNode);\n        }\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var lView = lContainer[i];\n            executeActionOnView(renderer, action, lView, renderParent, anchor);\n        }\n    }\n    /**\n     * `executeActionOnElementContainerOrIcuContainer` performs an operation on the ng-container node\n     * and its child nodes as specified by the `action` (insert, detach, destroy).\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param tNode The TNode associated with the `ElementContainer` or `IcuContainer`.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function executeActionOnElementContainerOrIcuContainer(renderer, action, lView, tNode, renderParent, beforeNode) {\n        var node = lView[tNode.index];\n        executeActionOnElementOrContainer(action, renderer, renderParent, node, beforeNode);\n        var childTNode = tNode.child;\n        while (childTNode) {\n            executeActionOnNode(renderer, action, lView, childTNode, renderParent, beforeNode);\n            childTNode = childTNode.next;\n        }\n    }\n    function executeActionOnNode(renderer, action, lView, tNode, renderParent, beforeNode) {\n        var nodeType = tNode.type;\n        if (nodeType === 4 /* ElementContainer */ || nodeType === 5 /* IcuContainer */) {\n            executeActionOnElementContainerOrIcuContainer(renderer, action, lView, tNode, renderParent, beforeNode);\n        }\n        else if (nodeType === 1 /* Projection */) {\n            executeActionOnProjection(renderer, action, lView, tNode, renderParent, beforeNode);\n        }\n        else {\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */);\n            executeActionOnElementOrContainer(action, renderer, renderParent, lView[tNode.index], beforeNode);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainer(index) {\n        var lView = getLView();\n        var tNode = containerInternal(lView, index, null, null);\n        if (lView[TVIEW].firstTemplatePass) {\n            tNode.tViews = [];\n        }\n        addTContainerToQueries(lView, tNode);\n        setIsNotParent();\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplate(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // TODO: consider a separate node type for templates\n        var tContainerNode = containerInternal(lView, index, tagName || null, attrs || null);\n        if (tView.firstTemplatePass) {\n            tContainerNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n        }\n        createDirectivesAndLocals(tView, lView, tContainerNode, localRefs, localRefExtractor);\n        addTContainerToQueries(lView, tContainerNode);\n        attachPatchData(getNativeByTNode(tContainerNode, lView), lView);\n        registerPostOrderHooks(tView, tContainerNode);\n        setIsNotParent();\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = loadInternal(tView.data, index);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setPreviousOrParentTNode(previousOrParentTNode, true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        executePreOrderHooks(lView, tView, getCheckNoChangesMode(), undefined);\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer.length - CONTAINER_HEADER_OFFSET) {\n            removeView(lContainer, nextIndex);\n        }\n    }\n    /**\n    * Reporting a TContainer node queries is a 2-step process as we need to:\n    * - check if the container node itself is matching (query might match a <ng-template> node);\n    * - prepare room for nodes from views that might be created based on the TemplateRef linked to this\n    * container.\n    *\n    * Those 2 operations need to happen in the specific order (match the container node itself, then\n    * prepare space for nodes from views).\n    */\n    function addTContainerToQueries(lView, tContainerNode) {\n        var queries = lView[QUERIES];\n        if (queries) {\n            var lContainer = lView[tContainerNode.index];\n            if (lContainer[QUERIES]) {\n                // Query container should only exist if it was created through a dynamic view\n                // in a directive constructor. In this case, we must splice the template\n                // matches in before the view matches to ensure query results in embedded views\n                // don't clobber query results on the template node itself.\n                queries.insertNodeBeforeViews(tContainerNode);\n            }\n            else {\n                queries.addNode(tContainerNode);\n                lContainer[QUERIES] = queries.container();\n            }\n        }\n    }\n    function containerInternal(lView, nodeIndex, tagName, attrs) {\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = nodeIndex + HEADER_OFFSET;\n        ngDevMode && assertDataInRange(lView, nodeIndex + HEADER_OFFSET);\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var comment = lView[adjustedIndex] =\n            lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 0 /* Container */, tagName, attrs);\n        var lContainer = lView[adjustedIndex] = createLContainer(comment, lView, comment, tNode);\n        appendChild(comment, tNode, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, lContainer);\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n            tView.blueprint[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     *\n     * @codeGenApi\n     */\n    function ɵɵreference(index) {\n        var contextLView = getContextLView();\n        return loadInternal(contextLView, index);\n    }\n    /**\n     * Retrieves a value from current `viewData`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵload(index) {\n        return loadInternal(getLView(), index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ɵɵdirectiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        var lView = getLView();\n        // Fall back to inject() if view hasn't been created. This situation can happen in tests\n        // if inject utilities are used before bootstrapping.\n        if (lView == null)\n            return ɵɵinject(token, flags);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), lView, token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n\n    /**\n     * --------\n     *\n     * This file contains the core logic for how styling instructions are processed in Angular.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    /**\n     * Temporary function to bridge styling functionality between this new\n     * refactor (which is here inside of `styling_next/`) and the old\n     * implementation (which lives inside of `styling/`).\n     *\n     * This function is executed during the creation block of an element.\n     * Because the existing styling implementation issues a call to the\n     * `styling()` instruction, this instruction will also get run. The\n     * central idea here is that the directive index values are bound\n     * into the context. The directive index is temporary and is only\n     * required until the `select(n)` instruction is fully functional.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyling() {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var tNode_1 = getPreviousOrParentTNode();\n            var directiveStylingIndex_1 = getActiveDirectiveStylingIndex();\n            // temporary workaround until `select(n)` is fully compatible\n            if (directiveStylingIndex_1) {\n                var fns = tNode_1.onElementCreationFns = tNode_1.onElementCreationFns || [];\n                fns.push(function () { return updateLastDirectiveIndex$1(tNode_1, directiveStylingIndex_1); });\n            }\n            else {\n                updateLastDirectiveIndex$1(tNode_1, directiveStylingIndex_1);\n            }\n        }\n    }\n    /**\n     * Sets the current style sanitizer function which will then be used\n     * within all follow-up prop and map-based style binding instructions\n     * for the given element.\n     *\n     * Note that once styling has been applied to the element (i.e. once\n     * `select(n)` is executed or the hostBindings/template function exits)\n     * then the active `sanitizerFn` will be set to `null`. This means that\n     * once styling is applied to another element then a another call to\n     * `styleSanitizer` will need to be made.\n     *\n     * @param sanitizerFn The sanitization function that will be used to\n     *       process style prop/value entries.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleSanitizer(sanitizer) {\n        setCurrentStyleSanitizer(sanitizer);\n    }\n    /**\n     * Update a style binding on an element with the provided value.\n     *\n     * If the style value is falsy then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `styleMap` or any static styles that are\n     * present from when the element was created with `styling`).\n     *\n     * Note that the styling element is updated as part of `stylingApply`.\n     *\n     * @param prop A valid CSS property.\n     * @param value New value to write (`null` or an empty string to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     *\n     * Note that this will apply the provided style value to the host element if this function is called\n     * within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleProp(prop, value, suffix) {\n        stylePropInternal(getSelectedIndex(), prop, value, suffix);\n    }\n    function stylePropInternal(elementIndex, prop, value, suffix) {\n        var lView = getLView();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        var updated = _stylingProp(elementIndex, bindingIndex, prop, resolveStylePropValue(value, suffix), false, deferStylingUpdate());\n        if (ngDevMode) {\n            ngDevMode.styleProp++;\n            if (updated) {\n                ngDevMode.stylePropCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Update a class binding on an element with the provided value.\n     *\n     * This instruction is meant to handle the `[class.foo]=\"exp\"` case and,\n     * therefore, the class binding itself must already be allocated using\n     * `styling` within the creation block.\n     *\n     * @param prop A valid CSS class (only one).\n     * @param value A true/false value which will turn the class on or off.\n     *\n     * Note that this will apply the provided class value to the host element if this function\n     * is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassProp(className, value) {\n        var lView = getLView();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        var updated = _stylingProp(getSelectedIndex(), bindingIndex, className, value, true, deferStylingUpdate());\n        if (ngDevMode) {\n            ngDevMode.classProp++;\n            if (updated) {\n                ngDevMode.classPropCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Shared function used to update a prop-based styling binding for an element.\n     */\n    function _stylingProp(elementIndex, bindingIndex, prop, value, isClassBased, defer) {\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var native = getNativeByTNode(tNode, lView);\n        var updated = false;\n        if (value !== NO_CHANGE) {\n            if (isClassBased) {\n                updated = updateClassBinding(getClassesContext(tNode), lView, native, prop, bindingIndex, value, defer, false);\n            }\n            else {\n                var sanitizer = getCurrentStyleSanitizer();\n                updated = updateStyleBinding(getStylesContext(tNode), lView, native, prop, bindingIndex, value, sanitizer, defer, false);\n            }\n        }\n        return updated;\n    }\n    /**\n     * Update style bindings using an object literal on an element.\n     *\n     * This instruction is meant to apply styling via the `[style]=\"exp\"` template bindings.\n     * When styles are applied to the element they will then be updated with respect to\n     * any styles/classes set via `styleProp`. If any styles are set to falsy\n     * then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     *\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     *\n     * Note that this will apply the provided styleMap value to the host element if this function\n     * is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleMap(styles) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var context = getStylesContext(tNode);\n        var directiveIndex = getActiveDirectiveStylingIndex();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!directiveIndex && hasStyleInput(tNode) && styles !== NO_CHANGE) {\n            updateDirectiveInputValue(context, lView, tNode, bindingIndex, styles, false);\n            styles = NO_CHANGE;\n        }\n        var updated = _stylingMap(index, context, bindingIndex, styles, false, deferStylingUpdate());\n        if (ngDevMode) {\n            ngDevMode.styleMap++;\n            if (updated) {\n                ngDevMode.styleMapCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Update class bindings using an object literal or class-string on an element.\n     *\n     * This instruction is meant to apply styling via the `[class]=\"exp\"` template bindings.\n     * When classes are applied to the element they will then be updated with\n     * respect to any styles/classes set via `classProp`. If any\n     * classes are set to falsy then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     * Note that this will the provided classMap value to the host element if this function is called\n     * within a host binding.\n     *\n     * @param classes A key/value map or string of CSS classes that will be added to the\n     *        given element. Any missing classes (that have already been applied to the element\n     *        beforehand) will be removed (unset) from the element's list of CSS classes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassMap(classes) {\n        classMapInternal(getSelectedIndex(), classes);\n    }\n    function classMapInternal(elementIndex, classes) {\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var context = getClassesContext(tNode);\n        var directiveIndex = getActiveDirectiveStylingIndex();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!directiveIndex && hasClassInput(tNode) && classes !== NO_CHANGE) {\n            updateDirectiveInputValue(context, lView, tNode, bindingIndex, classes, true);\n            classes = NO_CHANGE;\n        }\n        var updated = _stylingMap(elementIndex, context, bindingIndex, classes, true, deferStylingUpdate());\n        if (ngDevMode) {\n            ngDevMode.classMap++;\n            if (updated) {\n                ngDevMode.classMapCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Shared function used to update a map-based styling binding for an element.\n     *\n     * When this function is called it will activate support for `[style]` and\n     * `[class]` bindings in Angular.\n     */\n    function _stylingMap(elementIndex, context, bindingIndex, value, isClassBased, defer) {\n        activateStylingMapFeature();\n        var lView = getLView();\n        var valueHasChanged = false;\n        if (value !== NO_CHANGE) {\n            var tNode = getTNode(elementIndex, lView);\n            var native = getNativeByTNode(tNode, lView);\n            var oldValue = lView[bindingIndex];\n            valueHasChanged = hasValueChanged(oldValue, value);\n            var stylingMapArr = normalizeIntoStylingMap(oldValue, value, !isClassBased);\n            if (isClassBased) {\n                updateClassBinding(context, lView, native, null, bindingIndex, stylingMapArr, defer, valueHasChanged);\n            }\n            else {\n                var sanitizer = getCurrentStyleSanitizer();\n                updateStyleBinding(context, lView, native, null, bindingIndex, stylingMapArr, sanitizer, defer, valueHasChanged);\n            }\n        }\n        return valueHasChanged;\n    }\n    /**\n     * Writes a value to a directive's `style` or `class` input binding (if it has changed).\n     *\n     * If a directive has a `@Input` binding that is set on `style` or `class` then that value\n     * will take priority over the underlying style/class styling bindings. This value will\n     * be updated for the binding each time during change detection.\n     *\n     * When this occurs this function will attempt to write the value to the input binding\n     * depending on the following situations:\n     *\n     * - If `oldValue !== newValue`\n     * - If `newValue` is `null` (but this is skipped if it is during the first update pass--\n     *    which is when the context is not locked yet)\n     */\n    function updateDirectiveInputValue(context, lView, tNode, bindingIndex, newValue, isClassBased) {\n        var oldValue = lView[bindingIndex];\n        if (oldValue !== newValue) {\n            // even if the value has changed we may not want to emit it to the\n            // directive input(s) in the event that it is falsy during the\n            // first update pass.\n            if (newValue || isContextLocked(context)) {\n                var inputs = tNode.inputs[isClassBased ? 'class' : 'style'];\n                var initialValue = getInitialStylingValue(context);\n                var value = normalizeStylingDirectiveInputValue(initialValue, newValue, isClassBased);\n                setInputsForProperty(lView, inputs, value);\n            }\n            lView[bindingIndex] = newValue;\n        }\n    }\n    /**\n     * Returns the appropriate directive input value for `style` or `class`.\n     *\n     * Earlier versions of Angular expect a binding value to be passed into directive code\n     * exactly as it is unless there is a static value present (in which case both values\n     * will be stringified and concatenated).\n     */\n    function normalizeStylingDirectiveInputValue(initialValue, bindingValue, isClassBased) {\n        var value = bindingValue;\n        // we only concat values if there is an initial value, otherwise we return the value as is.\n        // Note that this is to satisfy backwards-compatibility in Angular.\n        if (initialValue.length > 0) {\n            if (isClassBased) {\n                value = concatString(initialValue, forceClassesAsString(bindingValue));\n            }\n            else {\n                value = concatString(initialValue, forceStylesAsString(bindingValue), ';');\n            }\n        }\n        return value;\n    }\n    /**\n     * Temporary function to bridge styling functionality between this new\n     * refactor (which is here inside of `styling_next/`) and the old\n     * implementation (which lives inside of `styling/`).\n     *\n     * The new styling refactor ensures that styling flushing is called\n     * automatically when a template function exits or a follow-up element\n     * is visited (i.e. when `select(n)` is called). Because the `select(n)`\n     * instruction is not fully implemented yet (it doesn't actually execute\n     * host binding instruction code at the right time), this means that a\n     * styling apply function is still needed.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstylingApply() {\n        var elementIndex = getSelectedIndex();\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var renderer = getRenderer(tNode, lView);\n        var native = getNativeByTNode(tNode, lView);\n        var directiveIndex = getActiveDirectiveStylingIndex();\n        var sanitizer = getCurrentStyleSanitizer();\n        flushStyling(renderer, lView, getClassesContext(tNode), getStylesContext(tNode), native, directiveIndex, sanitizer);\n        setCurrentStyleSanitizer(null);\n    }\n    function getRenderer(tNode, lView) {\n        return tNode.type === 3 /* Element */ ? lView[RENDERER] : null;\n    }\n    /**\n     * Searches and assigns provided all static style/class entries (found in the `attrs` value)\n     * and registers them in their respective styling contexts.\n     */\n    function registerInitialStylingOnTNode(tNode, attrs, startIndex) {\n        var hasAdditionalInitialStyling = false;\n        var styles = getStylingMapArray(tNode.styles);\n        var classes = getStylingMapArray(tNode.classes);\n        var mode = -1;\n        for (var i = startIndex; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode == 1 /* Classes */) {\n                classes = classes || [''];\n                addItemToStylingMap(classes, attr, true);\n                hasAdditionalInitialStyling = true;\n            }\n            else if (mode == 2 /* Styles */) {\n                var value = attrs[++i];\n                styles = styles || [''];\n                addItemToStylingMap(styles, attr, value);\n                hasAdditionalInitialStyling = true;\n            }\n        }\n        if (classes && classes.length > 1 /* ValuesStartPosition */) {\n            classes[0 /* RawValuePosition */] = stylingMapToString(classes, true);\n            tNode.classes = classes;\n        }\n        if (styles && styles.length > 1 /* ValuesStartPosition */) {\n            styles[0 /* RawValuePosition */] = stylingMapToString(styles, false);\n            tNode.styles = styles;\n        }\n        return hasAdditionalInitialStyling;\n    }\n    function getActiveDirectiveStylingIndex() {\n        // whenever a directive's hostBindings function is called a uniqueId value\n        // is assigned. Normally this is enough to help distinguish one directive\n        // from another for the styling context, but there are situations where a\n        // sub-class directive could inherit and assign styling in concert with a\n        // parent directive. To help the styling code distinguish between a parent\n        // sub-classed directive the inheritance depth is taken into account as well.\n        return getActiveDirectiveId() + getActiveDirectiveSuperClassDepth();\n    }\n    /**\n     * Temporary function that will update the max directive index value in\n     * both the classes and styles contexts present on the provided `tNode`.\n     *\n     * This code is only used because the `select(n)` code functionality is not\n     * yet 100% functional. The `select(n)` instruction cannot yet evaluate host\n     * bindings function code in sync with the associated template function code.\n     * For this reason the styling algorithm needs to track the last directive index\n     * value so that it knows exactly when to render styling to the element since\n     * `stylingApply()` is called multiple times per CD (`stylingApply` will be\n     * removed once `select(n)` is fixed).\n     */\n    function updateLastDirectiveIndex$1(tNode, directiveIndex) {\n        updateLastDirectiveIndex(getClassesContext(tNode), directiveIndex);\n        updateLastDirectiveIndex(getStylesContext(tNode), directiveIndex);\n    }\n    function getStylesContext(tNode) {\n        return getContext(tNode, false);\n    }\n    function getClassesContext(tNode) {\n        return getContext(tNode, true);\n    }\n    /**\n     * Returns/instantiates a styling context from/to a `tNode` instance.\n     */\n    function getContext(tNode, isClassBased) {\n        var context = isClassBased ? tNode.classes : tNode.styles;\n        if (!isStylingContext$1(context)) {\n            context = allocTStylingContext(context);\n            if (ngDevMode) {\n                attachStylingDebugObject(context);\n            }\n            if (isClassBased) {\n                tNode.classes = context;\n            }\n            else {\n                tNode.styles = context;\n            }\n        }\n        return context;\n    }\n    function resolveStylePropValue(value, suffix) {\n        if (value === NO_CHANGE)\n            return value;\n        var resolvedValue = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                resolvedValue = renderStringify(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                resolvedValue = value;\n            }\n        }\n        return resolvedValue;\n    }\n    /**\n     * Whether or not a style/class binding update should be applied later.\n     *\n     * This function will decide whether a binding should be applied immediately\n     * or later (just before the styles/classes are flushed to the element). The\n     * reason why this feature exists is because of super/sub directive inheritance.\n     * Angular will evaluate host bindings on the super directive first and the sub\n     * directive, but the styling bindings on the sub directive are of higher priority\n     * than the super directive. For this reason all styling bindings that take place\n     * in this circumstance will need to be deferred until later so that they can be\n     * applied together and in a different order (the algorithm handles that part).\n     */\n    function deferStylingUpdate() {\n        return getActiveDirectiveSuperClassHeight() > 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementStart(index, name, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var native = lView[index + HEADER_OFFSET] = elementCreate(name);\n        var renderer = lView[RENDERER];\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 3 /* Element */, name, attrs || null);\n        if (attrs != null) {\n            var lastAttrIndex = setUpAttributes(native, attrs);\n            if (tView.firstTemplatePass) {\n                registerInitialStylingOnTNode(tNode, attrs, lastAttrIndex);\n            }\n        }\n        renderInitialStyling(renderer, native, tNode);\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, tNode, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstTemplatePass) {\n            var inputData = initializeTNodeInputs(tNode);\n            if (inputData && inputData.hasOwnProperty('class')) {\n                tNode.flags |= 8 /* hasClassInput */;\n            }\n            if (inputData && inputData.hasOwnProperty('style')) {\n                tNode.flags |= 16 /* hasStyleInput */;\n            }\n        }\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            currentQueries.addNode(tNode);\n            lView[QUERIES] = currentQueries.clone(tNode);\n        }\n        executeContentQueries(tView, tNode, lView);\n    }\n    /**\n     * Mark the end of the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDefined(previousOrParentTNode, 'No parent node to close.');\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        var tNode = previousOrParentTNode;\n        // this is required for all host-level styling-related instructions to run\n        // in the correct order\n        tNode.onElementCreationFns && applyOnCreateInstructions(tNode);\n        ngDevMode && assertNodeType(tNode, 3 /* Element */);\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        // Go back up to parent queries only if queries have been cloned on this element.\n        if (currentQueries && tNode.index === currentQueries.nodeIndex) {\n            lView[QUERIES] = currentQueries.parent;\n        }\n        registerPostOrderHooks(lView[TVIEW], tNode);\n        decreaseElementDepthCount();\n        if (hasClassInput(tNode) && tNode.classes) {\n            setDirectiveStylingInput(tNode.classes, lView, tNode.inputs['class']);\n        }\n        if (hasStyleInput(tNode) && tNode.styles) {\n            setDirectiveStylingInput(tNode.styles, lView, tNode.inputs['style']);\n        }\n    }\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelement(index, name, attrs, localRefs) {\n        ɵɵelementStart(index, name, attrs, localRefs);\n        ɵɵelementEnd();\n    }\n    /**\n     * Assign static attribute values to a host element.\n     *\n     * This instruction will assign static attribute values as well as class and style\n     * values to an element within the host bindings function. Since attribute values\n     * can consist of different types of values, the `attrs` array must include the values in\n     * the following format:\n     *\n     * attrs = [\n     *   // static attributes (like `title`, `name`, `id`...)\n     *   attr1, value1, attr2, value,\n     *\n     *   // a single namespace value (like `x:id`)\n     *   NAMESPACE_MARKER, namespaceUri1, name1, value1,\n     *\n     *   // another single namespace value (like `x:name`)\n     *   NAMESPACE_MARKER, namespaceUri2, name2, value2,\n     *\n     *   // a series of CSS classes that will be applied to the element (no spaces)\n     *   CLASSES_MARKER, class1, class2, class3,\n     *\n     *   // a series of CSS styles (property + value) that will be applied to the element\n     *   STYLES_MARKER, prop1, value1, prop2, value2\n     * ]\n     *\n     * All non-class and non-style attributes must be defined at the start of the list\n     * first before all class and style values are set. When there is a change in value\n     * type (like when classes and styles are introduced) a marker must be used to separate\n     * the entries. The marker values themselves are set via entries found in the\n     * [AttributeMarker] enum.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array of static values (attributes, classes and styles) with the correct marker\n     * values.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementHostAttrs(attrs) {\n        var hostElementIndex = getSelectedIndex();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var tNode = getTNode(hostElementIndex, lView);\n        // non-element nodes (e.g. `<ng-container>`) are not rendered as actual\n        // element nodes and adding styles/classes on to them will cause runtime\n        // errors...\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var lastAttrIndex = setUpAttributes(native, attrs);\n            if (tView.firstTemplatePass) {\n                var stylingNeedsToBeRendered = registerInitialStylingOnTNode(tNode, attrs, lastAttrIndex);\n                // this is only called during the first template pass in the\n                // event that this current directive assigned initial style/class\n                // host attribute values to the element. Because initial styling\n                // values are applied before directives are first rendered (within\n                // `createElement`) this means that initial styling for any directives\n                // still needs to be applied. Note that this will only happen during\n                // the first template pass and not each time a directive applies its\n                // attribute values to the element.\n                if (stylingNeedsToBeRendered) {\n                    var renderer = lView[RENDERER];\n                    renderInitialStyling(renderer, native, tNode);\n                }\n            }\n        }\n    }\n    function setDirectiveStylingInput(context, lView, stylingInputs) {\n        // older versions of Angular treat the input as `null` in the\n        // event that the value does not exist at all. For this reason\n        // we can't have a styling value be an empty string.\n        var value = getInitialStylingValue(context) || null;\n        // Ivy does an extra `[class]` write with a falsy value since the value\n        // is applied during creation mode. This is a deviation from VE and should\n        // be (Jira Issue = FW-1467).\n        setInputsForProperty(lView, stylingInputs, value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerStart(index, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var native = lView[index + HEADER_OFFSET] = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 4 /* ElementContainer */, tagName, attrs || null);\n        if (attrs && tView.firstTemplatePass) {\n            // While ng-container doesn't necessarily support styling, we use the style context to identify\n            // and execute directives on the ng-container.\n            registerInitialStylingOnTNode(tNode, attrs, 0);\n        }\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, tNode, localRefs);\n        attachPatchData(native, lView);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            currentQueries.addNode(tNode);\n            lView[QUERIES] = currentQueries.clone(tNode);\n        }\n        executeContentQueries(tView, tNode, lView);\n    }\n    /**\n     * Mark the end of the <ng-container>.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        var currentQueries = lView[QUERIES];\n        // Go back up to parent queries only if queries have been cloned on this element.\n        if (currentQueries && previousOrParentTNode.index === currentQueries.nodeIndex) {\n            lView[QUERIES] = currentQueries.parent;\n        }\n        // this is required for all host-level styling-related instructions to run\n        // in the correct order\n        previousOrParentTNode.onElementCreationFns && applyOnCreateInstructions(previousOrParentTNode);\n        registerPostOrderHooks(tView, previousOrParentTNode);\n    }\n    /**\n     * Creates an empty logical container using {@link elementContainerStart}\n     * and {@link elementContainerEnd}\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainer(index, attrs, localRefs) {\n        ɵɵelementContainerStart(index, attrs, localRefs);\n        ɵɵelementContainerEnd();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewStart(viewBlockId, consts, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent();\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 16 /* CheckAlways */, null, null);\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            var tParentNode = getIsParent() ? previousOrParentTNode :\n                previousOrParentTNode && previousOrParentTNode.parent;\n            assignTViewNodeToLView(viewToRender[TVIEW], tParentNode, viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     */\n    function scanForView(lContainer, startIdx, viewBlockId) {\n        for (var i = startIdx + CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var viewAtPositionId = lContainer[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return lContainer[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, i - CONTAINER_HEADER_OFFSET);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the end of an embedded view.\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewEnd() {\n        var lView = getLView();\n        var viewHost = lView[T_HOST];\n        if (isCreationMode(lView)) {\n            refreshDescendantViews(lView); // creation mode pass\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        resetPreOrderHookFlags(lView);\n        refreshDescendantViews(lView); // update mode pass\n        var lContainer = lView[PARENT];\n        ngDevMode && assertLContainerOrUndefined(lContainer);\n        // It's always safe to run hooks here, as `leaveView` is not called during the 'finally' block\n        // of a try-catch-finally statement, so it can never be reached while unwinding the stack due to\n        // an error being thrown.\n        leaveView(lContainer[PARENT], /* safeToRunHooks */ true);\n        setPreviousOrParentTNode(viewHost, false);\n    }\n\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @codeGenApi\n     */\n    function ɵɵgetCurrentView() {\n        return getLView();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n     */\n    function ɵɵlistener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n    * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component.\n    *\n    * This instruction is for compatibility purposes and is designed to ensure that a\n    * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n    * in the component's renderer. Normally all host listeners are evaluated with the\n    * parent component's renderer, but, in the case of animation @triggers, they need\n    * to be evaluated with the sub component's renderer (because that's where the\n    * animation triggers are defined).\n    *\n    * Do not use this instruction as a replacement for `listener`. This instruction\n    * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n    *\n    * @param eventName Name of the event\n    * @param listenerFn The function to be called when event emits\n    * @param useCapture Whether or not to use capture in event listener\n    * @param eventTargetResolver Function that returns global target information in case this listener\n    * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n    */\n    function ɵɵcomponentHostSyntheticListener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadComponentRenderer);\n    }\n    /**\n     * A utility function that checks if a given element has already an event handler registered for an\n     * event with a specified name. The TView.cleanup data structure is used to find out which events\n     * are registered for a given element.\n     */\n    function findExistingListener(lView, eventName, tNodeIdx) {\n        var tView = lView[TVIEW];\n        var tCleanup = tView.cleanup;\n        if (tCleanup != null) {\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                var cleanupEventName = tCleanup[i];\n                if (cleanupEventName === eventName && tCleanup[i + 1] === tNodeIdx) {\n                    // We have found a matching event name on the same node but it might not have been\n                    // registered yet, so we must explicitly verify entries in the LView cleanup data\n                    // structures.\n                    var lCleanup = lView[CLEANUP];\n                    var listenerIdxInLCleanup = tCleanup[i + 2];\n                    return lCleanup.length > listenerIdxInLCleanup ? lCleanup[listenerIdxInLCleanup] : null;\n                }\n                // TView.cleanup can have a mix of 4-elements entries (for event handler cleanups) or\n                // 2-element entries (for directive and queries destroy hooks). As such we can encounter\n                // blocks of 4 or 2 items in the tView.cleanup and this is why we iterate over 2 elements\n                // first and jump another 2 elements if we detect listeners cleanup (4 elements). Also check\n                // documentation of TView.cleanup for more details of this data structure layout.\n                if (typeof cleanupEventName === 'string') {\n                    i += 2;\n                }\n            }\n        }\n        return null;\n    }\n    function listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadRendererFn) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var tView = lView[TVIEW];\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        var processOutputs = true;\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : EMPTY_OBJ;\n            var target = resolved.target || native;\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(unwrapRNode(_lView[tNode.index])).target; } :\n                tNode.index;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // There might be cases where multiple directives on the same element try to register an event\n                // handler function for the same event. In this situation we want to avoid registration of\n                // several native listeners as each registration would be intercepted by NgZone and\n                // trigger change detection. This would mean that a single user action would result in several\n                // change detections being invoked. To avoid this situation we want to have only one call to\n                // native handler registration (for the same element and same type of event).\n                //\n                // In order to have just one native event handler in presence of multiple handler functions,\n                // we just register a first handler function as a native event listener and then chain\n                // (coalesce) other handler functions on top of the first native handler function.\n                var existingListener = null;\n                // Please note that the coalescing described here doesn't happen for events specifying an\n                // alternative target (ex. (document:click)) - this is to keep backward compatibility with the\n                // view engine.\n                // Also, we don't have to search for existing listeners is there are no directives\n                // matching on a given node as we can't register multiple event handlers for the same event in\n                // a template (this would mean having duplicate attributes).\n                if (!eventTargetResolver && hasDirectives(tNode)) {\n                    existingListener = findExistingListener(lView, eventName, tNode.index);\n                }\n                if (existingListener !== null) {\n                    // Attach a new listener at the head of the coalesced listeners list.\n                    listenerFn.__ngNextListenerFn__ = existingListener.__ngNextListenerFn__;\n                    existingListener.__ngNextListenerFn__ = listenerFn;\n                    processOutputs = false;\n                }\n                else {\n                    // The first argument of `listen` function in Procedural Renderer is:\n                    // - either a target name (as a string) in case of global target (window, document, body)\n                    // - or element reference (in all other cases)\n                    listenerFn = wrapListener(tNode, lView, listenerFn, false /** preventDefault */);\n                    var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                    ngDevMode && ngDevMode.rendererAddEventListener++;\n                    lCleanup.push(listenerFn, cleanupFn);\n                    tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, lCleanupIndex + 1);\n                }\n            }\n            else {\n                listenerFn = wrapListener(tNode, lView, listenerFn, true /** preventDefault */);\n                target.addEventListener(eventName, listenerFn, useCapture);\n                ngDevMode && ngDevMode.rendererAddEventListener++;\n                lCleanup.push(listenerFn);\n                tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCapture);\n            }\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var props;\n        if (processOutputs && outputs && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 3) {\n                    var index = props[i];\n                    ngDevMode && assertDataInRange(lView, index);\n                    var minifiedName = props[i + 2];\n                    var directiveInstance = lView[index];\n                    var output = directiveInstance[minifiedName];\n                    if (ngDevMode && !isObservable(output)) {\n                        throw new Error(\"@Output \" + minifiedName + \" not initialized in '\" + directiveInstance.constructor.name + \"'.\");\n                    }\n                    var subscription = output.subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    function executeListenerWithErrorHandling(lView, listenerFn, e) {\n        try {\n            // Only explicitly returning false from a listener should preventDefault\n            return listenerFn(e) !== false;\n        }\n        catch (error) {\n            handleError(lView, error);\n            return false;\n        }\n    }\n    /**\n     * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,\n     * if applicable.\n     *\n     * @param tNode The TNode associated with this listener\n     * @param lView The LView that contains this listener\n     * @param listenerFn The listener function to call\n     * @param wrapWithPreventDefault Whether or not to prevent default behavior\n     * (the procedural renderer does this already, so in those cases, we should skip)\n     */\n    function wrapListener(tNode, lView, listenerFn, wrapWithPreventDefault) {\n        // Note: we are performing most of the work in the listener function itself\n        // to optimize listener registration.\n        return function wrapListenerIn_markDirtyAndPreventDefault(e) {\n            // In order to be backwards compatible with View Engine, events on component host nodes\n            // must also mark the component view itself dirty (i.e. the view that it owns).\n            var startView = tNode.flags & 1 /* isComponent */ ? getComponentViewByIndex(tNode.index, lView) : lView;\n            // See interfaces/view.ts for more on LViewFlags.ManualOnPush\n            if ((lView[FLAGS] & 32 /* ManualOnPush */) === 0) {\n                markViewDirty(startView);\n            }\n            var result = executeListenerWithErrorHandling(lView, listenerFn, e);\n            // A just-invoked listener function might have coalesced listeners so we need to check for\n            // their presence and invoke as needed.\n            var nextListenerFn = wrapListenerIn_markDirtyAndPreventDefault.__ngNextListenerFn__;\n            while (nextListenerFn) {\n                // We should prevent default if any of the listeners explicitly return false\n                result = executeListenerWithErrorHandling(lView, nextListenerFn, e) && result;\n                nextListenerFn = nextListenerFn.__ngNextListenerFn__;\n            }\n            if (wrapWithPreventDefault && result === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n            return result;\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     *\n     * @codeGenApi\n     */\n    function ɵɵnextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n\n    /**\n     * Checks a given node against matching projection slots and returns the\n     * determined slot index. Returns \"null\" if no slot matched the given node.\n     *\n     * This function takes into account the parsed ngProjectAs selector from the\n     * node's attributes. If present, it will check whether the ngProjectAs selector\n     * matches any of the projection slot selectors.\n     */\n    function matchingProjectionSlotIndex(tNode, projectionSlots) {\n        var wildcardNgContentIndex = null;\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < projectionSlots.length; i++) {\n            var slotValue = projectionSlots[i];\n            // The last wildcard projection slot should match all nodes which aren't matching\n            // any selector. This is necessary to be backwards compatible with view engine.\n            if (slotValue === '*') {\n                wildcardNgContentIndex = i;\n                continue;\n            }\n            // If we ran into an `ngProjectAs` attribute, we should match its parsed selector\n            // to the list of selectors, otherwise we fall back to matching against the node.\n            if (ngProjectAsAttrVal === null ?\n                isNodeMatchingSelectorList(tNode, slotValue, /* isProjectionMode */ true) :\n                isSelectorInSelectorList(ngProjectAsAttrVal, slotValue)) {\n                return i; // first matching selector \"captures\" a given node\n            }\n        }\n        return wildcardNgContentIndex;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param projectionSlots? A collection of projection slots. A projection slot can be based\n     *        on a parsed CSS selectors or set to the wildcard selector (\"*\") in order to match\n     *        all nodes which do not match any selector. If not specified, a single wildcard\n     *        selector projection slot will be defined.\n     *\n     * @codeGenApi\n     */\n    function ɵɵprojectionDef(projectionSlots) {\n        var componentNode = findComponentView(getLView())[T_HOST];\n        if (!componentNode.projection) {\n            // If no explicit projection slots are defined, fall back to a single\n            // projection slot with the wildcard selector.\n            var numProjectionSlots = projectionSlots ? projectionSlots.length : 1;\n            var projectionHeads = componentNode.projection =\n                new Array(numProjectionSlots).fill(null);\n            var tails = projectionHeads.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var slotIndex = projectionSlots ? matchingProjectionSlotIndex(componentChild, projectionSlots) : 0;\n                if (slotIndex !== null) {\n                    if (tails[slotIndex]) {\n                        tails[slotIndex].projectionNext = componentChild;\n                    }\n                    else {\n                        projectionHeads[slotIndex] = componentChild;\n                    }\n                    tails[slotIndex] = componentChild;\n                }\n                componentChild = componentChild.next;\n            }\n        }\n    }\n    var delayProjection = false;\n    function setDelayProjection(value) {\n        delayProjection = value;\n    }\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     *\n     * @codeGenApi\n    */\n    function ɵɵprojection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 1 /* Projection */, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsNotParent();\n        // We might need to delay the projection of nodes if they are in the middle of an i18n block\n        if (!delayProjection) {\n            // re-distribution of projectable nodes is stored on a component's view level\n            appendProjectedNodes(lView, tProjectionNode, selectorIndex, findComponentView(lView));\n        }\n    }\n\n    /**\n     *\n     * Update an interpolated property on an element with a lone bound value\n     *\n     * Used when the value passed to a property has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div title=\"{{v0}}\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate('title', v0);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate(propName, v0, sanitizer) {\n        ɵɵpropertyInterpolate1(propName, '', v0, '', sanitizer);\n        return ɵɵpropertyInterpolate;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate1(propName, prefix, v0, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = interpolation1(getLView(), prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate2(propName, prefix, v0, i0, v1, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = interpolation2(getLView(), prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate3(propName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = interpolation3(getLView(), prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate4(propName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = interpolation4(getLView(), prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate5(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = interpolation5(getLView(), prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate6(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = interpolation6(getLView(), prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate7(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = interpolation7(getLView(), prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate8(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = interpolation8(getLView(), prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate8;\n    }\n    /**\n     * Update an interpolated property on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update.\n     * @param values The a collection of values and the strings inbetween those values, beginning with a\n     * string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolateV(propName, values, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = interpolationV(getLView(), values);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtext(index, value) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var textNative = lView[index + HEADER_OFFSET] = createTextNode(value, lView[RENDERER]);\n        ngDevMode && ngDevMode.rendererSetText++;\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, 3 /* Element */, null, null);\n        // Text nodes are self closing.\n        setIsNotParent();\n        appendChild(textNative, tNode, lView);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param value Stringified value to write.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtextBinding(value) {\n        var lView = getLView();\n        var index = getSelectedIndex();\n        var bound = bind(lView, value);\n        if (bound !== NO_CHANGE) {\n            textBindingInternal(lView, index, renderStringify(bound));\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update text content with a lone bound value\n     *\n     * Used when a text node has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div>{{v0}}</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate(v0);\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate(v0) {\n        ɵɵtextInterpolate1('', v0, '');\n        return ɵɵtextInterpolate;\n    }\n    /**\n     *\n     * Update text content with single bound value surrounded by other text.\n     *\n     * Used when a text node has 1 interpolated value in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate1('prefix', v0, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate1(prefix, v0, suffix) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolated = interpolation1(lView, prefix, v0, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, index, interpolated);\n        }\n        return ɵɵtextInterpolate1;\n    }\n    /**\n     *\n     * Update text content with 2 bound values surrounded by other text.\n     *\n     * Used when a text node has 2 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate2(prefix, v0, i0, v1, suffix) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolated = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, index, interpolated);\n        }\n        return ɵɵtextInterpolate2;\n    }\n    /**\n     *\n     * Update text content with 3 bound values surrounded by other text.\n     *\n     * Used when a text node has 3 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolated = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, index, interpolated);\n        }\n        return ɵɵtextInterpolate3;\n    }\n    /**\n     *\n     * Update text content with 4 bound values surrounded by other text.\n     *\n     * Used when a text node has 4 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see ɵɵtextInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolated = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, index, interpolated);\n        }\n        return ɵɵtextInterpolate4;\n    }\n    /**\n     *\n     * Update text content with 5 bound values surrounded by other text.\n     *\n     * Used when a text node has 5 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolated = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, index, interpolated);\n        }\n        return ɵɵtextInterpolate5;\n    }\n    /**\n     *\n     * Update text content with 6 bound values surrounded by other text.\n     *\n     * Used when a text node has 6 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change. @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolated = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, index, interpolated);\n        }\n        return ɵɵtextInterpolate6;\n    }\n    /**\n     *\n     * Update text content with 7 bound values surrounded by other text.\n     *\n     * Used when a text node has 7 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolated = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, index, interpolated);\n        }\n        return ɵɵtextInterpolate7;\n    }\n    /**\n     *\n     * Update text content with 8 bound values surrounded by other text.\n     *\n     * Used when a text node has 8 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolated = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, index, interpolated);\n        }\n        return ɵɵtextInterpolate8;\n    }\n    /**\n     * Update text content with 9 or more bound values other surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 8.\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The a collection of values and the strings in between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     *\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolateV(values) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, index, interpolated);\n        }\n        return ɵɵtextInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated class on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate1('prefix', v0, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     * Update an interpolated class on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolateV(values) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated style property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate1(0, 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate1(prop, prefix, v0, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate2(0, 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate2(prop, prefix, v0, i0, v1, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate3(0, 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate3(prop, prefix, v0, i0, v1, i1, v2, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate4(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate4(prop, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate5(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate5(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate6(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate6(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate7(\n     *    0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate7(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate8(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6,\n     * '-', v7, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate8(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate8;\n    }\n    /**\n     * Update an interpolated style property on an element with 8 or more bound values surrounded by\n     * text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\">\n     * </div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolateV(\n     *  0, ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`..\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolateV(prop, values, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a host element. Only applies to native node properties, not inputs.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵhostProperty(propName, value, sanitizer) {\n        var index = getSelectedIndex();\n        ngDevMode && assertNotEqual(index, -1, 'selected index cannot be -1');\n        var lView = getLView();\n        var bindReconciledValue = bind(lView, value);\n        if (bindReconciledValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, bindReconciledValue, sanitizer, true);\n        }\n        return ɵɵhostProperty;\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub component's renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     *\n     * @codeGenApi\n     */\n    function ɵɵupdateSyntheticHostBinding(propName, value, sanitizer) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        // TODO(benlesh): remove bind call here.\n        var bound = bind(lView, value);\n        if (bound !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, bound, sanitizer, true, loadComponentRenderer);\n        }\n        return ɵɵupdateSyntheticHostBinding;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds a player to an element, directive or component instance that will later be\n     * animated once change detection has passed.\n     *\n     * When a player is added to a reference it will stay active until `player.destroy()`\n     * is called. Once called then the player will be removed from the active players\n     * present on the associated ref instance.\n     *\n     * To get a list of all the active players on an element see [getPlayers].\n     *\n     * @param ref The element, directive or component that the player will be placed on.\n     * @param player The player that will be triggered to play once change detection has run.\n     */\n    function addPlayer(ref, player) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return;\n        }\n        var element = context.native;\n        var lView = context.lView;\n        var playerContext = getOrCreatePlayerContext(element, context);\n        var rootContext = getRootContext(lView);\n        addPlayerInternal(playerContext, rootContext, element, player, 0, ref);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n    /**\n     * Returns a list of all the active players present on the provided ref instance (which can\n     * be an instance of a directive, component or element).\n     *\n     * This function will only return players that have been added to the ref instance using\n     * `addPlayer` or any players that are active through any template styling bindings\n     * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n     *\n     * @publicApi\n     */\n    function getPlayers(ref) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return [];\n        }\n        var stylingContext = getStylingContextFromLView(context.nodeIndex, context.lView);\n        var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n        return playerContext ? getPlayersInternal(playerContext) : [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        var context = loadLContextFromNode(element);\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext$1(element) {\n        var context = loadLContextFromNode(element);\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element);\n        var lView = context.lView;\n        var parent;\n        ngDevMode && assertLView(lView);\n        while (lView[HOST] === null && (parent = getLViewParent(lView))) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = parent;\n        }\n        return lView[FLAGS] & 512 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target);\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (!context)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringifyForError(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = unwrapRNode(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    var _published = false;\n    /**\n     * Publishes a collection of default debug tools onto`window.ng`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext$1);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getPlayers', getPlayers);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ng` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        // this is preemptively set to avoid having test and debug code accidentally\n        // read data from a previous application state...\n        setActiveHostElement(null);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n            16 /* CheckAlways */ | 512 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLView(null, createTView(-1, null, 1, 0, null, null, null, null), rootContext, rootFlags, null, null, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = enterView(rootView, null);\n        var component;\n        // Will become true if the `try` block executes with no errors.\n        var safeToRunHooks = false;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            addToViewTree(rootView, componentView);\n            refreshDescendantViews(rootView); // creation mode pass\n            rootView[FLAGS] &= ~4 /* CreationMode */;\n            resetPreOrderHookFlags(rootView);\n            refreshDescendantViews(rootView); // update mode pass\n            safeToRunHooks = true;\n        }\n        finally {\n            leaveView(oldView, safeToRunHooks);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        ngDevMode && assertDataInRange(rootView, 0 + HEADER_OFFSET);\n        rootView[0 + HEADER_OFFSET] = rNode;\n        var tNode = getOrCreateTNode(tView, null, 0, 3 /* Element */, null, null);\n        var componentView = createLView(rootView, getOrCreateTView(def), null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, rootView[HEADER_OFFSET], tNode, rendererFactory, renderer, sanitizer);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), tView, def.type);\n            tNode.flags = 1 /* isComponent */;\n            initNodeFlags(tNode, rootView.length, 1);\n            queueComponentIndexForCheck(tNode);\n        }\n        // Store component view at node index, with node as the HOST\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        // We want to generate an empty QueryList for root content queries for backwards\n        // compatibility with ViewEngine.\n        if (componentDef.contentQueries) {\n            componentDef.contentQueries(1 /* Create */, component, rootView.length - 1);\n        }\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var elementIndex = rootTNode.index - HEADER_OFFSET;\n            setActiveHostElement(elementIndex);\n            var expando = tView.expandoInstructions;\n            invokeHostBindingsInCreationMode(componentDef, expando, component, rootTNode, tView.firstTemplatePass);\n            rootTNode.onElementCreationFns && applyOnCreateInstructions(rootTNode);\n            setActiveHostElement(null);\n        }\n        if (rootTNode.classes !== null || rootTNode.styles !== null) {\n            var native = componentView[HOST];\n            var renderer = componentView[RENDERER];\n            renderInitialStyling(renderer, native, rootTNode);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        registerPreOrderHooks(dirIndex, def, rootTView, -1, -1, -1);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a basic change from a previous to a new value for a single\n     * property on a directive instance. Passed as a value in a\n     * {@link SimpleChanges} object to the `ngOnChanges` hook.\n     *\n     * @see `OnChanges`\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature()]\n     * });\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵNgOnChangesFeature() {\n        // This option ensures that the ngOnChanges lifecycle hook will be inherited\n        // from superclasses (in InheritDefinitionFeature).\n        NgOnChangesFeatureImpl.ngInherit = true;\n        return NgOnChangesFeatureImpl;\n    }\n    function NgOnChangesFeatureImpl(definition) {\n        if (definition.type.prototype.ngOnChanges) {\n            definition.setInput = ngOnChangesSetInput;\n            definition.onChanges = wrapOnChanges();\n        }\n    }\n    function wrapOnChanges() {\n        return function wrapOnChangesHook_inPreviousChangesStorage() {\n            var simpleChangesStore = getSimpleChangesStore(this);\n            var current = simpleChangesStore && simpleChangesStore.current;\n            if (current) {\n                var previous = simpleChangesStore.previous;\n                if (previous === EMPTY_OBJ) {\n                    simpleChangesStore.previous = current;\n                }\n                else {\n                    // New changes are copied to the previous store, so that we don't lose history for inputs\n                    // which were not changed this time\n                    for (var key in current) {\n                        previous[key] = current[key];\n                    }\n                }\n                simpleChangesStore.current = null;\n                this.ngOnChanges(current);\n            }\n        };\n    }\n    function ngOnChangesSetInput(instance, value, publicName, privateName) {\n        var simpleChangesStore = getSimpleChangesStore(instance) ||\n            setSimpleChangesStore(instance, { previous: EMPTY_OBJ, current: null });\n        var current = simpleChangesStore.current || (simpleChangesStore.current = {});\n        var previous = simpleChangesStore.previous;\n        var declaredName = this.declaredInputs[publicName];\n        var previousChange = previous[declaredName];\n        current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n        instance[privateName] = value;\n    }\n    var SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\n    function getSimpleChangesStore(instance) {\n        return instance[SIMPLE_CHANGES_STORE] || null;\n    }\n    function setSimpleChangesStore(instance, store) {\n        return instance[SIMPLE_CHANGES_STORE] = store;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     *\n     * @codeGenApi\n     */\n    function ɵɵInheritDefinitionFeature(definition) {\n        var e_1, _a;\n        var superType = getSuperType(definition.type);\n        while (superType) {\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                var baseViewQuery = baseDef.viewQuery;\n                var baseContentQueries = baseDef.contentQueries;\n                var baseHostBindings = baseDef.hostBindings;\n                baseHostBindings && inheritHostBindings(definition, baseHostBindings);\n                baseViewQuery && inheritViewQuery(definition, baseViewQuery);\n                baseContentQueries && inheritContentQueries(definition, baseContentQueries);\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var superHostBindings = superDef.hostBindings;\n                superHostBindings && inheritHostBindings(definition, superHostBindings);\n                // Merge queries\n                var superViewQuery = superDef.viewQuery;\n                var superContentQueries = superDef.contentQueries;\n                superViewQuery && inheritViewQuery(definition, superViewQuery);\n                superContentQueries && inheritContentQueries(definition, superContentQueries);\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature.ngInherit) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.ngAfterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.ngAfterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.ngAfterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.ngAfterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.ngDoCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.ngOnDestroy;\n                    definition.onInit = definition.onInit || superPrototype.ngOnInit;\n                    if (superPrototype.ngOnChanges) {\n                        ɵɵNgOnChangesFeature()(definition);\n                    }\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY$2) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n    function inheritViewQuery(definition, superViewQuery) {\n        var prevViewQuery = definition.viewQuery;\n        if (prevViewQuery) {\n            definition.viewQuery = function (rf, ctx) {\n                superViewQuery(rf, ctx);\n                prevViewQuery(rf, ctx);\n            };\n        }\n        else {\n            definition.viewQuery = superViewQuery;\n        }\n    }\n    function inheritContentQueries(definition, superContentQueries) {\n        var prevContentQueries = definition.contentQueries;\n        if (prevContentQueries) {\n            definition.contentQueries = function (rf, ctx, directiveIndex) {\n                superContentQueries(rf, ctx, directiveIndex);\n                prevContentQueries(rf, ctx, directiveIndex);\n            };\n        }\n        else {\n            definition.contentQueries = superContentQueries;\n        }\n    }\n    function inheritHostBindings(definition, superHostBindings) {\n        var prevHostBindings = definition.hostBindings;\n        // If the subclass does not have a host bindings function, we set the subclass host binding\n        // function to be the superclass's (in this feature). We should check if they're the same here\n        // to ensure we don't inherit it twice.\n        if (superHostBindings !== prevHostBindings) {\n            if (prevHostBindings) {\n                // because inheritance is unknown during compile time, the runtime code\n                // needs to be informed of the super-class depth so that instruction code\n                // can distinguish one host bindings function from another. The reason why\n                // relying on the directive uniqueId exclusively is not enough is because the\n                // uniqueId value and the directive instance stay the same between hostBindings\n                // calls throughout the directive inheritance chain. This means that without\n                // a super-class depth value, there is no way to know whether a parent or\n                // sub-class host bindings function is currently being executed.\n                definition.hostBindings = function (rf, ctx, elementIndex) {\n                    // The reason why we increment first and then decrement is so that parent\n                    // hostBindings calls have a higher id value compared to sub-class hostBindings\n                    // calls (this way the leaf directive is always at a super-class depth of 0).\n                    adjustActiveDirectiveSuperClassDepthPosition(1);\n                    try {\n                        superHostBindings(rf, ctx, elementIndex);\n                    }\n                    finally {\n                        adjustActiveDirectiveSuperClassDepthPosition(-1);\n                    }\n                    prevHostBindings(rf, ctx, elementIndex);\n                };\n            }\n            else {\n                definition.hostBindings = superHostBindings;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isClassProvider(provider) || isTypeProvider(provider)) {\n                var prototype = (provider.useClass || provider).prototype;\n                var ngOnDestroy = prototype.ngOnDestroy;\n                if (ngOnDestroy) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(tInjectables.length, ngOnDestroy);\n                }\n            }\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, ɵɵdirectiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent);\n                }\n                if (!isViewProvider && isComponent && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, ɵɵdirectiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * ```ts\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        ɵɵtext(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        ɵɵselect(0);\n     *        ɵɵtextBinding(ctx.greeter.greet());\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     * ```\n     *\n     * @param definition\n     *\n     * @codeGenApi\n     */\n    function ɵɵProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver =\n                function (def, processProvidersFn) {\n                    return providersResolver(def, //\n                    processProvidersFn ? processProvidersFn(providers) : providers, //\n                    viewProviders);\n                };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * Base class for a factory that can create a component dynamically.\n     * Instantiate a factory for a given type of component with `resolveComponentFactory()`.\n     * Use the resulting `ComponentFactory.create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     *\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * A simple registry that maps `Components` to generated `ComponentFactory` classes\n     * that can be used to create instances of components.\n     * Use to obtain the factory for a given component type,\n     * then use the factory's `create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[T_HOST];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 256 /* Destroyed */) === 256 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~128 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 128 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChangesInternal(this._lView, this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._lView);\n        };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = getLViewParent(this._lView)[this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            var nativeNode = getNativeByTNodeOrNull(tNodeChild, lView);\n            nativeNode && result.push(nativeNode);\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            else if (tNodeChild.type === 1 /* Projection */) {\n                var componentView = findComponentView(lView);\n                var componentHost = componentView[T_HOST];\n                var parentView = getLViewParent(componentView);\n                var currentProjectedNode = componentHost.projection[tNodeChild.projection];\n                while (currentProjectedNode && parentView) {\n                    result.push(getNativeByTNode(currentProjectedNode, parentView));\n                    currentProjectedNode = currentProjectedNode.next;\n                }\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _hostLContainer, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._hostLContainer = _hostLContainer;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container, index) {\n                    var currentQueries = this._declarationParentView[QUERIES];\n                    // Query container may be missing if this view was created in a directive\n                    // constructor. Create it now to avoid losing results in embedded views.\n                    if (currentQueries && this._hostLContainer[QUERIES] == null) {\n                        this._hostLContainer[QUERIES] = currentQueries.container();\n                    }\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._hostLContainer[QUERIES], this._injectorIndex);\n                    if (container) {\n                        insertView(lView, container, index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[T_HOST];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            var hostContainer = hostView[hostTNode.index];\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, hostContainer, hostTNode.injectorIndex);\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this.length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) {\n                    return this._lContainer[VIEW_REFS] !== null && this._lContainer[VIEW_REFS][index] || null;\n                };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () {\n                        // Note that if there are no views, the container\n                        // length will be smaller than the header offset.\n                        var viewAmount = this._lContainer.length - CONTAINER_HEADER_OFFSET;\n                        return viewAmount > 0 ? viewAmount : 0;\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._lContainer[VIEW_REFS].splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    this.allocateContainerIfNeeded();\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    if (viewAttachedToContainer(lView)) {\n                        // If view is already attached, fall back to move() so we clean up\n                        // references appropriately.\n                        return this.move(viewRef, adjustedIdx);\n                    }\n                    insertView(lView, this._lContainer, adjustedIdx);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._lContainer[VIEW_REFS].splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    if (index !== -1)\n                        this.detach(index);\n                    this.insert(viewRef, newIndex);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) {\n                    return this._lContainer[VIEW_REFS] !== null ?\n                        this._lContainer[VIEW_REFS].indexOf(viewRef) :\n                        0;\n                };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, adjustedIdx);\n                    this._lContainer[VIEW_REFS].splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx);\n                    var wasDetached = view && this._lContainer[VIEW_REFS].splice(adjustedIdx, 1)[0] != null;\n                    return wasDetached ? new ViewRef(view, view[CONTEXT], -1) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this.length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this.length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                ViewContainerRef_.prototype.allocateContainerIfNeeded = function () {\n                    if (this._lContainer[VIEW_REFS] === null) {\n                        this._lContainer[VIEW_REFS] = [];\n                    }\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = void 0;\n            // If the host is an element container, the native host element is guaranteed to be a\n            // comment and we can reuse that comment as anchor element for the new LContainer.\n            if (hostTNode.type === 4 /* ElementContainer */) {\n                commentNode = unwrapRNode(slotValue);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererCreateComment++;\n                commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            }\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, hostTNode, true);\n            addToViewTree(hostView, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), getLView(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.directiveStart;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */ || hostTNode.type === 0 /* Container */ ||\n            hostTNode.type === 4 /* ElementContainer */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Injects a Renderer2 for the current component. */\n    function injectRenderer2() {\n        // We need the Renderer to be based on the component that it's being injected into, however since\n        // DI happens before we've entered its view, `getLView` will return the parent view instead.\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var nodeAtIndex = getComponentViewByIndex(tNode.index, lView);\n        return getOrCreateRenderer2(isLView(nodeAtIndex) ? nodeAtIndex : lView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('8.2.0-next.2+33.sha-9c954eb.with-local-changes');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = ɵɵdefineInjectable({\n            token: IterableDiffers,\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = ɵɵdefineInjectable({\n            token: KeyValueDiffers,\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$3 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providers[index] = data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable !== null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView$1(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView$1(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode, text) { this.delegate.setValue(renderNode, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey = depDef.tokenKey;\n        if (tokenKey === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(ɵɵinject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue, flags) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, flags);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue, flags);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? componentDef.ngContentSelectors : [];\n            _this.isBoundToModule = !!ngModule;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            // Ensure that the namespace for the root node is correct,\n            // otherwise the browser might not render out the element properly.\n            namespaceHTMLInternal();\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            var rootFlags = this.componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n                16 /* CheckAlways */ | 512 /* IsRoot */;\n            // Check whether this Component needs to be isolated from other components, i.e. whether it\n            // should be placed into its own (empty) root context or existing root context should be used.\n            // Note: this is internal-only convention and might change in the future, so it should not be\n            // relied upon externally.\n            var isIsolated = typeof rootSelectorOrNode === 'string' &&\n                /^#root-ng-internal-isolated-\\d+/.test(rootSelectorOrNode);\n            var rootContext = (isInternalRootView || isIsolated) ?\n                createRootContext() :\n                rootViewInjector.get(ROOT_CONTEXT);\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootLView = createLView(null, createTView(-1, null, 1, 0, null, null, null, null), rootContext, rootFlags, null, null, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            // Will become true if the `try` block executes with no errors.\n            var safeToRunHooks = false;\n            try {\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                if (projectableNodes) {\n                    // projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n                    // case). Here we do normalize passed data structure to be an array of arrays to avoid\n                    // complex checks down the line.\n                    tElementNode.projection =\n                        projectableNodes.map(function (nodesforSlot) { return Array.from(nodesforSlot); });\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                addToViewTree(rootLView, componentView);\n                refreshDescendantViews(rootLView);\n                safeToRunHooks = true;\n            }\n            finally {\n                leaveView(oldLView, safeToRunHooks);\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (isInternalRootView || isIsolated) {\n                // The host element of the internal or isolated root view is attached to the component's host\n                // view node.\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef, _super);\n        function ComponentRef(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = assignTViewNodeToLView(_rootLView[TVIEW], null, -1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef.prototype.destroy = function () {\n            if (this.destroyCbs) {\n                this.destroyCbs.forEach(function (fn) { return fn(); });\n                this.destroyCbs = null;\n                !this.hostView.destroyed && this.hostView.destroy();\n            }\n        };\n        ComponentRef.prototype.onDestroy = function (callback) {\n            if (this.destroyCbs) {\n                this.destroyCbs.push(callback);\n            }\n        };\n        return ComponentRef;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * NOTE: changes to the `ngI18nClosureMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    if (typeof ngI18nClosureMode === 'undefined') {\n        // These property accesses can be ignored because ngI18nClosureMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // Make sure to refer to ngI18nClosureMode as ['ngI18nClosureMode'] for closure.\n        // NOTE: we need to have it in IIFE so that the tree-shaker is happy.\n        (function () {\n            // tslint:disable-next-line:no-toplevel-property-access\n            _global['ngI18nClosureMode'] =\n                // TODO(FW-1250): validate that this actually, you know, works.\n                // tslint:disable-next-line:no-toplevel-property-access\n                typeof goog !== 'undefined' && typeof goog.getMsg === 'function';\n        })();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This const is used to store the locale data registered with `registerLocaleData`\n     */\n    var LOCALE_DATA = {};\n    (function (LocaleDataIndex) {\n        LocaleDataIndex[LocaleDataIndex[\"LocaleId\"] = 0] = \"LocaleId\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsFormat\"] = 1] = \"DayPeriodsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsStandalone\"] = 2] = \"DayPeriodsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysFormat\"] = 3] = \"DaysFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysStandalone\"] = 4] = \"DaysStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsFormat\"] = 5] = \"MonthsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsStandalone\"] = 6] = \"MonthsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"Eras\"] = 7] = \"Eras\";\n        LocaleDataIndex[LocaleDataIndex[\"FirstDayOfWeek\"] = 8] = \"FirstDayOfWeek\";\n        LocaleDataIndex[LocaleDataIndex[\"WeekendRange\"] = 9] = \"WeekendRange\";\n        LocaleDataIndex[LocaleDataIndex[\"DateFormat\"] = 10] = \"DateFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"TimeFormat\"] = 11] = \"TimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DateTimeFormat\"] = 12] = \"DateTimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberSymbols\"] = 13] = \"NumberSymbols\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberFormats\"] = 14] = \"NumberFormats\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencySymbol\"] = 15] = \"CurrencySymbol\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencyName\"] = 16] = \"CurrencyName\";\n        LocaleDataIndex[LocaleDataIndex[\"Currencies\"] = 17] = \"Currencies\";\n        LocaleDataIndex[LocaleDataIndex[\"PluralCase\"] = 18] = \"PluralCase\";\n        LocaleDataIndex[LocaleDataIndex[\"ExtraData\"] = 19] = \"ExtraData\";\n    })(exports.ɵLocaleDataIndex || (exports.ɵLocaleDataIndex = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // THIS CODE IS GENERATED - DO NOT MODIFY\n    // See angular/tools/gulp-tasks/cldr/extract.js\n    var u = undefined;\n    function plural(n) {\n        var i = Math.floor(Math.abs(n)), v = n.toString().replace(/^[^.]*\\.?/, '').length;\n        if (i === 1 && v === 0)\n            return 1;\n        return 5;\n    }\n    var localeEn = [\n        'en', [['a', 'p'], ['AM', 'PM'], u], [['AM', 'PM'], u, u],\n        [\n            ['S', 'M', 'T', 'W', 'T', 'F', 'S'], ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n            ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n            ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']\n        ],\n        u,\n        [\n            ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n            ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            [\n                'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n                'October', 'November', 'December'\n            ]\n        ],\n        u, [['B', 'A'], ['BC', 'AD'], ['Before Christ', 'Anno Domini']], 0, [6, 0],\n        ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'],\n        ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'], ['{1}, {0}', u, '{1} \\'at\\' {0}', u],\n        ['.', ',', ';', '%', '+', '-', 'E', '×', '‰', '∞', 'NaN', ':'],\n        ['#,##0.###', '#,##0%', '¤#,##0.00', '#E0'], '$', 'US Dollar', {}, plural\n    ];\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves the plural function used by ICU expressions to determine the plural case to use\n     * for a given locale.\n     * @param locale A locale code for the locale format rules to use.\n     * @returns The plural function for the locale.\n     * @see `NgPlural`\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function getLocalePluralCase(locale) {\n        var data = findLocaleData(locale);\n        return data[exports.ɵLocaleDataIndex.PluralCase];\n    }\n    /**\n     * Finds the locale data for a given locale.\n     *\n     * @param locale The locale code.\n     * @returns The locale data.\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function findLocaleData(locale) {\n        var normalizedLocale = locale.toLowerCase().replace(/_/g, '-');\n        var match = LOCALE_DATA[normalizedLocale];\n        if (match) {\n            return match;\n        }\n        // let's try to find a parent locale\n        var parentLocale = normalizedLocale.split('-')[0];\n        match = LOCALE_DATA[parentLocale];\n        if (match) {\n            return match;\n        }\n        if (parentLocale === 'en') {\n            return localeEn;\n        }\n        throw new Error(\"Missing locale data for the locale \\\"\" + locale + \"\\\".\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the plural case based on the locale\n     */\n    function getPluralCase(value, locale) {\n        var plural = getLocalePluralCase(locale)(value);\n        switch (plural) {\n            case 0:\n                return 'zero';\n            case 1:\n                return 'one';\n            case 2:\n                return 'two';\n            case 3:\n                return 'few';\n            case 4:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEXP = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*!]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostprocess consts\n    var ROOT_TEMPLATE_ID = 0;\n    var PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]/;\n    var PP_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]|(�\\/?\\*\\d+:\\d+�)/g;\n    var PP_ICU_VARS_REGEXP = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICU_PLACEHOLDERS_REGEXP = /{([A-Z0-9_]+)}/g;\n    var PP_ICUS_REGEXP = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    var PP_CLOSE_TEMPLATE_REGEXP = /\\/\\*/;\n    var PP_TEMPLATE_ID_REGEXP = /\\d+\\:(\\d+)/;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEXP.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else {\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        results.push(substring);\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEXP, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (cases.length > values.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�!{index}(:{block})�`/`�/!{index}(:{block})�`: *Projection Placeholder*:  Marks the\n     *   beginning and end of <ng-content> that was embedded in the original translation block.\n     *   The placeholder `index` points to the element index in the template instructions set.\n     *   An optional `block` that matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nStart(index, message, subTemplateIndex) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        // We need to delay projections until `i18nEnd`\n        setDelayProjection(true);\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    // Count for the number of vars that will be allocated for each i18n block.\n    // It is global because this is used in multiple functions that include loops and recursive calls.\n    // This is reset to 0 when `i18nStartFirstPass` is called.\n    var i18nVarsCount;\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        var viewData = getLView();\n        var startIndex = tView.blueprint.length - HEADER_OFFSET;\n        i18nVarsCount = 0;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[T_HOST] ? parentTNode.index - HEADER_OFFSET : index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = replaceNgsp(templateTranslation).split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === \"#\" /* ELEMENT */) {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === \"#\" /* ELEMENT */) {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = extractParts(value);\n                for (var j = 0; j < parts.length; j++) {\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        var icuNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parts[j];\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (parts[j] !== '') {\n                        var text = parts[j];\n                        // Even indexes are text (including bindings)\n                        var hasBinding = text.match(BINDING_REGEXP);\n                        // Create text nodes\n                        var textNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : text, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(text, textNodeIndex), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        if (i18nVarsCount > 0) {\n            allocExpando(viewData, i18nVarsCount);\n        }\n        ngDevMode &&\n            attachI18nOpCodesDebug(createOpCodes, updateOpCodes, icuExpressions.length ? icuExpressions : null, viewData);\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: i18nVarsCount,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode, viewData) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var nextNode = tNode.next;\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // Re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== viewData[T_HOST]) {\n            tNode.parent = parentTNode;\n        }\n        // If tNode was moved around, we might need to fix a broken link.\n        var cursor = tNode.next;\n        while (cursor) {\n            if (cursor.next === tNode) {\n                cursor.next = nextNode;\n            }\n            cursor = cursor.next;\n        }\n        // If the placeholder to append is a projection, we need to move the projected nodes instead\n        if (tNode.type === 1 /* Projection */) {\n            var tProjectionNode = tNode;\n            appendProjectedNodes(viewData, tProjectionNode, tProjectionNode.projection, findComponentView(viewData));\n            return tNode;\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n     * 4. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        /**\n         * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]\n         *\n         * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n         * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root\n         * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index\n         * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in\n         * front of �#6�. The post processing step restores the right order by keeping track of the\n         * template id stack and looks for placeholders that belong to the currently active template.\n         */\n        var result = message;\n        if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {\n            var matches_1 = {};\n            var templateIdsStack_1 = [ROOT_TEMPLATE_ID];\n            result = result.replace(PP_PLACEHOLDERS_REGEXP, function (m, phs, tmpl) {\n                var content = phs || tmpl;\n                var placeholders = matches_1[content] || [];\n                if (!placeholders.length) {\n                    content.split('|').forEach(function (placeholder) {\n                        var match = placeholder.match(PP_TEMPLATE_ID_REGEXP);\n                        var templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;\n                        var isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);\n                        placeholders.push([templateId, isCloseTemplateTag, placeholder]);\n                    });\n                    matches_1[content] = placeholders;\n                }\n                if (!placeholders.length) {\n                    throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n                }\n                var currentTemplateId = templateIdsStack_1[templateIdsStack_1.length - 1];\n                var idx = 0;\n                // find placeholder index that matches current template id\n                for (var i = 0; i < placeholders.length; i++) {\n                    if (placeholders[i][0] === currentTemplateId) {\n                        idx = i;\n                        break;\n                    }\n                }\n                // update template id stack based on the current tag extracted\n                var _a = __read(placeholders[idx], 3), templateId = _a[0], isCloseTemplateTag = _a[1], placeholder = _a[2];\n                if (isCloseTemplateTag) {\n                    templateIdsStack_1.pop();\n                }\n                else if (currentTemplateId !== templateId) {\n                    templateIdsStack_1.push(templateId);\n                }\n                // remove processed tag from the list\n                placeholders.splice(idx, 1);\n                return placeholder;\n            });\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        /**\n         * Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n         */\n        result = result.replace(PP_ICU_VARS_REGEXP, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        /**\n         * Step 3: replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n         */\n        result = result.replace(PP_ICU_PLACEHOLDERS_REGEXP, function (match, key) {\n            return replacements.hasOwnProperty(key) ? replacements[key] : match;\n        });\n        /**\n         * Step 4: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case\n         * multiple ICUs have the same placeholder name\n         */\n        result = result.replace(PP_ICUS_REGEXP, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nEnd() {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(tView);\n        // Stop delaying projections\n        setDelayProjection(false);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = getLView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // Find the last node that was added before `i18nEnd`\n        var lastCreatedNode = getPreviousOrParentTNode();\n        // Read the instructions to insert/move/remove DOM elements\n        var visitedNodes = readCreateOpCodes(rootIndex, tI18n.create, tI18n.icus, viewData);\n        // Remove deleted nodes\n        for (var i = rootIndex + 1; i <= lastCreatedNode.index - HEADER_OFFSET; i++) {\n            if (visitedNodes.indexOf(i) === -1) {\n                removeNode(i, viewData);\n            }\n        }\n    }\n    /**\n     * Creates and stores the dynamic TNode, and unhooks it from the tree for now.\n     */\n    function createDynamicNodeAtIndex(lView, index, type, native, name) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        lView[index + HEADER_OFFSET] = native;\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, type, name, null);\n        // We are creating a dynamic node, the previous tNode might not be pointing at this node.\n        // We will link ourselves into the tree later with `appendI18nNode`.\n        if (previousOrParentTNode.next === tNode) {\n            previousOrParentTNode.next = null;\n        }\n        return tNode;\n    }\n    function readCreateOpCodes(index, createOpCodes, icus, viewData) {\n        var renderer = getLView()[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedNodes = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                var textNodeIndex = createOpCodes[++i];\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode =\n                    createDynamicNodeAtIndex(viewData, textNodeIndex, 3 /* Element */, textRNode, null);\n                visitedNodes.push(textNodeIndex);\n                setIsNotParent();\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[T_HOST];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode, viewData);\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedNodes.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode, currentTNode.type === 3 /* Element */);\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode, false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        // This code is used for ICU expressions only, since we don't support\n                        // directives/components in ICUs, we don't need to worry about inputs here\n                        elementAttributeInternal(elementNodeIndex, attrName, attrValue, viewData);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        var commentNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(viewData, commentNodeIndex, 5 /* IcuContainer */, commentRNode, null);\n                        visitedNodes.push(commentNodeIndex);\n                        attachPatchData(commentRNode, viewData);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsNotParent();\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        var elementNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(viewData, elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue);\n                        visitedNodes.push(elementNodeIndex);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsNotParent();\n        return visitedNodes;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += renderStringify(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            var tIcuIndex = void 0;\n                            var tIcu = void 0;\n                            var icuTNode = void 0;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var propName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementPropertyInternal(nodeIndex, propName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBindingInternal(viewData, nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    removeNode(nodeIndex_1, viewData);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], icus, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            nativeRemoveNode(viewData[RENDERER], removedPhRNode);\n        }\n        var slotValue = ɵɵload(index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                nativeRemoveNode(viewData[RENDERER], lContainer[NATIVE]);\n            }\n        }\n        // Define this node as detached so that we don't risk projecting it\n        removedPhTNode.flags |= 32 /* isDetached */;\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18n(index, message, subTemplateIndex) {\n        ɵɵi18nStart(index, message, subTemplateIndex);\n        ɵɵi18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nAttributes(index, values) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nAttributesFirstPass(tView, index, values);\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) {\n                    // Odd indexes are ICU expressions\n                    // TODO(ocombe): support ICU expressions in attributes\n                    throw new Error('ICU expressions are not yet supported in attributes');\n                }\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                        }\n                    }\n                    else {\n                        var lView = getLView();\n                        elementAttributeInternal(previousElementIndex, attrName, value, lView);\n                        // Check if that attribute is a directive input\n                        var tNode = getTNode(previousElementIndex, lView);\n                        var dataValue = tNode.inputs && tNode.inputs[attrName];\n                        if (dataValue) {\n                            setInputsForProperty(lView, dataValue, value);\n                        }\n                    }\n                }\n            }\n        }\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            tView.data[index + HEADER_OFFSET] = updateOpCodes;\n        }\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param value The binding's value\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `i18nExp(ctx.name)(ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nExp(value) {\n        var lView = getLView();\n        var expression = bind(lView, value);\n        if (expression !== NO_CHANGE) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n        return ɵɵi18nExp;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    var resolvedCase = getPluralCase(bindingValue, getLocaleId());\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        // Adding the maximum possible of vars needed (based on the cases with the most vars)\n        i18nVarsCount += Math.max.apply(Math, __spread(vars));\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element = currentNode;\n                        var tagName = element.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n    /**\n     * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n     * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n     * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n     * and later on replaced by a space. We are re-implementing the same idea here, since translations\n     * might contain this special character.\n     */\n    var NGSP_UNICODE_REGEXP = /\\uE500/g;\n    function replaceNgsp(value) {\n        return value.replace(NGSP_UNICODE_REGEXP, ' ');\n    }\n    var TRANSLATIONS = {};\n    /**\n     * Set the configuration for `i18nLocalize`.\n     *\n     * @deprecated this method is temporary & should not be used as it will be removed soon\n     */\n    function i18nConfigureLocalize(options) {\n        if (options === void 0) { options = {\n            translations: {}\n        }; }\n        TRANSLATIONS = options.translations;\n    }\n    var LOCALIZE_PH_REGEXP = /\\{\\$(.*?)\\}/g;\n    /**\n     * A goog.getMsg-like function for users that do not use Closure.\n     *\n     * This method is required as a *temporary* measure to prevent i18n tests from being blocked while\n     * running outside of Closure Compiler. This method will not be needed once runtime translation\n     * service support is introduced.\n     *\n     * @codeGenApi\n     * @deprecated this method is temporary & should not be used as it will be removed soon\n     */\n    function ɵɵi18nLocalize(input, placeholders) {\n        if (typeof TRANSLATIONS[input] !== 'undefined') { // to account for empty string\n            input = TRANSLATIONS[input];\n        }\n        if (placeholders !== undefined && Object.keys(placeholders).length) {\n            return input.replace(LOCALIZE_PH_REGEXP, function (_, key) { return placeholders[key] || ''; });\n        }\n        return input;\n    }\n    /**\n     * The locale id that the application is currently using (for translations and ICU expressions).\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    var DEFAULT_LOCALE_ID = 'en-US';\n    var LOCALE_ID = DEFAULT_LOCALE_ID;\n    /**\n     * Sets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     *\n     * @param localeId\n     */\n    function setLocaleId(localeId) {\n        LOCALE_ID = localeId.toLowerCase().replace(/_/g, '-');\n    }\n    /**\n     * Gets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    function getLocaleId() {\n        return LOCALE_ID;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n        modules.set(id, factory);\n    }\n    function assertSameOrNotExisting(id, type, incoming) {\n        if (type && type !== incoming) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(ngModuleType) {\n        if (ngModuleType.ngModuleDef.id !== null) {\n            var id = ngModuleType.ngModuleDef.id;\n            var existing = modules.get(id);\n            assertSameOrNotExisting(id, existing, ngModuleType);\n            modules.set(id, ngModuleType);\n        }\n        var imports = ngModuleType.ngModuleDef.imports;\n        if (imports instanceof Function) {\n            imports = imports();\n        }\n        if (imports) {\n            imports.forEach(function (i) { return registerNgModuleType(i); });\n        }\n    }\n    function getRegisteredNgModuleType(id) {\n        return modules.get(id);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$1, _super);\n        function NgModuleRef$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            var ngLocaleIdDef = getNgLocaleIdDef(ngModuleType);\n            if (ngLocaleIdDef) {\n                setLocaleId(ngLocaleIdDef);\n            }\n            _this._bootstrapComponents = maybeUnwrapFn(ngModuleDef.bootstrap);\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders, stringify(ngModuleType));\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            var injector = this._r3Injector;\n            !injector.destroyed && injector.destroy();\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory, _super);\n        function NgModuleFactory(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            var ngModuleDef = getNgModuleDef(moduleType);\n            if (ngModuleDef !== null) {\n                // Register the NgModule with Angular's module registry. The location (and hence timing) of\n                // this call is critical to ensure this works correctly (modules get registered when expected)\n                // without bloating bundles (modules are registered when otherwise not referenced).\n                //\n                // In View Engine, registration occurs in the .ngfactory.js file as a side effect. This has\n                // several practical consequences:\n                //\n                // - If an .ngfactory file is not imported from, the module won't be registered (and can be\n                //   tree shaken).\n                // - If an .ngfactory file is imported from, the module will be registered even if an instance\n                //   is not actually created (via `create` below).\n                // - Since an .ngfactory file in View Engine references the .ngfactory files of the NgModule's\n                //   imports,\n                //\n                // In Ivy, things are a bit different. .ngfactory files still exist for compatibility, but are\n                // not a required API to use - there are other ways to obtain an NgModuleFactory for a given\n                // NgModule. Thus, relying on a side effect in the .ngfactory file is not sufficient. Instead,\n                // the side effect of registration is added here, in the constructor of NgModuleFactory,\n                // ensuring no matter how a factory is created, the module is registered correctly.\n                //\n                // An alternative would be to include the registration side effect inline following the actual\n                // NgModule definition. This also has the correct timing, but breaks tree-shaking - modules\n                // will be registered and retained even if they're otherwise never referenced.\n                registerNgModuleType(moduleType);\n            }\n            return _this;\n        }\n        NgModuleFactory.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        return noSideEffects(function () {\n            var _a;\n            var clazz = type;\n            // We determine whether a class has its own metadata by taking the metadata from the parent\n            // constructor and checking whether it's the same as the subclass metadata below. We can't use\n            // `hasOwnProperty` here because it doesn't work correctly in IE10 for static fields that are\n            // defined by TS. See https://github.com/angular/angular/pull/28439#issuecomment-459349218.\n            var parentPrototype = clazz.prototype ? Object.getPrototypeOf(clazz.prototype) : null;\n            var parentConstructor = parentPrototype && parentPrototype.constructor;\n            if (decorators !== null) {\n                if (clazz.decorators !== undefined &&\n                    (!parentConstructor || parentConstructor.decorators !== clazz.decorators)) {\n                    (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n                }\n                else {\n                    clazz.decorators = decorators;\n                }\n            }\n            if (ctorParameters !== null) {\n                // Rather than merging, clobber the existing parameters. If other projects exist which use\n                // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n                // but that is vanishingly unlikely.\n                clazz.ctorParameters = ctorParameters;\n            }\n            if (propDecorators !== null) {\n                // The property decorator objects are merged as it is possible different fields have different\n                // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n                // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n                // decorator that's also been downleveled.\n                if (clazz.propDecorators !== undefined &&\n                    (!parentConstructor || parentConstructor.propDecorators !== clazz.propDecorators)) {\n                    clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n                }\n                else {\n                    clazz.propDecorators = propDecorators;\n                }\n            }\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return isCreationMode() ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     *\n     * @publicApi\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind1(index, slotOffset, v1) {\n        var pipeInstance = ɵɵload(index);\n        return unwrapValue$1(isPure(index) ? ɵɵpureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = ɵɵload(index);\n        return unwrapValue$1(isPure(index) ? ɵɵpureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = ɵɵload(index);\n        return unwrapValue$1(isPure(index) ?\n            ɵɵpureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = ɵɵload(index);\n        return unwrapValue$1(isPure(index) ?\n            ɵɵpureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBindV(index, slotOffset, values) {\n        var pipeInstance = ɵɵload(index);\n        return unwrapValue$1(isPure(index) ? ɵɵpureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(index) {\n        return getLView()[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue$1(newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            var lView = getLView();\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = lView[BINDING_INDEX];\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```html\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```html\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function symbolIterator() {\n        return this._results[getSymbolIterator()]();\n    }\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n            // This function should be declared on the prototype, but doing so there will cause the class\n            // declaration to have side-effects and become not tree-shakable. For this reason we do it in\n            // the constructor.\n            // [getSymbolIterator()](): Iterator<T> { ... }\n            var symbol = getSymbolIterator();\n            var proto = QueryList.prototype;\n            if (!proto[symbol])\n                proto[symbol] = symbolIterator;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        /**\n         * Returns a copy of the internal results list as an Array.\n         */\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        /**\n         * Updates the stored data of the query list, and resets the `dirty` flag to `false`, so that\n         * on change detection, it will not notify of changes to the queries, unless a new change\n         * occurs.\n         *\n         * @param resultsTree The results tree to store\n         */\n        QueryList.prototype.reset = function (resultsTree) {\n            this._results = flatten(resultsTree);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        /**\n         * Triggers a change event by emitting on the `changes` {@link EventEmitter}.\n         */\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An object representing a query, which is a combination of:\n     * - query predicate to determines if a given element/directive should be included in the query\n     * - values collected based on a predicate\n     * - `QueryList` to which collected values should be reported\n     */\n    var LQuery = /** @class */ (function () {\n        function LQuery(\n        /**\n         * Next query. Used when queries are stored as a linked list in `LQueries`.\n         */\n        next, \n        /**\n         * Destination to which the value should be added.\n         */\n        list, \n        /**\n         * A predicate which determines if a given element/directive should be included in the query\n         * results.\n         */\n        predicate, \n        /**\n         * Values which have been located.\n         * This is what builds up the `QueryList._valuesTree`.\n         */\n        values, \n        /**\n         * A pointer to an array that stores collected values from views. This is necessary so we\n         * know a container into which to insert nodes collected from views.\n         */\n        containerValues) {\n            this.next = next;\n            this.list = list;\n            this.predicate = predicate;\n            this.values = values;\n            this.containerValues = containerValues;\n        }\n        return LQuery;\n    }());\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep, nodeIndex) {\n            if (nodeIndex === void 0) { nodeIndex = -1; }\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n            this.nodeIndex = nodeIndex;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createLQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createLQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function (tNode) {\n            return this.shallow !== null || isContentQueryHost(tNode) ?\n                new LQueries_(this, null, this.deep, tNode.index) :\n                this;\n        };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode, false);\n            add(this.shallow, tNode, false);\n        };\n        LQueries_.prototype.insertNodeBeforeViews = function (tNode) {\n            add(this.deep, tNode, true);\n            add(this.shallow, tNode, true);\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            result = new LQuery(result, query.list, query.predicate, containerValues, null);\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            result = new LQuery(result, query.list, query.predicate, [], query.values);\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode && assertViewQueryhasPointerToDeclarationContainer(query);\n            query.containerValues.splice(index, 0, query.values);\n            // mark a query as dirty only when inserted view had matching modes\n            if (query.values.length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode && assertViewQueryhasPointerToDeclarationContainer(query);\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    function assertViewQueryhasPointerToDeclarationContainer(query) {\n        assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryByReadToken(read, tNode, currentView) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var tView = currentView[TVIEW];\n            var matchingIdx = locateDirectiveOrProvider(tNode, tView, read, false, false);\n            if (matchingIdx !== null) {\n                return getNodeInjectable(tView.data, currentView, matchingIdx, tNode);\n            }\n        }\n        return null;\n    }\n    function queryByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function queryByTemplateRef(templateRefToken, tNode, currentView, read) {\n        var templateRefResult = templateRefToken[NG_ELEMENT_ID]();\n        if (read) {\n            return templateRefResult ? queryByReadToken(read, tNode, currentView) : null;\n        }\n        return templateRefResult;\n    }\n    function queryRead(tNode, currentView, read, matchingIdx) {\n        if (read) {\n            return queryByReadToken(read, tNode, currentView);\n        }\n        if (matchingIdx > -1) {\n            return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n        }\n        // if read token and / or strategy is not specified,\n        // detect it using appropriate tNode type\n        return queryByTNodeType(tNode, currentView);\n    }\n    /**\n     * Add query matches for a given node.\n     *\n     * @param query The first query in the linked list\n     * @param tNode The TNode to match against queries\n     * @param insertBeforeContainer Whether or not we should add matches before the last\n     * container array. This mode is necessary if the query container had to be created\n     * out of order (e.g. a view was created in a constructor)\n     */\n    function add(query, tNode, insertBeforeContainer) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var result = null;\n                if (type === TemplateRef) {\n                    result = queryByTemplateRef(type, tNode, lView, predicate.read);\n                }\n                else {\n                    var matchingIdx = locateDirectiveOrProvider(tNode, tView, type, false, false);\n                    if (matchingIdx !== null) {\n                        result = queryRead(tNode, lView, predicate.read, matchingIdx);\n                    }\n                }\n                if (result !== null) {\n                    addMatch(query, result, insertBeforeContainer);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var matchingIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (matchingIdx !== null) {\n                        var result = queryRead(tNode, lView, predicate.read, matchingIdx);\n                        if (result !== null) {\n                            addMatch(query, result, insertBeforeContainer);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue, insertBeforeViewMatches) {\n        // Views created in constructors may have their container values created too early. In this case,\n        // ensure template node results are unshifted before container results. Otherwise, results inside\n        // embedded views will appear before results on parent template nodes when flattened.\n        insertBeforeViewMatches ? query.values.unshift(matchingValue) : query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createLQuery(previous, queryList, predicate, read) {\n        return new LQuery(previous, queryList, createPredicate(predicate, read), queryList._valuesTree, null);\n    }\n    /**\n     * Creates a QueryList and stores it in LView's collection of active queries (LQueries).\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function createQueryListInLView(\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    lView, predicate, descend, read, isStatic, nodeIndex) {\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        var queryList = new QueryList();\n        var queries = lView[QUERIES] || (lView[QUERIES] = new LQueries_(null, null, null, nodeIndex));\n        queryList._valuesTree = [];\n        queryList._static = isStatic;\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(lView, queryList, queryList.destroy);\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     *\n     * @returns `true` if a query got dirty during change detection or if this is a static query\n     * resolving in creation mode, `false` otherwise.\n     *\n     * @codeGenApi\n     */\n    function ɵɵqueryRefresh(queryList) {\n        var queryListImpl = queryList;\n        var creationMode = isCreationMode();\n        // if creation mode and static or update mode and not static\n        if (queryList.dirty && creationMode === queryListImpl._static) {\n            queryList.reset(queryListImpl._valuesTree || []);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Creates new QueryList for a static view query.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticViewQuery(\n    // TODO(FW-486): \"read\" should be an AbstractType\n    predicate, descend, read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        viewQueryInternal(lView, tView, predicate, descend, read, true);\n        tView.staticViewQueries = true;\n    }\n    /**\n     * Creates new QueryList, stores the reference in LView and returns QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵviewQuery(\n    // TODO(FW-486): \"read\" should be an AbstractType\n    predicate, descend, read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        return viewQueryInternal(lView, tView, predicate, descend, read, false);\n    }\n    function viewQueryInternal(lView, tView, predicate, descend, read, isStatic) {\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n        }\n        var index = getCurrentQueryIndex();\n        var queryList = createQueryListInLView(lView, predicate, descend, read, isStatic, -1);\n        store(index - HEADER_OFFSET, queryList);\n        setCurrentQueryIndex(index + 1);\n        return queryList;\n    }\n    /**\n     * Loads current View Query and moves the pointer/index to the next View Query in LView.\n     *\n     * @codeGenApi\n     */\n    function ɵɵloadViewQuery() {\n        var index = getCurrentQueryIndex();\n        setCurrentQueryIndex(index + 1);\n        return loadInternal(getLView(), index - HEADER_OFFSET);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontentQuery(directiveIndex, predicate, descend, \n    // TODO(FW-486): \"read\" should be an AbstractType\n    read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var tNode = getPreviousOrParentTNode();\n        return contentQueryInternal(lView, tView, directiveIndex, predicate, descend, read, false, tNode.index);\n    }\n    function contentQueryInternal(lView, tView, directiveIndex, predicate, descend, \n    // TODO(FW-486): \"read\" should be an AbstractType\n    read, isStatic, nodeIndex) {\n        var contentQuery = createQueryListInLView(lView, predicate, descend, read, isStatic, nodeIndex);\n        (lView[CONTENT_QUERIES] || (lView[CONTENT_QUERIES] = [])).push(contentQuery);\n        if (tView.firstTemplatePass) {\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 1] : -1;\n            if (directiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(directiveIndex);\n            }\n        }\n        return contentQuery;\n    }\n    /**\n     * Registers a QueryList, associated with a static content query, for later refresh\n     * (part of a view refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticContentQuery(directiveIndex, predicate, descend, \n    // TODO(FW-486): \"read\" should be an AbstractType\n    read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var tNode = getPreviousOrParentTNode();\n        contentQueryInternal(lView, tView, directiveIndex, predicate, descend, read, true, tNode.index);\n        tView.staticContentQueries = true;\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵloadContentQuery() {\n        var lView = getLView();\n        ngDevMode &&\n            assertDefined(lView[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        var index = getCurrentQueryIndex();\n        ngDevMode && assertDataInRange(lView[CONTENT_QUERIES], index);\n        setCurrentQueryIndex(index + 1);\n        return lView[CONTENT_QUERIES][index];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$9 = function () { return ({\n        'ɵɵattribute': ɵɵattribute,\n        'ɵɵattributeInterpolate1': ɵɵattributeInterpolate1,\n        'ɵɵattributeInterpolate2': ɵɵattributeInterpolate2,\n        'ɵɵattributeInterpolate3': ɵɵattributeInterpolate3,\n        'ɵɵattributeInterpolate4': ɵɵattributeInterpolate4,\n        'ɵɵattributeInterpolate5': ɵɵattributeInterpolate5,\n        'ɵɵattributeInterpolate6': ɵɵattributeInterpolate6,\n        'ɵɵattributeInterpolate7': ɵɵattributeInterpolate7,\n        'ɵɵattributeInterpolate8': ɵɵattributeInterpolate8,\n        'ɵɵattributeInterpolateV': ɵɵattributeInterpolateV,\n        'ɵɵdefineBase': ɵɵdefineBase,\n        'ɵɵdefineComponent': ɵɵdefineComponent,\n        'ɵɵdefineDirective': ɵɵdefineDirective,\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵdefineNgModule': ɵɵdefineNgModule,\n        'ɵɵdefinePipe': ɵɵdefinePipe,\n        'ɵɵdirectiveInject': ɵɵdirectiveInject,\n        'ɵɵgetFactoryOf': ɵɵgetFactoryOf,\n        'ɵɵgetInheritedFactory': ɵɵgetInheritedFactory,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵinjectAttribute': ɵɵinjectAttribute,\n        'ɵɵtemplateRefExtractor': ɵɵtemplateRefExtractor,\n        'ɵɵNgOnChangesFeature': ɵɵNgOnChangesFeature,\n        'ɵɵProvidersFeature': ɵɵProvidersFeature,\n        'ɵɵInheritDefinitionFeature': ɵɵInheritDefinitionFeature,\n        'ɵɵcontainer': ɵɵcontainer,\n        'ɵɵnextContext': ɵɵnextContext,\n        'ɵɵcontainerRefreshStart': ɵɵcontainerRefreshStart,\n        'ɵɵcontainerRefreshEnd': ɵɵcontainerRefreshEnd,\n        'ɵɵnamespaceHTML': ɵɵnamespaceHTML,\n        'ɵɵnamespaceMathML': ɵɵnamespaceMathML,\n        'ɵɵnamespaceSVG': ɵɵnamespaceSVG,\n        'ɵɵenableBindings': ɵɵenableBindings,\n        'ɵɵdisableBindings': ɵɵdisableBindings,\n        'ɵɵallocHostVars': ɵɵallocHostVars,\n        'ɵɵelementStart': ɵɵelementStart,\n        'ɵɵelementEnd': ɵɵelementEnd,\n        'ɵɵelement': ɵɵelement,\n        'ɵɵelementContainerStart': ɵɵelementContainerStart,\n        'ɵɵelementContainerEnd': ɵɵelementContainerEnd,\n        'ɵɵelementContainer': ɵɵelementContainer,\n        'ɵɵpureFunction0': ɵɵpureFunction0,\n        'ɵɵpureFunction1': ɵɵpureFunction1,\n        'ɵɵpureFunction2': ɵɵpureFunction2,\n        'ɵɵpureFunction3': ɵɵpureFunction3,\n        'ɵɵpureFunction4': ɵɵpureFunction4,\n        'ɵɵpureFunction5': ɵɵpureFunction5,\n        'ɵɵpureFunction6': ɵɵpureFunction6,\n        'ɵɵpureFunction7': ɵɵpureFunction7,\n        'ɵɵpureFunction8': ɵɵpureFunction8,\n        'ɵɵpureFunctionV': ɵɵpureFunctionV,\n        'ɵɵgetCurrentView': ɵɵgetCurrentView,\n        'ɵɵrestoreView': ɵɵrestoreView,\n        'ɵɵlistener': ɵɵlistener,\n        'ɵɵload': ɵɵload,\n        'ɵɵprojection': ɵɵprojection,\n        'ɵɵupdateSyntheticHostBinding': ɵɵupdateSyntheticHostBinding,\n        'ɵɵcomponentHostSyntheticListener': ɵɵcomponentHostSyntheticListener,\n        'ɵɵpipeBind1': ɵɵpipeBind1,\n        'ɵɵpipeBind2': ɵɵpipeBind2,\n        'ɵɵpipeBind3': ɵɵpipeBind3,\n        'ɵɵpipeBind4': ɵɵpipeBind4,\n        'ɵɵpipeBindV': ɵɵpipeBindV,\n        'ɵɵprojectionDef': ɵɵprojectionDef,\n        'ɵɵhostProperty': ɵɵhostProperty,\n        'ɵɵproperty': ɵɵproperty,\n        'ɵɵpropertyInterpolate': ɵɵpropertyInterpolate,\n        'ɵɵpropertyInterpolate1': ɵɵpropertyInterpolate1,\n        'ɵɵpropertyInterpolate2': ɵɵpropertyInterpolate2,\n        'ɵɵpropertyInterpolate3': ɵɵpropertyInterpolate3,\n        'ɵɵpropertyInterpolate4': ɵɵpropertyInterpolate4,\n        'ɵɵpropertyInterpolate5': ɵɵpropertyInterpolate5,\n        'ɵɵpropertyInterpolate6': ɵɵpropertyInterpolate6,\n        'ɵɵpropertyInterpolate7': ɵɵpropertyInterpolate7,\n        'ɵɵpropertyInterpolate8': ɵɵpropertyInterpolate8,\n        'ɵɵpropertyInterpolateV': ɵɵpropertyInterpolateV,\n        'ɵɵpipe': ɵɵpipe,\n        'ɵɵqueryRefresh': ɵɵqueryRefresh,\n        'ɵɵviewQuery': ɵɵviewQuery,\n        'ɵɵstaticViewQuery': ɵɵstaticViewQuery,\n        'ɵɵstaticContentQuery': ɵɵstaticContentQuery,\n        'ɵɵloadViewQuery': ɵɵloadViewQuery,\n        'ɵɵcontentQuery': ɵɵcontentQuery,\n        'ɵɵloadContentQuery': ɵɵloadContentQuery,\n        'ɵɵreference': ɵɵreference,\n        'ɵɵelementHostAttrs': ɵɵelementHostAttrs,\n        'ɵɵclassMap': ɵɵclassMap,\n        'ɵɵclassMapInterpolate1': ɵɵclassMapInterpolate1,\n        'ɵɵclassMapInterpolate2': ɵɵclassMapInterpolate2,\n        'ɵɵclassMapInterpolate3': ɵɵclassMapInterpolate3,\n        'ɵɵclassMapInterpolate4': ɵɵclassMapInterpolate4,\n        'ɵɵclassMapInterpolate5': ɵɵclassMapInterpolate5,\n        'ɵɵclassMapInterpolate6': ɵɵclassMapInterpolate6,\n        'ɵɵclassMapInterpolate7': ɵɵclassMapInterpolate7,\n        'ɵɵclassMapInterpolate8': ɵɵclassMapInterpolate8,\n        'ɵɵclassMapInterpolateV': ɵɵclassMapInterpolateV,\n        'ɵɵstyling': ɵɵstyling,\n        'ɵɵstyleMap': ɵɵstyleMap,\n        'ɵɵstyleProp': ɵɵstyleProp,\n        'ɵɵstylePropInterpolate1': ɵɵstylePropInterpolate1,\n        'ɵɵstylePropInterpolate2': ɵɵstylePropInterpolate2,\n        'ɵɵstylePropInterpolate3': ɵɵstylePropInterpolate3,\n        'ɵɵstylePropInterpolate4': ɵɵstylePropInterpolate4,\n        'ɵɵstylePropInterpolate5': ɵɵstylePropInterpolate5,\n        'ɵɵstylePropInterpolate6': ɵɵstylePropInterpolate6,\n        'ɵɵstylePropInterpolate7': ɵɵstylePropInterpolate7,\n        'ɵɵstylePropInterpolate8': ɵɵstylePropInterpolate8,\n        'ɵɵstylePropInterpolateV': ɵɵstylePropInterpolateV,\n        'ɵɵstyleSanitizer': ɵɵstyleSanitizer,\n        'ɵɵstylingApply': ɵɵstylingApply,\n        'ɵɵclassProp': ɵɵclassProp,\n        'ɵɵselect': ɵɵselect,\n        'ɵɵtemplate': ɵɵtemplate,\n        'ɵɵtext': ɵɵtext,\n        'ɵɵtextBinding': ɵɵtextBinding,\n        'ɵɵtextInterpolate': ɵɵtextInterpolate,\n        'ɵɵtextInterpolate1': ɵɵtextInterpolate1,\n        'ɵɵtextInterpolate2': ɵɵtextInterpolate2,\n        'ɵɵtextInterpolate3': ɵɵtextInterpolate3,\n        'ɵɵtextInterpolate4': ɵɵtextInterpolate4,\n        'ɵɵtextInterpolate5': ɵɵtextInterpolate5,\n        'ɵɵtextInterpolate6': ɵɵtextInterpolate6,\n        'ɵɵtextInterpolate7': ɵɵtextInterpolate7,\n        'ɵɵtextInterpolate8': ɵɵtextInterpolate8,\n        'ɵɵtextInterpolateV': ɵɵtextInterpolateV,\n        'ɵɵembeddedViewStart': ɵɵembeddedViewStart,\n        'ɵɵembeddedViewEnd': ɵɵembeddedViewEnd,\n        'ɵɵi18n': ɵɵi18n,\n        'ɵɵi18nAttributes': ɵɵi18nAttributes,\n        'ɵɵi18nExp': ɵɵi18nExp,\n        'ɵɵi18nStart': ɵɵi18nStart,\n        'ɵɵi18nEnd': ɵɵi18nEnd,\n        'ɵɵi18nApply': ɵɵi18nApply,\n        'ɵɵi18nPostprocess': ɵɵi18nPostprocess,\n        'ɵɵi18nLocalize': ɵɵi18nLocalize,\n        'ɵɵresolveWindow': ɵɵresolveWindow,\n        'ɵɵresolveDocument': ɵɵresolveDocument,\n        'ɵɵresolveBody': ɵɵresolveBody,\n        'ɵɵsetComponentScope': ɵɵsetComponentScope,\n        'ɵɵsetNgModuleScope': ɵɵsetNgModuleScope,\n        'ɵɵsanitizeHtml': ɵɵsanitizeHtml,\n        'ɵɵsanitizeStyle': ɵɵsanitizeStyle,\n        'ɵɵdefaultStyleSanitizer': ɵɵdefaultStyleSanitizer,\n        'ɵɵsanitizeResourceUrl': ɵɵsanitizeResourceUrl,\n        'ɵɵsanitizeScript': ɵɵsanitizeScript,\n        'ɵɵsanitizeUrl': ɵɵsanitizeUrl,\n        'ɵɵsanitizeUrlOrResourceUrl': ɵɵsanitizeUrlOrResourceUrl,\n    }); };\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = (ɵ0$9)();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$4 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     *\n     * It's possible to compile a module via this API which will allow duplicate declarations in its\n     * root.\n     */\n    function compileNgModuleDefs(moduleType, ngModule, allowDuplicateDeclarationsInRoot) {\n        if (allowDuplicateDeclarationsInRoot === void 0) { allowDuplicateDeclarationsInRoot = false; }\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$4);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    if (ngDevMode && ngModule.imports && ngModule.imports.indexOf(moduleType) > -1) {\n                        // We need to assert this immediately, because allowing it to continue will cause it to\n                        // go into an infinite loop before we've reached the point where we throw all the errors.\n                        throw new Error(\"'\" + stringifyForError(moduleType) + \"' module can't import itself\");\n                    }\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng:///\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten(ngModule.bootstrap || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten(ngModule.imports || EMPTY_ARRAY$4)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten(ngModule.exports || EMPTY_ARRAY$4)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                        schemas: ngModule.schemas ? flatten(ngModule.schemas) : null,\n                        id: ngModule.id || null,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$4,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng:///\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot, importingModule) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef;\n        if (importingModule) {\n            ngModuleDef = getNgModuleDef(moduleType);\n            if (!ngModuleDef) {\n                throw new Error(\"Unexpected value '\" + moduleType.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n        else {\n            ngModuleDef = getNgModuleDef(moduleType, true);\n        }\n        var errors = [];\n        var declarations = maybeUnwrapFn(ngModuleDef.declarations);\n        var imports = maybeUnwrapFn(ngModuleDef.imports);\n        flatten(imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n            verifySemanticsOfNgModuleImport(mod, moduleType);\n            verifySemanticsOfNgModuleDef(mod, false, moduleType);\n        });\n        var exports = maybeUnwrapFn(ngModuleDef.exports);\n        declarations.forEach(verifyDeclarationsHaveDefinitions);\n        var combinedDeclarations = __spread(declarations.map(resolveForwardRef), flatten(imports.map(computeCombinedExports)).map(resolveForwardRef));\n        exports.forEach(verifyExportsAreDeclaredOrReExported);\n        declarations.forEach(function (decl) { return verifyDeclarationIsUnique(decl, allowDuplicateDeclarationsInRoot); });\n        declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten(ngModule.imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n                    verifySemanticsOfNgModuleImport(mod, moduleType);\n                    verifySemanticsOfNgModuleDef(mod, false, moduleType);\n                });\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyCorrectBootstrapType);\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents &&\n                deepForEach(ngModule.entryComponents, verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + stringifyForError(type) + \"' declared by the module '\" + stringifyForError(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + stringifyForError(type) + \" from \" + stringifyForError(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type, suppressErrors) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                if (!suppressErrors) {\n                    var modules = [existingModule, moduleType].map(stringifyForError).sort();\n                    errors.push(\"Type \" + stringifyForError(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                        (\"Please consider moving \" + stringifyForError(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                        (\"You can also create a new NgModule that exports and includes \" + stringifyForError(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n                }\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + stringifyForError(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyCorrectBootstrapType(type) {\n            type = resolveForwardRef(type);\n            if (!getComponentDef(type)) {\n                errors.push(stringifyForError(type) + \" cannot be used as an entry component.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    deepForEach(component.entryComponents, verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n        function verifySemanticsOfNgModuleImport(type, importingModule) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type) || getDirectiveDef(type)) {\n                throw new Error(\"Unexpected directive '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n            if (getPipeDef(type)) {\n                throw new Error(\"Unexpected pipe '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten(maybeUnwrapFn(ngModuleDef.exports).map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type, false);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$4);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () {\n            return Array.from(transitiveScopes.compilation.directives)\n                .map(function (dir) { return dir.hasOwnProperty(NG_COMPONENT_DEF) ? getComponentDef(dir) :\n                getDirectiveDef(dir); })\n                .filter(function (def) { return !!def; });\n        };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n        componentDef.schemas = transitiveScopes.schemas;\n        // Since we avoid Components/Directives/Pipes recompiling in case there are no overrides, we\n        // may face a problem where previously compiled defs available to a given Component/Directive\n        // are cached in TView and may become stale (in case any of these defs gets recompiled). In\n        // order to avoid this problem, we force fresh TView to be created.\n        componentDef.tView = null;\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType, processNgModuleFn) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            schemas: def.schemas || null,\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        maybeUnwrapFn(def.declarations).forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        maybeUnwrapFn(def.imports).forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have an ngModuleDef\");\n            }\n            if (processNgModuleFn) {\n                processNgModuleFn(importedType);\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType, processNgModuleFn);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        maybeUnwrapFn(def.exports).forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType, processNgModuleFn);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(type, metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + type.name + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + metadata.templateUrl);\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var templateUrl = metadata.templateUrl || \"ng:///\" + type.name + \"/template.html\";\n                    var meta = __assign({}, directiveMetadata(type, metadata), { typeSourceSpan: compiler.createParseSourceSpan('Component', type.name, templateUrl), template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY$2, animations: metadata.animations, directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    if (meta.usesInheritance) {\n                        addBaseDefToUndecoratedParents(type);\n                    }\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, templateUrl, meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        // Add ngInjectableDef so components are reachable through the module injector by default\n        // This is mostly to support injecting components in tests. In real application code,\n        // components should be retrieved through the node injector, so this isn't a problem.\n        compileInjectable(type);\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var name_1 = type && type.name;\n                    var sourceMapUrl = \"ng:///\" + name_1 + \"/ngDirectiveDef.js\";\n                    var compiler = getCompilerFacade();\n                    var facade = directiveMetadata(type, directive);\n                    facade.typeSourceSpan = compiler.createParseSourceSpan('Directive', name_1, sourceMapUrl);\n                    if (facade.usesInheritance) {\n                        addBaseDefToUndecoratedParents(type);\n                    }\n                    ngDirectiveDef = compiler.compileDirective(angularCoreEnv, sourceMapUrl, facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        // Add ngInjectableDef so directives are reachable through the module injector by default\n        // This is mostly to support injecting directives in tests. In real application code,\n        // directives should be retrieved through the node injector, so this isn't a problem.\n        compileInjectable(type);\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().ownPropMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY$2,\n            outputs: metadata.outputs || EMPTY_ARRAY$2,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: { usesOnChanges: type.prototype.hasOwnProperty('ngOnChanges') },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n            viewQueries: extractQueriesMetadata(type, propMetadata, isViewQuery),\n        };\n    }\n    /**\n     * Adds an `ngBaseDef` to all parent classes of a type that don't have an Angular decorator.\n     */\n    function addBaseDefToUndecoratedParents(type) {\n        var objPrototype = Object.prototype;\n        var parent = Object.getPrototypeOf(type);\n        // Go up the prototype until we hit `Object`.\n        while (parent && parent !== objPrototype) {\n            // Since inheritance works if the class was annotated already, we only need to add\n            // the base def if there are no annotations and the base def hasn't been created already.\n            if (!getDirectiveDef(parent) && !getComponentDef(parent) && !getBaseDef(parent)) {\n                var facade = extractBaseDefMetadata(parent);\n                facade && compileBase(parent, facade);\n            }\n            parent = Object.getPrototypeOf(parent);\n        }\n    }\n    /** Compiles the base metadata into a base definition. */\n    function compileBase(type, facade) {\n        var ngBaseDef = null;\n        Object.defineProperty(type, NG_BASE_DEF, {\n            get: function () {\n                if (ngBaseDef === null) {\n                    var name_2 = type && type.name;\n                    var sourceMapUrl = \"ng://\" + name_2 + \"/ngBaseDef.js\";\n                    var compiler = getCompilerFacade();\n                    ngBaseDef = compiler.compileBase(angularCoreEnv, sourceMapUrl, facade);\n                }\n                return ngBaseDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /** Extracts the metadata necessary to construct an `ngBaseDef` from a class. */\n    function extractBaseDefMetadata(type) {\n        var propMetadata = getReflect().ownPropMetadata(type);\n        var viewQueries = extractQueriesMetadata(type, propMetadata, isViewQuery);\n        var queries = extractQueriesMetadata(type, propMetadata, isContentQuery);\n        var inputs;\n        var outputs;\n        // We only need to know whether there are any HostListener or HostBinding\n        // decorators present, the parsing logic is in the compiler already.\n        var hasHostDecorators = false;\n        var _loop_1 = function (field) {\n            propMetadata[field].forEach(function (ann) {\n                var metadataName = ann.ngMetadataName;\n                if (metadataName === 'Input') {\n                    inputs = inputs || {};\n                    inputs[field] = ann.bindingPropertyName ? [ann.bindingPropertyName, field] : field;\n                }\n                else if (metadataName === 'Output') {\n                    outputs = outputs || {};\n                    outputs[field] = ann.bindingPropertyName || field;\n                }\n                else if (metadataName === 'HostBinding' || metadataName === 'HostListener') {\n                    hasHostDecorators = true;\n                }\n            });\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        // Only generate the base def if there's any info inside it.\n        if (inputs || outputs || viewQueries.length || queries.length || hasHostDecorators) {\n            return { name: type.name, type: type, inputs: inputs, outputs: outputs, viewQueries: viewQueries, queries: queries, propMetadata: propMetadata };\n        }\n        return null;\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null,\n            static: !!ann.static\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_2 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                var annotations_1 = propMetadata[field];\n                annotations_1.forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + stringifyForError(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        if (annotations_1.some(isInputAnn)) {\n                            throw new Error(\"Cannot combine @Input decorators with query decorators\");\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_2(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        if (exportAs === undefined) {\n            return null;\n        }\n        return exportAs.split(',').map(function (part) { return part.trim(); });\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function isInputAnn(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var typeName = type.name;\n                    ngPipeDef =\n                        getCompilerFacade().compilePipe(angularCoreEnv, \"ng:///\" + typeName + \"/ngPipeDef.js\", {\n                            type: type,\n                            typeArgumentCount: 0,\n                            name: typeName,\n                            deps: reflectDependencies(type),\n                            pipeName: meta.name,\n                            pure: meta.pure !== undefined ? meta.pure : true\n                        });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$a = function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, ɵ1$2 = function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); };\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', ɵ0$a, undefined, undefined, ɵ1$2);\n    var ɵ2$1 = function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, ɵ3$1 = function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); };\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', ɵ2$1, Directive, undefined, ɵ3$1);\n    var ɵ4 = function (p) { return (__assign({ pure: true }, p)); }, ɵ5 = function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', ɵ4, undefined, undefined, ɵ5);\n    var ɵ6 = function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', ɵ6);\n    var ɵ7 = function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', ɵ7);\n    var ɵ8 = function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', ɵ8);\n    var ɵ9 = function (eventName, args) { return ({ eventName: eventName, args: args }); };\n    /**\n     * Decorator that binds a DOM event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     *\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```ts\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', ɵ9);\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\n    var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__PRE_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__PRE_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$b = function (ngModule) { return ngModule; }, ɵ1$3 = \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', ɵ0$b, undefined, undefined, ɵ1$3);\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = ɵɵdefineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID$1 = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS$1 = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    var Compiler_compileModuleSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__PRE_R3__;\n    var Compiler_compileModuleAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n        var moduleDef = getNgModuleDef(moduleType);\n        var componentFactories = maybeUnwrapFn(moduleDef.declarations)\n            .reduce(function (factories, declaration) {\n            var componentDef = getComponentDef(declaration);\n            componentDef && factories.push(new ComponentFactory$1(componentDef));\n            return factories;\n        }, []);\n        return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__PRE_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = (function () { return Promise.resolve(0); })();\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_R3__;\n    function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        var moduleFactory = new NgModuleFactory$1(moduleType);\n        if (isComponentResourceResolutionQueueEmpty()) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compilerOptions = injector.get(COMPILER_OPTIONS, []).concat(options);\n        var compilerProviders = _mergeArrays(compilerOptions.map(function (o) { return o.providers; }));\n        // In case there are no compiler providers, we just return the module factory as\n        // there won't be any resource loader. This can happen with Ivy, because AOT compiled\n        // modules can be still passed through \"bootstrapModule\". In that case we shouldn't\n        // unnecessarily require the JIT compiler.\n        if (compilerProviders.length === 0) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compiler = getCompilerFacade();\n        var compilerInjector = Injector.create({ providers: compilerProviders });\n        var resourceLoader = compilerInjector.get(compiler.ResourceLoader);\n        // The resource loader can also return a string while the \"resolveComponentResources\"\n        // always expects a promise. Therefore we need to wrap the returned value in a promise.\n        return resolveComponentResources(function (url) { return Promise.resolve(resourceLoader.get(url)); })\n            .then(function () { return moduleFactory; });\n    }\n    var isBoundToModule = isBoundToModule__PRE_R3__;\n    function isBoundToModule__PRE_R3__(cf) {\n        return cf instanceof ComponentFactoryBoundToModule;\n    }\n    function isBoundToModule__POST_R3__(cf) {\n        return cf.isBoundToModule;\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                // If the `LOCALE_ID` provider is defined at bootstrap we set the value for runtime i18n (ivy)\n                var localeId = moduleRef.injector.get(LOCALE_ID$1, DEFAULT_LOCALE_ID);\n                setLocaleId(localeId);\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @usageNotes\n     *\n     * {@a is-stable-examples}\n     * ### isStable examples and caveats\n     *\n     * Note two important points about `isStable`, demonstrated in the examples below:\n     * - the application will never be stable if you start any kind\n     * of recurrent asynchronous task when the application starts\n     * (for example for a polling process, started with a `setInterval`, a `setTimeout`\n     * or using RxJS operators like `interval`);\n     * - the `isStable` Observable runs outside of the Angular zone.\n     *\n     * Let's imagine that you start a recurrent task\n     * (here incrementing a counter, using RxJS `interval`),\n     * and at the same time subscribe to `isStable`.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *      filter(stable => stable)\n     *   ).subscribe(() => console.log('App is stable now');\n     *   interval(1000).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, `isStable` will never emit `true`,\n     * and the trace \"App is stable now\" will never get logged.\n     *\n     * If you want to execute something when the app is stable,\n     * you have to wait for the application to be stable\n     * before starting your polling process.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     tap(stable => console.log('App is stable now')),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, the trace \"App is stable now\" will be logged\n     * and then the counter starts incrementing every second.\n     *\n     * Note also that this Observable runs outside of the Angular zone,\n     * which means that the code in the subscription\n     * to this Observable will not trigger the change detection.\n     *\n     * Let's imagine that instead of logging the counter value,\n     * you update a field of your component\n     * and display it in its template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => this.value = counter);\n     * }\n     * ```\n     * As the `isStable` Observable runs outside the zone,\n     * the `value` field will be updated properly,\n     * but the template will not be refreshed!\n     *\n     * You'll have to manually trigger the change detection to update the template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => {\n     *     this.value = counter;\n     *     cd.detectChanges();\n     *   });\n     * }\n     * ```\n     *\n     * Or make the subscription callback run inside the zone.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, zone: NgZone) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => zone.run(() => this.value = counter));\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = isBoundToModule(componentFactory) ? null : this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            var e_1, _a, e_2, _b;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                try {\n                    for (var _c = __values(this._views), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var view = _d.value;\n                        view.detectChanges();\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                if (this._enforceNoNewChanges) {\n                    try {\n                        for (var _e = __values(this._views), _f = _e.next(); !_f.done; _f = _e.next()) {\n                            var view = _f.value;\n                            view.checkNoChanges();\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        var ApplicationRef_1;\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n    function _mergeArrays(parts) {\n        var result = [];\n        parts.forEach(function (part) { return part && result.push.apply(result, __spread(part)); });\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `NgModuleFactoryLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    function getModuleFactory__PRE_R3__(id) {\n        var factory = getRegisteredNgModuleType(id);\n        if (!factory)\n            throw noModuleError(id);\n        return factory;\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = getRegisteredNgModuleType(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__PRE_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var SWITCH_IVY_ENABLED__PRE_R3__ = false;\n    var ivyEnabled = SWITCH_IVY_ENABLED__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoaderConfig`\n     * is part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var legacyOfflineMode = !ivyEnabled && this._compiler instanceof Compiler;\n            return legacyOfflineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @publicApi\n     */\n    var DebugEventListener = /** @class */ (function () {\n        function DebugEventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return DebugEventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement &&\n                    (getComponent(nativeElement) || getViewComponent(nativeElement));\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () {\n                return getComponent(this.nativeNode) || getContext$1(this.nativeNode);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () { return this.nativeElement.nodeName; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            /**\n             *  Gets a map of property names to property values for an element.\n             *\n             *  This map includes:\n             *  - Regular property bindings (e.g. `[id]=\"id\"`)\n             *  - Host property bindings (e.g. `host: { '[id]': \"id\" }`)\n             *  - Interpolated property bindings (e.g. `id=\"{{ value }}\")\n             *\n             *  It does not include:\n             *  - input property bindings (e.g. `[myCustomInput]=\"value\"`)\n             *  - attribute bindings (e.g. `[attr.role]=\"menu\"`)\n             */\n            get: function () {\n                var context = loadLContext(this.nativeNode);\n                var lView = context.lView;\n                var tData = lView[TVIEW].data;\n                var tNode = tData[context.nodeIndex];\n                var properties = collectPropertyBindings(tNode, lView, tData);\n                var hostProperties = collectHostPropertyBindings(tNode, lView, tData);\n                var className = collectClassNames(this);\n                var output = __assign({}, properties, hostProperties);\n                if (className) {\n                    output['className'] = output['className'] ? output['className'] + (\" \" + className) : className;\n                }\n                return output;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (!element) {\n                    return attributes;\n                }\n                var context = loadLContext(element);\n                var lView = context.lView;\n                var tNodeAttrs = lView[TVIEW].data[context.nodeIndex].attrs;\n                var lowercaseTNodeAttrs = [];\n                // For debug nodes we take the element's attribute directly from the DOM since it allows us\n                // to account for ones that weren't set via bindings (e.g. ViewEngine keeps track of the ones\n                // that are set through `Renderer2`). The problem is that the browser will lowercase all names,\n                // however since we have the attributes already on the TNode, we can preserve the case by going\n                // through them once, adding them to the `attributes` map and putting their lower-cased name\n                // into an array. Afterwards when we're going through the native DOM attributes, we can check\n                // whether we haven't run into an attribute already through the TNode.\n                if (tNodeAttrs) {\n                    var i = 0;\n                    while (i < tNodeAttrs.length) {\n                        var attrName = tNodeAttrs[i];\n                        // Stop as soon as we hit a marker. We only care about the regular attributes. Everything\n                        // else will be handled below when we read the final attributes off the DOM.\n                        if (typeof attrName !== 'string')\n                            break;\n                        var attrValue = tNodeAttrs[i + 1];\n                        attributes[attrName] = attrValue;\n                        lowercaseTNodeAttrs.push(attrName.toLowerCase());\n                        i += 2;\n                    }\n                }\n                var eAttrs = element.attributes;\n                for (var i = 0; i < eAttrs.length; i++) {\n                    var attr = eAttrs[i];\n                    // Make sure that we don't assign the same attribute both in its\n                    // case-sensitive form and the lower-cased one from the browser.\n                    if (lowercaseTNodeAttrs.indexOf(attr.name) === -1) {\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                return _getStylingDebugInfo(this.nativeElement, false);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                return _getStylingDebugInfo(this.nativeElement, true);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    function _getStylingDebugInfo(element, isClassBased) {\n        if (element) {\n            var context = loadLContextFromNode(element);\n            var lView = context.lView;\n            var tData = lView[TVIEW].data;\n            var tNode = tData[context.nodeIndex];\n            if (isClassBased) {\n                return isStylingContext$1(tNode.classes) ?\n                    new NodeStylingDebug(tNode.classes, lView, true).values :\n                    stylingMapToStringMap(tNode.classes);\n            }\n            else {\n                return isStylingContext$1(tNode.styles) ?\n                    new NodeStylingDebug(tNode.styles, lView, false).values :\n                    stylingMapToStringMap(tNode.styles);\n            }\n        }\n        return {};\n    }\n    function _queryAllR3(parentElement, predicate, matches, elementsOnly) {\n        var context = loadLContext(parentElement.nativeNode);\n        var parentTNode = context.lView[TVIEW].data[context.nodeIndex];\n        _queryNodeChildrenR3(parentTNode, context.lView, predicate, matches, elementsOnly, parentElement.nativeNode);\n    }\n    /**\n     * Recursively match the current TNode against the predicate, and goes on with the next ones.\n     *\n     * @param tNode the current TNode\n     * @param lView the LView of this TNode\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenR3(tNode, lView, predicate, matches, elementsOnly, rootNativeNode) {\n        var e_1, _a;\n        var nativeNode = getNativeByTNodeOrNull(tNode, lView);\n        // For each type of TNode, specific logic is executed.\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            // Case 1: the TNode is an element\n            // The native node has to be checked.\n            _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode);\n            if (isComponent(tNode)) {\n                // If the element is the host of a component, then all nodes in its view have to be processed.\n                // Note: the component's content (tNode.child) will be processed from the insertion points.\n                var componentView = getComponentViewByIndex(tNode.index, lView);\n                if (componentView && componentView[TVIEW].firstChild) {\n                    _queryNodeChildrenR3(componentView[TVIEW].firstChild, componentView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n            }\n            else if (tNode.child) {\n                // Otherwise, its children have to be processed.\n                _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n            // In all cases, if a dynamic container exists for this node, each view inside it has to be\n            // processed.\n            var nodeOrContainer = lView[tNode.index];\n            if (isLContainer(nodeOrContainer)) {\n                _queryNodeChildrenInContainerR3(nodeOrContainer, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // Case 2: the TNode is a container\n            // The native node has to be checked.\n            var lContainer = lView[tNode.index];\n            _addQueryMatchR3(lContainer[NATIVE], predicate, matches, elementsOnly, rootNativeNode);\n            // Each view inside the container has to be processed.\n            _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        else if (tNode.type === 1 /* Projection */) {\n            // Case 3: the TNode is a projection insertion point (i.e. a <ng-content>).\n            // The nodes projected at this location all need to be processed.\n            var componentView = findComponentView(lView);\n            var componentHost = componentView[T_HOST];\n            var head = componentHost.projection[tNode.projection];\n            if (Array.isArray(head)) {\n                try {\n                    for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                        var nativeNode_1 = head_1_1.value;\n                        _addQueryMatchR3(nativeNode_1, predicate, matches, elementsOnly, rootNativeNode);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n            else if (head) {\n                var nextLView = componentView[PARENT];\n                var nextTNode = nextLView[TVIEW].data[head.index];\n                _queryNodeChildrenR3(nextTNode, nextLView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.child) {\n            // Case 4: the TNode is a view.\n            _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        // We don't want to go to the next sibling of the root node.\n        if (rootNativeNode !== nativeNode) {\n            // To determine the next node to be processed, we need to use the next or the projectionNext\n            // link, depending on whether the current node has been projected.\n            var nextTNode = (tNode.flags & 2 /* isProjected */) ? tNode.projectionNext : tNode.next;\n            if (nextTNode) {\n                _queryNodeChildrenR3(nextTNode, lView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n    }\n    /**\n     * Process all TNodes in a given container.\n     *\n     * @param lContainer the container to be processed\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode) {\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var childView = lContainer[i];\n            _queryNodeChildrenR3(childView[TVIEW].node, childView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n    /**\n     * Match the current native node against the predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode) {\n        if (rootNativeNode !== nativeNode) {\n            var debugNode = getDebugNode(nativeNode);\n            if (!debugNode) {\n                return;\n            }\n            // Type of the \"predicate and \"matches\" array are set based on the value of\n            // the \"elementsOnly\" parameter. TypeScript is not able to properly infer these\n            // types with generics, so we manually cast the parameters accordingly.\n            if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode)) {\n                matches.push(debugNode);\n            }\n            else if (!elementsOnly && predicate(debugNode)) {\n                matches.push(debugNode);\n            }\n        }\n    }\n    /**\n     * Iterates through the property bindings for a given node and generates\n     * a map of property names to values. This map only contains property bindings\n     * defined in templates, not in host bindings.\n     */\n    function collectPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        var bindingIndex = getFirstBindingIndex(tNode.propertyMetadataStartIndex, tData);\n        while (bindingIndex < tNode.propertyMetadataEndIndex) {\n            var value = void 0;\n            var propMetadata = tData[bindingIndex];\n            while (!isPropMetadataString(propMetadata)) {\n                // This is the first value for an interpolation. We need to build up\n                // the full interpolation by combining runtime values in LView with\n                // the static interstitial values stored in TData.\n                value = (value || '') + renderStringify(lView[bindingIndex]) + tData[bindingIndex];\n                propMetadata = tData[++bindingIndex];\n            }\n            value = value === undefined ? lView[bindingIndex] : value += lView[bindingIndex];\n            // Property metadata string has 3 parts: property name, prefix, and suffix\n            var metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);\n            var propertyName = metadataParts[0];\n            // Attr bindings don't have property names and should be skipped\n            if (propertyName) {\n                // Wrap value with prefix and suffix (will be '' for normal bindings), if they're defined.\n                // Avoid wrapping for normal bindings so that the value doesn't get cast to a string.\n                properties[propertyName] = (metadataParts[1] && metadataParts[2]) ?\n                    metadataParts[1] + value + metadataParts[2] :\n                    value;\n            }\n            bindingIndex++;\n        }\n        return properties;\n    }\n    /**\n     * Retrieves the first binding index that holds values for this property\n     * binding.\n     *\n     * For normal bindings (e.g. `[id]=\"id\"`), the binding index is the\n     * same as the metadata index. For interpolations (e.g. `id=\"{{id}}-{{name}}\"`),\n     * there can be multiple binding values, so we might have to loop backwards\n     * from the metadata index until we find the first one.\n     *\n     * @param metadataIndex The index of the first property metadata string for\n     * this node.\n     * @param tData The data array for the current TView\n     * @returns The first binding index for this binding\n     */\n    function getFirstBindingIndex(metadataIndex, tData) {\n        var currentBindingIndex = metadataIndex - 1;\n        // If the slot before the metadata holds a string, we know that this\n        // metadata applies to an interpolation with at least 2 bindings, and\n        // we need to search further to access the first binding value.\n        var currentValue = tData[currentBindingIndex];\n        // We need to iterate until we hit either a:\n        // - TNode (it is an element slot marking the end of `consts` section), OR a\n        // - metadata string (slot is attribute metadata or a previous node's property metadata)\n        while (typeof currentValue === 'string' && !isPropMetadataString(currentValue)) {\n            currentValue = tData[--currentBindingIndex];\n        }\n        return currentBindingIndex + 1;\n    }\n    function collectHostPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        // Host binding values for a node are stored after directives on that node\n        var hostPropIndex = tNode.directiveEnd;\n        var propMetadata = tData[hostPropIndex];\n        // When we reach a value in TView.data that is not a string, we know we've\n        // hit the next node's providers and directives and should stop copying data.\n        while (typeof propMetadata === 'string') {\n            var propertyName = propMetadata.split(INTERPOLATION_DELIMITER)[0];\n            properties[propertyName] = lView[hostPropIndex];\n            propMetadata = tData[++hostPropIndex];\n        }\n        return properties;\n    }\n    function collectClassNames(debugElement) {\n        var e_2, _a;\n        var classes = debugElement.classes;\n        var output = '';\n        try {\n            for (var _b = __values(Object.keys(classes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var className = _c.value;\n                if (classes[className]) {\n                    output = output ? output + (\" \" + className) : className;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return output;\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__PRE_R3__(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    var NG_DEBUG_PROPERTY = '__ng_debug__';\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            if (!(nativeNode.hasOwnProperty(NG_DEBUG_PROPERTY))) {\n                nativeNode[NG_DEBUG_PROPERTY] = nativeNode.nodeType == Node.ELEMENT_NODE ?\n                    new DebugElement__POST_R3__(nativeNode) :\n                    new DebugNode__POST_R3__(nativeNode);\n            }\n            return nativeNode[NG_DEBUG_PROPERTY];\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode = getDebugNode__PRE_R3__;\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__PRE_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        if (locale) {\n            return locale;\n        }\n        // Use `goog.LOCALE` as default value for `LOCALE_ID` token for Closure Compiler.\n        // Note: default `goog.LOCALE` value is `en`, when Angular used `en-US`. In order to preserve\n        // backwards compatibility, we use Angular default value over Closure Compiler's one.\n        if (ngI18nClosureMode && typeof goog !== 'undefined' && goog.LOCALE !== 'en') {\n            return goog.LOCALE;\n        }\n        return 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID$1,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID$1), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        var _a;\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode, name);\n        }\n        else {\n            renderer.removeClass(renderNode, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode;\n        var renderer = view.renderer;\n        renderNode = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode);\n        }\n        return { renderText: renderNode };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef = overrideComponentView;\n        }\n        else {\n            viewDef = applyProviderOverridesToView(viewDef);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef, elIndex) {\n            for (var i = elIndex + 1; i < viewDef.nodes.length; i++) {\n                var nodeDef = viewDef.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new DebugEventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Combines the binding value and a factory for an animation player.\n     *\n     * Used to bind a player to an element template binding (currently only\n     * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n     * supported). The provided `factoryFn` function will be run once all\n     * the associated bindings have been evaluated on the element and is\n     * designed to return a player which will then be placed on the element.\n     *\n     * @param factoryFn The function that is used to create a player\n     *   once all the rendering-related (styling values) have been\n     *   processed for the element binding.\n     * @param value The raw value that will be exposed to the binding\n     *   so that the binding can update its internal values when\n     *   any changes are evaluated.\n     */\n    function bindPlayerFactory(factoryFn, value) {\n        return new BoundPlayerFactory(factoryFn, value);\n    }\n    var BoundPlayerFactory = /** @class */ (function () {\n        function BoundPlayerFactory(fn, value) {\n            this.fn = fn;\n            this.value = value;\n        }\n        return BoundPlayerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵangular_packages_core_core_r = APPLICATION_MODULE_PROVIDERS;\n    exports.ɵangular_packages_core_core_o = _iterableDiffersFactory;\n    exports.ɵangular_packages_core_core_p = _keyValueDiffersFactory;\n    exports.ɵangular_packages_core_core_q = _localeFactory;\n    exports.ɵangular_packages_core_core_s = zoneSchedulerFactory;\n    exports.ɵangular_packages_core_core_f = _appIdRandomProviderFactory;\n    exports.ɵangular_packages_core_core_m = DefaultIterableDifferFactory;\n    exports.ɵangular_packages_core_core_n = DefaultKeyValueDifferFactory;\n    exports.ɵangular_packages_core_core_l = DebugElement__PRE_R3__;\n    exports.ɵangular_packages_core_core_k = DebugNode__PRE_R3__;\n    exports.ɵangular_packages_core_core_b = NullInjector;\n    exports.ɵangular_packages_core_core_a = injectInjectorOnly;\n    exports.ɵangular_packages_core_core_c = ReflectiveInjector_;\n    exports.ɵangular_packages_core_core_d = ReflectiveDependency;\n    exports.ɵangular_packages_core_core_e = resolveReflectiveProviders;\n    exports.ɵangular_packages_core_core_j = getModuleFactory__PRE_R3__;\n    exports.ɵangular_packages_core_core_t = wtfEnabled;\n    exports.ɵangular_packages_core_core_v = createScope;\n    exports.ɵangular_packages_core_core_u = detectWTF;\n    exports.ɵangular_packages_core_core_y = endTimeRange;\n    exports.ɵangular_packages_core_core_w = leave;\n    exports.ɵangular_packages_core_core_x = startTimeRange;\n    exports.ɵangular_packages_core_core_bb = SCHEDULER;\n    exports.ɵangular_packages_core_core_bc = injectAttributeImpl;\n    exports.ɵangular_packages_core_core_bd = getLView;\n    exports.ɵangular_packages_core_core_be = getPreviousOrParentTNode;\n    exports.ɵangular_packages_core_core_bf = nextContextImpl;\n    exports.ɵangular_packages_core_core_bj = BoundPlayerFactory;\n    exports.ɵangular_packages_core_core_bp = getRootContext;\n    exports.ɵangular_packages_core_core_bo = loadInternal;\n    exports.ɵangular_packages_core_core_g = createElementRef;\n    exports.ɵangular_packages_core_core_h = createTemplateRef;\n    exports.ɵangular_packages_core_core_i = createViewRef;\n    exports.ɵangular_packages_core_core_bh = getUrlSanitizer;\n    exports.ɵangular_packages_core_core_bn = noSideEffects;\n    exports.ɵangular_packages_core_core_bk = makeParamDecorator;\n    exports.ɵangular_packages_core_core_bl = makePropDecorator;\n    exports.ɵangular_packages_core_core_bq = getClosureSafeProperty;\n    exports.ɵangular_packages_core_core_z = _def;\n    exports.ɵangular_packages_core_core_ba = DebugContext;\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugEventListener = DebugEventListener;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS$1;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID$1;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.Attribute = Attribute;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.NgModule = NgModule;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.ɵɵdefineInjectable = ɵɵdefineInjectable;\n    exports.defineInjectable = defineInjectable;\n    exports.ɵɵdefineInjector = ɵɵdefineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.Injector = Injector;\n    exports.ɵɵinject = ɵɵinject;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.ɵ0 = ɵ0;\n    exports.ɵ1 = ɵ1;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual;\n    exports.ɵisListLikeIterable = isListLikeIterable;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵclearResolutionOfComponentResourcesQueue = clearResolutionOfComponentResourcesQueue;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ɵgetLocalePluralCase = getLocalePluralCase;\n    exports.ɵfindLocaleData = findLocaleData;\n    exports.ɵLOCALE_DATA = LOCALE_DATA;\n    exports.ɵɵattribute = ɵɵattribute;\n    exports.ɵɵattributeInterpolate1 = ɵɵattributeInterpolate1;\n    exports.ɵɵattributeInterpolate2 = ɵɵattributeInterpolate2;\n    exports.ɵɵattributeInterpolate3 = ɵɵattributeInterpolate3;\n    exports.ɵɵattributeInterpolate4 = ɵɵattributeInterpolate4;\n    exports.ɵɵattributeInterpolate5 = ɵɵattributeInterpolate5;\n    exports.ɵɵattributeInterpolate6 = ɵɵattributeInterpolate6;\n    exports.ɵɵattributeInterpolate7 = ɵɵattributeInterpolate7;\n    exports.ɵɵattributeInterpolate8 = ɵɵattributeInterpolate8;\n    exports.ɵɵattributeInterpolateV = ɵɵattributeInterpolateV;\n    exports.ɵɵdefineBase = ɵɵdefineBase;\n    exports.ɵɵdefineComponent = ɵɵdefineComponent;\n    exports.ɵɵdefineDirective = ɵɵdefineDirective;\n    exports.ɵɵdefinePipe = ɵɵdefinePipe;\n    exports.ɵɵdefineNgModule = ɵɵdefineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵɵdirectiveInject = ɵɵdirectiveInject;\n    exports.ɵɵinjectAttribute = ɵɵinjectAttribute;\n    exports.ɵɵgetFactoryOf = ɵɵgetFactoryOf;\n    exports.ɵɵgetInheritedFactory = ɵɵgetInheritedFactory;\n    exports.ɵɵsetComponentScope = ɵɵsetComponentScope;\n    exports.ɵɵsetNgModuleScope = ɵɵsetNgModuleScope;\n    exports.ɵɵtemplateRefExtractor = ɵɵtemplateRefExtractor;\n    exports.ɵɵProvidersFeature = ɵɵProvidersFeature;\n    exports.ɵɵInheritDefinitionFeature = ɵɵInheritDefinitionFeature;\n    exports.ɵɵNgOnChangesFeature = ɵɵNgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵɵcontainer = ɵɵcontainer;\n    exports.ɵɵnextContext = ɵɵnextContext;\n    exports.ɵɵelementStart = ɵɵelementStart;\n    exports.ɵɵnamespaceHTML = ɵɵnamespaceHTML;\n    exports.ɵɵnamespaceMathML = ɵɵnamespaceMathML;\n    exports.ɵɵnamespaceSVG = ɵɵnamespaceSVG;\n    exports.ɵɵelement = ɵɵelement;\n    exports.ɵɵlistener = ɵɵlistener;\n    exports.ɵɵtext = ɵɵtext;\n    exports.ɵɵtextInterpolate = ɵɵtextInterpolate;\n    exports.ɵɵtextInterpolate1 = ɵɵtextInterpolate1;\n    exports.ɵɵtextInterpolate2 = ɵɵtextInterpolate2;\n    exports.ɵɵtextInterpolate3 = ɵɵtextInterpolate3;\n    exports.ɵɵtextInterpolate4 = ɵɵtextInterpolate4;\n    exports.ɵɵtextInterpolate5 = ɵɵtextInterpolate5;\n    exports.ɵɵtextInterpolate6 = ɵɵtextInterpolate6;\n    exports.ɵɵtextInterpolate7 = ɵɵtextInterpolate7;\n    exports.ɵɵtextInterpolate8 = ɵɵtextInterpolate8;\n    exports.ɵɵtextInterpolateV = ɵɵtextInterpolateV;\n    exports.ɵɵembeddedViewStart = ɵɵembeddedViewStart;\n    exports.ɵɵprojection = ɵɵprojection;\n    exports.ɵɵpipeBind1 = ɵɵpipeBind1;\n    exports.ɵɵpipeBind2 = ɵɵpipeBind2;\n    exports.ɵɵpipeBind3 = ɵɵpipeBind3;\n    exports.ɵɵpipeBind4 = ɵɵpipeBind4;\n    exports.ɵɵpipeBindV = ɵɵpipeBindV;\n    exports.ɵɵpureFunction0 = ɵɵpureFunction0;\n    exports.ɵɵpureFunction1 = ɵɵpureFunction1;\n    exports.ɵɵpureFunction2 = ɵɵpureFunction2;\n    exports.ɵɵpureFunction3 = ɵɵpureFunction3;\n    exports.ɵɵpureFunction4 = ɵɵpureFunction4;\n    exports.ɵɵpureFunction5 = ɵɵpureFunction5;\n    exports.ɵɵpureFunction6 = ɵɵpureFunction6;\n    exports.ɵɵpureFunction7 = ɵɵpureFunction7;\n    exports.ɵɵpureFunction8 = ɵɵpureFunction8;\n    exports.ɵɵpureFunctionV = ɵɵpureFunctionV;\n    exports.ɵɵgetCurrentView = ɵɵgetCurrentView;\n    exports.ɵgetDirectives = getDirectives;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵɵrestoreView = ɵɵrestoreView;\n    exports.ɵɵcontainerRefreshStart = ɵɵcontainerRefreshStart;\n    exports.ɵɵcontainerRefreshEnd = ɵɵcontainerRefreshEnd;\n    exports.ɵɵqueryRefresh = ɵɵqueryRefresh;\n    exports.ɵɵviewQuery = ɵɵviewQuery;\n    exports.ɵɵstaticViewQuery = ɵɵstaticViewQuery;\n    exports.ɵɵstaticContentQuery = ɵɵstaticContentQuery;\n    exports.ɵɵloadViewQuery = ɵɵloadViewQuery;\n    exports.ɵɵcontentQuery = ɵɵcontentQuery;\n    exports.ɵɵloadContentQuery = ɵɵloadContentQuery;\n    exports.ɵɵelementEnd = ɵɵelementEnd;\n    exports.ɵɵhostProperty = ɵɵhostProperty;\n    exports.ɵɵproperty = ɵɵproperty;\n    exports.ɵɵpropertyInterpolate = ɵɵpropertyInterpolate;\n    exports.ɵɵpropertyInterpolate1 = ɵɵpropertyInterpolate1;\n    exports.ɵɵpropertyInterpolate2 = ɵɵpropertyInterpolate2;\n    exports.ɵɵpropertyInterpolate3 = ɵɵpropertyInterpolate3;\n    exports.ɵɵpropertyInterpolate4 = ɵɵpropertyInterpolate4;\n    exports.ɵɵpropertyInterpolate5 = ɵɵpropertyInterpolate5;\n    exports.ɵɵpropertyInterpolate6 = ɵɵpropertyInterpolate6;\n    exports.ɵɵpropertyInterpolate7 = ɵɵpropertyInterpolate7;\n    exports.ɵɵpropertyInterpolate8 = ɵɵpropertyInterpolate8;\n    exports.ɵɵpropertyInterpolateV = ɵɵpropertyInterpolateV;\n    exports.ɵɵupdateSyntheticHostBinding = ɵɵupdateSyntheticHostBinding;\n    exports.ɵɵcomponentHostSyntheticListener = ɵɵcomponentHostSyntheticListener;\n    exports.ɵɵprojectionDef = ɵɵprojectionDef;\n    exports.ɵɵreference = ɵɵreference;\n    exports.ɵɵenableBindings = ɵɵenableBindings;\n    exports.ɵɵdisableBindings = ɵɵdisableBindings;\n    exports.ɵɵallocHostVars = ɵɵallocHostVars;\n    exports.ɵɵelementContainerStart = ɵɵelementContainerStart;\n    exports.ɵɵelementContainerEnd = ɵɵelementContainerEnd;\n    exports.ɵɵelementContainer = ɵɵelementContainer;\n    exports.ɵɵstyling = ɵɵstyling;\n    exports.ɵɵstyleMap = ɵɵstyleMap;\n    exports.ɵɵstyleSanitizer = ɵɵstyleSanitizer;\n    exports.ɵɵclassMap = ɵɵclassMap;\n    exports.ɵɵclassMapInterpolate1 = ɵɵclassMapInterpolate1;\n    exports.ɵɵclassMapInterpolate2 = ɵɵclassMapInterpolate2;\n    exports.ɵɵclassMapInterpolate3 = ɵɵclassMapInterpolate3;\n    exports.ɵɵclassMapInterpolate4 = ɵɵclassMapInterpolate4;\n    exports.ɵɵclassMapInterpolate5 = ɵɵclassMapInterpolate5;\n    exports.ɵɵclassMapInterpolate6 = ɵɵclassMapInterpolate6;\n    exports.ɵɵclassMapInterpolate7 = ɵɵclassMapInterpolate7;\n    exports.ɵɵclassMapInterpolate8 = ɵɵclassMapInterpolate8;\n    exports.ɵɵclassMapInterpolateV = ɵɵclassMapInterpolateV;\n    exports.ɵɵstyleProp = ɵɵstyleProp;\n    exports.ɵɵstylePropInterpolate1 = ɵɵstylePropInterpolate1;\n    exports.ɵɵstylePropInterpolate2 = ɵɵstylePropInterpolate2;\n    exports.ɵɵstylePropInterpolate3 = ɵɵstylePropInterpolate3;\n    exports.ɵɵstylePropInterpolate4 = ɵɵstylePropInterpolate4;\n    exports.ɵɵstylePropInterpolate5 = ɵɵstylePropInterpolate5;\n    exports.ɵɵstylePropInterpolate6 = ɵɵstylePropInterpolate6;\n    exports.ɵɵstylePropInterpolate7 = ɵɵstylePropInterpolate7;\n    exports.ɵɵstylePropInterpolate8 = ɵɵstylePropInterpolate8;\n    exports.ɵɵstylePropInterpolateV = ɵɵstylePropInterpolateV;\n    exports.ɵɵstylingApply = ɵɵstylingApply;\n    exports.ɵɵclassProp = ɵɵclassProp;\n    exports.ɵɵelementHostAttrs = ɵɵelementHostAttrs;\n    exports.ɵɵselect = ɵɵselect;\n    exports.ɵɵtextBinding = ɵɵtextBinding;\n    exports.ɵɵtemplate = ɵɵtemplate;\n    exports.ɵɵembeddedViewEnd = ɵɵembeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵɵload = ɵɵload;\n    exports.ɵɵpipe = ɵɵpipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵɵi18n = ɵɵi18n;\n    exports.ɵɵi18nAttributes = ɵɵi18nAttributes;\n    exports.ɵɵi18nExp = ɵɵi18nExp;\n    exports.ɵɵi18nStart = ɵɵi18nStart;\n    exports.ɵɵi18nEnd = ɵɵi18nEnd;\n    exports.ɵɵi18nApply = ɵɵi18nApply;\n    exports.ɵɵi18nPostprocess = ɵɵi18nPostprocess;\n    exports.ɵi18nConfigureLocalize = i18nConfigureLocalize;\n    exports.ɵɵi18nLocalize = ɵɵi18nLocalize;\n    exports.ɵsetLocaleId = setLocaleId;\n    exports.ɵDEFAULT_LOCALE_ID = DEFAULT_LOCALE_ID;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵɵresolveWindow = ɵɵresolveWindow;\n    exports.ɵɵresolveDocument = ɵɵresolveDocument;\n    exports.ɵɵresolveBody = ɵɵresolveBody;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵflushModuleScopingQueueAsMuchAsPossible = flushModuleScopingQueueAsMuchAsPossible;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵɵsanitizeHtml = ɵɵsanitizeHtml;\n    exports.ɵɵsanitizeStyle = ɵɵsanitizeStyle;\n    exports.ɵɵdefaultStyleSanitizer = ɵɵdefaultStyleSanitizer;\n    exports.ɵɵsanitizeScript = ɵɵsanitizeScript;\n    exports.ɵɵsanitizeUrl = ɵɵsanitizeUrl;\n    exports.ɵɵsanitizeResourceUrl = ɵɵsanitizeResourceUrl;\n    exports.ɵɵsanitizeUrlOrResourceUrl = ɵɵsanitizeUrlOrResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_COMPONENT_DEF = NG_COMPONENT_DEF;\n    exports.ɵNG_DIRECTIVE_DEF = NG_DIRECTIVE_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_MODULE_DEF = NG_MODULE_DEF;\n    exports.ɵNG_BASE_DEF = NG_BASE_DEF;\n    exports.ɵNG_INJECTABLE_DEF = NG_INJECTABLE_DEF;\n    exports.ɵNG_INJECTOR_DEF = NG_INJECTOR_DEF;\n    exports.ɵbindPlayerFactory = bindPlayerFactory;\n    exports.ɵaddPlayer = addPlayer;\n    exports.ɵgetPlayers = getPlayers;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵisBoundToModule__POST_R3__ = isBoundToModule__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵregisterNgModuleType = registerNgModuleType;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵcreateInjector = createInjector;\n    exports.ɵINJECTOR_IMPL__POST_R3__ = INJECTOR_IMPL__POST_R3__;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$3;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=core.umd.js.map\n"]}