{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","getClosureSafeProperty","objWithPropertyToExtract","Error","fillProperties","source","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","getInjectableDef","type","NG_INJECTABLE_DEF","getInjectorDef","NG_INJECTOR_DEF","ngInjectableDef","ngInjectorDef","InjectionToken","_desc","ngMetadataName","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ɵChangeDetectorStatus","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","__NG_ELEMENT_ID__","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","fn","ViewEncapsulation","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","styleUrls","unwrapResponse","response","text","EMPTY_OBJ","EMPTY_ARRAY","NodeInjectorFactory","__window","window","__self","self","WorkerGlobalScope","_global","TVIEW","FLAGS","PARENT","NEXT","QUERIES","HOST","HOST_NODE","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR","RENDERER_FACTORY","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","CONTENT_QUERIES","DECLARATION_VIEW","HEADER_OFFSET","ACTIVE_INDEX","VIEWS","NATIVE","LCONTAINER_LENGTH","MONKEY_PATCH_KEY_NAME","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","FactoryPrototype","isViewProvider","isProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","stringify$1","loadInternal","view","readElementValue","isArray","getNativeByIndex","lView","getNativeByTNode","tNode","hostView","getTNode","getComponentViewByIndex","nodeIndex","slotValue","isContentQueryHost","flags","isComponent","isComponentDef","def","template","isLContainer","isRootView","getRootView","readPatchedLView","getRootContext","viewOrComponent","readPatchedData","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","R3ResolvedDependencyType","defaultScheduler","requestAnimationFrame","setTimeout","addAllToArray","items","arr","findComponentView","rootTNode","resolveWindow","element","ownerDocument","defaultView","resolveDocument","resolveBody","body","getCompilerFacade","globalNg","ɵcompilerFacade","InjectFlags","Inject","Optional","Self","SkipSelf","Host","_injectImplementation","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","injectInjectorOnly","Default","injectRootLimpMode","get","inject","notFoundValue","injectableDef","injectArgs","types","arg","j","_renderCompCount","defineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","consts","vars","ngContentSelectors","hostBindings","contentQueries","contentQueriesRefresh","attributes","inputs","outputs","exportAs","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","id","styles","_","noSideEffects","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","forEach","extractDirectiveDef","extractPipeDef","getComponentDef","getDirectiveDef","getPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","obj","secondary","newLookup","minifiedKey","publicName","declaredName","defineBase","baseDefinition","elementDepthCount","defineDirective","definePipe","pipeDef","pure","getNgModuleDef","throwNotFound","queueInitHooks","tView","initHooks","checkHooks","queueLifecycleHooks","firstTemplatePass","directiveStart","end","directiveEnd","queueContentHooks","queueViewHooks","queueDestroyHooks","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeInitHooks","currentView","checkNoChangesMode","executeHooks","allHooks","hooksToCall","callHooks","bindingsEnabled","previousOrParentTNode","isParent","currentDirectiveDef","setCurrentDirectiveDef","enableBindings","disableBindings","getLView","restoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","setTNodeAndViewData","getIsParent","setIsParent","isCreationMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","getFirstTemplatePass","setFirstTemplatePass","bindingRootIndex","getBindingRoot","setBindingRoot","enterView","newView","hostTNode","oldView","bindingStartIndex","nextContextImpl","level","walkUpViews","nestingLevel","leaveView","includeViewProviders","setIncludeViewProviders","v","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","parent","diPublicInInjector","bloomAdd","charCodeAt","bloomBit","mask","b6","b5","tData","injectAttributeImpl","attrNameToInject","attrs","attrName","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","instance","searchTokensOnInjector","NOT_FOUND","moduleInjector","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","cptViewProvidersCount","endIndex","providerTokenOrDef","dirDef","lData","isFactory","getPrototypeOf","previousIncludeViewProviders","previousInjectImplementation","injectorView","isFirstHostTNode","NodeInjector","_tNode","_lView","getFactoryOf","typeAny","getInheritedFactory","getLContext","mpValue","isComponentInstance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","firstChild","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","native","context","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","slice","getComponent","loadLContextFromNode","getComponentAtNodeIndex","getContext","getViewComponent","loadLContext","getRootContext$1","getRootView$1","componentOrView","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","directive","node","Node","isBrowserEvents","listener","useCapture","getListeners","lCleanup","tCleanup","cleanup","listeners","firstParam","secondParam","name_1","listenerElement","callback","useCaptureOrIndx","sort","sortListeners","a","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","looseIdentical","isNaN","devModeEqual$1","isListLikeIterableA","isListLikeIterable$1","isListLikeIterableB","areIterablesEqual$1","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject$1","throwMultipleComponentError","tagName","NO_CHANGE","updateBinding","bindingIndex","getBinding","bindingUpdated","isDifferent","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","RendererStyleFlags3","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","getLContainer","embeddedView","containerHostIndex","getContainerRenderParent","tViewNode","container","nativeParentNode","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","lContainer","componentView","head","projection","nativeInsertBefore","nativeRemoveChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","containerIndex","views","splice","detachView","removeIndex","detached","viewToDetach","removeView","containerHost","destroyLView","getLViewChild","childIndex","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","executeOnDestroys","removeListeners","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","cleanupFn","destroy","getRenderParent","getHighestElementOrICUContainer","getHostNative","insertBefore","removeChild","appendChild","childEl","childTNode","parentTNode","getBeforeNodeForView","containerNative","viewTNode","parentNative","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","NG_TEMPLATE_SELECTOR","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","nodeAttrs","selectOnlyMarkerIdx","skipToNextSelector","current","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","BoundPlayerFactory","CorePlayerHandler","_players","flushPlayers","player","play","queuePlayer","ANIMATION_PROP_PREFIX","createEmptyStylingContext","sanitizer","initialStyles","initialClasses","getStylingContext","viewData","storageIndex","wrapper","isStylingContext","stylingTemplate","allocStylingContext","templateStyleContext","isAnimationProp","addPlayerInternal","playerContext","rootContext","playerContextIndex","ref","addEventListener","playerHandler","getPlayerContext","stylingContext","allocPlayerContext","hasClassInput","initializeStaticContext","attr","patchInitialStylingValue","initialStyling","prop","existingValue","renderInitialStylingValues","initialStylingValues","isEntryClassBased","setClass","setStyle","getMatchingBindingIndex","bindingName","start","getProp","_updateSingleStylingValue","offset","input","isClassBased","directiveRef","directiveIndex","getDirectiveIndexFromRegistry","singleIndex","getSinglePropIndexValue","singlePropOffsetRegistryIndex","offsets","currValue","getValue","currFlag","getPointers","currDirective","getDirectiveIndexFromEntry","hasValueChanged","allowValueChange","newValue","currentDirectiveOwner","newDirectiveOwner","isClassBased_1","playerBuilder","ClassAndStylePlayerBuilder","value_1","currPlayerIndex","getPlayerBuilderIndex","playerBuildersAreDirty","playerBuilderIndex","hasPlayerBuilderChanged","newIndex","setPlayerBuilder","setPlayerBuilderIndex","getStyleSanitizer","setSanitizeFlag","sanitizeYes","setValue","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","valueExists","setDirty","setDirectiveDirty","setContextDirty","setContextPlayersDirty","store","DashCase","setProperty","removeStyle","removeProperty","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBasedValue","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","setProp","builder","insertionIndex","directiveOwnerPointers","playerIndex","getPlayerBuilder","setFlag","limitToSingleClasses","findEntryPositionByProp","startIndex","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","tmpPlayerBuilderIndex","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","prepareInitialFlag","entryIsClassBased","initialIndex","getInitialStylingValuesIndexOf","_element","_type","_values","_dirty","_factory","buildPlayer","currentPlayer","isFirstRender","getDirectiveRegistryValuesIndexOf","keyValues","dirs","dirtyYes","getInitialClassNameValue","initialClassValues","_CLEAN_PROMISE","Promise","resolve","refreshDescendantViews","refreshDynamicEmbeddedViews","container_1","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","directiveDefIdx","setHostBindings","expandoInstructions","expandoStartIndex","currentDirectiveIndex","currentElementIndex","instruction","providerCount","refreshChildComponents","viewAttached","syncViewWithBlueprint","componentTView","checkView","createLView","rendererFactory","createNodeAtIndex","createTNode","createViewNode","allocExpando","viewToRender","_isParent","_previousOrParentTNode","tickRootContext","namespaceHTML","getRenderFlags","nextContext","renderComponentOrTemplate","templateFn","normalExecutionPath","begin","_currentNamespace","namespaceSVG","namespaceMathML","elementStart","elementEnd","elementContainerStart","createComment","createDirectivesAndLocals","elementContainerEnd","currentQueries","addNode","elementCreate","hasStyling","setUpAttributes","getElementDepthCount","increaseElementDepthCount","inputData","initializeTNodeInputs","renderInitialStylesAndClasses","overriddenRenderer","rendererToUse","createElement","createElementNS","localRefExtractor","getBindingsEnabled","resolveDirectives","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","findDirectiveMatches","registry","directiveRegistry","matches","instantiateAllDirectives","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","previousExpandoLength","saveResolvedLocalsInData","localIndex","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","pipeRegistry","isProc","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","querySelector","eventName","listenerFn","eventTargetResolver","resolved","lCleanupIndex","getCleanup","listen","wrappedListener","wrapListenerWithPreventDefault","wrapListenerIn_preventDefault","preventDefault","returnValue","generatePropertyAliases","propsLength","subscription","subscribe","idx","decreaseElementDepthCount","setInputsForProperty","elementAttribute","element_1","removeAttribute","strValue","elementProperty","nativeOnly","elementPropertyInternal","componentHostSyntheticProperty","loadComponentRenderer","loadRendererFn","dataValue","markDirtyIfOnPush","childComponentLView","tViews","tParent","initialInputs","direction","propStore","isInput","defs","directiveDef","propertyAliasMap","internalName","elementStyling","classBindingNames","styleBindingNames","styleSanitizer","updateContextWithBindings","onlyProcessSingleClasses","findOrPatchDirectiveIntoRegistry","directiveRefs","nextOffsetInsertionIndex","detectedIndex","singlePropOffsetValues","totalCurrentClassBindings","totalCurrentStyleBindings","stylesOffset","singleClassesStartIndex","multiStylesStartIndex","multiClassesStartIndex","currentSinglePropsLength","insertionOffset","filteredStyleBindingNames","i_1","singlePropIndex","filteredClassBindingNames","i_2","name_2","totalStyles","totalClasses","totalNewEntries","i_3","isMultiBased","singleOrMultiIndex","i_4","i_5","i_6","multiIndex","initialValuesToLookup","indexForInitial","initialFlag","elementHostAttrs","patchContextWithStaticAttrs","elementStylingApply","renderStyling","rootOrView","classesStore","stylesStore","totalPlayersQueued","targetDirectiveIndex","isContextDirty","isDirectiveDirty","flushPlayerBuilders","multiStartIndex","onlySingleClasses","stillDirty","readInitialValue","valueToApply","playersStartIndex","playerInsertionIndex","oldPlayer","scheduleTick","elementStyleProp","styleIndex","suffix","valueToAdd","updateStyleProp","elementClassProp","classIndex","onOrOffClassValue","updateClassProp","addOrRemove","elementStylingMap","classes","hackImplementationOfElementStylingMap","updateStylingMap","classesInput","stylesInput","classesPlayerBuilder","stylesPlayerBuilder","classesValue","stylesValue","ignoreAllClassUpdates","ignoreAllStyleUpdates","classNames","applyAllClasses","classesPlayerBuilderIndex","stylesPlayerBuilderIndex","split","styleProps","classesStartIndex","dirty","ctxIndex","propIndex","propLimit","adjustedPropIndex","newProp","initialValue","indexOfEntry","valueToCompare","flagToCompare","newFlag","ctxIndex_1","textNative","textBinding","element_2","textContent","directiveCount","elementIndex","postProcessBaseDirective","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","attrValue","queueComponentIndexForCheck","numberOfDirectives","directiveFactory","nodeInjectorFactory","addToViewTree","createLContainer","hostNative","isForViewContainerRef","containerInternal","comment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerTNode","scanForView","tContainerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","viewHost","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","nextNode","projectionNodeStack$1","selectorIndex","nodeToProject","projectedView","currentComponentView","firstProjectedNode","adjustedHostIndex","markViewDirty","res_1","nothingScheduled","clean","scheduler","rootComponent","detectChanges","detectChangesInternal","detectChangesInRootView","hostTView","createViewQuery","updateViewQuery","markDirty","allocHostVars","count","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","interpolationV","content","interpolation1","prefix","v0","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","getContextLView","loadQueryList","queryListIdx","load","directiveInject","injectAttribute","registerContentQuery","queryList","savedContentQueriesLength","tViewContentQueries","CLEAN_PROMISE","getCurrentView","getTViewCleanup","getPlayers","getPlayersInternal","players","nonFactoryPlayersStart","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","rNode","resetComponentState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","isComponentDef$1","definition","InheritDefinitionFeature","superType","getSuperType","_loop_1","e_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","rf","ctx","prevViewQuery_1","superViewQuery_1","prevContentQueries_1","superContentQueries_1","prevContentQueriesRefresh_1","superContentQueriesRefresh_1","queryIndex","features_1","features_1_1","ngInherit","e_1_1","return","superPrototype","PRIVATE_PREFIX","NgOnChangesFeature","publicToDeclaredInputs","publicToMinifiedInputs","proto","declaredKey_1","privateMinKey_1","originalProperty","checkProto","setter_1","set","simpleChanges","writable","currentChange","configurable","onChangesWrapper","delegateHook","ngOnChanges","noop","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR$1","NullInjector","Injector","StaticInjector","NULL","SWITCH_INJECTOR_FACTORY","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","USE_VALUE","provide","String","useValue","NULL_INJECTOR$1","NEW_LINE","NO_NEW_LINE","records","_records","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","charAt","substr","parts","JSON","replace","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$1","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","_this","injectorDefTypes","destroyed","dedupStack","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","has","assertNotDestroyed","service","clear","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","defOrWrappedDef","parents","ngModule","isDuplicate","imported","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","existing","multiRecord_1","hasOnDestroy","Function","paramLength","isExistingProvider","isFactoryProvider","classRef_1","ngModuleDetail","hasDeps","resolveProvider$1","lInjectablesBlueprint","isComponent$$1","providerFactory","beginIndex","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","factoryFn","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","item","multiResolve","result","factories","componentCount","multiProviders","ProvidersFeature","viewProviders","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","R3ElementRef","R3TemplateRef","R3ViewContainerRef","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_parent","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","tNodeChild","enumerable","_lookUpContext","detach","storeCleanupFn","markForCheck","reattach","checkNoChanges","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","_view","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_renderer","_queries","_injectorIndex","createEmbeddedView","container$$1","createEmbeddedViewAndNode","declarationView","queries","viewRef","hostContainer","createViewRef","componentIndex","hostComponentView","RendererStyleFlags2","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","SecurityContext","Renderer2","SWITCH_RENDERER2_FACTORY","Version","Sanitizer","VERSION","full","major","minor","patch","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ComponentFactory$$1","isInternalRootView","rootViewInjector","createChainedInjector","hostRNode","rootFlags","tElementNode","rootLView","oldLView","projection$$1","nodeList","firstTNode","previousTNode","componentRef","ComponentRef$1","ComponentRef$$1","_rootLView","destroyCbs","changeDetectorRef","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","childNode","nodeType","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","console","warn","sanitizeSrcset","srcset","trim","tagSet","tags","_b","_c","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","elementValid","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","elAttr","lower","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","ELEMENT_MARKER","marker","COMMENT_MARKER","MARKER","ICU_BLOCK_REGEX","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","PP_PLACEHOLDERS","PP_ICU_VARS","PP_ICUS","extractParts","pattern","prevPos","braceStack","results","braces","lastIndex","exec","pos","pop","block","test","parseICUBlock","substring_1","cases","icuType","mainBinding","str","binding","parseInt","blocks","assertGreaterThan","actual","expected","msg","throwError","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","sanitizeFn","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","Math","min","parentIndexStack","i18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","getTranslationForTemplate","search","RegExp","phIndex","icuNodeIndex","icuStart","tIcuIndex","hasBinding","update","icus","appendI18nNode","i18nPostprocess","replacements","_match","shift","some","_idx","list","i18nEnd","i18nEndFirstPass","rootIndex","tI18n","visitedPlaceholders","readCreateOpCodes","removeNode","currentTNode","opCode","destinationNodeIndex","destinationTNode","commentValue","commentRNode","activeCaseIndex","tagNameValue","removedPhTNode","removedPhRNode","i18n","i18nAttributes","i18nAttributesFirstPass","previousElementIndex","Plural","changeMask","shiftsCounter","i18nExp","expression","i18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","checkBit","skipCodes","tIcu","icuTNode","removeCodes","k","removeOpCode","activeIndex","caseIndex","getCaseIndex","bindingValue","resolvedCase","getPluralCategory","locale","getPluralCase","nLike","nDecimal","floor","abs","One","Other","Zero","Two","Few","Many","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","worstCaseSize","max","opCodes","parseNodes","currentNode","nestedIcusToCreate","element$$1","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","_bootstrapComponents","_r3Injector","injectFlags","NgModuleFactory$1","NgModuleFactory$$1","moduleType","parentInjector","pureFunction0","slotOffset","pureFn","thisArg","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef$1","pipeInstance","pipeBind1","unwrapValue","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","err","completeFn","sink","Subscription","Subject","QueryList","_results","changes","filter","find","reduce","init","toArray","reset","flatten$1","flat","flatItem","last","notifyOnChanges","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","LQueries_","shallow","deep","track","predicate","descend","read","createQuery","clone","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","isRootNodeOfQuery","removeView$1","query","containerValues","viewValuesIdx","getIdxOfMatchingSelector","queryByReadToken","matchingIdx","queryByTemplateRef","templateRefToken","templateRefResult","queryRead","queryByTNodeType","addMatch","matchingValue","createPredicate","_valuesTree","memoryIndex","getOrCreateCurrentQueries","QueryType","storeCleanupWithContext","queryRefresh","templateRefExtractor","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","SAFE_STYLE_VALUE","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","sanitizeHtml","getSanitizer","sanitize","HTML","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","getUrlSanitizer","tag","sanitizeUrlOrResourceUrl","angularCoreEnv","ɵdefineBase","ɵdefineComponent","ɵdefineDirective","ɵdefineNgModule","ɵdefinePipe","ɵdirectiveInject","ɵgetFactoryOf","ɵgetInheritedFactory","ɵinjectAttribute","ɵtemplateRefExtractor","ɵNgOnChangesFeature","ɵProvidersFeature","ɵInheritDefinitionFeature","ɵelementAttribute","ɵbind","ɵcontainer","ɵnextContext","ɵcontainerRefreshStart","ɵcontainerRefreshEnd","ɵloadQueryList","ɵnamespaceHTML","ɵnamespaceMathML","ɵnamespaceSVG","ɵenableBindings","ɵdisableBindings","ɵallocHostVars","ɵelementStart","ɵelementEnd","ɵelement","ɵelementContainerStart","ɵelementContainerEnd","ɵpureFunction0","ɵpureFunction1","ɵpureFunction2","ɵpureFunction3","ɵpureFunction4","ɵpureFunction5","ɵpureFunction6","ɵpureFunction7","ɵpureFunction8","ɵpureFunctionV","ɵgetCurrentView","ɵrestoreView","ɵinterpolation1","ɵinterpolation2","ɵinterpolation3","ɵinterpolation4","ɵinterpolation5","ɵinterpolation6","ɵinterpolation7","ɵinterpolation8","ɵinterpolationV","ɵelementClassProp","ɵlistener","ɵload","ɵprojection","ɵelementProperty","ɵcomponentHostSyntheticProperty","ɵpipeBind1","ɵpipeBind2","ɵpipeBind3","ɵpipeBind4","ɵpipeBindV","ɵprojectionDef","ɵpipe","ɵquery","ɵqueryRefresh","ɵregisterContentQuery","ɵreference","ɵelementStyling","ɵelementHostAttrs","ɵelementStylingMap","ɵelementStyleProp","ɵelementStylingApply","ɵtemplate","ɵtext","ɵtextBinding","ɵembeddedViewStart","ɵembeddedViewEnd","ɵi18n","ɵi18nAttributes","ɵi18nExp","ɵi18nStart","ɵi18nEnd","ɵi18nApply","ɵi18nPostprocess","ɵresolveWindow","ɵresolveDocument","ɵresolveBody","ɵsanitizeHtml","ɵsanitizeStyle","ɵdefaultStyleSanitizer","ɵsanitizeResourceUrl","ɵsanitizeScript","sanitizeScript","unsafeScript","SCRIPT","ɵsanitizeUrl","ɵsanitizeUrlOrResourceUrl","NgModuleFactoryLoader","modules","assertNotExisting","getModuleFactory__PRE_R3__","noModuleError","getModuleFactory","Type","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","typeStr","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","compiler","dep","reflectDependency","host","optional","Token","skipSelf","setTokenAndResolvedType","param","EMPTY_ARRAY$2","moduleQueue","flushingModuleQueue","isResolvedDeclaration","declaration","every","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","flatten$2","expandModuleWithProviders","emitInline","registerNgModuleType","compileInjector","setScopeOnDeclaredComponents","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","from","compilation","dir","processNgModuleFn","isNgModule","scopes","exported","declared","importedType","importedScope","entry","exportedType","exportedScope","mapFn","out","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","directiveMetadata","preserveWhitespaces","viewQueries","extractQueriesMetadata","interpolation","flushModuleScopingQueueAsMuchAsPossible","hasSelectorScope","compileDirective","facade","typeArgumentCount","isContentQuery","lifecycle","usesOnChanges","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","extractExportAs","part","isQueryAnn","queriesMeta","field","ann","convertToR3QueryMetadata","propertyName","convertToR3QueryPredicate","splitByComma","piece","compilePipe","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","USE_VALUE$1","EMPTY_ARRAY$3","convertInjectableProviderToFactory","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","preR3NgModuleCompile","USE_VALUE$2","isUseClassProvider","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","Injectable","SWITCH_COMPILE_INJECTABLE","render2CompileInjectable","injectableType","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","injectionError","constructResolvingMessage","errMsg","wrappedError$1","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","isPromise","then","isObservable","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","detectWTF","wtf","createScope","leave","scope","leaveScope","startTimeRange","rangeType","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","wtfStartTimeRange","wtfEndTimeRange","promise","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","delete","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_R3__","createCompiler","compileNgModuleFactory","ApplicationRef","ngDoBootstrap","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","ApplicationRef_1","componentOrFactory","componentFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode__PRE_R3__","nativeNode","_debugContext","DebugElement__PRE_R3__","addChild","references","providerTokens","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","eAttrs","lContext","lNode","eClasses","classList","styleName","eStyles","style","getPropertyValue","children","getDebugNode__POST_R3__","_queryNodeChildrenR3","elementsOnly","_nativeNodeToDebugNode","getDebugNode","getDebugNode__PRE_R3__","indexDebugNode","DebugNode","DebugElement","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike$1","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","MissingTranslationStrategy","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","ApplicationModule","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","_addDebugContext","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","elDef","selectorOrNode","ns","parentEl","ShadowDom","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","ViewContainerRef_","_data","templateRef","insert","createComponent","ngModuleRef","contextInjector","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","move","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyValue","attributeValue","setBindingDebugInfo","isAdd","styleValue","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","ɵangular_packages_core_core_q","ɵangular_packages_core_core_n","ɵangular_packages_core_core_o","ɵangular_packages_core_core_p","ɵangular_packages_core_core_r","ɵangular_packages_core_core_e","ɵangular_packages_core_core_l","ɵangular_packages_core_core_m","ɵangular_packages_core_core_k","ɵangular_packages_core_core_j","ɵangular_packages_core_core_a","ɵangular_packages_core_core_b","ɵangular_packages_core_core_c","ɵangular_packages_core_core_d","ɵangular_packages_core_core_i","ɵangular_packages_core_core_s","ɵangular_packages_core_core_u","ɵangular_packages_core_core_t","ɵangular_packages_core_core_x","ɵangular_packages_core_core_v","ɵangular_packages_core_core_w","ɵangular_packages_core_core_ba","ɵangular_packages_core_core_bb","ɵangular_packages_core_core_bc","ɵangular_packages_core_core_bd","ɵangular_packages_core_core_be","ɵangular_packages_core_core_bj","ɵangular_packages_core_core_bg","ɵangular_packages_core_core_f","ɵangular_packages_core_core_g","ɵangular_packages_core_core_h","ɵangular_packages_core_core_bh","ɵangular_packages_core_core_bk","ɵangular_packages_core_core_bl","ɵangular_packages_core_core_bn","ɵangular_packages_core_core_y","ɵangular_packages_core_core_z","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵNoopNgZone","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵinject","ɵsetCurrentInjector","ɵgetInjectableDef","ɵAPP_ROOT","ɵivyEnabled","ɵComponentFactory","ɵCodegenComponentFactoryResolver","ɵresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵdetectChanges","ɵrenderComponent","renderComponent","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","getRootContext$2","ɵsetClassMetadata","setClassMetadata","clazz","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵresetCompiledComponents","resetCompiledComponents","ɵtransitiveScopesFor","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵNG_ELEMENT_ID","ɵNG_COMPONENT_DEF","ɵNG_DIRECTIVE_DEF","ɵNG_PIPE_DEF","ɵNG_MODULE_DEF","ɵNG_BASE_DEF","ɵNG_INJECTABLE_DEF","ɵNG_INJECTOR_DEF","ɵbindPlayerFactory","bindPlayerFactory","ɵaddPlayer","addPlayer","getOrCreatePlayerContext","ɵgetPlayers","ɵcompileNgModuleFactory__POST_R3__","compileNgModuleFactory__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵgetDebugNode__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","srcMeta","hasAProvider","compilerMeta","ctorDeps","userDeps","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","injectChangeDetectorRef","ɵCompiler_compileModuleSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","_lContainer","_hostTNode","_hostView","_viewRefs","getParentInjectorTNode","startTNode","parentTNode_1","adjustedIdx","_adjustIndex","commentNode","nativeNextSibling","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","getOrCreateRenderer2","ɵgetModuleFactory__POST_R3__","getModuleFactory__POST_R3__","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵSWITCH_INJECTOR_FACTORY__POST_R3__","injectInjector","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","_e","resolveRendererType2","isFilled","None","ɵelementEventFullName","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue$1","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v7.2.0+103.sha-885f1af\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.rxjs.operators));\n}(this, (function (exports,rxjs,operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @publicApi\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        var fn = type;\n        if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef) {\n            return fn();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        componentResourceResolutionQueue.clear();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return component.templateUrl || component.styleUrls && component.styleUrls.length;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n        // NOTE: Under Ivy we may have both window & global defined in the Node\n        //    environment since ensureDocument() in render3.ts sets global.window.\n        if (typeof window != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            window['ngDevMode'] = newCounters;\n        }\n        if (typeof global != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            global['ngDevMode'] = newCounters;\n        }\n        if (typeof self != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            self['ngDevMode'] = newCounters;\n        }\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY_OBJ);\n        Object.freeze(EMPTY_ARRAY);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        assertEqual(node instanceof Node, true, 'The provided value must be an instance of a DOM Node');\n    }\n    function assertDataInRange(arr, index) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var FLAGS = 1;\n    var PARENT = 2;\n    var NEXT = 3;\n    var QUERIES = 4;\n    var HOST = 5;\n    var HOST_NODE = 6; // Rename to `T_HOST`?\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var TAIL = 14;\n    var CONTAINER_INDEX = 15;\n    var CONTENT_QUERIES = 16;\n    var DECLARATION_VIEW = 17;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 18;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    var VIEWS = 1;\n    // PARENT, NEXT, QUERIES, and HOST are indices 2, 3, 4, and 5.\n    // As we already have these constants in LView, we don't need to re-create them.\n    var NATIVE = 6;\n    // Because interfaces in TS/JS cannot be instanceof-checked this means that we\n    // need to rely on predictable characteristics of data-structures to check if they\n    // are what we expect for them to be. The `LContainer` interface code below has a\n    // fixed length and the constant value below references that. Using the length value\n    // below we can predictably gaurantee that we are dealing with an `LContainer` array.\n    // This value MUST be kept up to date with the length of the `LContainer` array\n    // interface below so that runtime type checking can work.\n    var LCONTAINER_LENGTH = 7;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, \n        /**\n         * Set to `true` if the token is a provider, and not a directive.\n         */\n        isProvider, injectImplementation) {\n            this.factory = factory;\n            this.isProvider = isProvider;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    var FactoryPrototype = NodeInjectorFactory.prototype;\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj != null && typeof obj == 'object' && Object.getPrototypeOf(obj) == FactoryPrototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        if (typeof value == 'object' && typeof value.type == 'function')\n            return value.type.name || value.type;\n        return '' + value;\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function loadInternal(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    /**\n     * Takes the value of a slot in `LView` and returns the element node.\n     *\n     * Normally, element nodes are stored flat, but if the node has styles/classes on it,\n     * it might be wrapped in a styling context. Or if that node has a directive that injects\n     * ViewContainerRef, it may be wrapped in an LContainer. Or if that node is a component,\n     * it will be wrapped in LView. It could even have all three, so we keep looping\n     * until we find something that isn't an array.\n     *\n     * @param value The initial value in `LView`\n     */\n    function readElementValue(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return readElementValue(lView[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return readElementValue(hostView[tNode.index]);\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        var slotValue = hostView[nodeIndex];\n        return slotValue.length >= HEADER_OFFSET ? slotValue : slotValue[HOST];\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 4 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 1 /* isComponent */) === 1 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isLContainer(value) {\n        // Styling contexts are also arrays, but their first index contains an element node\n        return Array.isArray(value) && value.length === LCONTAINER_LENGTH;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 128 /* IsRoot */) !== 0;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootView(target) {\n        ngDevMode && assertDefined(target, 'component');\n        var lView = Array.isArray(target) ? target : readPatchedLView(target);\n        while (lView && !(lView[FLAGS] & 128 /* IsRoot */)) {\n            lView = lView[PARENT];\n        }\n        return lView;\n    }\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[HOST_NODE];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[HOST_NODE];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n    var defaultScheduler = (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n        setTimeout // everything else\n    ).bind(_global);\n    /**\n     * Equivalent to ES6 spread, add each item to an array.\n     *\n     * @param items The items to add\n     * @param arr The array to which you want to add the items\n     */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[HOST_NODE];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n            lView = lView[DECLARATION_VIEW];\n            rootTNode = lView[HOST_NODE];\n        }\n        return lView;\n    }\n    function resolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    function resolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    function resolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global.ng;\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't descend into ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            attributes: componentDefinition.attributes || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MODULE_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have 'ngModuleDef' property.\");\n        }\n        return ngModuleDef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LView\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(tView, tNode) {\n        if (tView.firstTemplatePass) {\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n                var def = tView.data[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, checkNoChangesMode) {\n        if (!checkNoChangesMode && currentView[FLAGS] & 32 /* RunInit */) {\n            executeHooks(currentView, tView.initHooks, tView.checkHooks, checkNoChangesMode);\n            currentView[FLAGS] &= ~32 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(currentView, allHooks, checkHooks, checkNoChangesMode) {\n        if (checkNoChangesMode)\n            return;\n        var hooksToCall = currentView[FLAGS] & 2 /* FirstLViewPass */ ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(currentView, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(currentView, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(currentView[arr[i]]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    var currentDirectiveDef = null;\n    function getCurrentDirectiveDef() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        currentDirectiveDef = def;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function enableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function disableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode) {\n        previousOrParentTNode = tNode;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsParent(value) {\n        isParent = value;\n    }\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (i.e. this previousOrParentTNode points to a node on which we\n     * create content queries).\n     */\n    function getOrCreateCurrentQueries(QueryType) {\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        // if this is the first content query on a node, any existing LQueries needs to be cloned\n        // in subsequent template passes, the cloning occurs before directive instantiation.\n        if (previousOrParentTNode && previousOrParentTNode !== lView[HOST_NODE] &&\n            !isContentQueryHost(previousOrParentTNode)) {\n            currentQueries && (currentQueries = lView[QUERIES] = currentQueries.clone());\n            previousOrParentTNode.flags |= 4 /* hasContentQuery */;\n        }\n        return currentQueries || (lView[QUERIES] = new QueryType(null, null, null));\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        if (view === void 0) { view = lView; }\n        return (view[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    function getFirstTemplatePass() {\n        return firstTemplatePass;\n    }\n    function setFirstTemplatePass(value) {\n        firstTemplatePass = value;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        var oldView = lView;\n        if (newView) {\n            var tView = newView[TVIEW];\n            firstTemplatePass = tView.firstTemplatePass;\n            bindingRootIndex = tView.bindingStartIndex;\n        }\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     */\n    function leaveView(newView) {\n        var tView = lView[TVIEW];\n        if (isCreationMode(lView)) {\n            lView[FLAGS] &= ~1 /* CreationMode */;\n        }\n        else {\n            try {\n                executeHooks(lView, tView.viewHooks, tView.viewCheckHooks, checkNoChangesMode);\n            }\n            finally {\n                // Views are clean and in update mode after being checked, so these bits are cleared\n                lView[FLAGS] &= ~(8 /* Dirty */ | 2 /* FirstLViewPass */);\n                lView[FLAGS] |= 32 /* RunInit */;\n                lView[BINDING_INDEX] = tView.bindingStartIndex;\n            }\n        }\n        enterView(newView, null);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 1 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentLView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[HOST_NODE];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[HOST_NODE] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, token) {\n        bloomAdd(injectorIndex, view[TVIEW], token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 3 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                var savePreviousOrParentTNode = getPreviousOrParentTNode();\n                var saveLView = getLView();\n                setTNodeAndViewData(tNode, lView);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + stringify$1(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? findComponentView(lView)[HOST_NODE] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR];\n            if (moduleInjector) {\n                return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n            }\n            else {\n                return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringify$1(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponent(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param lView The view we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase) {\n        var tView = lView[TVIEW];\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringify$1(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(null, tData, lData, tNode);\n                var tView = lData[TVIEW];\n                if (value && factory.isProvider && value.ngOnDestroy) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(index, value.ngOnDestroy);\n                }\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        return typeof tokenId === 'number' ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    function injectInjector() {\n        var tNode = getPreviousOrParentTNode();\n        return new NodeInjector(tNode, getLView());\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = readElementValue(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = readElementValue(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 1 /* isComponent */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 1 /* isComponent */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                var localRefName = tNode.localNames[i];\n                var directiveIndex = tNode.localNames[i + 1];\n                result[localRefName] =\n                    directiveIndex === -1 ? getNativeByTNode(tNode, lView) : lView[directiveIndex];\n            }\n            return result;\n        }\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        var context = loadLContextFromNode(element);\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext(element) {\n        var context = loadLContextFromNode(element);\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element);\n        var lView = context.lView;\n        while (lView[PARENT] && lView[HOST] === null) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = lView[PARENT];\n        }\n        return lView[FLAGS] & 128 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated.\n     *\n     */\n    function getRootContext$1(target) {\n        var lViewData = Array.isArray(target) ? target : loadLContext(target).lView;\n        var rootLView = getRootView$1(lViewData);\n        return rootLView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext$1(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target);\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (!context)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringify$1(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrView any component or view\n     *\n     */\n    function getRootView$1(componentOrView) {\n        var lView;\n        if (Array.isArray(componentOrView)) {\n            ngDevMode && assertDefined(componentOrView, 'lView');\n            lView = componentOrView;\n        }\n        else {\n            ngDevMode && assertDefined(componentOrView, 'component');\n            lView = readPatchedLView(componentOrView);\n        }\n        while (lView && !(lView[FLAGS] & 128 /* IsRoot */)) {\n            lView = lView[PARENT];\n        }\n        return lView;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = readElementValue(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual$1(a, b) {\n        var isListLikeIterableA = isListLikeIterable$1(a);\n        var isListLikeIterableB = isListLikeIterable$1(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual$1(a, b, devModeEqual$1);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable$1(obj) {\n        if (!isJsObject$1(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual$1(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike$1(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject$1(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, lView[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        if (lView[bindingIndex] === NO_CHANGE) {\n            // initial pass\n            lView[bindingIndex] = value;\n        }\n        else if (isDifferent(lView[bindingIndex], value)) {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                if (!devModeEqual$1(lView[bindingIndex], value)) {\n                    throwErrorIfNoChangesMode(isCreationMode(lView), lView[bindingIndex], value);\n                }\n            }\n            lView[bindingIndex] = value;\n        }\n        else {\n            return false;\n        }\n        return true;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getLContainer(tNode, embeddedView) {\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = embeddedView[CONTAINER_INDEX];\n            return containerHostIndex > -1 ? embeddedView[PARENT][containerHostIndex] : null;\n        }\n        else {\n            // This is a inline view node (e.g. embeddedViewStart)\n            return embeddedView[PARENT][tNode.parent.index];\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], beforeNode);\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], beforeNode);\n                if (lContainer[VIEWS].length) {\n                    currentView = lContainer[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[HOST_NODE];\n                var head = componentHost.projection[tNode.projection];\n                // Must store both the TNode and the view because this projection node could be nested\n                // deeply inside embedded views, and we need to get back down to this particular nested view.\n                projectionNodeStack[++projectionNodeIndex] = tNode;\n                projectionNodeStack[++projectionNodeIndex] = currentView;\n                if (head) {\n                    currentView = componentView[PARENT];\n                    nextTNode = currentView[TVIEW].data[head.index];\n                }\n            }\n            else {\n                // Otherwise, this is a View or an ElementContainer\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.next === null && (tNode.flags & 2 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                nextTNode = tNode.next;\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[TVIEW].node;\n                    if (tNode === null || tNode === rootTNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = currentView[PARENT];\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */ && currentView[NEXT]) {\n                        currentView = currentView[NEXT];\n                        nextTNode = currentView[TVIEW].node;\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            nativeInsertBefore(renderer, parent, node, beforeNode || null);\n        }\n        else if (action === 1 /* Detach */) {\n            nativeRemoveChild(renderer, parent, node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LView, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LView.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0];\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param parentView The new parent of the inserted view\n     * @param index The index at which to insert the view\n     * @param containerIndex The index of the container node, if dynamic\n     */\n    function insertView(lView, lContainer, parentView, index, containerIndex) {\n        var views = lContainer[VIEWS];\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container's host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (containerIndex > -1) {\n            lView[CONTAINER_INDEX] = containerIndex;\n            lView[PARENT] = parentView;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 16 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @param detached Whether or not this view is already detached.\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex, detached) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!detached) {\n            addRemoveViewFromContainer(viewToDetach, false);\n        }\n        if (viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[CONTAINER_INDEX] = -1;\n        viewToDetach[PARENT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~16 /* Attached */;\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param tContainer The TContainer node associated with the LContainer\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, containerHost, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        detachView(lContainer, removeIndex, !!containerHost.detached);\n        destroyLView(view);\n    }\n    /** Gets the child of the given LView */\n    function getLViewChild(lView) {\n        var childIndex = lView[TVIEW].childIndex;\n        return childIndex === -1 ? null : lView[childIndex];\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 64 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var tNode;\n        if (state.length >= HEADER_OFFSET && (tNode = state[HOST_NODE]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, state);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer.length >= HEADER_OFFSET) {\n            var view = viewOrContainer;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[HOST_NODE];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup != null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        readElementValue(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // DOM listener\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else if (typeof tCleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = lCleanup[tCleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view, destroyHooks);\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tNode, currentView) {\n        // Nodes of the top-most view can be inserted eagerly.\n        if (isRootView(currentView)) {\n            return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n        }\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parent = getHighestElementOrICUContainer(tNode).parent;\n        // If the parent is null, then we are inserting across views: either into an embedded view or a\n        // component view.\n        if (parent == null) {\n            var hostTNode = currentView[HOST_NODE];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                return getHostNative(currentView);\n            }\n        }\n        else {\n            ngDevMode && assertNodeType(parent, 3 /* Element */);\n            // We've got a parent which is an element in the current view. We just need to verify if the\n            // parent element is not a component. Component's content nodes are not inserted immediately\n            // because they will be projected, and so doing insert at this point would be wasteful.\n            // Since the projection would then move it to its final destination.\n            if (parent.flags & 1 /* isComponent */) {\n                return null;\n            }\n            else {\n                return getNativeByTNode(parent, currentView);\n            }\n        }\n    }\n    /**\n     * Gets the native host element for a given view. Will return null if the current view does not have\n     * a host element.\n     */\n    function getHostNative(currentView) {\n        var hostTNode = currentView[HOST_NODE];\n        return hostTNode && hostTNode.type === 3 /* Element */ ?\n            getNativeByTNode(hostTNode, currentView[PARENT]) :\n            null;\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    /**\n     * Removes a native child node from a given native parent node.\n     */\n    function nativeRemoveChild(renderer, parent, child) {\n        isProceduralRenderer(renderer) ? renderer.removeChild(parent, child) :\n            parent.removeChild(child);\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The child that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var renderParent = getRenderParent(childTNode, currentView);\n        if (renderParent != null) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[HOST_NODE];\n            if (parentTNode.type === 2 /* View */) {\n                var lContainer = getLContainer(parentTNode, currentView);\n                var views = lContainer[VIEWS];\n                var index = views.indexOf(currentView);\n                nativeInsertBefore(renderer, renderParent, childEl, getBeforeNodeForView(index, views, lContainer[NATIVE]));\n            }\n            else if (parentTNode.type === 4 /* ElementContainer */ ||\n                parentTNode.type === 5 /* IcuContainer */) {\n                var anchorNode = getNativeByTNode(parentTNode, currentView);\n                nativeInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.appendChild(renderParent, childEl) :\n                    renderParent.appendChild(childEl);\n            }\n        }\n    }\n    /**\n     * Gets the top-level element or an ICU container if those containers are nested.\n     *\n     * @param tNode The starting TNode for which we should skip element and ICU containers\n     * @returns The TNode of the highest level ICU container or element container\n     */\n    function getHighestElementOrICUContainer(tNode) {\n        while (tNode.parent != null && (tNode.parent.type === 4 /* ElementContainer */ ||\n            tNode.parent.type === 5 /* IcuContainer */)) {\n            tNode = tNode.parent;\n        }\n        return tNode;\n    }\n    function getBeforeNodeForView(index, views, containerNative) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[HOST_NODE];\n            return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes the `child` element from the DOM if not in view and not projected.\n     *\n     * @param childTNode The TNode of the child to remove\n     * @param childEl The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(childTNode, childEl, currentView) {\n        var parentNative = getRenderParent(childTNode, currentView);\n        // We only remove the element if it already has a render parent.\n        if (parentNative) {\n            nativeRemoveChild(currentView[RENDERER], parentNative, childEl);\n        }\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            var views = nodeOrContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be perfomed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode. In \"projection\" mode, we do not need to check types, so if tag name\n     * matches selector, we declare a match. In \"directive matching\" mode, we also check whether tNode\n     * is of expected type:\n     * - whether tNode has either Element or ElementContainer type\n     * - or if we want to match \"ng-template\" tag, we check for Container type\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        return currentSelector === tNode.tagName &&\n            (isProjectionMode ||\n                (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) ||\n                (tNode.type === 0 /* Container */ && currentSelector === NG_TEMPLATE_SELECTOR));\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(3 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 3 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null &&\n                    isNodeMatchingSelectorList(tNode, selectors[i], /* isProjectionMode */ true)) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * Combines the binding value and a factory for an animation player.\n     *\n     * Used to bind a player to an element template binding (currently only\n     * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n     * supported). The provided `factoryFn` function will be run once all\n     * the associated bindings have been evaluated on the element and is\n     * designed to return a player which will then be placed on the element.\n     *\n     * @param factoryFn The function that is used to create a player\n     *   once all the rendering-related (styling values) have been\n     *   processed for the element binding.\n     * @param value The raw value that will be exposed to the binding\n     *   so that the binding can update its internal values when\n     *   any changes are evaluated.\n     */\n    function bindPlayerFactory(factoryFn, value) {\n        return new BoundPlayerFactory(factoryFn, value);\n    }\n    var BoundPlayerFactory = /** @class */ (function () {\n        function BoundPlayerFactory(fn, value) {\n            this.fn = fn;\n            this.value = value;\n        }\n        return BoundPlayerFactory;\n    }());\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent && player.state === 0 /* Pending */) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANIMATION_PROP_PREFIX = '@';\n    function createEmptyStylingContext(element, sanitizer, initialStyles, initialClasses) {\n        return [\n            0,\n            [null, -1, false, sanitizer || null],\n            initialStyles || [null],\n            initialClasses || [null],\n            [0, 0],\n            element || null,\n            null,\n            null,\n            null,\n        ];\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[5 /* ElementPosition */] = element;\n        // this will prevent any other directives from extending the context\n        context[0 /* MasterFlagPosition */] |= 32 /* BindingAllocationLocked */;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContext(index, viewData) {\n        var storageIndex = index;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LView or an LContainer\n            var stylingTemplate = getTNode(index - HEADER_OFFSET, viewData).stylingTemplate;\n            if (wrapper !== viewData) {\n                storageIndex = HOST;\n            }\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isStylingContext(value) {\n        // Not an LView or an LContainer\n        return Array.isArray(value) && typeof value[0 /* MasterFlagPosition */] === 'number' &&\n            Array.isArray(value[2 /* InitialStyleValuesPosition */]);\n    }\n    function isAnimationProp(name) {\n        return name[0] === ANIMATION_PROP_PREFIX;\n    }\n    function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n        ref = ref || element;\n        if (playerContextIndex) {\n            playerContext[playerContextIndex] = player;\n        }\n        else {\n            playerContext.push(player);\n        }\n        if (player) {\n            player.addEventListener(200 /* Destroyed */, function () {\n                var index = playerContext.indexOf(player);\n                var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                // if the player is being removed from the factory side of the context\n                // (which is where the [style] and [class] bindings do their thing) then\n                // that side of the array cannot be resized since the respective bindings\n                // have pointer index values that point to the associated factory instance\n                if (index) {\n                    if (index < nonFactoryPlayerIndex) {\n                        playerContext[index] = null;\n                    }\n                    else {\n                        playerContext.splice(index, 1);\n                    }\n                }\n                player.destroy();\n            });\n            var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n            playerHandler.queuePlayer(player, ref);\n            return true;\n        }\n        return false;\n    }\n    function getPlayersInternal(playerContext) {\n        var players = [];\n        var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n        // add all factory-based players (which are apart of [style] and [class] bindings)\n        for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n            var player = playerContext[i];\n            if (player) {\n                players.push(player);\n            }\n        }\n        // add all custom players (not apart of [style] and [class] bindings)\n        for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n            players.push(playerContext[i]);\n        }\n        return players;\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getLContext(target);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return null;\n        }\n        var lView = context.lView, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContext(nodeIndex, lView);\n        return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n    }\n    function getPlayerContext(stylingContext) {\n        return stylingContext[8 /* PlayerContext */];\n    }\n    function allocPlayerContext(data) {\n        return data[8 /* PlayerContext */] =\n            [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n    }\n    function throwInvalidRefError() {\n        throw new Error('Only elements that exist in an Angular application can be used for animations');\n    }\n    function hasStyling(attrs) {\n        for (var i = 0; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (attr == 1 /* Classes */ || attr == 2 /* Styles */)\n                return true;\n        }\n        return false;\n    }\n    function hasClassInput(tNode) {\n        return tNode.flags & 8 /* hasClassInput */ ? true : false;\n    }\n\n    /**\n     * This file includes the code to power all styling-binding operations in Angular.\n     *\n     * These include:\n     * [style]=\"myStyleObj\"\n     * [class]=\"myClassObj\"\n     * [style.prop]=\"myPropValue\"\n     * [class.name]=\"myClassValue\"\n     *\n     * There are many different ways in which these functions below are called. Please see\n     * `interfaces/styles.ts` to get a better idea of how the styling algorithm works.\n     */\n    /**\n     * Creates a new StylingContext an fills it with the provided static styling attribute values.\n     */\n    function initializeStaticContext(attrs) {\n        var context = createEmptyStylingContext();\n        var initialClasses = context[3 /* InitialClassValuesPosition */] =\n            [null];\n        var initialStyles = context[2 /* InitialStyleValuesPosition */] =\n            [null];\n        // The attributes array has marker values (numbers) indicating what the subsequent\n        // values represent. When we encounter a number, we set the mode to that type of attribute.\n        var mode = -1;\n        for (var i = 0; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode === 2 /* Styles */) {\n                initialStyles.push(attr, attrs[++i]);\n            }\n            else if (mode === 1 /* Classes */) {\n                initialClasses.push(attr, true);\n            }\n            else if (mode === 3 /* SelectOnly */) {\n                break;\n            }\n        }\n        return context;\n    }\n    /**\n     * Designed to update an existing styling context with new static styling\n     * data (classes and styles).\n     *\n     * @param context the existing styling context\n     * @param attrs an array of new static styling attributes that will be\n     *              assigned to the context\n     * @param directive the directive instance with which static data is associated with.\n     */\n    function patchContextWithStaticAttrs(context, attrs, directive) {\n        // If the styling context has already been patched with the given directive's bindings,\n        // then there is no point in doing it again. The reason why this may happen (the directive\n        // styling being patched twice) is because the `stylingBinding` function is called each time\n        // an element is created (both within a template function and within directive host bindings).\n        var directives = context[1 /* DirectiveRegistryPosition */];\n        if (getDirectiveRegistryValuesIndexOf(directives, directive) == -1) {\n            // this is a new directive which we have not seen yet.\n            directives.push(directive, -1, false, null);\n            var initialClasses = null;\n            var initialStyles = null;\n            var mode = -1;\n            for (var i = 0; i < attrs.length; i++) {\n                var attr = attrs[i];\n                if (typeof attr == 'number') {\n                    mode = attr;\n                }\n                else if (mode == 1 /* Classes */) {\n                    initialClasses = initialClasses || context[3 /* InitialClassValuesPosition */];\n                    patchInitialStylingValue(initialClasses, attr, true);\n                }\n                else if (mode == 2 /* Styles */) {\n                    initialStyles = initialStyles || context[2 /* InitialStyleValuesPosition */];\n                    patchInitialStylingValue(initialStyles, attr, attrs[++i]);\n                }\n            }\n        }\n    }\n    /**\n     * Designed to add a style or class value into the existing set of initial styles.\n     *\n     * The function will search and figure out if a style/class value is already present\n     * within the provided initial styling array. If and when a style/class value is not\n     * present (or if it's value is falsy) then it will be inserted/updated in the list\n     * of initial styling values.\n     */\n    function patchInitialStylingValue(initialStyling, prop, value) {\n        // Even values are keys; Odd numbers are values; Search keys only\n        for (var i = 1 /* KeyValueStartPosition */; i < initialStyling.length;) {\n            var key = initialStyling[i];\n            if (key === prop) {\n                var existingValue = initialStyling[i + 1 /* ValueOffset */];\n                // If there is no previous style value (when `null`) or no previous class\n                // applied (when `false`) then we update the the newly given value.\n                if (existingValue == null || existingValue == false) {\n                    initialStyling[i + 1 /* ValueOffset */] = value;\n                }\n                return;\n            }\n            i = i + 2 /* Size */;\n        }\n        // We did not find existing key, add a new one.\n        initialStyling.push(prop, value);\n    }\n    /**\n     * Runs through the initial styling data present in the context and renders\n     * them via the renderer on the element.\n     */\n    function renderInitialStylesAndClasses(element, context, renderer) {\n        var initialClasses = context[3 /* InitialClassValuesPosition */];\n        renderInitialStylingValues(element, renderer, initialClasses, true);\n        var initialStyles = context[2 /* InitialStyleValuesPosition */];\n        renderInitialStylingValues(element, renderer, initialStyles, false);\n    }\n    /**\n     * This is a helper function designed to render each entry present within the\n     * provided list of initialStylingValues.\n     */\n    function renderInitialStylingValues(element, renderer, initialStylingValues, isEntryClassBased) {\n        for (var i = 1 /* KeyValueStartPosition */; i < initialStylingValues.length; i += 2 /* Size */) {\n            var value = initialStylingValues[i + 1 /* ValueOffset */];\n            if (value) {\n                if (isEntryClassBased) {\n                    setClass(element, initialStylingValues[i + 0 /* PropOffset */], true, renderer, null);\n                }\n                else {\n                    setStyle(element, initialStylingValues[i + 0 /* PropOffset */], value, renderer, null);\n                }\n            }\n        }\n    }\n    /**\n     * Adds in new binding values to a styling context.\n     *\n     * If a directive value is provided then all provided class/style binding names will\n     * reference the provided directive.\n     *\n     * @param context the existing styling context\n     * @param directiveRef the directive that the new bindings will reference\n     * @param classBindingNames an array of class binding names that will be added to the context\n     * @param styleBindingNames an array of style binding names that will be added to the context\n     * @param styleSanitizer an optional sanitizer that handle all sanitization on for each of\n     *    the bindings added to the context. Note that if a directive is provided then the sanitizer\n     *    instance will only be active if and when the directive updates the bindings that it owns.\n     */\n    function updateContextWithBindings(context, directiveRef, classBindingNames, styleBindingNames, styleSanitizer, onlyProcessSingleClasses) {\n        if (context[0 /* MasterFlagPosition */] & 32 /* BindingAllocationLocked */)\n            return;\n        // this means the context has already been patched with the directive's bindings\n        var directiveIndex = findOrPatchDirectiveIntoRegistry(context, directiveRef, styleSanitizer);\n        if (directiveIndex === -1) {\n            // this means the directive has already been patched in ... No point in doing anything\n            return;\n        }\n        // there are alot of variables being used below to track where in the context the new\n        // binding values will be placed. Because the context consists of multiple types of\n        // entries (single classes/styles and multi classes/styles) alot of the index positions\n        // need to be computed ahead of time and the context needs to be extended before the values\n        // are inserted in.\n        var singlePropOffsetValues = context[4 /* SinglePropOffsetPositions */];\n        var totalCurrentClassBindings = singlePropOffsetValues[1 /* ClassesCountPosition */];\n        var totalCurrentStyleBindings = singlePropOffsetValues[0 /* StylesCountPosition */];\n        var classesOffset = totalCurrentClassBindings * 4 /* Size */;\n        var stylesOffset = totalCurrentStyleBindings * 4 /* Size */;\n        var singleStylesStartIndex = 9 /* SingleStylesStartPosition */;\n        var singleClassesStartIndex = singleStylesStartIndex + stylesOffset;\n        var multiStylesStartIndex = singleClassesStartIndex + classesOffset;\n        var multiClassesStartIndex = multiStylesStartIndex + stylesOffset;\n        // because we're inserting more bindings into the context, this means that the\n        // binding values need to be referenced the singlePropOffsetValues array so that\n        // the template/directive can easily find them inside of the `elementStyleProp`\n        // and the `elementClassProp` functions without iterating through the entire context.\n        // The first step to setting up these reference points is to mark how many bindings\n        // are being added. Even if these bindings already exist in the context, the directive\n        // or template code will still call them unknowingly. Therefore the total values need\n        // to be registered so that we know how many bindings are assigned to each directive.\n        var currentSinglePropsLength = singlePropOffsetValues.length;\n        singlePropOffsetValues.push(styleBindingNames ? styleBindingNames.length : 0, classBindingNames ? classBindingNames.length : 0);\n        // the code below will check to see if a new style binding already exists in the context\n        // if so then there is no point in inserting it into the context again. Whether or not it\n        // exists the styling offset code will now know exactly where it is\n        var insertionOffset = 0;\n        var filteredStyleBindingNames = [];\n        if (styleBindingNames && styleBindingNames.length) {\n            for (var i_1 = 0; i_1 < styleBindingNames.length; i_1++) {\n                var name_1 = styleBindingNames[i_1];\n                var singlePropIndex = getMatchingBindingIndex(context, name_1, singleStylesStartIndex, singleClassesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = singleClassesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredStyleBindingNames.push(name_1);\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // just like with the style binding loop above, the new class bindings get the same treatment...\n        var filteredClassBindingNames = [];\n        if (classBindingNames && classBindingNames.length) {\n            for (var i_2 = 0; i_2 < classBindingNames.length; i_2++) {\n                var name_2 = classBindingNames[i_2];\n                var singlePropIndex = getMatchingBindingIndex(context, name_2, singleClassesStartIndex, multiStylesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = multiStylesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredClassBindingNames.push(name_2);\n                }\n                else {\n                    singlePropIndex += filteredStyleBindingNames.length * 4 /* Size */;\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // because new styles are being inserted, this means the existing collection of style offset\n        // index values are incorrect (they point to the wrong values). The code below will run through\n        // the entire offset array and update the existing set of index values to point to their new\n        // locations while taking the new binding values into consideration.\n        var i = 2 /* ValueStartPosition */;\n        if (filteredStyleBindingNames.length) {\n            while (i < currentSinglePropsLength) {\n                var totalStyles = singlePropOffsetValues[i + 0 /* StylesCountPosition */];\n                var totalClasses = singlePropOffsetValues[i + 1 /* ClassesCountPosition */];\n                if (totalClasses) {\n                    var start = i + 2 /* ValueStartPosition */ + totalStyles;\n                    for (var j = start; j < start + totalClasses; j++) {\n                        singlePropOffsetValues[j] += filteredStyleBindingNames.length * 4 /* Size */;\n                    }\n                }\n                var total = totalStyles + totalClasses;\n                i += 2 /* ValueStartPosition */ + total;\n            }\n        }\n        var totalNewEntries = filteredClassBindingNames.length + filteredStyleBindingNames.length;\n        // in the event that there are new style values being inserted, all existing class and style\n        // bindings need to have their pointer values offsetted with the new amount of space that is\n        // used for the new style/class bindings.\n        for (var i_3 = singleStylesStartIndex; i_3 < context.length; i_3 += 4 /* Size */) {\n            var isMultiBased = i_3 >= multiStylesStartIndex;\n            var isClassBased = i_3 >= (isMultiBased ? multiClassesStartIndex : singleClassesStartIndex);\n            var flag = getPointers(context, i_3);\n            var staticIndex = getInitialIndex(flag);\n            var singleOrMultiIndex = getMultiOrSingleIndex(flag);\n            if (isMultiBased) {\n                singleOrMultiIndex +=\n                    isClassBased ? (filteredStyleBindingNames.length * 4 /* Size */) : 0;\n            }\n            else {\n                singleOrMultiIndex += (totalNewEntries * 4 /* Size */) +\n                    ((isClassBased ? filteredStyleBindingNames.length : 0) * 4 /* Size */);\n            }\n            setFlag(context, i_3, pointers(flag, staticIndex, singleOrMultiIndex));\n        }\n        // this is where we make space in the context for the new style bindings\n        for (var i_4 = 0; i_4 < filteredStyleBindingNames.length * 4 /* Size */; i_4++) {\n            context.splice(multiClassesStartIndex, 0, null);\n            context.splice(singleClassesStartIndex, 0, null);\n            singleClassesStartIndex++;\n            multiStylesStartIndex++;\n            multiClassesStartIndex += 2; // both single + multi slots were inserted\n        }\n        // this is where we make space in the context for the new class bindings\n        for (var i_5 = 0; i_5 < filteredClassBindingNames.length * 4 /* Size */; i_5++) {\n            context.splice(multiStylesStartIndex, 0, null);\n            context.push(null);\n            multiStylesStartIndex++;\n            multiClassesStartIndex++;\n        }\n        var initialClasses = context[3 /* InitialClassValuesPosition */];\n        var initialStyles = context[2 /* InitialStyleValuesPosition */];\n        // the code below will insert each new entry into the context and assign the appropriate\n        // flags and index values to them. It's important this runs at the end of this function\n        // because the context, property offset and index values have all been computed just before.\n        for (var i_6 = 0; i_6 < totalNewEntries; i_6++) {\n            var entryIsClassBased = i_6 >= filteredStyleBindingNames.length;\n            var adjustedIndex = entryIsClassBased ? (i_6 - filteredStyleBindingNames.length) : i_6;\n            var propName = entryIsClassBased ? filteredClassBindingNames[adjustedIndex] :\n                filteredStyleBindingNames[adjustedIndex];\n            var multiIndex = void 0, singleIndex = void 0;\n            if (entryIsClassBased) {\n                multiIndex = multiClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n            }\n            else {\n                multiIndex =\n                    multiStylesStartIndex + ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleStylesStartIndex +\n                    ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n            }\n            // if a property is not found in the initial style values list then it\n            // is ALWAYS added incase a follow-up directive introduces the same initial\n            // style/class value later on.\n            var initialValuesToLookup = entryIsClassBased ? initialClasses : initialStyles;\n            var indexForInitial = getInitialStylingValuesIndexOf(initialValuesToLookup, propName);\n            if (indexForInitial === -1) {\n                indexForInitial = initialValuesToLookup.length + 1 /* ValueOffset */;\n                initialValuesToLookup.push(propName, entryIsClassBased ? false : null);\n            }\n            else {\n                indexForInitial += 1 /* ValueOffset */;\n            }\n            var initialFlag = prepareInitialFlag(context, propName, entryIsClassBased, styleSanitizer || null);\n            setFlag(context, singleIndex, pointers(initialFlag, indexForInitial, multiIndex));\n            setProp(context, singleIndex, propName);\n            setValue(context, singleIndex, null);\n            setPlayerBuilderIndex(context, singleIndex, 0, directiveIndex);\n            setFlag(context, multiIndex, pointers(initialFlag, indexForInitial, singleIndex));\n            setProp(context, multiIndex, propName);\n            setValue(context, multiIndex, null);\n            setPlayerBuilderIndex(context, multiIndex, 0, directiveIndex);\n        }\n        // the total classes/style values are updated so the next time the context is patched\n        // additional style/class bindings from another directive then it knows exactly where\n        // to insert them in the context\n        singlePropOffsetValues[1 /* ClassesCountPosition */] =\n            totalCurrentClassBindings + filteredClassBindingNames.length;\n        singlePropOffsetValues[0 /* StylesCountPosition */] =\n            totalCurrentStyleBindings + filteredStyleBindingNames.length;\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        var masterFlag = pointers(0, 0, multiStylesStartIndex) |\n            (onlyProcessSingleClasses ? 16 /* OnlyProcessSingleClasses */ : 0);\n        setFlag(context, 0 /* MasterFlagPosition */, masterFlag);\n    }\n    /**\n     * Searches through the existing registry of directives\n     */\n    function findOrPatchDirectiveIntoRegistry(context, directiveRef, styleSanitizer) {\n        var directiveRefs = context[1 /* DirectiveRegistryPosition */];\n        var nextOffsetInsertionIndex = context[4 /* SinglePropOffsetPositions */].length;\n        var directiveIndex;\n        var detectedIndex = getDirectiveRegistryValuesIndexOf(directiveRefs, directiveRef);\n        if (detectedIndex === -1) {\n            directiveIndex = directiveRefs.length / 4 /* Size */;\n            directiveRefs.push(directiveRef, nextOffsetInsertionIndex, false, styleSanitizer || null);\n        }\n        else {\n            var singlePropStartPosition = detectedIndex + 1 /* SinglePropValuesIndexOffset */;\n            if (directiveRefs[singlePropStartPosition] >= 0) {\n                // the directive has already been patched into the context\n                return -1;\n            }\n            directiveIndex = detectedIndex / 4 /* Size */;\n            // because the directive already existed this means that it was set during elementHostAttrs or\n            // elementStart which means that the binding values were not here. Therefore, the values below\n            // need to be applied so that single class and style properties can be assigned later.\n            var singlePropPositionIndex = detectedIndex + 1 /* SinglePropValuesIndexOffset */;\n            directiveRefs[singlePropPositionIndex] = nextOffsetInsertionIndex;\n            // the sanitizer is also apart of the binding process and will be used when bindings are\n            // applied.\n            var styleSanitizerIndex = detectedIndex + 3 /* StyleSanitizerOffset */;\n            directiveRefs[styleSanitizerIndex] = styleSanitizer || null;\n        }\n        return directiveIndex;\n    }\n    function getMatchingBindingIndex(context, bindingName, start, end) {\n        for (var j = start; j < end; j += 4 /* Size */) {\n            if (getProp(context, j) === bindingName)\n                return j;\n        }\n        return -1;\n    }\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyling` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classesInput The key/value map of CSS class names that will be used for the update.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classesInput, stylesInput, directiveRef) {\n        stylesInput = stylesInput || null;\n        var directiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        var element = context[5 /* ElementPosition */];\n        var classesPlayerBuilder = classesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(classesInput, element, 1 /* Class */) :\n            null;\n        var stylesPlayerBuilder = stylesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(stylesInput, element, 2 /* Style */) :\n            null;\n        var classesValue = classesPlayerBuilder ?\n            classesInput.value :\n            classesInput;\n        var stylesValue = stylesPlayerBuilder ? stylesInput.value : stylesInput;\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        var ignoreAllClassUpdates = limitToSingleClasses(context) || classesValue === NO_CHANGE ||\n            classesValue === context[6 /* CachedClassValueOrInitialClassString */];\n        var ignoreAllStyleUpdates = stylesValue === NO_CHANGE || stylesValue === context[7 /* CachedStyleValue */];\n        if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n            return;\n        context[6 /* CachedClassValueOrInitialClassString */] = classesValue;\n        context[7 /* CachedStyleValue */] = stylesValue;\n        var classNames = EMPTY_ARRAY;\n        var applyAllClasses = false;\n        var playerBuildersAreDirty = false;\n        var classesPlayerBuilderIndex = classesPlayerBuilder ? 1 /* ClassMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        var stylesPlayerBuilderIndex = stylesPlayerBuilder ? 3 /* StyleMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (!ignoreAllClassUpdates) {\n            if (typeof classesValue == 'string') {\n                classNames = classesValue.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n            else {\n                classNames = classesValue ? Object.keys(classesValue) : EMPTY_ARRAY;\n            }\n        }\n        var classes = (classesValue || EMPTY_OBJ);\n        var styleProps = stylesValue ? Object.keys(stylesValue) : EMPTY_ARRAY;\n        var styles = stylesValue || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased && !ignoreAllStyleUpdates) || (isClassBased && !ignoreAllClassUpdates);\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (processValue) {\n                var adjustedPropIndex = isClassBased ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var playerBuilderIndex = isClassBased ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    var flag = getPointers(context, ctxIndex);\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                    if (hasValueChanged(flag, value, newValue)) {\n                        setValue(context, ctxIndex, newValue);\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        var initialValue = getInitialValue(context, flag);\n                        // SKIP IF INITIAL CHECK\n                        // If the former `value` is `null` then it means that an initial value\n                        // could be being rendered on screen. If that is the case then there is\n                        // no point in updating the value incase it matches. In other words if the\n                        // new value is the exact same as the previously rendered value (which\n                        // happens to be the initial value) then do nothing.\n                        if (value != null || hasValueChanged(flag, initialValue, newValue)) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (hasValueChanged(flagToCompare, valueToCompare, newValue)) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            // same if statement logic as above (look for SKIP IF INITIAL CHECK).\n                            if (valueToCompare != null || hasValueChanged(flagToCompare, initialValue, newValue)) {\n                                setDirty(context, ctxIndex, true);\n                                playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        var newFlag = prepareInitialFlag(context, newProp, isClassBased, getStyleSanitizer(context, directiveIndex));\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        insertNewMultiProperty(context, ctxIndex, isClassBased, newProp, newFlag, newValue, directiveIndex, playerBuilderIndex);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 4 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased = (flag & 2 /* Class */) === 2 /* Class */;\n            var processValue = (!isClassBased && !ignoreAllStyleUpdates) || (isClassBased && !ignoreAllClassUpdates);\n            if (processValue) {\n                var value = getValue(context, ctxIndex);\n                var doRemoveValue = valueExists(value, isClassBased);\n                if (doRemoveValue) {\n                    setDirty(context, ctxIndex, true);\n                    setValue(context, ctxIndex, null);\n                    // we keep the player factory the same so that the `nulled` value can\n                    // be instructed into the player because removing a style and/or a class\n                    // is a valid animation player instruction.\n                    var playerBuilderIndex = isClassBased ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                    dirty = true;\n                }\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        var sanitizer = getStyleSanitizer(context, directiveIndex);\n        while (propIndex < propLimit) {\n            var isClassBased = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased && !ignoreAllStyleUpdates) || (isClassBased && !ignoreAllClassUpdates);\n            if (processValue) {\n                var adjustedPropIndex = isClassBased ? propIndex - classesStartIndex : propIndex;\n                var prop = isClassBased ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var value = isClassBased ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n                var flag = prepareInitialFlag(context, prop, isClassBased, sanitizer) | 1 /* Dirty */;\n                var playerBuilderIndex = isClassBased ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                var ctxIndex_1 = context.length;\n                context.push(flag, prop, value, 0);\n                setPlayerBuilderIndex(context, ctxIndex_1, playerBuilderIndex, directiveIndex);\n                dirty = true;\n            }\n            propIndex++;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n            setDirectiveDirty(context, directiveIndex, true);\n        }\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param offset The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, offset, addOrRemove, directiveRef) {\n        _updateSingleStylingValue(context, offset, addOrRemove, true, directiveRef);\n    }\n    /**\n     * Sets and resolves a single style value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param offset The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     * @param directiveRef an optional reference to the directive responsible\n     *    for this binding change. If present then style binding will only\n     *    actualize if the directive has ownership over this binding\n     *    (see styling.ts#directives for more information about the algorithm).\n     */\n    function updateStyleProp(context, offset, input, directiveRef) {\n        _updateSingleStylingValue(context, offset, input, false, directiveRef);\n    }\n    function _updateSingleStylingValue(context, offset, input, isClassBased, directiveRef) {\n        var directiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        var singleIndex = getSinglePropIndexValue(context, directiveIndex, offset, isClassBased);\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        var currDirective = getDirectiveIndexFromEntry(context, singleIndex);\n        var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n        if (hasValueChanged(currFlag, currValue, value) &&\n            allowValueChange(currValue, value, currDirective, directiveIndex)) {\n            var isClassBased_1 = (currFlag & 2 /* Class */) === 2 /* Class */;\n            var element = context[5 /* ElementPosition */];\n            var playerBuilder = input instanceof BoundPlayerFactory ?\n                new ClassAndStylePlayerBuilder(input, element, isClassBased_1 ? 1 /* Class */ : 2 /* Style */) :\n                null;\n            var value_1 = (playerBuilder ? input.value : input);\n            var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n            var playerBuildersAreDirty = false;\n            var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n            if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n                var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n                playerBuilderIndex = playerBuilder ? newIndex : 0;\n                playerBuildersAreDirty = true;\n            }\n            if (playerBuildersAreDirty || currDirective !== directiveIndex) {\n                setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex, directiveIndex);\n            }\n            if (currDirective !== directiveIndex) {\n                var prop = getProp(context, singleIndex);\n                var sanitizer = getStyleSanitizer(context, directiveIndex);\n                setSanitizeFlag(context, singleIndex, (sanitizer && sanitizer(prop)) ? true : false);\n            }\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value_1);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value_1, isClassBased_1) && valueExists(valueForMulti, isClassBased_1)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setDirectiveDirty(context, directiveIndex, true);\n                setContextDirty(context, true);\n            }\n            if (playerBuildersAreDirty) {\n                setContextPlayersDirty(context, true);\n            }\n        }\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param classesStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param stylesStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param directiveRef an optional directive that will be used to target which\n     *    styling values are rendered. If left empty, only the bindings that are\n     *    registered on the template will be rendered.\n     * @returns number the total amount of players that got queued for animation (if any)\n     */\n    function renderStyling(context, renderer, rootOrView, isFirstRender, classesStore, stylesStore, directiveRef) {\n        var totalPlayersQueued = 0;\n        var targetDirectiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        if (isContextDirty(context) && isDirectiveDirty(context, targetDirectiveIndex)) {\n            var flushPlayerBuilders = context[0 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n            var native = context[5 /* ElementPosition */];\n            var multiStartIndex = getMultiStartIndex(context);\n            var onlySingleClasses = limitToSingleClasses(context);\n            var stillDirty = false;\n            for (var i = 9 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var flag = getPointers(context, i);\n                    var directiveIndex = getDirectiveIndexFromEntry(context, i);\n                    if (targetDirectiveIndex !== directiveIndex) {\n                        stillDirty = true;\n                        continue;\n                    }\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var styleSanitizer = (flag & 4 /* Sanitize */) ? getStyleSanitizer(context, directiveIndex) : null;\n                    var playerBuilder = getPlayerBuilder(context, i);\n                    var isClassBased = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var readInitialValue = !isClassBased || !onlySingleClasses;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    // Note that we ignore class-based deferals because otherwise a class can never\n                    // be removed in the case that it exists as true in the initial classes list...\n                    if (!isClassBased && !valueExists(valueToApply, isClassBased) && readInitialValue) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    // if the first render is true then we do not want to start applying falsy\n                    // values to the DOM element's styling. Otherwise then we know there has\n                    // been a change and even if it's falsy then it's removing something that\n                    // was truthy before.\n                    var doApplyValue = isFirstRender ? valueToApply : true;\n                    if (doApplyValue) {\n                        if (isClassBased) {\n                            setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                        }\n                        else {\n                            setStyle(native, prop, valueToApply, renderer, styleSanitizer, stylesStore, playerBuilder);\n                        }\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            if (flushPlayerBuilders) {\n                var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n                var playerContext = getPlayerContext(context);\n                var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                    var builder = playerContext[i];\n                    var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                    var oldPlayer = playerContext[playerInsertionIndex];\n                    if (builder) {\n                        var player = builder.buildPlayer(oldPlayer, isFirstRender);\n                        if (player !== undefined) {\n                            if (player != null) {\n                                var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                                wasQueued && totalPlayersQueued++;\n                            }\n                            if (oldPlayer) {\n                                oldPlayer.destroy();\n                            }\n                        }\n                    }\n                    else if (oldPlayer) {\n                        // the player builder has been removed ... therefore we should delete the associated\n                        // player\n                        oldPlayer.destroy();\n                    }\n                }\n                setContextPlayersDirty(context, false);\n            }\n            setDirectiveDirty(context, targetDirectiveIndex, false);\n            setContextDirty(context, stillDirty);\n        }\n        return totalPlayersQueued;\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(prop, value);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(prop, value);\n            }\n        }\n        else if (value) {\n            value = value.toString(); // opacity, z-index and flexbox all have number values which may not\n            // assign as numbers\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native['style'].setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native['style'].removeProperty(prop);\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store, playerBuilder) {\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(className, add);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(className, add);\n            }\n        }\n        else if (add) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                native['classList'].add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                native['classList'].remove(className);\n        }\n    }\n    function setSanitizeFlag(context, index, sanitizeYes) {\n        if (sanitizeYes) {\n            context[index] |= 4 /* Sanitize */;\n        }\n        else {\n            context[index] &= ~4 /* Sanitize */;\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBasedValue(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 63 /* BitMask */) | (staticIndex << 6 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 6 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        var entryIsClassBased = flag & 2 /* Class */;\n        var initialValues = entryIsClassBased ? context[3 /* InitialClassValuesPosition */] :\n            context[2 /* InitialStyleValuesPosition */];\n        return initialValues[index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 6 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 6 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 9 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[0 /* MasterFlagPosition */]);\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function hasPlayerBuilderChanged(context, builder, index) {\n        var playerContext = context[8 /* PlayerContext */];\n        if (builder) {\n            if (!playerContext || index === 0) {\n                return true;\n            }\n        }\n        else if (!playerContext) {\n            return false;\n        }\n        return playerContext[index] !== builder;\n    }\n    function setPlayerBuilder(context, builder, insertionIndex) {\n        var playerContext = context[8 /* PlayerContext */] || allocPlayerContext(context);\n        if (insertionIndex > 0) {\n            playerContext[insertionIndex] = builder;\n        }\n        else {\n            insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            playerContext.splice(insertionIndex, 0, builder, null);\n            playerContext[0 /* NonBuilderPlayersStart */] +=\n                2 /* PlayerAndPlayerBuildersTupleSize */;\n        }\n        return insertionIndex;\n    }\n    function directiveOwnerPointers(directiveIndex, playerIndex) {\n        return (playerIndex << 16 /* BitCountSize */) | directiveIndex;\n    }\n    function setPlayerBuilderIndex(context, index, playerBuilderIndex, directiveIndex) {\n        var value = directiveOwnerPointers(directiveIndex, playerBuilderIndex);\n        context[index + 3 /* PlayerBuilderIndexOffset */] = value;\n    }\n    function getPlayerBuilderIndex(context, index) {\n        var flag = context[index + 3 /* PlayerBuilderIndexOffset */];\n        var playerBuilderIndex = (flag >> 16 /* BitCountSize */) &\n            65535 /* BitMask */;\n        return playerBuilderIndex;\n    }\n    function getPlayerBuilder(context, index) {\n        var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n        if (playerBuilderIndex) {\n            var playerContext = context[8 /* PlayerContext */];\n            if (playerContext) {\n                return playerContext[playerBuilderIndex];\n            }\n        }\n        return null;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 0 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 0 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 0 /* MasterFlagPosition */);\n    }\n    function limitToSingleClasses(context) {\n        return context[0 /* MasterFlagPosition */] & 16 /* OnlyProcessSingleClasses */;\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 0 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function setContextPlayersDirty(context, isDirtyYes) {\n        if (isDirtyYes) {\n            context[0 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n        }\n        else {\n            context[0 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n        }\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 4 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        var playerIndexA = getPlayerBuilderIndex(context, indexB);\n        var directiveIndexA = 0;\n        setPlayerBuilderIndex(context, indexA, playerIndexA, directiveIndexA);\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n        setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex, directiveIndexA);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBasedValue(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value, directiveIndex, playerIndex) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, 0);\n        setPlayerBuilderIndex(context, index, playerIndex, directiveIndex);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 4 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n    function prepareInitialFlag(context, prop, entryIsClassBased, sanitizer) {\n        var flag = (sanitizer && sanitizer(prop)) ? 4 /* Sanitize */ : 0 /* None */;\n        var initialIndex;\n        if (entryIsClassBased) {\n            flag |= 2 /* Class */;\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[3 /* InitialClassValuesPosition */], prop);\n        }\n        else {\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[2 /* InitialStyleValuesPosition */], prop);\n        }\n        initialIndex = initialIndex > 0 ? (initialIndex + 1 /* ValueOffset */) : 0;\n        return pointers(flag, initialIndex, 0);\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n    var ClassAndStylePlayerBuilder = /** @class */ (function () {\n        function ClassAndStylePlayerBuilder(factory, _element, _type) {\n            this._element = _element;\n            this._type = _type;\n            this._values = {};\n            this._dirty = false;\n            this._factory = factory;\n        }\n        ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n            if (this._values[prop] !== value) {\n                this._values[prop] = value;\n                this._dirty = true;\n            }\n        };\n        ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer, isFirstRender) {\n            // if no values have been set here then this means the binding didn't\n            // change and therefore the binding values were not updated through\n            // `setValue` which means no new player will be provided.\n            if (this._dirty) {\n                var player = this._factory.fn(this._element, this._type, this._values, isFirstRender, currentPlayer || null);\n                this._values = {};\n                this._dirty = false;\n                return player;\n            }\n            return undefined;\n        };\n        return ClassAndStylePlayerBuilder;\n    }());\n    function getDirectiveIndexFromEntry(context, index) {\n        var value = context[index + 3 /* PlayerBuilderIndexOffset */];\n        return value & 65535 /* BitMask */;\n    }\n    function getDirectiveIndexFromRegistry(context, directive) {\n        var index = getDirectiveRegistryValuesIndexOf(context[1 /* DirectiveRegistryPosition */], directive);\n        ngDevMode &&\n            assertNotEqual(index, -1, \"The provided directive \" + directive + \" has not been allocated to the element's style/class bindings\");\n        return index > 0 ? index / 4 /* Size */ : 0;\n        // return index / DirectiveRegistryValuesIndex.Size;\n    }\n    function getDirectiveRegistryValuesIndexOf(directives, directive) {\n        for (var i = 0; i < directives.length; i += 4 /* Size */) {\n            if (directives[i] === directive) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    function getInitialStylingValuesIndexOf(keyValues, key) {\n        for (var i = 1 /* KeyValueStartPosition */; i < keyValues.length; i += 2 /* Size */) {\n            if (keyValues[i] === key)\n                return i;\n        }\n        return -1;\n    }\n    function getSinglePropIndexValue(context, directiveIndex, offset, isClassBased) {\n        var singlePropOffsetRegistryIndex = context[1 /* DirectiveRegistryPosition */][(directiveIndex * 4 /* Size */) +\n            1 /* SinglePropValuesIndexOffset */];\n        var offsets = context[4 /* SinglePropOffsetPositions */];\n        var indexForOffset = singlePropOffsetRegistryIndex +\n            2 /* ValueStartPosition */ +\n            (isClassBased ?\n                offsets[singlePropOffsetRegistryIndex + 0 /* StylesCountPosition */] :\n                0) +\n            offset;\n        return offsets[indexForOffset];\n    }\n    function getStyleSanitizer(context, directiveIndex) {\n        var dirs = context[1 /* DirectiveRegistryPosition */];\n        var value = dirs[directiveIndex * 4 /* Size */ +\n            3 /* StyleSanitizerOffset */] ||\n            dirs[3 /* StyleSanitizerOffset */] || null;\n        return value;\n    }\n    function isDirectiveDirty(context, directiveIndex) {\n        var dirs = context[1 /* DirectiveRegistryPosition */];\n        return dirs[directiveIndex * 4 /* Size */ +\n            2 /* DirtyFlagOffset */];\n    }\n    function setDirectiveDirty(context, directiveIndex, dirtyYes) {\n        var dirs = context[1 /* DirectiveRegistryPosition */];\n        dirs[directiveIndex * 4 /* Size */ +\n            2 /* DirtyFlagOffset */] = dirtyYes;\n    }\n    function allowValueChange(currentValue, newValue, currentDirectiveOwner, newDirectiveOwner) {\n        // the code below relies the importance of directive's being tied to their\n        // index value. The index values for each directive are derived from being\n        // registered into the styling context directive registry. The most important\n        // directive is the parent component directive (the template) and each directive\n        // that is added after is considered less important than the previous entry. This\n        // prioritization of directives enables the styling algorithm to decide if a style\n        // or class should be allowed to be updated/replaced incase an earlier directive\n        // already wrote to the exact same style-property or className value. In other words\n        // ... this decides what to do if and when there is a collision.\n        if (currentValue) {\n            if (newValue) {\n                // if a directive index is lower than it always has priority over the\n                // previous directive's value...\n                return newDirectiveOwner <= currentDirectiveOwner;\n            }\n            else {\n                // only write a null value incase it's the same owner writing it.\n                // this avoids having a higher-priority directive write to null\n                // only to have a lesser-priority directive change right to a\n                // non-null value immediately afterwards.\n                return currentDirectiveOwner === newDirectiveOwner;\n            }\n        }\n        return true;\n    }\n    /**\n     * This function is only designed to be called for `[class]` bindings when\n     * `[ngClass]` (or something that uses `class` as an input) is present. Once\n     * directive host bindings fully work for `[class]` and `[style]` inputs\n     * then this can be deleted.\n     */\n    function getInitialClassNameValue(context) {\n        var className = context[6 /* CachedClassValueOrInitialClassString */];\n        if (className == null) {\n            className = '';\n            var initialClassValues = context[3 /* InitialClassValuesPosition */];\n            for (var i = 1 /* KeyValueStartPosition */; i < initialClassValues.length; i += 2 /* Size */) {\n                var isPresent = initialClassValues[i + 1];\n                if (isPresent) {\n                    className += (className.length ? ' ' : '') + initialClassValues[i];\n                }\n            }\n            context[6 /* CachedClassValueOrInitialClassString */] = className;\n        }\n        return className;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(lView) {\n        var tView = lView[TVIEW];\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = false;\n        setFirstTemplatePass(false);\n        // If this is a creation pass, we should not call lifecycle hooks or evaluate bindings.\n        // This will be done in the update pass.\n        if (!isCreationMode(lView)) {\n            var checkNoChangesMode = getCheckNoChangesMode();\n            executeInitHooks(lView, tView, checkNoChangesMode);\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            refreshContentQueries(tView);\n            executeHooks(lView, tView.contentHooks, tView.contentCheckHooks, checkNoChangesMode);\n            setHostBindings(tView, lView);\n        }\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        if (tView.expandoInstructions) {\n            var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n            setBindingRoot(bindingRootIndex);\n            var currentDirectiveIndex = -1;\n            var currentElementIndex = -1;\n            for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                var instruction = tView.expandoInstructions[i];\n                if (typeof instruction === 'number') {\n                    if (instruction <= 0) {\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\n                        // the current element and directive index.\n                        currentElementIndex = -instruction;\n                        // Injector block and providers are taken into account.\n                        var providerCount = tView.expandoInstructions[++i];\n                        bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                        currentDirectiveIndex = bindingRootIndex;\n                    }\n                    else {\n                        // This is either the injector size (so the binding root can skip over directives\n                        // and get to the first set of host bindings on this node) or the host var count\n                        // (to get to the next set of host bindings on this node).\n                        bindingRootIndex += instruction;\n                    }\n                    setBindingRoot(bindingRootIndex);\n                }\n                else {\n                    // If it's not a number, it's a host binding function that needs to be executed.\n                    if (instruction !== null) {\n                        viewData[BINDING_INDEX] = bindingRootIndex;\n                        instruction(2 /* Update */, readElementValue(viewData[currentDirectiveIndex]), currentElementIndex);\n                    }\n                    currentDirectiveIndex++;\n                }\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx - HEADER_OFFSET, tView.contentQueries[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i]);\n            }\n        }\n    }\n    function createLView(parentLView, tView, context, flags, rendererFactory, renderer, sanitizer, injector) {\n        var lView = tView.blueprint.slice();\n        lView[FLAGS] = flags | 1 /* CreationMode */ | 16 /* Attached */ | 32 /* RunInit */ |\n            2 /* FirstLViewPass */;\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR] = injector || parentLView && parentLView[INJECTOR] || null;\n        return lView;\n    }\n    function createNodeAtIndex(index, type, native, name, attrs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertLessThan(adjustedIndex, lView.length, \"Slot should have been initialized with null\");\n        lView[adjustedIndex] = native;\n        var tNode = tView.data[adjustedIndex];\n        if (tNode == null) {\n            // TODO(misko): Refactor createTNode so that it does not depend on LView.\n            tNode = tView.data[adjustedIndex] = createTNode(lView, type, adjustedIndex, name, attrs, null);\n        }\n        // Now link ourselves into the tree.\n        // We need this even if tNode exists, otherwise we might end up pointing to unexisting tNodes when\n        // we use i18n (especially with ICU expressions that update the DOM during the update phase).\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        if (tView.firstChild == null) {\n            tView.firstChild = tNode;\n        }\n        setPreviousOrParentTNode(tNode);\n        setIsParent(true);\n        return tNode;\n    }\n    function createViewNode(index, view) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        if (view[TVIEW].node == null) {\n            view[TVIEW].node = createTNode(view, 2 /* View */, index, null, null, null);\n        }\n        return view[HOST_NODE] = view[TVIEW].node;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function allocExpando(view) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n            tView.blueprint.push(null);\n            tView.data.push(null);\n            view.push(null);\n        }\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, renderer, queries, injectorIndex) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var lView = createLView(declarationView, tView, context, 4 /* CheckAlways */);\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        createViewNode(-1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        setIsParent(_isParent);\n        setPreviousOrParentTNode(_previousOrParentTNode);\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var oldView;\n        if (viewToRender[FLAGS] & 128 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(getRootContext(viewToRender));\n        }\n        else {\n            try {\n                setIsParent(true);\n                setPreviousOrParentTNode(null);\n                oldView = enterView(viewToRender, viewToRender[HOST_NODE]);\n                namespaceHTML();\n                tView.template(getRenderFlags(viewToRender), context);\n                // This must be set to false immediately after the first creation run because in an\n                // ngFor loop, all the views will be created together before update mode runs and turns\n                // off firstTemplatePass. If we don't set it here, instances will perform directive\n                // matching, etc again and again.\n                viewToRender[TVIEW].firstTemplatePass = false;\n                setFirstTemplatePass(false);\n                refreshDescendantViews(viewToRender);\n            }\n            finally {\n                leaveView(oldView);\n                setIsParent(_isParent);\n                setPreviousOrParentTNode(_previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n    function renderComponentOrTemplate(hostView, context, templateFn) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        var normalExecutionPath = !getCheckNoChangesMode();\n        try {\n            if (normalExecutionPath && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (isCreationMode(hostView)) {\n                // creation mode pass\n                if (templateFn) {\n                    namespaceHTML();\n                    templateFn(1 /* Create */, context);\n                }\n                refreshDescendantViews(hostView);\n                hostView[FLAGS] &= ~1 /* CreationMode */;\n            }\n            // update mode pass\n            templateFn && templateFn(2 /* Update */, context);\n            refreshDescendantViews(hostView);\n        }\n        finally {\n            if (normalExecutionPath && rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. Update block and create block are\n     * always run separately.\n     */\n    function getRenderFlags(view) {\n        return isCreationMode(view) ? 1 /* Create */ : 2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, tagName, attrs || null);\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        attachPatchData(native, lView);\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n        }\n        queueLifecycleHooks(tView, previousOrParentTNode);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n        if (attrs) {\n            // it's important to only prepare styling-related datastructures once for a given\n            // tNode and not each time an element is created. Also, the styling code is designed\n            // to be patched and constructed at various points, but only up until the first element\n            // is created. Then the styling context is locked and can only be instantiated for each\n            // successive element that is created.\n            if (tView.firstTemplatePass && !tNode.stylingTemplate && hasStyling(attrs)) {\n                tNode.stylingTemplate = initializeStaticContext(attrs);\n            }\n            setUpAttributes(native, attrs);\n        }\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstTemplatePass) {\n            var inputData = initializeTNodeInputs(tNode);\n            if (inputData && inputData.hasOwnProperty('class')) {\n                tNode.flags |= 8 /* hasClassInput */;\n            }\n        }\n        // There is no point in rendering styles when a class directive is present since\n        // it will take that over for us (this will be removed once #FW-882 is in).\n        if (tNode.stylingTemplate && (tNode.flags & 8 /* hasClassInput */) === 0) {\n            renderInitialStylesAndClasses(native, tNode.stylingTemplate, lView[RENDERER]);\n        }\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || getLView()[RENDERER];\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, viewData, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getFirstTemplatePass()) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, viewData, findDirectiveMatches(tView, viewData, previousOrParentTNode), previousOrParentTNode, localRefs || null);\n        }\n        instantiateAllDirectives(tView, viewData, previousOrParentTNode);\n        invokeDirectivesHostBindings(tView, viewData, previousOrParentTNode);\n        saveResolvedLocalsInData(viewData, previousOrParentTNode, localRefExtractor);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData =\n                createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice(),\n            childIndex: -1,\n            bindingStartIndex: bindingStartIndex,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            firstChild: null,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[CONTAINER_INDEX] = -1;\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function setUpAttributes(native, attrs) {\n        var renderer = getLView()[RENDERER];\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i++];\n            if (typeof attrName == 'number') {\n                if (attrName === 0 /* NamespaceURI */) {\n                    // Namespaced attributes\n                    var namespaceURI = attrs[i++];\n                    var attrName_1 = attrs[i++];\n                    var attrVal = attrs[i++];\n                    ngDevMode && ngDevMode.rendererSetAttribute++;\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                }\n                else {\n                    // All other `AttributeMarker`s are ignored here.\n                    break;\n                }\n            }\n            else {\n                /// attrName is string;\n                var attrVal = attrs[i++];\n                if (attrName !== NG_PROJECT_AS_ATTR_NAME) {\n                    // Standard attributes\n                    ngDevMode && ngDevMode.rendererSetAttribute++;\n                    if (isAnimationProp(attrName)) {\n                        if (isProc) {\n                            renderer.setProperty(native, attrName, attrVal);\n                        }\n                    }\n                    else {\n                        isProc ?\n                            renderer\n                                .setAttribute(native, attrName, attrVal) :\n                            native.setAttribute(attrName, attrVal);\n                    }\n                }\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     */\n    function listener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var tView = lView[TVIEW];\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : {};\n            var target = resolved.target || native;\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            var renderer = lView[RENDERER];\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var useCaptureOrSubIdx = useCapture;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // The first argument of `listen` function in Procedural Renderer is:\n                // - either a target name (as a string) in case of global target (window, document, body)\n                // - or element reference (in all other cases)\n                var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                lCleanup.push(listenerFn, cleanupFn);\n                useCaptureOrSubIdx = lCleanupIndex + 1;\n            }\n            else {\n                var wrappedListener = wrapListenerWithPreventDefault(listenerFn);\n                target.addEventListener(eventName, wrappedListener, useCapture);\n                lCleanup.push(wrappedListener);\n            }\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(readElementValue(_lView[tNode.index])).target; } :\n                tNode.index;\n            tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCaptureOrSubIdx);\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var props;\n        if (outputs && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 2) {\n                    ngDevMode && assertDataInRange(lView, props[i]);\n                    var subscription = lView[props[i]][props[i + 1]].subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n        }\n        queueLifecycleHooks(getLView()[TVIEW], previousOrParentTNode);\n        decreaseElementDepthCount();\n        // this is fired at the end of elementEnd because ALL of the stylingBindings code\n        // (for directives and the template) have now executed which means the styling\n        // context can be instantiated properly.\n        if (hasClassInput(previousOrParentTNode)) {\n            var stylingContext = getStylingContext(previousOrParentTNode.index, lView);\n            setInputsForProperty(lView, previousOrParentTNode.inputs['class'], getInitialClassNameValue(stylingContext));\n        }\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            var renderer = lView[RENDERER];\n            var element_1 = getNativeByIndex(index, lView);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1, name) :\n                    element_1.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var tNode = getTNode(index, lView);\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value, tNode.tagName || '', name);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1, name, strValue) :\n                    element_1.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     */\n    function elementProperty(index, propName, value, sanitizer, nativeOnly) {\n        elementPropertyInternal(index, propName, value, sanitizer, nativeOnly);\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub components renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     */\n    function componentHostSyntheticProperty(index, propName, value, sanitizer, nativeOnly) {\n        elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadComponentRenderer);\n    }\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    function elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        if (value === NO_CHANGE)\n            return;\n        var lView = getLView();\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData;\n        var dataValue;\n        if (!nativeOnly && (inputData = initializeTNodeInputs(tNode)) &&\n            (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */) {\n                    setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n                }\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(lView, type, adjustedIndex, tagName, attrs, tViews) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && ngDevMode.tNode++;\n        var parent = getIsParent() ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && lView && parent !== lView[HOST_NODE];\n        var tParent = parentInSameView ? parent : null;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            directiveStart: -1,\n            directiveEnd: -1,\n            flags: 0,\n            providerIndexes: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: tParent,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(lView, inputs[i]);\n            lView[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    function setNgReflectProperties(lView, element, type, inputs, value) {\n        var _a;\n        for (var i = 0; i < inputs.length; i += 2) {\n            var renderer = lView[RENDERER];\n            var attrName = normalizeDebugBindingName(inputs[i + 1]);\n            var debugValue = normalizeDebugBindingValue(value);\n            if (type === 3 /* Element */) {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n            else if (value !== undefined) {\n                var value_1 = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setValue(element, value_1);\n                }\n                else {\n                    element.textContent = value_1;\n                }\n            }\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param tNodeFlags node flags\n     * @param direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNode, direction) {\n        var tView = getLView()[TVIEW];\n        var propStore = null;\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (end > start) {\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to register all\n     * dynamic style and class bindings on the element. Note for static values (no binding)\n     * see `elementStart` and `elementHostAttrs`.\n     *\n     * @param classBindingNames An array containing bindable class names.\n     *        The `elementClassProp` refers to the class name by index in this array.\n     *        (i.e. `['foo', 'bar']` means `foo=0` and `bar=1`).\n     * @param styleBindingNames An array containing bindable style properties.\n     *        The `elementStyleProp` refers to the class name by index in this array.\n     *        (i.e. `['width', 'height']` means `width=0` and `height=1`).\n     * @param styleSanitizer An optional sanitizer function that will be used to sanitize any CSS\n     *        property values that are applied to the element (during rendering).\n     *        Note that the sanitizer instance itself is tied to the `directive` (if  provided).\n     * @param directive A directive instance the styling is associated with. If not provided\n     *        current view's controller instance is assumed.\n     *\n     * @publicApi\n     */\n    function elementStyling(classBindingNames, styleBindingNames, styleSanitizer, directive) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = createEmptyStylingContext();\n        }\n        updateContextWithBindings(tNode.stylingTemplate, directive || null, classBindingNames, styleBindingNames, styleSanitizer, hasClassInput(tNode));\n    }\n    /**\n     * Assign static styling values to a host element.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array containing class and styling information. The values must be marked with\n     *              `AttributeMarker`.\n     *\n     *        ```\n     *        var attrs = [AttributeMarker.Classes, 'foo', 'bar',\n     *                     AttributeMarker.Styles, 'width', '100px', 'height, '200px']\n     *        elementHostAttrs(directive, attrs);\n     *        ```\n     *\n     * @publicApi\n     */\n    function elementHostAttrs(directive, attrs) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = initializeStaticContext(attrs);\n        }\n        patchContextWithStaticAttrs(tNode.stylingTemplate, attrs, directive);\n    }\n    /**\n     * Apply styling binding to the element.\n     *\n     * This instruction is meant to be run after `elementStyle` and/or `elementStyleProp`.\n     * if any styling bindings have changed then the changes are flushed to the element.\n     *\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n    components\n     *\n     * @publicApi\n     */\n    function elementStylingApply(index, directive) {\n        var lView = getLView();\n        var isFirstRender = (lView[FLAGS] & 2 /* FirstLViewPass */) !== 0;\n        var totalPlayersQueued = renderStyling(getStylingContext(index + HEADER_OFFSET, lView), lView[RENDERER], lView, isFirstRender, null, null, directive);\n        if (totalPlayersQueued > 0) {\n            var rootContext = getRootContext(lView);\n            scheduleTick(rootContext, 2 /* FlushPlayers */);\n        }\n    }\n    /**\n     * Update a style bindings value on an element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling element is updated as part of `elementStylingApply`.)\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `elementStlyingBindings`.\n     * @param value New value to write (null to remove). Note that if a directive also\n     *        attempts to write to the same binding value then it will only be able to\n     *        do so if the template binding value is `null` (or doesn't exist at all).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n    components\n     *\n     * @publicApi\n     */\n    function elementStyleProp(index, styleIndex, value, suffix, directive) {\n        var valueToAdd = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = stringify$1(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index + HEADER_OFFSET, getLView()), styleIndex, valueToAdd, directive);\n    }\n    /**\n     * Add or remove a class via a class binding on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case and, therefore,\n     * the class itself must already be applied using `elementStyling` within\n     * the creation block.\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param classIndex Index of class to toggle. This index value refers to the\n     *        index of the class in the class bindings array that was passed into\n     *        `elementStlyingBindings` (which is meant to be called before this\n     *        function is).\n     * @param value A true/false value which will turn the class on or off.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n    components\n     *\n     * @publicApi\n     */\n    function elementClassProp(index, classIndex, value, directive) {\n        var onOrOffClassValue = (value instanceof BoundPlayerFactory) ? value : (!!value);\n        updateClassProp(getStylingContext(index + HEADER_OFFSET, getLView()), classIndex, onOrOffClassValue, directive);\n    }\n    /**\n     * Update style and/or class bindings using object literal.\n     *\n     * This instruction is meant apply styling via the `[style]=\"exp\"` and `[class]=\"exp\"` template\n     * bindings. When styles are applied to the Element they will then be placed with respect to\n     * any styles set with `elementStyleProp`. If any styles are set to `null` then they will be\n     * removed from the element.\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n     *\n     * @publicApi\n     */\n    function elementStylingMap(index, classes, styles, directive) {\n        if (directive != undefined)\n            return hackImplementationOfElementStylingMap(index, classes, styles, directive); // supported in next PR\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var stylingContext = getStylingContext(index + HEADER_OFFSET, lView);\n        if (hasClassInput(tNode) && classes !== NO_CHANGE) {\n            var initialClasses = getInitialClassNameValue(stylingContext);\n            var classInputVal = (initialClasses.length ? (initialClasses + ' ') : '') + classes;\n            setInputsForProperty(lView, tNode.inputs['class'], classInputVal);\n        }\n        else {\n            updateStylingMap(stylingContext, classes, styles);\n        }\n    }\n    /* START OF HACK BLOCK */\n    function hackImplementationOfElementStylingMap(index, classes, styles, directive) {\n        throw new Error('unimplemented. Should not be needed by ViewEngine compatibility');\n    }\n    /* END OF HACK BLOCK */\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, lView[RENDERER]);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        setIsParent(false);\n        appendChild(textNative, tNode, lView);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n            var element_2 = getNativeByIndex(index, lView);\n            ngDevMode && assertDefined(element_2, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            var renderer = lView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.setValue(element_2, stringify$1(value)) :\n                element_2.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive, def);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, viewData, def, def.factory);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                queueInitHooks(directiveDefIdx, def.onInit, def.doCheck, tView);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!getFirstTemplatePass() && start < end) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, directive, def, i);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = getFirstTemplatePass();\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            var directive = viewData[i];\n            if (def.hostBindings) {\n                var previousExpandoLength = expando.length;\n                setCurrentDirectiveDef(def);\n                def.hostBindings(1 /* Create */, directive, tNode.index - HEADER_OFFSET);\n                setCurrentDirectiveDef(null);\n                // `hostBindings` function may or may not contain `allocHostVars` call\n                // (e.g. it may not if it only contains host listeners), so we need to check whether\n                // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n                // expando block, to make sure we execute it for DI cycle\n                if (previousExpandoLength === expando.length && firstTemplatePass) {\n                    expando.push(def.hostBindings);\n                }\n            }\n            else if (firstTemplatePass) {\n                expando.push(null);\n            }\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n    * On the first template pass, we need to reserve space for host binding values\n    * after directives are matched (so all directives are saved, then bindings).\n    * Because we are updating the blueprint, we only need to do this once.\n    */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(viewData, directive, def, directiveDefIdx) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        postProcessBaseDirective(viewData, previousOrParentTNode, directive, def);\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, directive, def.inputs, previousOrParentTNode);\n        }\n        if (def.contentQueries) {\n            def.contentQueries(directiveDefIdx);\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, previousOrParentTNode, directive, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        attachPatchData(directive, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n        // TODO(misko): setUpAttributes should be a feature for better treeshakability.\n        if (def.attributes != null && previousOrParentTNode.type == 3 /* Element */) {\n            setUpAttributes(native, def.attributes);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), viewData), viewData, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 1 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 1 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(previousOrParentTNode) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        var tView = getLView()[TVIEW];\n        (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n    */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'expected firstTemplatePass to be true');\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 1 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = flags & 1 /* isComponent */;\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), false, null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, previousOrParentTNode, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, previousOrParentTNode.index, createLView(lView, tView, null, def.onPush ? 8 /* Dirty */ : 4 /* CheckAlways */, rendererFactory, lView[RENDERER_FACTORY].createRenderer(native, def)));\n        componentView[HOST_NODE] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        componentView[HOST] = lView[previousOrParentTNode.index];\n        lView[previousOrParentTNode.index] = componentView;\n        if (getFirstTemplatePass()) {\n            queueComponentIndexForCheck(previousOrParentTNode);\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 3 /* SelectOnly */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, isForViewContainerRef) {\n        return [\n            isForViewContainerRef ? -1 : 0,\n            [],\n            currentView,\n            null,\n            null,\n            hostNative,\n            native,\n        ];\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // TODO: consider a separate node type for templates\n        var tNode = containerInternal(index, tagName || null, attrs || null);\n        if (getFirstTemplatePass()) {\n            tNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor);\n        var currentQueries = lView[QUERIES];\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        attachPatchData(native, lView);\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n        }\n        queueLifecycleHooks(tView, tNode);\n        setIsParent(false);\n    }\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var tNode = containerInternal(index, null, null);\n        getFirstTemplatePass() && (tNode.tViews = []);\n        setIsParent(false);\n    }\n    function containerInternal(index, tagName, attrs) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n        var lContainer = lView[adjustedIndex] = createLContainer(lView[adjustedIndex], lView, comment);\n        appendChild(comment, tNode, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, index + HEADER_OFFSET, lContainer);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = currentQueries.container();\n        }\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = loadInternal(tView.data, index);\n        setPreviousOrParentTNode(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setIsParent(true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        executeInitHooks(lView, tView, getCheckNoChangesMode());\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, previousOrParentTNode, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        for (var current = getLViewChild(lView); current !== null; current = current[NEXT]) {\n            // Note: current can be an LView or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LView\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var dynamicViewData = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT]);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param tContainerNode to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, tContainerNode, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, tContainerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, containerTNode, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent(true);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 4 /* CheckAlways */);\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            createViewNode(viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lView, lContainer[ACTIVE_INDEX], -1);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        var lView = getLView();\n        var viewHost = lView[HOST_NODE];\n        if (isCreationMode(lView)) {\n            refreshDescendantViews(lView); // creation mode pass\n            lView[FLAGS] &= ~1 /* CreationMode */;\n        }\n        refreshDescendantViews(lView); // update mode pass\n        leaveView(lView[PARENT]);\n        setPreviousOrParentTNode(viewHost);\n        setIsParent(false);\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex) {\n        var lView = getLView();\n        ngDevMode && assertDataInRange(lView, adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].data[adjustedElementIndex], 3 /* Element */);\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (4 /* CheckAlways */ | 8 /* Dirty */)) {\n            syncViewWithBlueprint(hostView);\n            checkView(hostView, hostView[CONTEXT]);\n        }\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 16 /* Attached */) === 16 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentView(getLView())[HOST_NODE];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                    componentChild.next = null;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsParent(false);\n        // re-distribution of projectable nodes is stored on a component's view level\n        var componentView = findComponentView(lView);\n        var componentNode = componentView[HOST_NODE];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        var projectedView = componentView[PARENT];\n        var projectionNodeIndex = -1;\n        while (nodeToProject) {\n            if (nodeToProject.type === 1 /* Projection */) {\n                // This node is re-projected, so we must go up the tree to get its projected nodes.\n                var currentComponentView = findComponentView(projectedView);\n                var currentComponentHost = currentComponentView[HOST_NODE];\n                var firstProjectedNode = currentComponentHost.projection[nodeToProject.projection];\n                if (firstProjectedNode) {\n                    projectionNodeStack$1[++projectionNodeIndex] = nodeToProject;\n                    projectionNodeStack$1[++projectionNodeIndex] = projectedView;\n                    nodeToProject = firstProjectedNode;\n                    projectedView = currentComponentView[PARENT];\n                    continue;\n                }\n            }\n            else {\n                // This flag must be set now or we won't know that this node is projected\n                // if the nodes are inserted into a container later.\n                nodeToProject.flags |= 2 /* isProjected */;\n                appendProjectedNode(nodeToProject, tProjectionNode, lView, projectedView);\n            }\n            // If we are finished with a list of re-projected nodes, we need to get\n            // back to the root projection node that was re-projected.\n            if (nodeToProject.next === null && projectedView !== componentView[PARENT]) {\n                projectedView = projectionNodeStack$1[projectionNodeIndex--];\n                nodeToProject = projectionNodeStack$1[projectionNodeIndex--];\n            }\n            nodeToProject = nodeToProject.next;\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param state The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, adjustedHostIndex, state) {\n        var tView = lView[TVIEW];\n        var firstTemplatePass = getFirstTemplatePass();\n        if (lView[TAIL]) {\n            lView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        lView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 4 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 8 /* Dirty */;\n        }\n    }\n    /** Wraps an event listener with preventDefault behavior. */\n    function wrapListenerWithPreventDefault(listenerFn) {\n        return function wrapListenerIn_preventDefault(e) {\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView && !(lView[FLAGS] & 128 /* IsRoot */)) {\n            lView[FLAGS] |= 8 /* Dirty */;\n            lView = lView[PARENT];\n        }\n        lView[FLAGS] |= 8 /* Dirty */;\n        return lView;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLView(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        if (isCreationMode(view)) {\n            checkView(view, context); // creation mode pass\n        }\n        checkView(view, context); // update mode pass\n        if (rendererFactory.end)\n            rendererFactory.end();\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChanges(component);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function checkView(hostView, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        var templateFn = hostTView.template;\n        var viewQuery = hostTView.viewQuery;\n        try {\n            namespaceHTML();\n            createViewQuery(viewQuery, hostView, component);\n            templateFn(getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView);\n            updateViewQuery(viewQuery, hostView, component);\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function createViewQuery(viewQuery, view, component) {\n        if (viewQuery && isCreationMode(view)) {\n            viewQuery(1 /* Create */, component);\n        }\n    }\n    function updateViewQuery(viewQuery, view, component) {\n        if (viewQuery && !isCreationMode(view)) {\n            viewQuery(2 /* Update */, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        var lView = getLView();\n        return bindingUpdated(lView, lView[BINDING_INDEX]++, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     */\n    function allocHostVars(count) {\n        if (!getFirstTemplatePass())\n            return;\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(lView, bindingIndex++, values[i]) && (different = true);\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated(lView, lView[BINDING_INDEX], v0);\n        lView[BINDING_INDEX] += 1;\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated2(lView, lView[BINDING_INDEX], v0, v1);\n        lView[BINDING_INDEX] += 2;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated3(lView, lView[BINDING_INDEX], v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated4(lView, lView[BINDING_INDEX], v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        var contextLView = getContextLView();\n        return loadInternal(contextLView, index);\n    }\n    function loadQueryList(queryListIdx) {\n        var lView = getLView();\n        ngDevMode &&\n            assertDefined(lView[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        ngDevMode && assertDataInRange(lView[CONTENT_QUERIES], queryListIdx);\n        return lView[CONTENT_QUERIES][queryListIdx];\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(getLView(), index);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), getLView(), token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     */\n    function injectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     */\n    function registerContentQuery(queryList, currentDirectiveIndex) {\n        var viewData = getLView();\n        var tView = viewData[TVIEW];\n        var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n        if (getFirstTemplatePass()) {\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n            if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n            }\n        }\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode) {\n            if (tNode.inputs === undefined) {\n                // mark inputs as checked\n                tNode.inputs = generatePropertyAliases(tNode, 0 /* Input */);\n            }\n            return tNode.inputs;\n        }\n        return null;\n    }\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return getLView();\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds a player to an element, directive or component instance that will later be\n     * animated once change detection has passed.\n     *\n     * When a player is added to a reference it will stay active until `player.destroy()`\n     * is called. Once called then the player will be removed from the active players\n     * present on the associated ref instance.\n     *\n     * To get a list of all the active players on an element see [getPlayers].\n     *\n     * @param ref The element, directive or component that the player will be placed on.\n     * @param player The player that will be triggered to play once change detection has run.\n     */\n    function addPlayer(ref, player) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return;\n        }\n        var element$$1 = context.native;\n        var lView = context.lView;\n        var playerContext = getOrCreatePlayerContext(element$$1, context);\n        var rootContext = getRootContext$1(lView);\n        addPlayerInternal(playerContext, rootContext, element$$1, player, 0, ref);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n    /**\n     * Returns a list of all the active players present on the provided ref instance (which can\n     * be an instance of a directive, component or element).\n     *\n     * This function will only return players that have been added to the ref instance using\n     * `addPlayer` or any players that are active through any template styling bindings\n     * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n     *\n     * @publicApi\n     */\n    function getPlayers(ref) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return [];\n        }\n        var stylingContext = getStylingContext(context.nodeIndex, context.lView);\n        var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n        return playerContext ? getPlayersInternal(playerContext) : [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    /*\n     * Publishes a collection of default debug tools onto `window._ng_`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    var _published = false;\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getPlayers', getPlayers);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ngDevMode` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 8 /* Dirty */ | 128 /* IsRoot */ :\n            4 /* CheckAlways */ | 128 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLView(null, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            refreshDescendantViews(rootView); // creation mode pass\n            rootView[FLAGS] &= ~1 /* CreationMode */;\n            refreshDescendantViews(rootView); // update mode pass\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        var componentView = createLView(rootView, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 8 /* Dirty */ : 4 /* CheckAlways */, rendererFactory, renderer, sanitizer);\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n            tNode.flags = 1 /* isComponent */;\n            initNodeFlags(tNode, rootView.length, 1);\n            queueComponentIndexForCheck(tNode);\n        }\n        // Store component view at node index, with node as the HOST\n        componentView[HOST] = rootView[HEADER_OFFSET];\n        componentView[HOST_NODE] = tNode;\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var rootTNode = getPreviousOrParentTNode();\n            setCurrentDirectiveDef(componentDef);\n            componentDef.hostBindings(1 /* Create */, component, rootTNode.index - HEADER_OFFSET);\n            setCurrentDirectiveDef(null);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        queueInitHooks(dirIndex, def.onInit, def.doCheck, rootTView);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        queueLifecycleHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext$2(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext$2(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determines if a definition is a {@link ComponentDef} or a {@link DirectiveDef}\n     * @param definition The definition to examine\n     */\n    function isComponentDef$1(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef$1(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (rf, ctx, elementIndex) {\n                            superHostBindings_1(rf, ctx, elementIndex);\n                            prevHostBindings_1(rf, ctx, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                if (isComponentDef$1(definition) && isComponentDef$1(superDef)) {\n                    var prevViewQuery_1 = definition.viewQuery;\n                    var superViewQuery_1 = superDef.viewQuery;\n                    if (superViewQuery_1) {\n                        if (prevViewQuery_1) {\n                            definition.viewQuery = function (rf, ctx) {\n                                superViewQuery_1(rf, ctx);\n                                prevViewQuery_1(rf, ctx);\n                            };\n                        }\n                        else {\n                            definition.viewQuery = superViewQuery_1;\n                        }\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function (dirIndex) {\n                            superContentQueries_1(dirIndex);\n                            prevContentQueries_1(dirIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge Content Queries Refresh\n                var prevContentQueriesRefresh_1 = definition.contentQueriesRefresh;\n                var superContentQueriesRefresh_1 = superDef.contentQueriesRefresh;\n                if (superContentQueriesRefresh_1) {\n                    if (prevContentQueriesRefresh_1) {\n                        definition.contentQueriesRefresh = function (directiveIndex, queryIndex) {\n                            superContentQueriesRefresh_1(directiveIndex, queryIndex);\n                            prevContentQueriesRefresh_1(directiveIndex, queryIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueriesRefresh = superContentQueriesRefresh_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature.ngInherit) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                return \"break\";\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.afterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.afterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.afterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                    definition.onInit = definition.onInit || superPrototype.onInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature(definition) {\n        var publicToDeclaredInputs = definition.declaredInputs;\n        var publicToMinifiedInputs = definition.inputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (publicName) {\n            if (publicToDeclaredInputs.hasOwnProperty(publicName)) {\n                var minifiedKey = publicToMinifiedInputs[publicName];\n                var declaredKey_1 = publicToDeclaredInputs[publicName];\n                var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n                // Walk the prototype chain to see if we find a property descriptor\n                // That way we can honor setters and getters that were inherited.\n                var originalProperty = undefined;\n                var checkProto = proto;\n                while (!originalProperty && checkProto &&\n                    Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                    originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                    checkProto = Object.getPrototypeOf(checkProto);\n                }\n                var getter = originalProperty && originalProperty.get;\n                var setter_1 = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minifiedKey, {\n                    get: getter ||\n                        (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            simpleChanges = {};\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                        var currentChange = simpleChanges[declaredKey_1];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[declaredKey_1] =\n                                new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey_1] = value;\n                        }\n                        if (setter_1)\n                            setter_1.call(this, value);\n                    },\n                    // Make the property configurable in dev mode to allow overriding in tests\n                    configurable: !!ngDevMode\n                });\n            }\n        };\n        for (var publicName in publicToDeclaredInputs) {\n            _loop_1(publicName);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    }\n    // This option ensures that the ngOnChanges lifecycle hook will be inherited\n    // from superclasses (in InheritDefinitionFeature).\n    NgOnChangesFeature.ngInherit = true;\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            if (delegateHook)\n                delegateHook.apply(this);\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR$1 = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR$1); },\n        });\n        /** @internal */\n        Injector.__NG_ELEMENT_ID__ = function () { return SWITCH_INJECTOR_FACTORY(); };\n        return Injector;\n    }());\n    var SWITCH_INJECTOR_FACTORY__POST_R3__ = function () {\n        return injectInjector();\n    };\n    var SWITCH_INJECTOR_FACTORY__PRE_R3__ = noop;\n    var SWITCH_INJECTOR_FACTORY = SWITCH_INJECTOR_FACTORY__PRE_R3__;\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR$1 = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR$1; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR$1, { token: INJECTOR$1, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR$1 : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$1 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            var dedupStack = [];\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR$1, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                return nextInjector.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents, dedupStack); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            var ngModuleType = defOrWrappedDef.ngModule;\n            deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModuleType, providers); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$1) {\n                throw new Error(\"Cannot instantiate cyclic dependency! \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$1;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            var injectorDef = getInjectorDef(token);\n            if (injectorDef !== null) {\n                return injectorDef.factory;\n            }\n            else if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            else if (token instanceof Function) {\n                var paramLength = token.length;\n                if (paramLength > 0) {\n                    var args = new Array(paramLength).fill('?');\n                    throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n                }\n                return function () { return new token(); };\n            }\n            throw new Error('unreachable');\n        }\n        return injectableDef.factory;\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    var ngModuleDetail = '';\n                    if (ngModuleType && providers) {\n                        var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n                        ngModuleDetail =\n                            \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n                    }\n                    throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return value && typeof value == 'object' && USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent$$1 = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent$$1, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent$$1, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, true, directiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent$$1, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent$$1);\n                }\n                if (!isViewProvider && isComponent$$1 && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent$$1, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, true, directiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent$$1 && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        text(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        textBinding(0, bind(ctx.greeter.greet()));\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     *\n     * @param definition\n     */\n    function ProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver = function (def) {\n                return providersResolver(def, providers, viewProviders);\n            };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[HOST_NODE];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 64 /* Destroyed */) === 64 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~16 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 16 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = this._lView[PARENT][this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            result.push(getNativeByTNode(tNodeChild, lView));\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _renderer, _queries, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._renderer = _renderer;\n                    _this._queries = _queries;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container$$1, hostTNode, hostView, index) {\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._renderer, this._queries, this._injectorIndex);\n                    if (container$$1) {\n                        insertView(lView, container$$1, hostView, index, hostTNode.index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[HOST_NODE];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            var hostContainer = hostView[hostTNode.index];\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, getLView()[RENDERER], hostContainer[QUERIES], hostTNode.injectorIndex);\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this._lContainer[VIEWS].length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer[VIEWS].length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, this._hostTNode, this._hostView, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    insertView(lView, this._lContainer, this._hostView, adjustedIdx, this._hostTNode.index);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    this.detach(index);\n                    this.insert(viewRef, this._adjustIndex(newIndex));\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, this._hostTNode, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx, !!this._hostTNode.detached);\n                    var wasDetached = this._viewRefs.splice(adjustedIdx, 1)[0] != null;\n                    return wasDetached ? new ViewRef(view, view[CONTEXT], view[CONTAINER_INDEX]) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this._lContainer[VIEWS].length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, true);\n            addToViewTree(hostView, hostTNode.index, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), getLView(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.directiveStart;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getLView());\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /** @internal */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /** @internal */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('7.2.0+103.sha-885f1af');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver$$1(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory$$1(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            // The component definition does not include the wildcard ('*') selector in its list.\n            // It is implicitly expected as the first item in the projectable nodes array.\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? __spread(['*'], componentDef.ngContentSelectors) : [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            var rootFlags = this.componentDef.onPush ? 8 /* Dirty */ | 128 /* IsRoot */ :\n                4 /* CheckAlways */ | 128 /* IsRoot */;\n            var rootContext = !isInternalRootView ? rootViewInjector.get(ROOT_CONTEXT) : createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootLView = createLView(null, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                // Transform the arrays of native nodes into a structure that can be consumed by the\n                // projection instruction. This is needed to support the reprojection of these nodes.\n                if (projectableNodes) {\n                    var index = 0;\n                    var tView = rootLView[TVIEW];\n                    var projection$$1 = tElementNode.projection = [];\n                    for (var i = 0; i < projectableNodes.length; i++) {\n                        var nodeList = projectableNodes[i];\n                        var firstTNode = null;\n                        var previousTNode = null;\n                        for (var j = 0; j < nodeList.length; j++) {\n                            if (tView.firstTemplatePass) {\n                                // For dynamically created components such as ComponentRef, we create a new TView for\n                                // each insert. This is not ideal since we should be sharing the TViews.\n                                // Also the logic here should be shared with `component.ts`'s `renderComponent`\n                                // method.\n                                tView.expandoStartIndex++;\n                                tView.blueprint.splice(++index + HEADER_OFFSET, 0, null);\n                                tView.data.splice(index + HEADER_OFFSET, 0, null);\n                                rootLView.splice(index + HEADER_OFFSET, 0, null);\n                            }\n                            var tNode = createNodeAtIndex(index, 3 /* Element */, nodeList[j], null, null);\n                            previousTNode ? (previousTNode.next = tNode) : (firstTNode = tNode);\n                            previousTNode = tNode;\n                        }\n                        projection$$1.push(firstTNode);\n                    }\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                addToViewTree(rootLView, HEADER_OFFSET, componentView);\n                refreshDescendantViews(rootLView);\n            }\n            finally {\n                leaveView(oldLView);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = createViewNode(-1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef$$1.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n            this.hostView.destroy();\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var elementValid = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    elementValid = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (elementValid && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Outputs only valid Elements.\n         *\n         * Invalid elements are skipped.\n         *\n         * @param element element to sanitize\n         * Returns true if the element is valid.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return false;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEX = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostproocess regexps\n    var PP_PLACEHOLDERS = /\\[(�.+?�?)\\]/g;\n    var PP_ICU_VARS = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICUS = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEX.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else if (block) { // Don't push empty strings\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        if (substring != '') {\n            results.push(substring);\n        }\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEX, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (blocks.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18nStart(index, message, subTemplateIndex) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        var viewData = getLView();\n        var expandoStartIndex = tView.blueprint.length - HEADER_OFFSET;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[HOST_NODE] ?\n            parentTNode.index - HEADER_OFFSET :\n            index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = templateTranslation.split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === '#') {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === '#') {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = value.split(ICU_REGEXP);\n                for (var j = 0; j < parts.length; j++) {\n                    value = parts[j];\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        allocExpando(viewData);\n                        var icuNodeIndex = tView.blueprint.length - 1 - HEADER_OFFSET;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parseICUBlock(value.substr(1, value.length - 2));\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (value !== '') {\n                        // Even indexes are text (including bindings)\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        // Create text nodes\n                        allocExpando(viewData);\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : value, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, tView.blueprint.length - 1 - HEADER_OFFSET), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: tView.blueprint.length - HEADER_OFFSET - expandoStartIndex,\n            expandoStartIndex: expandoStartIndex,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var viewData = getLView();\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== viewData[HOST_NODE]) {\n            tNode.parent = parentTNode;\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @publicAPI\n     */\n    function i18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        //\n        // Step 1: resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n        //\n        var matches = {};\n        var result = message.replace(PP_PLACEHOLDERS, function (_match, content) {\n            if (!matches[content]) {\n                matches[content] = content.split('|');\n            }\n            if (!matches[content].length) {\n                throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n            }\n            return matches[content].shift();\n        });\n        // verify that we injected all values\n        var hasUnmatchedValues = Object.keys(matches).some(function (key) { return !!matches[key].length; });\n        if (hasUnmatchedValues) {\n            throw new Error(\"i18n postprocess: unmatched values - \" + JSON.stringify(matches));\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        //\n        // Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n        //\n        result = result.replace(PP_ICU_VARS, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        //\n        // Step 3: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n        // in case multiple ICUs have the same placeholder name\n        //\n        result = result.replace(PP_ICUS, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     */\n    function i18nEnd() {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(tView);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = getLView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // The last placeholder that was added before `i18nEnd`\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var visitedPlaceholders = readCreateOpCodes(rootIndex, tI18n.create, tI18n.expandoStartIndex, viewData);\n        // Remove deleted placeholders\n        // The last placeholder that was added before `i18nEnd` is `previousOrParentTNode`\n        for (var i = rootIndex + 1; i <= previousOrParentTNode.index - HEADER_OFFSET; i++) {\n            if (visitedPlaceholders.indexOf(i) === -1) {\n                removeNode(i, viewData);\n            }\n        }\n    }\n    function readCreateOpCodes(index, createOpCodes, expandoStartIndex, viewData) {\n        var renderer = getLView()[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedPlaceholders = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode =\n                    createNodeAtIndex(expandoStartIndex++, 3 /* Element */, textRNode, null, null);\n                setIsParent(false);\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[HOST_NODE];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode);\n                        destinationTNode.next = null;\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedPlaceholders.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode);\n                            if (currentTNode.type === 3 /* Element */) {\n                                setIsParent(true);\n                            }\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode);\n                        setIsParent(false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        elementAttribute(elementNodeIndex, attrName, attrValue);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createNodeAtIndex(expandoStartIndex++, 5 /* IcuContainer */, commentRNode, null, null);\n                        attachPatchData(commentRNode, viewData);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsParent(false);\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createNodeAtIndex(expandoStartIndex++, 3 /* Element */, elementRNode, tagNameValue, null);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsParent(false);\n        return visitedPlaceholders;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += stringify$1(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var attrName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementAttribute(nodeIndex, attrName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBinding(nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    var tIcuIndex = updateOpCodes[++j];\n                                    var tIcu = icus[tIcuIndex];\n                                    var icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    removeNode(nodeIndex_1, viewData);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], tIcu.expandoStartIndex, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            removeChild(removedPhTNode, removedPhRNode, viewData);\n        }\n        removedPhTNode.detached = true;\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n        var slotValue = load(index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                removeChild(removedPhTNode, lContainer[NATIVE], viewData);\n            }\n        }\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18n(index, message, subTemplateIndex) {\n        i18nStart(index, message, subTemplateIndex);\n        i18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     */\n    function i18nAttributes(index, values) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nAttributesFirstPass(tView, index, values);\n        }\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) ;\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                    }\n                    else {\n                        elementAttribute(previousElementIndex, attrName, value);\n                    }\n                }\n            }\n        }\n        tView.data[index + HEADER_OFFSET] = updateOpCodes;\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param expression The binding's new value or NO_CHANGE\n     */\n    function i18nExp(expression) {\n        if (expression !== NO_CHANGE) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     */\n    function i18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    var Plural;\n    (function (Plural) {\n        Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n        Plural[Plural[\"One\"] = 1] = \"One\";\n        Plural[Plural[\"Two\"] = 2] = \"Two\";\n        Plural[Plural[\"Few\"] = 3] = \"Few\";\n        Plural[Plural[\"Many\"] = 4] = \"Many\";\n        Plural[Plural[\"Other\"] = 5] = \"Other\";\n    })(Plural || (Plural = {}));\n    /**\n     * Returns the plural case based on the locale.\n     * This is a copy of the deprecated function that we used in Angular v4.\n     * // TODO(ocombe): remove this once we can the real getPluralCase function\n     *\n     * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n     */\n    function getPluralCase(locale, nLike) {\n        if (typeof nLike === 'string') {\n            nLike = parseInt(nLike, 10);\n        }\n        var n = nLike;\n        var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n        var i = Math.floor(Math.abs(n));\n        var v = nDecimal.length;\n        var f = parseInt(nDecimal, 10);\n        var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n        var lang = locale.split('-')[0].toLowerCase();\n        switch (lang) {\n            case 'af':\n            case 'asa':\n            case 'az':\n            case 'bem':\n            case 'bez':\n            case 'bg':\n            case 'brx':\n            case 'ce':\n            case 'cgg':\n            case 'chr':\n            case 'ckb':\n            case 'ee':\n            case 'el':\n            case 'eo':\n            case 'es':\n            case 'eu':\n            case 'fo':\n            case 'fur':\n            case 'gsw':\n            case 'ha':\n            case 'haw':\n            case 'hu':\n            case 'jgo':\n            case 'jmc':\n            case 'ka':\n            case 'kk':\n            case 'kkj':\n            case 'kl':\n            case 'ks':\n            case 'ksb':\n            case 'ky':\n            case 'lb':\n            case 'lg':\n            case 'mas':\n            case 'mgo':\n            case 'ml':\n            case 'mn':\n            case 'nb':\n            case 'nd':\n            case 'ne':\n            case 'nn':\n            case 'nnh':\n            case 'nyn':\n            case 'om':\n            case 'or':\n            case 'os':\n            case 'ps':\n            case 'rm':\n            case 'rof':\n            case 'rwk':\n            case 'saq':\n            case 'seh':\n            case 'sn':\n            case 'so':\n            case 'sq':\n            case 'ta':\n            case 'te':\n            case 'teo':\n            case 'tk':\n            case 'tr':\n            case 'ug':\n            case 'uz':\n            case 'vo':\n            case 'vun':\n            case 'wae':\n            case 'xog':\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ak':\n            case 'ln':\n            case 'mg':\n            case 'pa':\n            case 'ti':\n                if (n === Math.floor(n) && n >= 0 && n <= 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'am':\n            case 'as':\n            case 'bn':\n            case 'fa':\n            case 'gu':\n            case 'hi':\n            case 'kn':\n            case 'mr':\n            case 'zu':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ar':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'ast':\n            case 'ca':\n            case 'de':\n            case 'en':\n            case 'et':\n            case 'fi':\n            case 'fy':\n            case 'gl':\n            case 'it':\n            case 'nl':\n            case 'sv':\n            case 'sw':\n            case 'ur':\n            case 'yi':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                return Plural.Other;\n            case 'be':\n                if (n % 10 === 1 && !(n % 100 === 11))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                    !(n % 100 >= 12 && n % 100 <= 14))\n                    return Plural.Few;\n                if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                    n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'br':\n                if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                    return Plural.One;\n                if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                    return Plural.Two;\n                if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                    !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                        n % 100 >= 90 && n % 100 <= 99))\n                    return Plural.Few;\n                if (!(n === 0) && n % 1e6 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'bs':\n            case 'hr':\n            case 'sr':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14) ||\n                    f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                        !(f % 100 >= 12 && f % 100 <= 14))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'cs':\n            case 'sk':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'cy':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === 3)\n                    return Plural.Few;\n                if (n === 6)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'da':\n                if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                    return Plural.One;\n                return Plural.Other;\n            case 'dsb':\n            case 'hsb':\n                if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                    f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ff':\n            case 'fr':\n            case 'hy':\n            case 'kab':\n                if (i === 0 || i === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'fil':\n                if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                    v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                    !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ga':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === Math.floor(n) && n >= 3 && n <= 6)\n                    return Plural.Few;\n                if (n === Math.floor(n) && n >= 7 && n <= 10)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'gd':\n                if (n === 1 || n === 11)\n                    return Plural.One;\n                if (n === 2 || n === 12)\n                    return Plural.Two;\n                if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'gv':\n                if (v === 0 && i % 10 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 10 === 2)\n                    return Plural.Two;\n                if (v === 0 &&\n                    (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'he':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === 2 && v === 0)\n                    return Plural.Two;\n                if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'is':\n                if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ksh':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'kw':\n            case 'naq':\n            case 'se':\n            case 'smn':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                return Plural.Other;\n            case 'lag':\n                if (n === 0)\n                    return Plural.Zero;\n                if ((i === 0 || i === 1) && !(n === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'lt':\n                if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                    !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.Few;\n                if (!(f === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'lv':\n            case 'prg':\n                if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                    v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                    return Plural.Zero;\n                if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                    !(v === 2) && f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mk':\n                if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mt':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pl':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pt':\n                if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ro':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (!(v === 0) || n === 0 ||\n                    !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ru':\n            case 'uk':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && i % 10 === 0 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'shi':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                if (n === Math.floor(n) && n >= 2 && n <= 10)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'si':\n                if (n === 0 || n === 1 || i === 0 && f === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'sl':\n                if (v === 0 && i % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'tzm':\n                if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                    return Plural.One;\n                return Plural.Other;\n            // When there is no specification, the default is always \"other\"\n            // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n            // > other (required—general plural form — also used if the language only has a single form)\n            default:\n                return Plural.Other;\n        }\n    }\n    function getPluralCategory(value, locale) {\n        var plural = getPluralCase(locale, value);\n        switch (plural) {\n            case Plural.Zero:\n                return 'zero';\n            case Plural.One:\n                return 'one';\n            case Plural.Two:\n                return 'two';\n            case Plural.Few:\n                return 'few';\n            case Plural.Many:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    // TODO(ocombe): replace this hard-coded value by the real LOCALE_ID value\n                    var locale = 'en-US';\n                    var resolvedCase = getPluralCategory(bindingValue, locale);\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            expandoStartIndex: expandoStartIndex + 1, childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        var lView = getLView();\n        var worstCaseSize = Math.max.apply(Math, __spread(vars));\n        for (var i = 0; i < worstCaseSize; i++) {\n            allocExpando(lView);\n        }\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element$$1 = currentNode;\n                        var tagName = element$$1.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element$$1.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders);\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR$1) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        var _a;\n        var clazz = type;\n        if (decorators !== null) {\n            if (clazz.decorators !== undefined) {\n                (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n            }\n            else {\n                clazz.decorators = decorators;\n            }\n        }\n        if (ctorParameters !== null) {\n            // Rather than merging, clobber the existing parameters. If other projects exist which use\n            // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n            // but that is vanishingly unlikely.\n            clazz.ctorParameters = ctorParameters;\n        }\n        if (propDecorators !== null) {\n            // The property decorator objects are merged as it is possible different fields have different\n            // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n            // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n            // decorator that's also been downleveled.\n            if (clazz.propDecorators !== undefined) {\n                clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n            }\n            else {\n                clazz.propDecorators = propDecorators;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return isCreationMode() ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory(null);\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(index) {\n        return getLView()[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue(newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            var lView = getLView();\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = lView[BINDING_INDEX];\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$1(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$1(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$1(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /** @internal */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            if (isContentQueryHost(tNode)) {\n                add(this.shallow, tNode);\n                if (tNode.parent && isContentQueryHost(tNode.parent)) {\n                    // if node has a content query and parent also has a content query\n                    // both queries need to check this node for shallow matches\n                    add(this.parent.shallow, tNode);\n                }\n                return this.parent;\n            }\n            isRootNodeOfQuery(tNode) && add(this.shallow, tNode);\n            return this;\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function isRootNodeOfQuery(tNode) {\n        return tNode.parent === null || isContentQueryHost(tNode.parent);\n    }\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryByReadToken(read, tNode, currentView) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = locateDirectiveOrProvider(tNode, currentView, read, false, false);\n            if (matchingIdx !== null) {\n                return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n            }\n        }\n        return null;\n    }\n    function queryByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function queryByTemplateRef(templateRefToken, tNode, currentView, read) {\n        var templateRefResult = templateRefToken[NG_ELEMENT_ID]();\n        if (read) {\n            return templateRefResult ? queryByReadToken(read, tNode, currentView) : null;\n        }\n        return templateRefResult;\n    }\n    function queryRead(tNode, currentView, read, matchingIdx) {\n        if (read) {\n            return queryByReadToken(read, tNode, currentView);\n        }\n        if (matchingIdx > -1) {\n            return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n        }\n        // if read token and / or strategy is not specified,\n        // detect it using appropriate tNode type\n        return queryByTNodeType(tNode, currentView);\n    }\n    function add(query, tNode) {\n        var currentView = getLView();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var result = null;\n                if (type === TemplateRef) {\n                    result = queryByTemplateRef(type, tNode, currentView, predicate.read);\n                }\n                else {\n                    var matchingIdx = locateDirectiveOrProvider(tNode, currentView, type, false, false);\n                    if (matchingIdx !== null) {\n                        result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                    }\n                }\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var matchingIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (matchingIdx !== null) {\n                        var result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, \n    // TODO: \"read\" should be an AbstractType (FW-486)\n    read) {\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        var queryList = new QueryList();\n        var queries = getOrCreateCurrentQueries(LQueries_);\n        queryList._valuesTree = [];\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(getLView(), queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree || []);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type);\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return sanitizeResourceUrl;\n        }\n        return sanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     */\n    function sanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ɵdefineBase': defineBase,\n        'ɵdefineComponent': defineComponent,\n        'ɵdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ɵdefineNgModule': defineNgModule,\n        'ɵdefinePipe': definePipe,\n        'ɵdirectiveInject': directiveInject,\n        'ɵgetFactoryOf': getFactoryOf,\n        'ɵgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ɵinjectAttribute': injectAttribute,\n        'ɵtemplateRefExtractor': templateRefExtractor,\n        'ɵNgOnChangesFeature': NgOnChangesFeature,\n        'ɵProvidersFeature': ProvidersFeature,\n        'ɵInheritDefinitionFeature': InheritDefinitionFeature,\n        'ɵelementAttribute': elementAttribute,\n        'ɵbind': bind,\n        'ɵcontainer': container,\n        'ɵnextContext': nextContext,\n        'ɵcontainerRefreshStart': containerRefreshStart,\n        'ɵcontainerRefreshEnd': containerRefreshEnd,\n        'ɵloadQueryList': loadQueryList,\n        'ɵnamespaceHTML': namespaceHTML,\n        'ɵnamespaceMathML': namespaceMathML,\n        'ɵnamespaceSVG': namespaceSVG,\n        'ɵenableBindings': enableBindings,\n        'ɵdisableBindings': disableBindings,\n        'ɵallocHostVars': allocHostVars,\n        'ɵelementStart': elementStart,\n        'ɵelementEnd': elementEnd,\n        'ɵelement': element,\n        'ɵelementContainerStart': elementContainerStart,\n        'ɵelementContainerEnd': elementContainerEnd,\n        'ɵpureFunction0': pureFunction0,\n        'ɵpureFunction1': pureFunction1,\n        'ɵpureFunction2': pureFunction2,\n        'ɵpureFunction3': pureFunction3,\n        'ɵpureFunction4': pureFunction4,\n        'ɵpureFunction5': pureFunction5,\n        'ɵpureFunction6': pureFunction6,\n        'ɵpureFunction7': pureFunction7,\n        'ɵpureFunction8': pureFunction8,\n        'ɵpureFunctionV': pureFunctionV,\n        'ɵgetCurrentView': getCurrentView,\n        'ɵrestoreView': restoreView,\n        'ɵinterpolation1': interpolation1,\n        'ɵinterpolation2': interpolation2,\n        'ɵinterpolation3': interpolation3,\n        'ɵinterpolation4': interpolation4,\n        'ɵinterpolation5': interpolation5,\n        'ɵinterpolation6': interpolation6,\n        'ɵinterpolation7': interpolation7,\n        'ɵinterpolation8': interpolation8,\n        'ɵinterpolationV': interpolationV,\n        'ɵelementClassProp': elementClassProp,\n        'ɵlistener': listener,\n        'ɵload': load,\n        'ɵprojection': projection,\n        'ɵelementProperty': elementProperty,\n        'ɵcomponentHostSyntheticProperty': componentHostSyntheticProperty,\n        'ɵpipeBind1': pipeBind1,\n        'ɵpipeBind2': pipeBind2,\n        'ɵpipeBind3': pipeBind3,\n        'ɵpipeBind4': pipeBind4,\n        'ɵpipeBindV': pipeBindV,\n        'ɵprojectionDef': projectionDef,\n        'ɵpipe': pipe,\n        'ɵquery': query,\n        'ɵqueryRefresh': queryRefresh,\n        'ɵregisterContentQuery': registerContentQuery,\n        'ɵreference': reference,\n        'ɵelementStyling': elementStyling,\n        'ɵelementHostAttrs': elementHostAttrs,\n        'ɵelementStylingMap': elementStylingMap,\n        'ɵelementStyleProp': elementStyleProp,\n        'ɵelementStylingApply': elementStylingApply,\n        'ɵtemplate': template,\n        'ɵtext': text,\n        'ɵtextBinding': textBinding,\n        'ɵembeddedViewStart': embeddedViewStart,\n        'ɵembeddedViewEnd': embeddedViewEnd,\n        'ɵi18n': i18n,\n        'ɵi18nAttributes': i18nAttributes,\n        'ɵi18nExp': i18nExp,\n        'ɵi18nStart': i18nStart,\n        'ɵi18nEnd': i18nEnd,\n        'ɵi18nApply': i18nApply,\n        'ɵi18nPostprocess': i18nPostprocess,\n        'ɵresolveWindow': resolveWindow,\n        'ɵresolveDocument': resolveDocument,\n        'ɵresolveBody': resolveBody,\n        'ɵsanitizeHtml': sanitizeHtml,\n        'ɵsanitizeStyle': sanitizeStyle,\n        'ɵdefaultStyleSanitizer': defaultStyleSanitizer,\n        'ɵsanitizeResourceUrl': sanitizeResourceUrl,\n        'ɵsanitizeScript': sanitizeScript,\n        'ɵsanitizeUrl': sanitizeUrl,\n        'ɵsanitizeUrlOrResourceUrl': sanitizeUrlOrResourceUrl\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertNotExisting(id, existing && existing.moduleType);\n        modules.set(id, factory);\n    }\n    function assertNotExisting(id, type) {\n        if (type) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(id, ngModuleType) {\n        var existing = modules.get(id);\n        assertNotExisting(id, existing);\n        modules.set(id, ngModuleType);\n    }\n    function getModuleFactory__PRE_R3__(id) {\n        var factory = modules.get(id);\n        if (!factory)\n            throw noModuleError(id);\n        return factory;\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = modules.get(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__PRE_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$2 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten$2(ngModule.declarations || EMPTY_ARRAY$2);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten$2(ngModule.bootstrap || EMPTY_ARRAY$2, resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten$2(ngModule.imports || EMPTY_ARRAY$2, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten$2(ngModule.exports || EMPTY_ARRAY$2, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        if (ngModule.id) {\n            registerNgModuleType(ngModule.id, moduleType);\n        }\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$2,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$2).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$2).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef = getNgModuleDef(moduleType, true);\n        var errors = [];\n        ngModuleDef.declarations.forEach(verifyDeclarationsHaveDefinitions);\n        var combinedDeclarations = __spread(ngModuleDef.declarations.map(resolveForwardRef), flatten$2(ngModuleDef.imports.map(computeCombinedExports), resolveForwardRef));\n        ngModuleDef.exports.forEach(verifyExportsAreDeclaredOrReExported);\n        ngModuleDef.declarations.forEach(verifyDeclarationIsUnique);\n        ngModuleDef.declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten$2(ngModule.imports, unwrapModuleWithProvidersImports)\n                    .forEach(verifySemanticsOfNgModuleDef);\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents && ngModule.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + stringify$1(type) + \"' declared by the module '\" + stringify$1(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + stringify$1(type) + \" from \" + stringify$1(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                var modules = [existingModule, moduleType].map(stringify$1).sort();\n                errors.push(\"Type \" + stringify$1(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                    (\"Please consider moving \" + stringify$1(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                    (\"You can also create a new NgModule that exports and includes \" + stringify$1(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + stringify$1(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    component.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited\n     * by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten$2(ngModuleDef.exports.map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$2(ngModule.declarations || EMPTY_ARRAY$2);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopes.compilation.directives)\n            .map(function (dir) { return getDirectiveDef(dir) || getComponentDef(dir); })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType, processNgModuleFn) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have an ngModuleDef\");\n            }\n            if (processNgModuleFn) {\n                processNgModuleFn(importedType);\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType, processNgModuleFn);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType, processNgModuleFn);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$2(values, mapFn) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$2(value, mapFn)));\n            }\n            else {\n                out.push(mapFn ? mapFn(value) : value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + stringify$1(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + stringify$1(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var meta = __assign({}, directiveMetadata(type, metadata), { template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, viewQueries: extractQueriesMetadata(type, getReflect().propMetadata(type), isViewQuery), directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, \"ng://\" + stringify$1(type) + \"/template.html\", meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var facade = directiveMetadata(type, directive);\n                    ngDirectiveDef = getCompilerFacade().compileDirective(angularCoreEnv, \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\", facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY,\n            outputs: metadata.outputs || EMPTY_ARRAY,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n        };\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + stringify$1(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        if (exportAs === undefined) {\n            return null;\n        }\n        return exportAs.split(',').map(function (part) { return part.trim(); });\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng://\" + stringify$1(type) + \"/ngPipeDef.js\", {\n                        type: type,\n                        name: type.name,\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true\n                    });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0];\n        };\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\n    var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__PRE_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__PRE_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$2 = getClosureSafeProperty;\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: ɵ0$2 });\n    var EMPTY_ARRAY$3 = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$1 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return inject(existingProvider_1.useExisting); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY$3))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = defineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n            return;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n                    var meta = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        typeArgumentCount: 0,\n                        providedIn: meta.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined\n                    };\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta.useClass;\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var ɵ0$3 = getClosureSafeProperty;\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: ɵ0$3 });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$2 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function render2CompileInjectable(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError$1(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError$1(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    var Compiler_compileModuleSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__PRE_R3__;\n    var Compiler_compileModuleAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        return new ModuleWithComponentFactories(Compiler_compileModuleSync__POST_R3__(moduleType), []);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__PRE_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = Promise.resolve(0);\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_R3__;\n    function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        return Promise.resolve(new NgModuleFactory$1(moduleType));\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        var ApplicationRef_1;\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /** @internal */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /** @internal */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement && getComponent(nativeElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () { return getContext(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () { return this.nativeElement.nodeName; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            get: function () {\n                var context = loadLContext(this.nativeNode);\n                var lView = context.lView;\n                var tView = lView[TVIEW];\n                var tNode = tView.data[context.nodeIndex];\n                var properties = {};\n                // TODO: https://angular-team.atlassian.net/browse/FW-681\n                // Missing implementation here...\n                return properties;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var eAttrs = element.attributes;\n                    for (var i = 0; i < eAttrs.length; i++) {\n                        var attr = eAttrs[i];\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                var classes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var lNode = lContext.lView[lContext.nodeIndex];\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 9 /* SingleStylesStartPosition */; i < lNode.length; i += 4 /* Size */) {\n                            if (isClassBasedValue(lNode, i)) {\n                                var className = getProp(lNode, i);\n                                var value = getValue(lNode, i);\n                                if (typeof value == 'boolean') {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    classes[className] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eClasses = element.classList;\n                        for (var i = 0; i < eClasses.length; i++) {\n                            classes[eClasses[i]] = true;\n                        }\n                    }\n                }\n                return classes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                var styles = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var lNode = lContext.lView[lContext.nodeIndex];\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 9 /* SingleStylesStartPosition */; i < lNode.length; i += 4 /* Size */) {\n                            if (!isClassBasedValue(lNode, i)) {\n                                var styleName = getProp(lNode, i);\n                                var value = getValue(lNode, i);\n                                if (value !== null) {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    styles[styleName] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eStyles = element.style;\n                        for (var i = 0; i < eStyles.length; i++) {\n                            var name_1 = eStyles.item(i);\n                            styles[name_1] = eStyles.getPropertyValue(name_1);\n                        }\n                    }\n                }\n                return styles;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    function _queryNodeChildrenR3(parentNode, predicate, matches, elementsOnly) {\n        if (parentNode instanceof DebugElement__POST_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__POST_R3__) {\n                    if (elementsOnly ? node.nativeElement : true) {\n                        _queryNodeChildrenR3(node, predicate, matches, elementsOnly);\n                    }\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__PRE_R3__(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            return nativeNode.nodeType == Node.ELEMENT_NODE ?\n                new DebugElement__POST_R3__(nativeNode) :\n                new DebugNode__POST_R3__(nativeNode);\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode = getDebugNode__PRE_R3__;\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__PRE_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable$1(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable$1(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike$1(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject$1(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject$1(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var SWITCH_IVY_ENABLED__PRE_R3__ = false;\n    var ivyEnabled = SWITCH_IVY_ENABLED__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue$1(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual$1(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$4 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR$1);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR$1);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1 = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1 ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵangular_packages_core_core_q = APPLICATION_MODULE_PROVIDERS;\n    exports.ɵangular_packages_core_core_n = _iterableDiffersFactory;\n    exports.ɵangular_packages_core_core_o = _keyValueDiffersFactory;\n    exports.ɵangular_packages_core_core_p = _localeFactory;\n    exports.ɵangular_packages_core_core_r = zoneSchedulerFactory;\n    exports.ɵangular_packages_core_core_e = _appIdRandomProviderFactory;\n    exports.ɵangular_packages_core_core_l = DefaultIterableDifferFactory;\n    exports.ɵangular_packages_core_core_m = DefaultKeyValueDifferFactory;\n    exports.ɵangular_packages_core_core_k = DebugElement__PRE_R3__;\n    exports.ɵangular_packages_core_core_j = DebugNode__PRE_R3__;\n    exports.ɵangular_packages_core_core_a = injectInjectorOnly;\n    exports.ɵangular_packages_core_core_b = ReflectiveInjector_;\n    exports.ɵangular_packages_core_core_c = ReflectiveDependency;\n    exports.ɵangular_packages_core_core_d = resolveReflectiveProviders;\n    exports.ɵangular_packages_core_core_i = getModuleFactory__PRE_R3__;\n    exports.ɵangular_packages_core_core_s = wtfEnabled;\n    exports.ɵangular_packages_core_core_u = createScope;\n    exports.ɵangular_packages_core_core_t = detectWTF;\n    exports.ɵangular_packages_core_core_x = endTimeRange;\n    exports.ɵangular_packages_core_core_v = leave;\n    exports.ɵangular_packages_core_core_w = startTimeRange;\n    exports.ɵangular_packages_core_core_ba = SCHEDULER;\n    exports.ɵangular_packages_core_core_bb = injectAttributeImpl;\n    exports.ɵangular_packages_core_core_bc = getLView;\n    exports.ɵangular_packages_core_core_bd = getPreviousOrParentTNode;\n    exports.ɵangular_packages_core_core_be = nextContextImpl;\n    exports.ɵangular_packages_core_core_bj = BoundPlayerFactory;\n    exports.ɵangular_packages_core_core_bg = loadInternal;\n    exports.ɵangular_packages_core_core_f = createElementRef;\n    exports.ɵangular_packages_core_core_g = createTemplateRef;\n    exports.ɵangular_packages_core_core_h = createViewRef;\n    exports.ɵangular_packages_core_core_bh = getUrlSanitizer;\n    exports.ɵangular_packages_core_core_bk = makeParamDecorator;\n    exports.ɵangular_packages_core_core_bl = makePropDecorator;\n    exports.ɵangular_packages_core_core_bn = getClosureSafeProperty;\n    exports.ɵangular_packages_core_core_y = _def;\n    exports.ɵangular_packages_core_core_z = DebugContext;\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.INJECTOR = INJECTOR$1;\n    exports.Injector = Injector;\n    exports.inject = inject;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual$1;\n    exports.ɵisListLikeIterable = isListLikeIterable$1;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵinject = inject;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1;\n    exports.ɵdefineBase = defineBase;\n    exports.ɵdefineComponent = defineComponent;\n    exports.ɵdefineDirective = defineDirective;\n    exports.ɵdefinePipe = definePipe;\n    exports.ɵdefineNgModule = defineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵdirectiveInject = directiveInject;\n    exports.ɵinjectAttribute = injectAttribute;\n    exports.ɵgetFactoryOf = getFactoryOf;\n    exports.ɵgetInheritedFactory = getInheritedFactory;\n    exports.ɵtemplateRefExtractor = templateRefExtractor;\n    exports.ɵProvidersFeature = ProvidersFeature;\n    exports.ɵInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ɵNgOnChangesFeature = NgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵcontainer = container;\n    exports.ɵnextContext = nextContext;\n    exports.ɵelementStart = elementStart;\n    exports.ɵnamespaceHTML = namespaceHTML;\n    exports.ɵnamespaceMathML = namespaceMathML;\n    exports.ɵnamespaceSVG = namespaceSVG;\n    exports.ɵelement = element;\n    exports.ɵlistener = listener;\n    exports.ɵtext = text;\n    exports.ɵembeddedViewStart = embeddedViewStart;\n    exports.ɵquery = query;\n    exports.ɵregisterContentQuery = registerContentQuery;\n    exports.ɵprojection = projection;\n    exports.ɵbind = bind;\n    exports.ɵinterpolation1 = interpolation1;\n    exports.ɵinterpolation2 = interpolation2;\n    exports.ɵinterpolation3 = interpolation3;\n    exports.ɵinterpolation4 = interpolation4;\n    exports.ɵinterpolation5 = interpolation5;\n    exports.ɵinterpolation6 = interpolation6;\n    exports.ɵinterpolation7 = interpolation7;\n    exports.ɵinterpolation8 = interpolation8;\n    exports.ɵinterpolationV = interpolationV;\n    exports.ɵpipeBind1 = pipeBind1;\n    exports.ɵpipeBind2 = pipeBind2;\n    exports.ɵpipeBind3 = pipeBind3;\n    exports.ɵpipeBind4 = pipeBind4;\n    exports.ɵpipeBindV = pipeBindV;\n    exports.ɵpureFunction0 = pureFunction0;\n    exports.ɵpureFunction1 = pureFunction1;\n    exports.ɵpureFunction2 = pureFunction2;\n    exports.ɵpureFunction3 = pureFunction3;\n    exports.ɵpureFunction4 = pureFunction4;\n    exports.ɵpureFunction5 = pureFunction5;\n    exports.ɵpureFunction6 = pureFunction6;\n    exports.ɵpureFunction7 = pureFunction7;\n    exports.ɵpureFunction8 = pureFunction8;\n    exports.ɵpureFunctionV = pureFunctionV;\n    exports.ɵgetCurrentView = getCurrentView;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵrestoreView = restoreView;\n    exports.ɵcontainerRefreshStart = containerRefreshStart;\n    exports.ɵcontainerRefreshEnd = containerRefreshEnd;\n    exports.ɵqueryRefresh = queryRefresh;\n    exports.ɵloadQueryList = loadQueryList;\n    exports.ɵelementEnd = elementEnd;\n    exports.ɵelementProperty = elementProperty;\n    exports.ɵcomponentHostSyntheticProperty = componentHostSyntheticProperty;\n    exports.ɵprojectionDef = projectionDef;\n    exports.ɵreference = reference;\n    exports.ɵenableBindings = enableBindings;\n    exports.ɵdisableBindings = disableBindings;\n    exports.ɵallocHostVars = allocHostVars;\n    exports.ɵelementAttribute = elementAttribute;\n    exports.ɵelementContainerStart = elementContainerStart;\n    exports.ɵelementContainerEnd = elementContainerEnd;\n    exports.ɵelementStyling = elementStyling;\n    exports.ɵelementHostAttrs = elementHostAttrs;\n    exports.ɵelementStylingMap = elementStylingMap;\n    exports.ɵelementStyleProp = elementStyleProp;\n    exports.ɵelementStylingApply = elementStylingApply;\n    exports.ɵelementClassProp = elementClassProp;\n    exports.ɵtextBinding = textBinding;\n    exports.ɵtemplate = template;\n    exports.ɵembeddedViewEnd = embeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵload = load;\n    exports.ɵpipe = pipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵi18n = i18n;\n    exports.ɵi18nAttributes = i18nAttributes;\n    exports.ɵi18nExp = i18nExp;\n    exports.ɵi18nStart = i18nStart;\n    exports.ɵi18nEnd = i18nEnd;\n    exports.ɵi18nApply = i18nApply;\n    exports.ɵi18nPostprocess = i18nPostprocess;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵresolveWindow = resolveWindow;\n    exports.ɵresolveDocument = resolveDocument;\n    exports.ɵresolveBody = resolveBody;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵsanitizeHtml = sanitizeHtml;\n    exports.ɵsanitizeStyle = sanitizeStyle;\n    exports.ɵsanitizeUrl = sanitizeUrl;\n    exports.ɵsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ɵsanitizeUrlOrResourceUrl = sanitizeUrlOrResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_COMPONENT_DEF = NG_COMPONENT_DEF;\n    exports.ɵNG_DIRECTIVE_DEF = NG_DIRECTIVE_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_MODULE_DEF = NG_MODULE_DEF;\n    exports.ɵNG_BASE_DEF = NG_BASE_DEF;\n    exports.ɵNG_INJECTABLE_DEF = NG_INJECTABLE_DEF;\n    exports.ɵNG_INJECTOR_DEF = NG_INJECTOR_DEF;\n    exports.ɵbindPlayerFactory = bindPlayerFactory;\n    exports.ɵaddPlayer = addPlayer;\n    exports.ɵgetPlayers = getPlayers;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵSWITCH_INJECTOR_FACTORY__POST_R3__ = SWITCH_INJECTOR_FACTORY__POST_R3__;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$4;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵelementEventFullName = elementEventFullName;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue$1;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}