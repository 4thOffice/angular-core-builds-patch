{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","defineProperty","ngMetadataName","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","target","meta","unshift","InjectFlags","Inject","token","Optional","Self","SkipSelf","Host","Attribute","attributeName","getClosureSafeProperty","objWithPropertyToExtract","key","Error","fillProperties","source","ɵɵdefineInjectable","opts","providedIn","undefined","defineInjectable","ɵɵdefineInjector","options","providers","imports","getInjectableDef","type","def","NG_PROV_DEF","NG_INJECTABLE_DEF","getInjectorDef","NG_INJ_DEF","NG_INJECTOR_DEF","ɵprov","ɵinj","ngInjectableDef","ngInjectorDef","stringify","isArray","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","isForwardRef","fn","R3ResolvedDependencyType","R3FactoryTarget","__globalThis","globalThis","__window","window","__self","WorkerGlobalScope","__global","_global","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","NG_COMP_DEF","ɵcmp","NG_DIR_DEF","ɵdir","NG_PIPE_DEF","ɵpipe","NG_MOD_DEF","ɵmod","NG_LOC_ID_DEF","ɵloc","NG_FACTORY_DEF","ɵfac","NG_ELEMENT_ID","__NG_ELEMENT_ID__","InjectionToken","_desc","INJECTOR","THROW_IF_NOT_FOUND","NG_TEMP_TOKEN_PATH","NG_TOKEN_PATH","NEW_LINE","NO_NEW_LINE","SOURCE","USE_VALUE","provide","String","useValue","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","injectInjectorOnly","flags","Default","injectRootLimpMode","get","ɵɵinject","inject","notFoundValue","injectableDef","injectArgs","types","arg","j","NullInjector","catchInjectorError","injectorErrorName","tokenPath","message","formatError","text","obj","charAt","substr","context","parts","JSON","replace","ChangeDetectionStrategy","ChangeDetectorStatus","ViewEncapsulation","angularCoreDiEnv","ɵɵgetFactoryOf","getFactoryOf","typeAny","NgModuleRef","NgModuleFactory","addAllToArray","items","arr","flatten","list","dst","item","slice","deepForEach","input","forEach","addToArray","splice","removeFromArray","pop","newArray","size","assertDefined","actual","msg","throwError","noSideEffects","ɵChangeDetectorStatus","EMPTY_OBJ","EMPTY_ARRAY","_renderCompCount","ɵɵdefineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","decls","vars","template","consts","ngContentSelectors","hostBindings","contentQueries","inputs","outputs","exportAs","onChanges","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","data","encapsulation","Emulated","id","styles","_","setInput","schemas","tView","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","ɵɵsetComponentScope","getComponentDef","getDirectiveDef","getPipeDef","ɵɵdefineNgModule","bootstrap","declarations","transitiveCompileScopes","ɵɵsetNgModuleScope","scope","ngModuleDef","getNgModuleDef","secondary","newLookup","minifiedKey","publicName","declaredName","ɵɵdefineDirective","ɵɵdefinePipe","pipeDef","pure","getFactoryDef","throwNotFound","HOST","TVIEW","FLAGS","PARENT","NEXT","QUERIES","T_HOST","CLEANUP","CONTEXT","INJECTOR$1","RENDERER_FACTORY","RENDERER","SANITIZER","CHILD_HEAD","CHILD_TAIL","DECLARATION_VIEW","DECLARATION_LCONTAINER","PREORDER_HOOK_FLAGS","HEADER_OFFSET","TYPE","ACTIVE_INDEX","MOVED_VIEWS","NATIVE","VIEW_REFS","CONTAINER_HEADER_OFFSET","isLView","isLContainer","isContentQueryHost","tNode","isComponentHost","isDirectiveHost","isComponentDef","isRootView","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","NodeInjectorFactory","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","instructionState","lFrame","createLFrame","bindingsEnabled","elementExitFn","checkNoChangesMode","setCurrentDirectiveDef","currentDirectiveDef","getBindingsEnabled","ɵɵenableBindings","ɵɵdisableBindings","getLView","lView","hasActiveElementFlag","flag","selectedIndex","setActiveHostElement","elementIndex","executeElementExitFn","setSelectedIndex","activeDirectiveId","setElementExitFn","setActiveElementFlag","getActiveDirectiveId","incrementActiveDirectiveId","ɵɵrestoreView","viewToRestore","contextLView","getPreviousOrParentTNode","previousOrParentTNode","setPreviousOrParentTNode","_isParent","isParent","getIsParent","setIsNotParent","getCheckNoChangesMode","setCheckNoChangesMode","mode","getBindingRoot","bindingRootIndex","bindingStartIndex","getBindingIndex","bindingIndex","setBindingIndex","nextBindingIndex","incrementBindingIndex","count","setBindingRoot","getCurrentQueryIndex","currentQueryIndex","setCurrentQueryIndex","enterDI","newView","newLFrame","allocLFrame","RendererStyleFlags3","leaveDI","leaveView","enterView","elementDepthCount","currentNamespace","currentSanitizer","currentLFrame","childLFrame","child","parent","leaveViewProcessExit","getSelectedIndex","ɵɵnamespaceSVG","ɵɵnamespaceMathML","ɵɵnamespaceHTML","namespaceHTMLInternal","setCurrentStyleSanitizer","sanitizer","getCurrentStyleSanitizer","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","setUpAttributes","native","attrs","isProc","namespaceURI","attrName","attrVal","setAttribute","setAttributeNS","isAnimationProp","setProperty","isNameOnlyAttributeMarker","marker","charCodeAt","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","renderStringify","stringifyForError","defaultScheduler","requestAnimationFrame","setTimeout","ɵɵresolveWindow","element","ownerDocument","defaultView","ɵɵresolveDocument","ɵɵresolveBody","body","maybeUnwrapFn","Function","NO_CHANGE","MAP_BASED_ENTRY_PROP_NAME","TEMPLATE_DIRECTIVE_INDEX","DEFAULT_BINDING_VALUE","DEFAULT_BINDING_INDEX","DEFAULT_TOTAL_SOURCES","DEFAULT_GUARD_MASK_VALUE","allocStylingMapArray","hasConfig","allowDirectStyling","isClassBased","firstUpdatePass","allow","hasOnlyMapOrPropsFlag","patchConfig","getProp","isSanitizationRequired","getPropConfig","getGuardMask","isHostBinding","getValuesCount","getTotalSources","getBindingValue","offset","getDefaultValue","setValue","getValue","getPropValuesStartPosition","startPosition","hasValueChanged","a","compareValueA","compareValueB","is","isStylingValueDefined","concatString","separator","hyphenate","v","toLowerCase","getStylingMapArray","isStylingContext","getInitialStylingValue","hasClassInput","hasStyleInput","getMapProp","MAP_DIRTY_VALUE","setMapValue","getMapValue","forceStylesAsString","hyphenateProps","str","keys","prop","propLabel","isHostStylingActive","directiveOrSourceId","stylingMapToString","attrValue","addItemToStylingMap","stylingMapArr","allowOverwrite","propAtIndex","applied","normalizeIntoStylingMap","bindingValue","newValues","normalizeProps","allValuesTrue","splitOnWhitespace","array","start","foundChar","selectClassBasedInputName","MONKEY_PATCH_KEY_NAME","unwrapRNode","getNativeByIndex","getNativeByTNode","getNativeByTNodeOrNull","getTNode","view","load","getComponentLViewByIndex","nodeIndex","hostView","slotValue","readPatchedData","readPatchedLView","isCreationMode","getConstant","resetPreOrderHookFlags","getLViewParent","findComponentView","rootTNode","getRootContext","viewOrComponent","getRootView","componentOrLView","includeViewProviders","setIncludeViewProviders","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","firstCreatePass","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","hostTNode","diPublicInInjector","bloomAdd","bloomBit","mask","b6","b5","tData","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","NodeInjector","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","instance","searchTokensOnInjector","NOT_FOUND","moduleInjector","previousInjectImplementation","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","directiveStart","cptViewProvidersCount","endIndex","directiveEnd","providerTokenOrDef","dirDef","isFactory","previousIncludeViewProviders","injectorView","isFirstHostTNode","_tNode","_lView","injectorDef","ɵɵgetInheritedFactory","proto","getPrototypeOf","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","SafeValueImpl","changingThisBreaksApplicationSecurity","SafeHtmlImpl","_super","getTypeName","SafeStyleImpl","SafeScriptImpl","SafeUrlImpl","SafeResourceUrlImpl","unwrapSafeValue","allowSanitizationBypassAndThrow","actualType","getSanitizationBypassType","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","response","removeChild","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","warn","sanitizeSrcset","srcset","split","trim","tagSet","tags","e_1","_b","_c","e_1_1","return","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","ARIA_ATTRS","VALID_ATTRS","SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","current","traverseContent","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","parentNode","tagName","nodeName","elAttr","lower","encodeEntities","node","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","parent_1","isTemplateElement","content","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","c","ɵɵsanitizeHtml","getSanitizer","sanitize","HTML","ɵɵsanitizeStyle","unsafeStyle","STYLE","ɵɵsanitizeUrl","unsafeUrl","URL","ɵɵsanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ɵɵsanitizeScript","unsafeScript","SCRIPT","ɵɵsanitizeUrlOrResourceUrl","tag","getUrlSanitizer","ɵɵdefaultStyleSanitizer","doSanitizeValue","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","getLContext","mpValue","component","isComponentInstance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","createLContext","attachPatchData","rElement","parentContext","localRefs","getComponentViewByInstance","componentInstance","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","throwMultipleComponentError","throwMixedMultiProviderError","registerPreOrderHooks","directiveIndex","directiveDef","initialPreOrderHooksLength","initialPreOrderCheckHooksLength","preOrderHooks","preOrderCheckHooks","registerPostOrderHooks","end","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeCheckHooks","hooks","callHooks","executeInitAndCheckHooks","initPhase","incrementInitPhaseFlags","currentView","currentNodeIndex","nodeIndexLimit","lastNodeIndexFound","callHook","isInitHook","hook","directive","NG_TEMPLATE_SELECTOR","isCssClassMatching","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","selector","nodeAttrs","nameOnlyMarkerIdx","getNameOnlyMarkerIndex","skipToNextSelector","isPositive","selectorAttrValue","classes","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","isInlineTemplate","bindingsMode","maybeAttrName","matchTemplateAttribute","isNodeMatchingSelectorList","isSelectorInSelectorList","selectorListLoop","currentSelectorInList","_state","sourceIndex","classesBitMask","classesIndex","stylesBitMask","stylesIndex","lastDirectClassMap","lastDirectStyleMap","BIT_MASK_START_VALUE","INDEX_START_VALUE","getStylingState","VALUE_IS_EXTERNALLY_MODIFIED","STYLING_INDEX_FOR_MAP_BINDING","updateClassViaContext","forceUpdate","isMapBased","state","countIndex","updateBindingData","updateStyleViaContext","sanitizationRequired","counterIndex","hostBindingsMode","hostBindingsFlag","registerBinding","changed","renderHostBindingsAsStale","bindingsStart","valuesCount","itemsPerRow","found","valuesEnd","i_1","stylingMap","countId","totalSources","addNewSourceColumn","collisionFlag","isBindingIndexValue","entriesPerRow","allocateNewContextEntry","addBindingIntoContext","totalBindingsPerEntry","bitIndex","setGuardMask","maskValue","setDefaultValue","insertOffset","syncContextInitialStyling","updateInitialStylingOnContext","initialStyling","hasInitialStyling","applyStylingViaContext","bindingData","bitMaskValue","applyStylingFn","bitMask","normalizeBitMaskValue","stylingMapsSyncFn","applyAllValues","getStylingMapsSyncFn","_activeStylingMapApplyFn","totalBindingsToVisit","mapsMode","valueApplied","defaultValue","valueAppliedWithinMap","writeStylingValueDirectly","initialValue","valueToApply","objectToClassName","setClassName","setStyleAttr","applyStylingValue","applyFn","findAndApplyMapValue","setStyle","nativeStyle","DashCase","style","removeStyle","removeProperty","setClass","className","classList","addClass","add","removeClass","remove","renderStylingMap","stylingValues","ɵɵadvance","delta","selectIndexInternal","ɵɵselect","ELEMENT_MARKER","COMMENT_MARKER","createProxy","handler","g","Proxy","activateStylingMapFeature","setStylingMapsSyncFn","syncStylingMap","targetProp","targetPropValueWasApplied","runTheSyncAlgorithm","loopUntilEnd","innerSyncStylingMap","currentMapIndex","mapsLimit","recurseInnerMaps","checkValuesOnly","cursor","getCurrentSyncCursor","mapIndex","MAP_CURSORS","iteratedTooFar","isTargetPropMatched","valueIsDefined","innerMode","resolveInnerMapMode","isValueAllowedToBeApplied","bindingIndexToApply","setCurrentSyncCursor","indexValue","resetSyncCursors","currentMode","doApplyValue","TStylingContextDebug","_isClassBased","buildConfig","enumerable","configurable","totalColumns","entries","templateBitMask","hostBindingsBitMask","bindingsStartPosition","sources","printSources","output","prefix","bindingsBySource","isDefaultColumn","getTypeFromColumn","binding","sort","entry","toUpperCase","repeat","tab","log","printTable","table","totalProps","Math","floor","tpl mask","generateBitString","host mask","leftPad","max","pad","times","NodeStylingDebug","_data","_sanitizer","_debugContext","overrideSanitizer","config","hasMapBindings","_convertMapBindingsToStylingMapArrays","_mapValues","set","ownKeys","getOwnPropertyDescriptor","k","limit","mockElement","mapFn","hasPropBindings","hasCollisions","hasTemplateBindings","hasHostBindings","processTNodeChildren","template_","toDebug","debug","toHtml","includeChildren","isTextNode","textContent","toDebugNodes","debugNodes","tNodeCursor","buildDebugNode","rawValue","componentLViewDebug","readLViewValue","nodes","TView","queries","expandoStartIndex","expandoInstructions","staticViewQueries","staticContentQueries","cleanup","directiveRegistry","pipeRegistry","TNode","tView_","propertyBindings","localNames","initialInputs","tViews","projectionNext","projection","type_","LViewDebug","_raw_lView","__raw__flags__","initPhaseState","creationMode","firstViewPass","checkAlways","dirty","attached","destroyed","isRoot","indexWithinInitPhase","childViews","childHead","LContainerDebug","_raw_lContainer","I18NDebugItem","__raw_opCode","I18nMutateOpCodesDebug","__raw_opCodes","__lView","results","opCode","result","commentValue","code","I18nUpdateOpCodesDebug","icus","checkBit","skipCodes","tIcuIndex","tIcu","sanitizeFn","_CLEAN_PROMISE","Promise","resolve","refreshContentQueries","directiveDefIdx","elementCreate","namespace","createElementNS","createLView","host","tHostNode","rendererFactory","getOrCreateTNode","adjustedIndex","createTNodeAtIndex","createTNode","assignTViewNodeToLView","tParentNode","renderView","executeViewQueryFn","templateFn","executeTemplate","renderChildComponents","hostLView","renderComponent","refreshView","hooksInitPhaseCompleted","refreshDynamicEmbeddedViews","viewOrContainer","embeddedLView","embeddedTView","setHostBindings","currentDirectiveIndex","currentElementIndex","instruction","providerCount","refreshChildComponents","refreshComponent","renderComponentOrTemplate","normalExecutionPath","creationModeIsActive","begin","rf","prevSelectedIndex","executeContentQueries","createDirectivesInstances","instantiateAllDirectives","isComponent","addComponentLogic","setInputsFromAttrs","invokeDirectivesHostBindings","viewData","expando","invokeHostBindingsInCreationMode","saveResolvedLocalsInData","localRefExtractor","localIndex","getOrCreateTComponentView","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","tParent","generatePropertyAliases","inputAliasMap","propStore","internalName","elementPropertyInternal","nativeOnly","loadRendererFn","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","childComponentLView","mapPropName","resolveDirectives","findDirectiveMatches","registry","matches","markAsComponentHost","exportsMap","","hasDirectives","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","initializeInputAndOutputAliases","defs","tNodeAttrs","inputsFromAttrs","inputsStore","outputsStore","directiveInputs","generateInitialInputs","cacheMatchingLocalNames","previousExpandoLength","directiveCount","numberOfDirectives","directiveFactory","nodeInjectorFactory","componentView","addToViewTree","elementAttributeInternal","strValue","initialInputData","privateName","inputsToStore","createLContainer","hostNative","isForViewContainerRef","componentHostIdx","viewAttachedToChangeDetector","syncViewWithBlueprint","componentTView","lViewOrLContainer","markViewDirty","tickRootContext","rootContext","rootComponent","detectChangesInternal","detectChangesInRootView","viewQueryFn","CLEAN_PROMISE","getCleanup","getTViewCleanup","loadComponentRenderer","errorHandler","textBindingInternal","renderInitialStyling","append","getLContainer","embeddedView","container","getContainerRenderParent","tViewNode","nativeParentNode","applyToElementOrContainer","action","lNodeToHandle","beforeNode","lContainer","rNode","nativeAppendChild","nativeInsertBefore","nativeRemoveNode","destroyNode","applyContainer","renderParent","anchor","applyView","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","indexInContainer","containerLength","declarationLContainer","trackMovedView","declarationContainer","declaredViews","lQueries","detachMovedView","projectedViews","declaredViewIndex","detachView","removeIndex","viewToDetach","removedLView","removeView","detachedView","destroyLView","destroyViewTree","rootView","cleanUpView","firstView","getParentState","executeOnDestroys","removeListeners","tCleanup","lCleanup","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","destroy","getRenderParent","parentTNode","ShadowDom","Native","insertBefore","nativeAppendOrInsertBefore","getNativeAnchorNode","getBeforeNodeForView","childEl","childTNode","anchorNode","viewIndexInContainer","nextViewIndex","firstTNodeOfView","getFirstNativeNode","tNodeType","elIcuContainerChild","componentHost","firstProjectedTNode","isHostElement","nativeParent","nativeRemoveChild","applyNodes","isProjection","rawSlotValue","applyProjectionRecursive","applyProjection","tProjectionNode","componentLView","nodeToProjectOrRNodes","R3ElementRef","R3TemplateRef","R3ViewContainerRef","ViewRef","_cdRefInjectingView","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","lNode","lViewInAContainer","lViewFirstChildTNode","firstProjectedNode","detach","callback","storeCleanupFn","cleanupFn","markForCheck","reattach","detectChanges","checkNoChanges","checkNoChangesInternal","attachToViewContainerRef","vcRef","detachFromAppRef","renderDetachView","attachToAppRef","appRef","RootViewRef","_view","_this","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationView","_declarationTContainer","elementRef","createEmbeddedView","declarationViewLQueries","viewRef","createContainerRef","ViewContainerRefToken","ViewContainerRef_","_lContainer","_hostTNode","_hostView","getParentInjectorTNode","startTNode","parentTNode_1","clear","templateRef","insert","createComponent","componentFactory","projectableNodes","ngModuleRef","contextInjector","parentInjector","ngModule","componentRef","allocateContainerIfNeeded","adjustedIdx","_adjustIndex","viewAttachedToContainer","move","newIndex","shift","commentNode","createComment","nativeNextSibling","injectChangeDetectorRef","isPipe","createViewRef","hostComponentView","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","Type","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","INHERITED_CLASS_WITH_DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","isDelegateCtor","typeStr","test","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","deps","compiler","dep","reflectDependency","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","USE_VALUE$1","isUseClassProvider","useClass","isUseFactoryProvider","useFactory","getInjectableMetadata","srcMeta","compilerMeta","typeArgumentCount","userDeps","isUseValueProvider","isUseExistingProvider","useExisting","Injectable","SWITCH_COMPILE_INJECTABLE","SWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","ngFactoryDef","metadata","compileFactory","injectFn","Pipe","INJECTOR_SCOPE","NOT_YET","CIRCULAR","EMPTY_ARRAY$2","NULL_INJECTOR","getNullInjector","createInjector","defType","additionalProviders","R3Injector","records","Map","injectorDefTypes","Set","_destroyed","dedupStack","provider","processProvider","processInjectorType","makeRecord","record","assertNotDestroyed","service","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","tokens","defOrWrappedDef","parents","isDuplicate","importTypesWithProviders_1","imported","_loop_1","ngModule_1","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","multi","existing","multiRecord_1","throwCyclicDependencyError","hasOnDestroy","has","getUndecoratedInjectableFactory","paramLength","inheritedInjectableDef","getInheritedInjectableDef","isExistingProvider","isFactoryProvider","classRef_1","throwInvalidProviderError","ngModuleDetail","hasDeps","INJECTOR_IMPL__POST_R3__","INJECTOR_IMPL","Injector","NULL","IDENT","EMPTY","CIRCULAR$1","MULTI_PROVIDER_FN","resolveProvider","computeDeps","providerDeps","staticError","useNew","multiProviderMixError","constructResolvingPath","findFirstClosedCycle","reverse","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","StaticInjector","_records","recursivelyProcessProviders","resolvedProvider","multiProvider","lastInjector","tryResolveToken","resolveToken","NO_NEW_LINE$1","depRecords","depRecord","childRecord","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","reflector","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProvider","some","_createDependency","paramMetadata","Query","UNDEFINED","ReflectiveInjector","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","from","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","_getByReflectiveDependency","instantiationError","originalException","originalStack","first","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","ANALYZE_FOR_ENTRY_COMPONENTS","ContentChildren","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","resolveComponentResources","resourceResolver","componentResolved","urlMap","cachedResourceResolve","promise","resp","then","unwrapResponse","componentResourceResolutionQueue","promises","templateUrl","styleUrls","styleOffset","styleUrl","fullyResolved","all","componentDefResolved","componentDefPendingResolution","delete","clearResolutionOfComponentResourcesQueue","componentNeedsResolution","old","ɵɵallocHostVars","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","_symbolIterator","getSymbolIterator","Symbol_1","getOwnPropertyNames","looseIdentical","isNaN","devModeEqual$1","isListLikeIterableA","isListLikeIterable$1","isListLikeIterableB","areIterablesEqual$1","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject$1","updateBinding","getBinding","bindingUpdated","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","ɵɵattribute","interpolationV","isBindingUpdated","interpolation1","v0","suffix","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","ɵɵattributeInterpolate1","interpolatedValue","ɵɵattributeInterpolate2","ɵɵattributeInterpolate3","ɵɵattributeInterpolate4","ɵɵattributeInterpolate5","ɵɵattributeInterpolate6","ɵɵattributeInterpolate7","ɵɵattributeInterpolate8","ɵɵattributeInterpolateV","interpolated","markDirty","scheduleTick","res_1","nothingScheduled","clean","scheduler","playerHandler","flushPlayers","ɵɵcontainer","containerInternal","ɵɵtemplate","attrsIndex","localRefsIndex","tViewConsts","tContainerNode","embeddedTViewNode","ɵɵcontainerRefreshStart","ɵɵcontainerRefreshEnd","nextIndex","comment","store","ɵɵreference","getContextLView","ɵɵdirectiveInject","ɵɵinjectAttribute","attrNameToInject","injectAttributeImpl","attrsLength","ɵɵinvalidFactory","ɵɵstyleSanitizer","ɵɵstyleProp","stylePropInternal","patchHostStylingFlag","isHostStyling","stylingProp","resolveStylePropValue","resolvedValue","ɵɵclassProp","updated","getClassesContext","getStylesContext","sanitizerToUse","applyStylingValueDirectly","getRenderer","stylingApply","ɵɵstyleMap","hasDirectiveInput","updateDirectiveInputValue","ɵɵclassMap","classMapInternal","valueHasChanged","applyStylingMapDirectly","bindingValueContainsInitial","hasInitial","cachedValueIndex","cachedValue","writeToAttrDirectly","checkIfExternallyModified","cssText","removeStylingValues","isStylingMapArray","initialStyles","newValue","inputName","normalizeStylingDirectiveInputValue","forceClassesAsString","flushStyling","classesContext","stylesContext","styleSanitizer","resetStylingState","resetCurrentStyleSanitizer","registerInitialStylingOnTNode","startIndex","hasAdditionalInitialStyling","attr","updateRawValueOnContext","getContext","allocTStylingContext","ɵɵelementStart","getNamespace","lastAttrIndex","getElementDepthCount","increaseElementDepthCount","elementStart","ɵɵelementEnd","decreaseElementDepthCount","elementEnd","setDirectiveStylingInput","ɵɵelement","ɵɵelementHostAttrs","hostElementIndex","stylingInputs","ɵɵelementContainerStart","ɵɵelementContainerEnd","ɵɵelementContainer","ɵɵembeddedViewStart","viewBlockId","containerTNode","viewToRender","scanForView","startIdx","viewAtPositionId","setIsParent","getOrCreateEmbeddedTView","containerTViews","ɵɵembeddedViewEnd","viewHost","ɵɵgetCurrentView","isPromise","isObservable","subscribe","ɵɵlistener","eventName","listenerFn","useCapture","eventTargetResolver","listenerInternal","ɵɵcomponentHostSyntheticListener","isTNodeDirectiveHost","processOutputs","lCleanupIndex","existingListener","findExistingListener","tNodeIdx","cleanupEventName","listenerIdxInLCleanup","__ngLastListenerFn__","__ngNextListenerFn__","wrapListener","listen","addEventListener","propsLength","subscription","idx","executeListenerWithErrorHandling","wrapWithPreventDefault","wrapListenerIn_markDirtyAndPreventDefault","nextListenerFn","preventDefault","returnValue","ɵɵnextContext","level","nextContextImpl","walkUpViews","nestingLevel","matchingProjectionSlotIndex","projectionSlots","wildcardNgContentIndex","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","ɵɵprojectionDef","componentNode","projectionHeads","tails","componentChild","slotIndex","delayProjection","setDelayProjection","ɵɵprojection","selectorIndex","ɵɵproperty","ɵɵpropertyInterpolate","ɵɵpropertyInterpolate1","ɵɵpropertyInterpolate2","ɵɵpropertyInterpolate3","ɵɵpropertyInterpolate4","ɵɵpropertyInterpolate5","ɵɵpropertyInterpolate6","ɵɵpropertyInterpolate7","ɵɵpropertyInterpolate8","ɵɵpropertyInterpolateV","ɵɵtext","textNative","ɵɵtextInterpolate","ɵɵtextInterpolate1","ɵɵtextInterpolate2","ɵɵtextInterpolate3","ɵɵtextInterpolate4","ɵɵtextInterpolate5","ɵɵtextInterpolate6","ɵɵtextInterpolate7","ɵɵtextInterpolate8","ɵɵtextInterpolateV","ɵɵclassMapInterpolate1","ɵɵclassMapInterpolate2","ɵɵclassMapInterpolate3","ɵɵclassMapInterpolate4","ɵɵclassMapInterpolate5","ɵɵclassMapInterpolate6","ɵɵclassMapInterpolate7","ɵɵclassMapInterpolate8","ɵɵclassMapInterpolateV","ɵɵstylePropInterpolate1","valueSuffix","ɵɵstylePropInterpolate2","ɵɵstylePropInterpolate3","ɵɵstylePropInterpolate4","ɵɵstylePropInterpolate5","ɵɵstylePropInterpolate6","ɵɵstylePropInterpolate7","ɵɵstylePropInterpolate8","ɵɵstylePropInterpolateV","ɵɵhostProperty","ɵɵupdateSyntheticHostBinding","getComponent","loadLContext","getComponentAtNodeIndex","getContext$1","getViewComponent","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","isBrowserEvents","listener","getListeners","lContext","listeners","firstParam","secondParam","name_1","listenerElement","useCaptureOrIndx","sortListeners","getDebugNode","debugNode","loadLContextFromNode","valueInLView","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","COMPILED","createRootComponentView","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","getSuperType","ɵɵInheritDefinitionFeature","definition","superType","superDef","writeableDef","maybeUnwrapEmpty","superHostBindings","inheritHostBindings","superViewQuery","superContentQueries","inheritViewQuery","inheritContentQueries","ngInherit","prevViewQuery","ctx","prevContentQueries","prevHostBindings","COPY_DIRECTIVE_FIELDS","COPY_COMPONENT_FIELDS","ɵɵCopyDefinitionFeature","defAny","COPY_DIRECTIVE_FIELDS_1","COPY_DIRECTIVE_FIELDS_1_1","field","COPY_COMPONENT_FIELDS_1","COPY_COMPONENT_FIELDS_1_1","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","ɵɵNgOnChangesFeature","NgOnChangesFeatureImpl","ngOnChanges","ngOnChangesSetInput","wrapOnChanges","wrapOnChangesHook_inPreviousChangesStorage","simpleChangesStore","getSimpleChangesStore","setSimpleChangesStore","SIMPLE_CHANGES_STORE","previousChange","resolveProvider$1","lInjectablesBlueprint","providerFactory","beginIndex","isClassProvider","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","lData","multiResolve","factories","componentCount","multiProviders","ɵɵProvidersFeature","viewProviders","processProvidersFn","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","RendererStyleFlags2","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","rootSelectorOrNode","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","SWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","RendererFactory2","Version","Renderer2","SWITCH_RENDERER2_FACTORY","SWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","nodeAtIndex","getOrCreateRenderer2","Sanitizer","VERSION","full","major","minor","patch","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike$1","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","find","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","SWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","expressionChangedAfterItHasBeenCheckedError","currValue","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","renderDetachView$1","renderAttachEmbeddedView","prevView","prevRenderNode","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","elDef","elData","ref","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","disposables","createTemplateData","_parentView","createInjector$1","moduleType","bootstrapComponents","NgModuleRef_","_moduleType","_bootstrapComponents","_destroyListeners","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","outputIndex","directChildFlags","childMatchedQueries","query","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","changes","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ComponentFactoryResolver$1","ComponentFactory$1","toRefArray","nonMinified","SCHEDULER","isBoundToModule","rootViewInjector","createChainedInjector","hostRNode","rootFlags","isIsolated","tElementNode","rootLView","nodesforSlot","ComponentRef$1","LocaleDataIndex","_rootLView","destroyCbs","u","localeEn","plural","abs","LOCALE_DATA","findLocaleData","locale","normalizedLocale","normalizeLocale","getLocaleData","parentLocale","getLocalePluralCase","ɵLocaleDataIndex","PluralCase","common","locales","MARKER","ICU_BLOCK_REGEXP","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","ROOT_TEMPLATE_ID","PP_MULTI_VALUE_PLACEHOLDERS_REGEXP","PP_PLACEHOLDERS_REGEXP","PP_ICU_VARS_REGEXP","PP_ICU_PLACEHOLDERS_REGEXP","PP_ICUS_REGEXP","PP_CLOSE_TEMPLATE_REGEXP","PP_TEMPLATE_ID_REGEXP","extractParts","pattern","prevPos","braceStack","braces","lastIndex","exec","pos","block","parseICUBlock","substring_1","cases","icuType","mainBinding","parseInt","blocks","assertGreaterThan","expected","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","min","i18nVarsCount","parentIndexStack","ɵɵi18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","replaceNgsp","NGSP_UNICODE_REGEXP","getTranslationForTemplate","search","phIndex","icuNodeIndex","icuStart","hasBinding","textNodeIndex","allocExpando","numSlotsToAlloc","update","appendI18nNode","previousTNode","ɵɵi18nPostprocess","replacements","matches_1","templateIdsStack_1","phs","tmpl","placeholders","placeholder","templateId","isCloseTemplateTag","currentTemplateId","_type","_idx","ɵɵi18nEnd","i18nEndFirstPass","rootIndex","tI18n","lastCreatedNode","visitedNodes","readCreateOpCodes","removeNode","createDynamicNodeAtIndex","currentTNode","textRNode","destinationNodeIndex","elementNodeIndex","commentNodeIndex","commentRNode","activeCaseIndex","tagNameValue","markAsDetached","removedPhTNode","removedPhRNode","ɵɵi18n","ɵɵi18nAttributes","i18nAttributesFirstPass","previousElementIndex","changeMask","shiftsCounter","ɵɵi18nExp","ɵɵi18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","icuTNode","removeCodes","removeOpCode","activeIndex","caseIndex","getCaseIndex","resolvedCase","getPluralCase","getLocaleId","LOCALE_ID","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","opCodes","parseNodes","currentNode","nestedIcusToCreate","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","setLocaleId","localeId","assertSameOrNotExisting","incoming","registerNgModuleType","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","ngLocaleIdDef","getNgLocaleIdDef","_r3Injector","NgModuleFactory$1","ɵɵpureFunction0","slotOffset","pureFn","thisArg","ɵɵpureFunction1","exp","ɵɵpureFunction2","ɵɵpureFunction3","ɵɵpureFunction4","ɵɵpureFunction5","exp5","ɵɵpureFunction6","exp6","ɵɵpureFunction7","exp7","ɵɵpureFunction8","exp8","ɵɵpureFunctionV","exps","ɵɵpipe","pipeName","getPipeDef$1","pipeInstance","ɵɵpipeBind1","unwrapValue$1","isPure","transform","ɵɵpipeBind2","ɵɵpipeBind3","ɵɵpipeBind4","ɵɵpipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","sink","Subscription","Subject","symbolIterator","_results","QueryList","symbol","filter","reduce","init","toArray","reset","resultsTree","last","notifyOnChanges","setDirty","LQuery_","queryList","clone","LQueries_","tQueries","noOfInheritedQueries","viewLQueries","tQuery","getByIndex","indexInDeclarationView","dirtyQueriesWithMatches","getTQuery","TQueryMetadata_","predicate","isStatic","read","TQueries_","queriesForTemplateRef","childQueryIndex","tqueryClone","track","tquery","TQuery_","crossesNgTemplate","_appliesToNextNode","_declarationNodeIndex","isApplyingToNode","matchTNode","addMatch","matchTNodeWithReadOption","getIdxOfMatchingSelector","typePredicate","nodeMatchIdx","directiveOrProviderIdx","matchIdx","createResultForNode","matchingIdx","createResultByTNodeType","createSpecialToken","materializeViewResults","queryIndex","lQuery","tViewData","tQueryMatches","matchedNodeIdx","ɵɵqueryRefresh","collectQueryResults","lViewResults","embeddedLViews","i_2","ɵɵstaticViewQuery","descend","viewQueryInternal","ɵɵviewQuery","createTQuery","createLQuery","ɵɵcontentQuery","contentQueryInternal","ɵɵstaticContentQuery","saveContentQueryAndDirectiveIndex","tViewContentQueries","ɵɵloadQuery","loadQueryInternal","storeCleanupWithContext","ɵɵtemplateRefExtractor","ɵɵinjectPipeChangeDetectorRef","angularCoreEnv","EMPTY_ARRAY$4","moduleQueue","flushingModuleQueue","flushModuleScopingQueueAsMuchAsPossible","every","isResolvedDeclaration","setScopeOnDeclaredComponents","declaration","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","allowDuplicateDeclarationsInRoot","expandModuleWithProviders","emitInline","compileInjector","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","compilation","dir","pipe","processNgModuleFn","isNgModule","scopes","exported","declared","importedType","importedScope","exportedType","exportedScope","isModuleWithProviders","compileComponent","ngComponentDef","maybeQueueResolutionOfComponentResources","addDirectiveFactoryDef","directiveMetadata","typeSourceSpan","createParseSourceSpan","preserveWhitespaces","animations","interpolation","usesInheritance","addDirectiveDefToUndecoratedParents","hasSelectorScope","compileDirective","ngDirectiveDef","getDirectiveMetadata","sourceMapUrl","facade","Directive","extendsDirectlyFromObject","extractQueriesMetadata","isContentQuery","lifecycle","usesOnChanges","usesLifecycleHook","splitByComma","viewQueries","objPrototype","shouldAddAbstractDirective","isQueryAnn","queriesMeta","annotations_1","ann","isInputAnnotation","convertToR3QueryMetadata","propertyName","static","piece","LIFECYCLE_HOOKS","hookName","metadataName","compilePipe","ngPipeDef","getPipeMetadata","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","SWITCH_COMPILE_PIPE","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","catch","ApplicationInitStatus_Factory","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","random","MissingTranslationStrategy","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","Console_Factory","LOCALE_ID$1","TRANSLATIONS","TRANSLATIONS_FORMAT","trace","events","ModuleWithComponentFactories","ngModuleFactory","componentFactories","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync__POST_R3__","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync__POST_R3__","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","Compiler_Factory","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","shouldCoalesceEventChangeDetection","hasPendingMacrotasks","hasPendingMicrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","lastRequestAnimationFrameId","nativeRequestAnimationFrame","getNativeRequestAnimationFrame","nativeCancelAnimationFrame","unpatchedRequestAnimationFrame","__symbol__","unpatchedCancelAnimationFrame","forkInnerZoneWithAngularBehavior","zone","maybeDelayChangeDetection","delayChangeDetectionForEvents","updateMicroTaskStatus","checkStable","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","_hasPendingMicrotasks","microTask","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","Testability_Factory","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","TestabilityRegistry_Factory","_NoopGetTestability","compileNgModuleFactory","compileNgModuleFactory__POST_R3__","moduleFactory","isComponentResourceResolutionQueueEmpty","compilerProviders","_mergeArrays","part","resourceLoader","ResourceLoader","publishDefaultGlobalUtils$1","publishDefaultGlobalUtils__POST_R3__","isBoundToModule__POST_R3__","cf","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","desc","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","bootstrapModuleFactory","ngZone","getNgZone","ngZoneOption","ngZoneEventCoalescing","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","ApplicationRef","ngDoBootstrap","PlatformRef_Factory","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","componentOrFactory","compRef","_unloadComponent","_loadComponent","_tickScope","_d","_e","_f","attachView","ApplicationRef_Factory","NgModuleFactoryLoader","getModuleFactory__POST_R3__","getRegisteredNgModuleType","noModuleError","getModuleFactory","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","_config","path","loadAndCompile","exportName","System","import","checkNotEmpty","loadFactory","factoryClassSuffix","SystemJsNgModuleLoader_Factory","modulePath","ViewRef$1","EmbeddedViewRef","DebugEventListener","DebugNode__PRE_R3__","nativeNode","DebugElement__PRE_R3__","addChild","providerTokens","childNodes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","collectPropertyBindings","bindingIndexes","metadataParts","collectClassNames","debugElement","lowercaseTNodeAttrs","eAttrs","_classesProxy","element_1","contains","toggle","children","getDebugNode__POST_R3__","_queryAllR3","invokedListeners","eventListeners","unwrappedListener","parentElement","elementsOnly","_queryNodeChildrenR3","rootNativeNode","_addQueryMatchR3","_queryNativeNodeDescendants","getDebugNode$1","nodeOrContainer","_queryNodeChildrenInContainerR3","head","head_1","head_1_1","nextTNode","nextLView","childView","_nativeNodeToDebugNode","NG_DEBUG_PROPERTY","indexDebugNode","ViewAction","DebugNode","DebugElement","platformCore","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","getGlobalLocale","$localize","ApplicationModule","ApplicationModule_Factory","selectorOrNode","ns","parentEl","listenToElementOutputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","checkAndUpdateElementValue","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","projectedView","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef","createView","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","hostViewDef","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","nodeLogger","refName","oldAction","oldView","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","asNativeElements","debugEls","destroyPlatform","enableProdMode","setTestabilityGetter","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵCodegenComponentFactoryResolver","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleSync__POST_R3__","ɵComponentFactory","ɵConsole","ɵDEFAULT_LOCALE_ID","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵINJECTOR_IMPL__POST_R3__","ɵINJECTOR_SCOPE","ɵLifecycleHooksFeature","ɵNG_COMP_DEF","ɵNG_DIR_DEF","ɵNG_ELEMENT_ID","ɵNG_INJ_DEF","ɵNG_MOD_DEF","ɵNG_PIPE_DEF","ɵNG_PROV_DEF","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵNO_CHANGE","ɵNgModuleFactory","ɵNoopNgZone","ɵReflectionCapabilities","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵRender3NgModuleRef","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵallowSanitizationBypassAndThrow","ɵand","templateFactory","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵccf","createComponentFactory","ɵclearOverrides","ɵclearResolutionOfComponentResourcesQueue","ɵcmf","createNgModuleFactory","defFactory","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵcompileNgModuleFactory__POST_R3__","ɵcompilePipe","ɵcreateInjector","ɵcrt","createRendererType2","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdetectChanges","ɵdevModeEqual","ɵdid","outputDefs","ɵeld","namespaceAndName","fixedAttrs","bindingDefs","suffixOrSecurityContext","ns_1","resolveRendererType2","isFilled","None","ɵfindLocaleData","ɵflushModuleScopingQueueAsMuchAsPossible","ɵgetComponentViewDefinitionFactory","ɵgetDebugNode__POST_R3__","ɵgetDirectives","ɵgetHostElement","ɵgetInjectableDef","ɵgetLContext","ɵgetLocalePluralCase","ɵgetModuleFactory__POST_R3__","ɵgetSanitizationBypassType","ɵglobal","ɵinitServicesIfNeeded","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵisBoundToModule__POST_R3__","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵisListLikeIterable","ɵisObservable","ɵisPromise","ɵivyEnabled","ɵlooseIdentical","ɵmakeDecorator","ɵmarkDirty","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵoverrideComponentView","ɵoverrideProvider","ɵpad","pureArrayDef","argCount","ɵpatchComponentDefWithScope","ɵpid","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵprd","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵpublishGlobalUtil","ɵqud","ɵregisterLocaleData","registerLocaleData","extraData","LocaleId","ExtraData","ɵregisterModuleFactory","registerModuleFactory","ɵregisterNgModuleType","ɵrenderComponent","renderComponent$1","ɵresetCompiledComponents","resetCompiledComponents","ɵresolveComponentResources","ɵsetClassMetadata","setClassMetadata","clazz","parentPrototype","parentConstructor","ɵsetCurrentInjector","ɵsetLocaleId","ɵstore","ɵstringify","ɵted","textDef","staticText","ɵtransitiveScopesFor","ɵunregisterLocaleData","unregisterAllLocaleData","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵunwrapSafeValue","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags","ɵwhenRendered","whenRendered"],"mappings":"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","sourcesContent":["/**\n * @license Angular v9.0.0-rc.1+47.sha-eece138.with-local-changes\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, (function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __rest(s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    }\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __awaiter(thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    }\r\n\r\n    function __generator(thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    }\r\n\r\n    function __exportStar(m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\r\n\r\n    function __spreadArrays() {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    function __await(v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    }\r\n\r\n    function __asyncGenerator(thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    }\r\n\r\n    function __asyncDelegator(o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    }\r\n\r\n    function __asyncValues(o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    }\r\n\r\n    function __makeTemplateObject(cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    function __importStar(mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result.default = mod;\r\n        return result;\r\n    }\r\n\r\n    function __importDefault(mod) {\r\n        return (mod && mod.__esModule) ? mod : { default: mod };\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        /** Check self and check parent injector if needed */\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't ascend to ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ɵprov` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineInjectable(opts) {\n        return {\n            token: opts.token, providedIn: opts.providedIn || null, factory: opts.factory,\n            value: undefined,\n        };\n    }\n    /**\n     * @deprecated in v8, delete after v10. This API should be used only be generated code, and that\n     * code should now use ɵɵdefineInjectable instead.\n     * @publicApi\n     */\n    var defineInjectable = ɵɵdefineInjectable;\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static injector def (`ɵinj`) field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has a `ɵprov` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function ɵɵdefineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the injectable def (`ɵprov`) for `type` in a way which is immune to accidentally reading\n     * inherited value.\n     *\n     * @param type A type which may have its own (non-inherited) `ɵprov`.\n     */\n    function getInjectableDef(type) {\n        var def = (type[NG_PROV_DEF] || type[NG_INJECTABLE_DEF]);\n        // The definition read above may come from a base class. `hasOwnProperty` is not sufficient to\n        // distinguish this case, as in older browsers (e.g. IE10) static property inheritance is\n        // implemented by copying the properties.\n        //\n        // Instead, the ɵprov's token is compared to the type, and if they don't match then the\n        // property was not defined directly on the type itself, and was likely inherited. The definition\n        // is only returned if the type matches the def.token.\n        return def && def.token === type ? def : null;\n    }\n    /**\n     * Read the injectable def (`ɵprov`) for `type` or read the `ɵprov` from one of its ancestors.\n     *\n     * @param type A type which may have `ɵprov`, via inheritance.\n     *\n     * @deprecated Will be removed in v10, where an error will occur in the scenario if we find the\n     * `ɵprov` on an ancestor only.\n     */\n    function getInheritedInjectableDef(type) {\n        var def = type && (type[NG_PROV_DEF] || type[NG_INJECTABLE_DEF]);\n        if (def) {\n            // TODO(FW-1307): Re-add ngDevMode when closure can handle it\n            // ngDevMode &&\n            console.warn(\"DEPRECATED: DI is instantiating a token \\\"\" + type.name + \"\\\" that inherits its @Injectable decorator but does not provide one itself.\\n\" +\n                (\"This will become an error in v10. Please add @Injectable() to the \\\"\" + type.name + \"\\\" class.\"));\n            return def;\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Read the injector def type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have an injector def (`ɵinj`)\n     */\n    function getInjectorDef(type) {\n        return type && (type.hasOwnProperty(NG_INJ_DEF) || type.hasOwnProperty(NG_INJECTOR_DEF)) ?\n            type[NG_INJ_DEF] :\n            null;\n    }\n    var NG_PROV_DEF = getClosureSafeProperty({ ɵprov: getClosureSafeProperty });\n    var NG_INJ_DEF = getClosureSafeProperty({ ɵinj: getClosureSafeProperty });\n    // We need to keep these around so we can read off old defs if new defs are unavailable\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (Array.isArray(token)) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        return isForwardRef(type) ? type() : type;\n    }\n    /** Checks whether a function is wrapped by a `forwardRef`. */\n    function isForwardRef(fn) {\n        return typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __globalThis = typeof globalThis !== 'undefined' && globalThis;\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Always use __globalThis if available, which is the spec-defined global variable across all\n    // environments, then fallback to __global first, because in Node tests both __global and\n    // __window may be defined and _global should be __global in that case.\n    var _global = __globalThis || __global || __window || __self;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"ChangeDetectorRef\"] = 2] = \"ChangeDetectorRef\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n    var R3FactoryTarget;\n    (function (R3FactoryTarget) {\n        R3FactoryTarget[R3FactoryTarget[\"Directive\"] = 0] = \"Directive\";\n        R3FactoryTarget[R3FactoryTarget[\"Component\"] = 1] = \"Component\";\n        R3FactoryTarget[R3FactoryTarget[\"Injectable\"] = 2] = \"Injectable\";\n        R3FactoryTarget[R3FactoryTarget[\"Pipe\"] = 3] = \"Pipe\";\n        R3FactoryTarget[R3FactoryTarget[\"NgModule\"] = 4] = \"NgModule\";\n    })(R3FactoryTarget || (R3FactoryTarget = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global['ng'];\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMP_DEF = getClosureSafeProperty({ ɵcmp: getClosureSafeProperty });\n    var NG_DIR_DEF = getClosureSafeProperty({ ɵdir: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ɵpipe: getClosureSafeProperty });\n    var NG_MOD_DEF = getClosureSafeProperty({ ɵmod: getClosureSafeProperty });\n    var NG_LOC_ID_DEF = getClosureSafeProperty({ ɵloc: getClosureSafeProperty });\n    var NG_FACTORY_DEF = getClosureSafeProperty({ ɵfac: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    // TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parameterized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            this.ɵprov = undefined;\n            if (typeof options == 'number') {\n                // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n                // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n                // We are using it to assign `-1` which is used to identify `Injector`.\n                this.__NG_ELEMENT_ID__ = options;\n            }\n            else if (options !== undefined) {\n                this.ɵprov = ɵɵdefineInjectable({\n                    token: this,\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n    );\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var SOURCE = '__source';\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function ɵɵinject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(resolveForwardRef(token), flags);\n    }\n    /**\n     * Injects a token from the currently active injector.\n     *\n     * Must be used in the context of a factory function such as one defined for an\n     * `InjectionToken`. Throws an error if not called from such a context.\n     *\n     * Within such a factory function, using this function to request injection of a dependency\n     * is faster and more type-safe than providing an additional array of dependencies\n     * (as has been common with `useFactory` providers).\n     *\n     * @param token The injection token for the dependency to be injected.\n     * @param flags Optional flags that control how injection is executed.\n     * The flags correspond to injection strategies that can be specified with\n     * parameter decorators `@Host`, `@Self`, `@SkipSef`, and `@Optional`.\n     * @returns True if injection is successful, null otherwise.\n     *\n     * @usageNotes\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     * @publicApi\n     */\n    var inject = ɵɵinject;\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = resolveForwardRef(types[i]);\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional' || meta === Optional) {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf' || meta === SkipSelf) {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self' || meta === Self) {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject || meta === Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(ɵɵinject(type, flags));\n            }\n            else {\n                args.push(ɵɵinject(arg));\n            }\n        }\n        return args;\n    }\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (notFoundValue === THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if (ngDevMode) debugger;\n                var error = new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n                error.name = 'NullInjectorError';\n                throw error;\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    function catchInjectorError(e, token, injectorErrorName, source) {\n        var tokenPath = e[NG_TEMP_TOKEN_PATH];\n        if (token[SOURCE]) {\n            tokenPath.unshift(token[SOURCE]);\n        }\n        e.message = formatError('\\n' + e.message, tokenPath, injectorErrorName, source);\n        e[NG_TOKEN_PATH] = tokenPath;\n        e[NG_TEMP_TOKEN_PATH] = null;\n        throw e;\n    }\n    function formatError(text, obj, injectorErrorName, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (Array.isArray(obj)) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"\" + injectorErrorName + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreDiEnv = {\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵgetFactoryOf': getFactoryOf,\n    };\n    function getFactoryOf(type) {\n        var typeAny = type;\n        if (isForwardRef(type)) {\n            return (function () {\n                var factory = getFactoryOf(resolveForwardRef(typeAny));\n                return factory ? factory() : null;\n            });\n        }\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Equivalent to ES6 spread, add each item to an array.\n    *\n    * @param items The items to add\n    * @param arr The array to which you want to add the items\n    */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n    /**\n     * Flattens an array.\n     */\n    function flatten(list, dst) {\n        if (dst === undefined)\n            dst = list;\n        for (var i = 0; i < list.length; i++) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                // we need to inline it.\n                if (dst === list) {\n                    // Our assumption that the list was already flat was wrong and\n                    // we need to clone flat since we need to write to it.\n                    dst = list.slice(0, i);\n                }\n                flatten(item, dst);\n            }\n            else if (dst !== list) {\n                dst.push(item);\n            }\n        }\n        return dst;\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            return arr.pop();\n        }\n        else {\n            return arr.splice(index, 1)[0];\n        }\n    }\n    function newArray(size, value) {\n        var list = [];\n        for (var i = 0; i < size; i++) {\n            list.push(value);\n        }\n        return list;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNumber(actual, msg) {\n        if (typeof actual != 'number') {\n            throwError(msg);\n        }\n    }\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertSame(actual, expected, msg) {\n        if (actual !== expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotSame(actual, expected, msg) {\n        if (actual === expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThanOrEqual(actual, expected, msg) {\n        if (actual > expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotDefined(actual, msg) {\n        if (actual != null) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        // If we're in a worker, `Node` will not be defined.\n        assertEqual((typeof Node !== 'undefined' && node instanceof Node) ||\n            (typeof node === 'object' && node != null &&\n                node.constructor.name === 'WebWorkerRenderNode'), true, \"The provided value must be an instance of a DOM Node but got \" + stringify(node));\n    }\n    function assertDataInRange(arr, index) {\n        var maxLen = arr ? arr.length : 0;\n        assertLessThan(index, maxLen, \"Index expected to be less than \" + maxLen + \" but got \" + index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         * This strategy applies to all child directives and cannot be overridden.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var locationString = typeof location !== 'undefined' ? location.toString() : '';\n        var newCounters = {\n            namedConstructors: locationString.indexOf('ngDevMode=namedConstructors') != -1,\n            firstCreatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererAppendChild: 0,\n            rendererInsertBefore: 0,\n            rendererCreateComment: 0,\n            styleMap: 0,\n            styleMapCacheMiss: 0,\n            classMap: 0,\n            classMapCacheMiss: 0,\n            styleProp: 0,\n            stylePropCacheMiss: 0,\n            classProp: 0,\n            classPropCacheMiss: 0,\n            flushStyling: 0,\n            classesApplied: 0,\n            stylesApplied: 0,\n        };\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n        var allowNgDevModeTrue = locationString.indexOf('ngDevMode=false') === -1;\n        _global['ngDevMode'] = allowNgDevModeTrue && newCounters;\n        return newCounters;\n    }\n    /**\n     * This function checks to see if the `ngDevMode` has been set. If yes,\n     * then we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     *\n     * `ɵɵdefineComponent` is guaranteed to have been called before any component template functions\n     * (and thus Ivy instructions), so a single initialization there is sufficient to ensure ngDevMode\n     * is defined for the entire instruction set.\n     *\n     * When using checking `ngDevMode` on toplevel, always init it before referencing it\n     * (e.g. `((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode())`), otherwise you can\n     *  get a `ReferenceError` like in https://github.com/angular/angular/issues/31595.\n     *\n     * Details on possible values for `ngDevMode` can be found on its docstring.\n     *\n     * NOTE:\n     * - changes to the `ngDevMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    function initNgDevMode() {\n        // The below checks are to ensure that calling `initNgDevMode` multiple times does not\n        // reset the counters.\n        // If the `ngDevMode` is not an object, then it means we have not created the perf counters\n        // yet.\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (typeof ngDevMode !== 'object') {\n                ngDevModeResetPerfCounters();\n            }\n            return !!ngDevMode;\n        }\n        return false;\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode()) {\n        // These property accesses can be ignored because ngDevMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_OBJ);\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_ARRAY);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ɵcmp = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @codeGenApi\n     */\n    function ɵɵdefineComponent(componentDefinition) {\n        // Initialize ngDevMode. This must be the first statement in ɵɵdefineComponent.\n        // See the `initNgDevMode` docstring for more information.\n        (typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode();\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            decls: componentDefinition.decls,\n            vars: componentDefinition.vars,\n            factory: null,\n            template: componentDefinition.template || null,\n            consts: componentDefinition.consts || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onChanges: null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors || EMPTY_ARRAY,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n            setInput: null,\n            schemas: componentDefinition.schemas || null,\n            tView: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵsetComponentScope(type, directives, pipes) {\n        var def = type.ɵcmp;\n        def.directiveDefs = function () { return directives.map(extractDirectiveDef); };\n        def.pipeDefs = function () { return pipes.map(extractPipeDef); };\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵdefineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n            schemas: def.schemas || null,\n            id: def.id || null,\n        };\n        return res;\n    }\n    /**\n     * Adds the module metadata that is necessary to compute the module's transitive scope to an\n     * existing module definition.\n     *\n     * Scope metadata of modules is not used in production builds, so calls to this function can be\n     * marked pure to tree-shake it from the bundle, allowing for all referenced declarations\n     * to become eligible for tree-shaking as well.\n     *\n     * @codeGenApi\n     */\n    function ɵɵsetNgModuleScope(type, scope) {\n        return noSideEffects(function () {\n            var ngModuleDef = getNgModuleDef(type, true);\n            ngModuleDef.declarations = scope.declarations || EMPTY_ARRAY;\n            ngModuleDef.imports = scope.imports || EMPTY_ARRAY;\n            ngModuleDef.exports = scope.exports || EMPTY_ARRAY;\n        });\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```ts\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ɵdir = ɵɵdefineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     *\n     * @codeGenApi\n     */\n    var ɵɵdefineDirective = ɵɵdefineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ɵpipe = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefinePipe(pipeDef) {\n        return {\n            type: pipeDef.type,\n            name: pipeDef.name,\n            factory: null,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMP_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIR_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getFactoryDef(type, throwNotFound) {\n        var hasFactoryDef = type.hasOwnProperty(NG_FACTORY_DEF);\n        if (!hasFactoryDef && throwNotFound === true && ngDevMode) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have '\\u0275fac' property.\");\n        }\n        return hasFactoryDef ? type[NG_FACTORY_DEF] : null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MOD_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have '\\u0275mod' property.\");\n        }\n        return ngModuleDef;\n    }\n    function getNgLocaleIdDef(type) {\n        return type[NG_LOC_ID_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var HOST = 0;\n    var TVIEW = 1;\n    var FLAGS = 2;\n    var PARENT = 3;\n    var NEXT = 4;\n    var QUERIES = 5;\n    var T_HOST = 6;\n    var CLEANUP = 7;\n    var CONTEXT = 8;\n    var INJECTOR$1 = 9;\n    var RENDERER_FACTORY = 10;\n    var RENDERER = 11;\n    var SANITIZER = 12;\n    var CHILD_HEAD = 13;\n    var CHILD_TAIL = 14;\n    var DECLARATION_VIEW = 15;\n    var DECLARATION_LCONTAINER = 16;\n    var PREORDER_HOOK_FLAGS = 17;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 18;\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Special location which allows easy identification of type. If we have an array which was\n     * retrieved from the `LView` and that array has `true` at `TYPE` location, we know it is\n     * `LContainer`.\n     */\n    var TYPE = 1;\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 2;\n    // PARENT and NEXT are indices 3 and 4\n    // As we already have these constants in LView, we don't need to re-create them.\n    var MOVED_VIEWS = 5;\n    // T_HOST is index 6\n    // We already have this constants in LView, we don't need to re-create it.\n    var NATIVE = 7;\n    var VIEW_REFS = 8;\n    /**\n     * Size of LContainer's header. Represents the index after which all views in the\n     * container will be inserted. We need to keep a record of current views so we know\n     * which views are already in the DOM (and don't need to be re-added) and so we can\n     * remove views from the DOM when they are no longer required.\n     */\n    var CONTAINER_HEADER_OFFSET = 9;\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$1 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * True if `value` is `LView`.\n    * @param value wrapped value of `RNode`, `LView`, `LContainer`\n    */\n    function isLView(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'object';\n    }\n    /**\n     * True if `value` is `LContainer`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function isLContainer(value) {\n        return Array.isArray(value) && value[TYPE] === true;\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 8 /* hasContentQuery */) !== 0;\n    }\n    function isComponentHost(tNode) {\n        return (tNode.flags & 2 /* isComponentHost */) === 2 /* isComponentHost */;\n    }\n    function isDirectiveHost(tNode) {\n        return (tNode.flags & 1 /* isDirectiveHost */) === 1 /* isDirectiveHost */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 512 /* IsRoot */) !== 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertTNodeForLView(tNode, lView) {\n        tNode.hasOwnProperty('tView_') && assertEqual(tNode.tView_, lView[TVIEW], 'This TNode does not belong to this LView.');\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ɵcmp\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ɵmod\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode, 'previousOrParentTNode should exist!');\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataNext(lView, index, arr) {\n        if (arr == null)\n            arr = lView;\n        assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n    }\n    function assertLContainerOrUndefined(value) {\n        value && assertEqual(isLContainer(value), true, 'Expecting LContainer or undefined or null');\n    }\n    function assertLContainer(value) {\n        assertDefined(value, 'LContainer must be defined');\n        assertEqual(isLContainer(value), true, 'Expecting LContainer');\n    }\n    function assertLViewOrUndefined(value) {\n        value && assertEqual(isLView(value), true, 'Expecting LView or undefined or null');\n    }\n    function assertLView(value) {\n        assertDefined(value, 'LView must be defined');\n        assertEqual(isLView(value), true, 'Expecting LView');\n    }\n    function assertFirstCreatePass(tView, errMessage) {\n        assertEqual(tView.firstCreatePass, true, errMessage || 'Should only be called in first create pass.');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    function isFactory(obj) {\n        return obj instanceof NodeInjectorFactory;\n    }\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$2 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 5 /* IcuContainer */)\n            return 'IcuContainer';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var instructionState = {\n        lFrame: createLFrame(null),\n        bindingsEnabled: true,\n        elementExitFn: null,\n        checkNoChangesMode: false,\n    };\n    function getElementDepthCount() {\n        return instructionState.lFrame.elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        instructionState.lFrame.elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        instructionState.lFrame.elementDepthCount--;\n    }\n    function getCurrentDirectiveDef() {\n        return instructionState.lFrame.currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        instructionState.lFrame.currentDirectiveDef = def;\n    }\n    function getBindingsEnabled() {\n        return instructionState.bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵenableBindings() {\n        instructionState.bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵdisableBindings() {\n        instructionState.bindingsEnabled = false;\n    }\n    /**\n     * Return the current LView.\n     *\n     * The return value can be `null` if the method is called outside of template. This can happen if\n     * directive is instantiated by module injector (rather than by node injector.)\n     */\n    function getLView() {\n        // TODO(misko): the return value should be `LView|null` but doing so breaks a lot of code.\n        var lFrame = instructionState.lFrame;\n        return lFrame === null ? null : lFrame.lView;\n    }\n    /**\n     * Determines whether or not a flag is currently set for the active element.\n     */\n    function hasActiveElementFlag(flag) {\n        return (instructionState.lFrame.selectedIndex & flag) === flag;\n    }\n    /**\n     * Sets a flag is for the active element.\n     */\n    function setActiveElementFlag(flag) {\n        instructionState.lFrame.selectedIndex |= flag;\n    }\n    /**\n     * Sets the active directive host element and resets the directive id value\n     * (when the provided elementIndex value has changed).\n     *\n     * @param elementIndex the element index value for the host element where\n     *                     the directive/component instance lives\n     */\n    function setActiveHostElement(elementIndex) {\n        if (elementIndex === void 0) { elementIndex = null; }\n        if (hasActiveElementFlag(1 /* RunExitFn */)) {\n            executeElementExitFn();\n        }\n        setSelectedIndex(elementIndex === null ? -1 : elementIndex);\n        instructionState.lFrame.activeDirectiveId = 0;\n    }\n    function executeElementExitFn() {\n        instructionState.elementExitFn();\n        instructionState.lFrame.selectedIndex &= ~1 /* RunExitFn */;\n    }\n    /**\n     * Queues a function to be run once the element is \"exited\" in CD.\n     *\n     * Change detection will focus on an element either when the `advance()`\n     * instruction is called or when the template or host bindings instruction\n     * code is invoked. The element is then \"exited\" when the next element is\n     * selected or when change detection for the template or host bindings is\n     * complete. When this occurs (the element change operation) then an exit\n     * function will be invoked if it has been set. This function can be used\n     * to assign that exit function.\n     *\n     * @param fn\n     */\n    function setElementExitFn(fn) {\n        setActiveElementFlag(1 /* RunExitFn */);\n        if (instructionState.elementExitFn == null) {\n            instructionState.elementExitFn = fn;\n        }\n        ngDevMode &&\n            assertEqual(instructionState.elementExitFn, fn, 'Expecting to always get the same function');\n    }\n    /**\n     * Returns the current id value of the current directive.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (id == 1)\n     * dirTwo->hostBindings() (id == 2)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function getActiveDirectiveId() {\n        return instructionState.lFrame.activeDirectiveId;\n    }\n    /**\n     * Increments the current directive id value.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (index = 1)\n     * // increment\n     * dirTwo->hostBindings() (index = 2)\n     *\n     * Depending on whether or not a previous directive had any inherited\n     * directives present, that value will be incremented in addition\n     * to the id jumping up by one.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function incrementActiveDirectiveId() {\n        // Each directive gets a uniqueId value that is the same for both\n        // create and update calls when the hostBindings function is called. The\n        // directive uniqueId is not set anywhere--it is just incremented between\n        // each hostBindings call and is useful for helping instruction code\n        // uniquely determine which directive is currently active when executed.\n        instructionState.lFrame.activeDirectiveId += 1;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     *\n     * @codeGenApi\n     */\n    function ɵɵrestoreView(viewToRestore) {\n        instructionState.lFrame.contextLView = viewToRestore;\n    }\n    function getPreviousOrParentTNode() {\n        return instructionState.lFrame.previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode, _isParent) {\n        instructionState.lFrame.previousOrParentTNode = tNode;\n        instructionState.lFrame.isParent = _isParent;\n    }\n    function getIsParent() {\n        return instructionState.lFrame.isParent;\n    }\n    function setIsNotParent() {\n        instructionState.lFrame.isParent = false;\n    }\n    function setIsParent() {\n        instructionState.lFrame.isParent = true;\n    }\n    function getContextLView() {\n        return instructionState.lFrame.contextLView;\n    }\n    function getCheckNoChangesMode() {\n        return instructionState.checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        instructionState.checkNoChangesMode = mode;\n    }\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        var lFrame = instructionState.lFrame;\n        var index = lFrame.bindingRootIndex;\n        if (index === -1) {\n            var lView = lFrame.lView;\n            index = lFrame.bindingRootIndex = lView[TVIEW].bindingStartIndex;\n        }\n        return index;\n    }\n    function getBindingIndex() {\n        return instructionState.lFrame.bindingIndex;\n    }\n    function setBindingIndex(value) {\n        return instructionState.lFrame.bindingIndex = value;\n    }\n    function nextBindingIndex() {\n        return instructionState.lFrame.bindingIndex++;\n    }\n    function incrementBindingIndex(count) {\n        var lFrame = instructionState.lFrame;\n        var index = lFrame.bindingIndex;\n        lFrame.bindingIndex = lFrame.bindingIndex + count;\n        return index;\n    }\n    /**\n     * Set a new binding root index so that host template functions can execute.\n     *\n     * Bindings inside the host template are 0 index. But because we don't know ahead of time\n     * how many host bindings we have we can't pre-compute them. For this reason they are all\n     * 0 index and we just shift the root so that they match next available location in the LView.\n     * @param value\n     */\n    function setBindingRoot(value) {\n        instructionState.lFrame.bindingRootIndex = value;\n    }\n    function getCurrentQueryIndex() {\n        return instructionState.lFrame.currentQueryIndex;\n    }\n    function setCurrentQueryIndex(value) {\n        instructionState.lFrame.currentQueryIndex = value;\n    }\n    /**\n     * This is a light weight version of the `enterView` which is needed by the DI system.\n     * @param newView\n     * @param tNode\n     */\n    function enterDI(newView, tNode) {\n        ngDevMode && assertLViewOrUndefined(newView);\n        var newLFrame = allocLFrame();\n        instructionState.lFrame = newLFrame;\n        newLFrame.previousOrParentTNode = tNode;\n        newLFrame.lView = newView;\n        if (ngDevMode) {\n            // resetting for safety in dev mode only.\n            newLFrame.isParent = DEV_MODE_VALUE;\n            newLFrame.selectedIndex = DEV_MODE_VALUE;\n            newLFrame.contextLView = DEV_MODE_VALUE;\n            newLFrame.elementDepthCount = DEV_MODE_VALUE;\n            newLFrame.currentNamespace = DEV_MODE_VALUE;\n            newLFrame.currentSanitizer = DEV_MODE_VALUE;\n            newLFrame.currentDirectiveDef = DEV_MODE_VALUE;\n            newLFrame.activeDirectiveId = DEV_MODE_VALUE;\n            newLFrame.bindingRootIndex = DEV_MODE_VALUE;\n            newLFrame.currentQueryIndex = DEV_MODE_VALUE;\n        }\n    }\n    var DEV_MODE_VALUE = 'Value indicating that DI is trying to read value which it should not need to know about.';\n    /**\n     * This is a light weight version of the `leaveView` which is needed by the DI system.\n     *\n     * Because the implementation is same it is only an alias\n     */\n    var leaveDI = leaveView;\n    /**\n     * Swap the current lView with a new lView.\n     *\n     * For performance reasons we store the lView in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the lView for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New lView to become active\n     * @param tNode Element to which the View is a child of\n     * @returns the previously active lView;\n     */\n    function enterView(newView, tNode) {\n        ngDevMode && assertLViewOrUndefined(newView);\n        var newLFrame = allocLFrame();\n        instructionState.lFrame = newLFrame;\n        newLFrame.previousOrParentTNode = tNode;\n        newLFrame.isParent = true;\n        newLFrame.lView = newView;\n        newLFrame.selectedIndex = 0;\n        newLFrame.contextLView = newView;\n        newLFrame.elementDepthCount = 0;\n        newLFrame.currentNamespace = null;\n        newLFrame.currentSanitizer = null;\n        newLFrame.currentDirectiveDef = null;\n        newLFrame.activeDirectiveId = 0;\n        newLFrame.bindingRootIndex = -1;\n        newLFrame.bindingIndex = newView === null ? -1 : newView[TVIEW].bindingStartIndex;\n        newLFrame.currentQueryIndex = 0;\n    }\n    /**\n     * Allocates next free LFrame. This function tries to reuse the `LFrame`s to lower memory pressure.\n     */\n    function allocLFrame() {\n        var currentLFrame = instructionState.lFrame;\n        var childLFrame = currentLFrame === null ? null : currentLFrame.child;\n        var newLFrame = childLFrame === null ? createLFrame(currentLFrame) : childLFrame;\n        return newLFrame;\n    }\n    function createLFrame(parent) {\n        var lFrame = {\n            previousOrParentTNode: null,\n            isParent: true,\n            lView: null,\n            selectedIndex: 0,\n            contextLView: null,\n            elementDepthCount: 0,\n            currentNamespace: null,\n            currentSanitizer: null,\n            currentDirectiveDef: null,\n            activeDirectiveId: 0,\n            bindingRootIndex: -1,\n            bindingIndex: -1,\n            currentQueryIndex: 0,\n            parent: parent,\n            child: null,\n        };\n        parent !== null && (parent.child = lFrame); // link the new LFrame for reuse.\n        return lFrame;\n    }\n    function leaveViewProcessExit() {\n        if (hasActiveElementFlag(1 /* RunExitFn */)) {\n            executeElementExitFn();\n        }\n        leaveView();\n    }\n    function leaveView() {\n        instructionState.lFrame = instructionState.lFrame.parent;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        instructionState.lFrame.contextLView = walkUpViews(level, instructionState.lFrame.contextLView);\n        return instructionState.lFrame.contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Gets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function getSelectedIndex() {\n        return instructionState.lFrame.selectedIndex >> 1 /* Size */;\n    }\n    /**\n     * Sets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     *\n     * (Note that if an \"exit function\" was set earlier (via `setElementExitFn()`) then that will be\n     * run if and when the provided `index` value is different from the current selected index value.)\n     */\n    function setSelectedIndex(index) {\n        instructionState.lFrame.selectedIndex = index << 1 /* Size */;\n    }\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/2000/svg'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceSVG() {\n        instructionState.lFrame.currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/1998/MathML/'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceMathML() {\n        instructionState.lFrame.currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceHTML() {\n        namespaceHTMLInternal();\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     */\n    function namespaceHTMLInternal() {\n        instructionState.lFrame.currentNamespace = null;\n    }\n    function getNamespace() {\n        return instructionState.lFrame.currentNamespace;\n    }\n    function setCurrentStyleSanitizer(sanitizer) {\n        instructionState.lFrame.currentSanitizer = sanitizer;\n    }\n    function resetCurrentStyleSanitizer() {\n        setCurrentStyleSanitizer(null);\n    }\n    function getCurrentStyleSanitizer() {\n        // TODO(misko): This should throw when there is no LView, but it turns out we can get here from\n        // `NodeStyleDebug` hence we return `null`. This should be fixed\n        var lFrame = instructionState.lFrame;\n        return lFrame === null ? null : lFrame.currentSanitizer;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$3 = 1;\n\n    /**\n     * Assigns all attribute values to the provided element via the inferred renderer.\n     *\n     * This function accepts two forms of attribute entries:\n     *\n     * default: (key, value):\n     *  attrs = [key1, value1, key2, value2]\n     *\n     * namespaced: (NAMESPACE_MARKER, uri, name, value)\n     *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n     *\n     * The `attrs` array can contain a mix of both the default and namespaced entries.\n     * The \"default\" values are set without a marker, but if the function comes across\n     * a marker value then it will attempt to set a namespaced value. If the marker is\n     * not of a namespaced value then the function will quit and return the index value\n     * where it stopped during the iteration of the attrs array.\n     *\n     * See [AttributeMarker] to understand what the namespace marker value is.\n     *\n     * Note that this instruction does not support assigning style and class values to\n     * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n     * are applied to an element.\n     * @param renderer The renderer to be used\n     * @param native The element that the attributes will be assigned to\n     * @param attrs The attribute array of values that will be assigned to the element\n     * @returns the index value that was last accessed in the attributes array\n     */\n    function setUpAttributes(renderer, native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                // only namespaces are supported. Other value types (such as style/class\n                // entries) are not supported in this function.\n                if (value !== 0 /* NamespaceURI */) {\n                    break;\n                }\n                // we just landed on the marker value ... therefore\n                // we should skip to the next entry\n                i++;\n                var namespaceURI = attrs[i++];\n                var attrName = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n            }\n            else {\n                // attrName is string;\n                var attrName = value;\n                var attrVal = attrs[++i];\n                // Standard attributes\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (isAnimationProp(attrName)) {\n                    if (isProc) {\n                        renderer.setProperty(native, attrName, attrVal);\n                    }\n                }\n                else {\n                    isProc ?\n                        renderer.setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                }\n                i++;\n            }\n        }\n        // another piece of code may iterate over the same attributes array. Therefore\n        // it may be helpful to return the exact spot where the attributes array exited\n        // whether by running into an unsupported marker or if all the static values were\n        // iterated over.\n        return i;\n    }\n    /**\n     * Test whether the given value is a marker that indicates that the following\n     * attribute values in a `TAttributes` array are only the names of attributes,\n     * and not name-value pairs.\n     * @param marker The attribute marker to test.\n     * @returns true if the marker is a \"name-only\" marker (e.g. `Bindings`, `Template` or `I18n`).\n     */\n    function isNameOnlyAttributeMarker(marker) {\n        return marker === 3 /* Bindings */ || marker === 4 /* Template */ ||\n            marker === 6 /* I18n */;\n    }\n    function isAnimationProp(name) {\n        // Perf note: accessing charCodeAt to check for the first character of a string is faster as\n        // compared to accessing a character at index 0 (ex. name[0]). The main reason for this is that\n        // charCodeAt doesn't allocate memory to return a substring.\n        return name.charCodeAt(0) === 64; // @\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /// Parent Injector Utils ///////////////////////////////////////////////////////////////\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used for stringify render output in Ivy.\n     * Important! This function is very performance-sensitive and we should\n     * be extra careful not to introduce megamorphic reads in it.\n     */\n    function renderStringify(value) {\n        if (typeof value === 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Used to stringify a value so that it can be displayed in an error message.\n     * Important! This function contains a megamorphic read and should only be\n     * used for error messages.\n     */\n    function stringifyForError(value) {\n        if (typeof value === 'function')\n            return value.name || value.toString();\n        if (typeof value === 'object' && value != null && typeof value.type === 'function') {\n            return value.type.name || value.type.toString();\n        }\n        return renderStringify(value);\n    }\n    var defaultScheduler = (function () {\n        return (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n            setTimeout // everything else\n        ).bind(_global);\n    })();\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n    /**\n     * The special delimiter we use to separate property names, prefixes, and suffixes\n     * in property binding metadata. See storeBindingMetadata().\n     *\n     * We intentionally use the Unicode \"REPLACEMENT CHARACTER\" (U+FFFD) as a delimiter\n     * because it is a very uncommon character that is unlikely to be part of a user's\n     * property names or interpolation strings. If it is in fact used in a property\n     * binding, DebugElement.properties will not return the correct value for that\n     * binding. However, there should be no runtime effect for real applications.\n     *\n     * This character is typically rendered as a question mark inside of a diamond.\n     * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)\n     *\n     */\n    var INTERPOLATION_DELIMITER = \"\\uFFFD\";\n    /**\n     * Unwrap a value which might be behind a closure (for forward declaration reasons).\n     */\n    function maybeUnwrapFn(value) {\n        if (value instanceof Function) {\n            return value();\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    var MAP_BASED_ENTRY_PROP_NAME = '[MAP]';\n    var TEMPLATE_DIRECTIVE_INDEX = 0;\n    /**\n     * Default fallback value for a styling binding.\n     *\n     * A value of `null` is used here which signals to the styling algorithm that\n     * the styling value is not present. This way if there are no other values\n     * detected then it will be removed once the style/class property is dirty and\n     * diffed within the styling algorithm present in `flushStyling`.\n     */\n    var DEFAULT_BINDING_VALUE = null;\n    var DEFAULT_BINDING_INDEX = 0;\n    var DEFAULT_TOTAL_SOURCES = 1;\n    // The first bit value reflects a map-based binding value's bit.\n    // The reason why it's always activated for every entry in the map\n    // is so that if any map-binding values update then all other prop\n    // based bindings will pass the guard check automatically without\n    // any extra code or flags.\n    var DEFAULT_GUARD_MASK_VALUE = 1;\n    /**\n     * Creates a new instance of the `TStylingContext`.\n     *\n     * The `TStylingContext` is used as a manifest of all style or all class bindings on\n     * an element. Because it is a T-level data-structure, it is only created once per\n     * tNode for styles and for classes. This function allocates a new instance of a\n     * `TStylingContext` with the initial values (see `interfaces.ts` for more info).\n     */\n    function allocTStylingContext(initialStyling, hasDirectives) {\n        initialStyling = initialStyling || allocStylingMapArray(null);\n        return [\n            DEFAULT_TOTAL_SOURCES,\n            initialStyling,\n        ];\n    }\n    function allocStylingMapArray(value) {\n        return [value];\n    }\n    function hasConfig(tNode, flag) {\n        return (tNode.flags & flag) !== 0;\n    }\n    /**\n     * Determines whether or not to apply styles/classes directly or via context resolution.\n     *\n     * There are three cases that are matched here:\n     * 1. there are no directives present AND `ngDevMode` is falsy\n     * 2. the `firstUpdatePass` has not already run (which means that\n     *    there are more bindings to register and, therefore, direct\n     *    style/class application is not yet possible)\n     * 3. There are no collisions (i.e. properties with more than one binding) across multiple\n     *    sources (i.e. template + directive, directive + directive, directive + component)\n     */\n    function allowDirectStyling(tNode, isClassBased, firstUpdatePass) {\n        var allow = false;\n        // if no directives are present then we do not need populate a context at all. This\n        // is because duplicate prop bindings cannot be registered through the template. If\n        // and when this happens we can safely apply the value directly without context\n        // resolution...\n        var hasDirectives = hasConfig(tNode, 128 /* hasHostBindings */);\n        if (!hasDirectives) {\n            // `ngDevMode` is required to be checked here because tests/debugging rely on the context being\n            // populated. If things are in production mode then there is no need to build a context\n            // therefore the direct apply can be allowed (even on the first update).\n            allow = ngDevMode ? !firstUpdatePass : true;\n        }\n        else if (!firstUpdatePass) {\n            var duplicateStylingFlag = isClassBased ? 8192 /* hasDuplicateClassBindings */ : 262144 /* hasDuplicateStyleBindings */;\n            var hasDuplicates = hasConfig(tNode, duplicateStylingFlag);\n            var hasOnlyMapOrPropsFlag = isClassBased ? 1536 /* hasClassPropAndMapBindings */ :\n                49152 /* hasStylePropAndMapBindings */;\n            var hasOnlyMapsOrOnlyProps = (tNode.flags & hasOnlyMapOrPropsFlag) !== hasOnlyMapOrPropsFlag;\n            allow = !hasDuplicates && hasOnlyMapsOrOnlyProps;\n        }\n        return allow;\n    }\n    function patchConfig(tNode, flag) {\n        tNode.flags |= flag;\n    }\n    function getProp(context, index) {\n        return context[index + 3 /* PropOffset */];\n    }\n    function getPropConfig(context, index) {\n        return context[index + 0 /* ConfigOffset */] &\n            1 /* Mask */;\n    }\n    function isSanitizationRequired(context, index) {\n        return (getPropConfig(context, index) & 1 /* SanitizationRequired */) !==\n            0;\n    }\n    function getGuardMask(context, index, isHostBinding) {\n        var position = index + (isHostBinding ? 2 /* HostBindingsBitGuardOffset */ :\n            1 /* TemplateBitGuardOffset */);\n        return context[position];\n    }\n    function setGuardMask(context, index, maskValue, isHostBinding) {\n        var position = index + (isHostBinding ? 2 /* HostBindingsBitGuardOffset */ :\n            1 /* TemplateBitGuardOffset */);\n        context[position] = maskValue;\n    }\n    function getValuesCount(context) {\n        return getTotalSources(context) + 1;\n    }\n    function getTotalSources(context) {\n        return context[0 /* TotalSourcesPosition */];\n    }\n    function getBindingValue(context, index, offset) {\n        return context[index + 4 /* BindingsStartOffset */ + offset];\n    }\n    function getDefaultValue(context, index) {\n        return context[index + 4 /* BindingsStartOffset */ + getTotalSources(context)];\n    }\n    function setDefaultValue(context, index, value) {\n        return context[index + 4 /* BindingsStartOffset */ + getTotalSources(context)] =\n            value;\n    }\n    function setValue(data, bindingIndex, value) {\n        data[bindingIndex] = value;\n    }\n    function getValue(data, bindingIndex) {\n        return bindingIndex !== 0 ? data[bindingIndex] : null;\n    }\n    function getPropValuesStartPosition(context, tNode, isClassBased) {\n        var startPosition = 2 /* ValuesStartPosition */;\n        var flag = isClassBased ? 512 /* hasClassMapBindings */ : 16384 /* hasStyleMapBindings */;\n        if (hasConfig(tNode, flag)) {\n            startPosition += 4 /* BindingsStartOffset */ + getValuesCount(context);\n        }\n        return startPosition;\n    }\n    function hasValueChanged(a, b) {\n        if (b === NO_CHANGE)\n            return false;\n        var compareValueA = Array.isArray(a) ? a[0 /* RawValuePosition */] : a;\n        var compareValueB = Array.isArray(b) ? b[0 /* RawValuePosition */] : b;\n        return !Object.is(compareValueA, compareValueB);\n    }\n    /**\n     * Determines whether the provided styling value is truthy or falsy.\n     */\n    function isStylingValueDefined(value) {\n        // the reason why null is compared against is because\n        // a CSS class value that is set to `false` must be\n        // respected (otherwise it would be treated as falsy).\n        // Empty string values are because developers usually\n        // set a value to an empty string to remove it.\n        return value != null && value !== '';\n    }\n    function concatString(a, b, separator) {\n        if (separator === void 0) { separator = ' '; }\n        return a + ((b.length && a.length) ? separator : '') + b;\n    }\n    function hyphenate(value) {\n        return value.replace(/[a-z][A-Z]/g, function (v) { return v.charAt(0) + '-' + v.charAt(1); }).toLowerCase();\n    }\n    /**\n     * Returns an instance of `StylingMapArray`.\n     *\n     * This function is designed to find an instance of `StylingMapArray` in case it is stored\n     * inside of an instance of `TStylingContext`. When a styling context is created it\n     * will copy over an initial styling values from the tNode (which are stored as a\n     * `StylingMapArray` on the `tNode.classes` or `tNode.styles` values).\n     */\n    function getStylingMapArray(value) {\n        return isStylingContext(value) ?\n            value[1 /* InitialStylingValuePosition */] :\n            value;\n    }\n    function isStylingContext(value) {\n        // the StylingMapArray is in the format of [initial, prop, string, prop, string]\n        // and this is the defining value to distinguish between arrays\n        return Array.isArray(value) && value.length >= 2 /* ValuesStartPosition */ &&\n            typeof value[1] !== 'string';\n    }\n    function isStylingMapArray(value) {\n        // the StylingMapArray is in the format of [initial, prop, string, prop, string]\n        // and this is the defining value to distinguish between arrays\n        return Array.isArray(value) &&\n            (typeof value[1 /* ValuesStartPosition */] === 'string');\n    }\n    function getInitialStylingValue(context) {\n        var map = getStylingMapArray(context);\n        return map && map[0 /* RawValuePosition */] || '';\n    }\n    function hasClassInput(tNode) {\n        return (tNode.flags & 16 /* hasClassInput */) !== 0;\n    }\n    function hasStyleInput(tNode) {\n        return (tNode.flags & 32 /* hasStyleInput */) !== 0;\n    }\n    function getMapProp(map, index) {\n        return map[index + 0 /* PropOffset */];\n    }\n    var MAP_DIRTY_VALUE = typeof ngDevMode !== 'undefined' && ngDevMode ? {} : { MAP_DIRTY_VALUE: true };\n    function setMapAsDirty(map) {\n        map[0 /* RawValuePosition */] = MAP_DIRTY_VALUE;\n    }\n    function setMapValue(map, index, value) {\n        map[index + 1 /* ValueOffset */] = value;\n    }\n    function getMapValue(map, index) {\n        return map[index + 1 /* ValueOffset */];\n    }\n    function forceClassesAsString(classes) {\n        if (classes && typeof classes !== 'string') {\n            classes = Object.keys(classes).join(' ');\n        }\n        return classes || '';\n    }\n    function forceStylesAsString(styles, hyphenateProps) {\n        if (typeof styles == 'string')\n            return styles;\n        var str = '';\n        if (styles) {\n            var props = Object.keys(styles);\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                var propLabel = hyphenateProps ? hyphenate(prop) : prop;\n                var value = styles[prop];\n                if (value !== null) {\n                    str = concatString(str, propLabel + \":\" + value, ';');\n                }\n            }\n        }\n        return str;\n    }\n    function isHostStylingActive(directiveOrSourceId) {\n        return directiveOrSourceId !== TEMPLATE_DIRECTIVE_INDEX;\n    }\n    /**\n     * Converts the provided styling map array into a string.\n     *\n     * Classes => `one two three`\n     * Styles => `prop:value; prop2:value2`\n     */\n    function stylingMapToString(map, isClassBased) {\n        var str = '';\n        for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n            var prop = getMapProp(map, i);\n            var value = getMapValue(map, i);\n            var attrValue = concatString(prop, isClassBased ? '' : value, ':');\n            str = concatString(str, attrValue, isClassBased ? ' ' : '; ');\n        }\n        return str;\n    }\n    /**\n     * Converts the provided styling map array into a key value map.\n     */\n    function stylingMapToStringMap(map) {\n        var stringMap = {};\n        if (map) {\n            for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(map, i);\n                var value = getMapValue(map, i);\n                stringMap[prop] = value;\n            }\n        }\n        return stringMap;\n    }\n    /**\n     * Inserts the provided item into the provided styling array at the right spot.\n     *\n     * The `StylingMapArray` type is a sorted key/value array of entries. This means\n     * that when a new entry is inserted it must be placed at the right spot in the\n     * array. This function figures out exactly where to place it.\n     */\n    function addItemToStylingMap(stylingMapArr, prop, value, allowOverwrite) {\n        for (var j = 1 /* ValuesStartPosition */; j < stylingMapArr.length; j += 2 /* TupleSize */) {\n            var propAtIndex = getMapProp(stylingMapArr, j);\n            if (prop <= propAtIndex) {\n                var applied = false;\n                if (propAtIndex === prop) {\n                    var valueAtIndex = stylingMapArr[j];\n                    if (allowOverwrite || !isStylingValueDefined(valueAtIndex)) {\n                        applied = true;\n                        setMapValue(stylingMapArr, j, value);\n                    }\n                }\n                else {\n                    applied = true;\n                    stylingMapArr.splice(j, 0, prop, value);\n                }\n                return applied;\n            }\n        }\n        stylingMapArr.push(prop, value);\n        return true;\n    }\n    /**\n     * Used to convert a {key:value} map into a `StylingMapArray` array.\n     *\n     * This function will either generate a new `StylingMapArray` instance\n     * or it will patch the provided `newValues` map value into an\n     * existing `StylingMapArray` value (this only happens if `bindingValue`\n     * is an instance of `StylingMapArray`).\n     *\n     * If a new key/value map is provided with an old `StylingMapArray`\n     * value then all properties will be overwritten with their new\n     * values or with `null`. This means that the array will never\n     * shrink in size (but it will also not be created and thrown\n     * away whenever the `{key:value}` map entries change).\n     */\n    function normalizeIntoStylingMap(bindingValue, newValues, normalizeProps) {\n        var stylingMapArr = Array.isArray(bindingValue) ? bindingValue : allocStylingMapArray(null);\n        stylingMapArr[0 /* RawValuePosition */] = newValues;\n        // because the new values may not include all the properties\n        // that the old ones had, all values are set to `null` before\n        // the new values are applied. This way, when flushed, the\n        // styling algorithm knows exactly what style/class values\n        // to remove from the element (since they are `null`).\n        for (var j = 1 /* ValuesStartPosition */; j < stylingMapArr.length; j += 2 /* TupleSize */) {\n            setMapValue(stylingMapArr, j, null);\n        }\n        var props = null;\n        var map;\n        var allValuesTrue = false;\n        if (typeof newValues === 'string') { // [class] bindings allow string values\n            props = splitOnWhitespace(newValues);\n            allValuesTrue = props !== null;\n        }\n        else {\n            props = newValues ? Object.keys(newValues) : null;\n            map = newValues;\n        }\n        if (props) {\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                var newProp = normalizeProps ? hyphenate(prop) : prop;\n                var value = allValuesTrue ? true : map[prop];\n                addItemToStylingMap(stylingMapArr, newProp, value, true);\n            }\n        }\n        return stylingMapArr;\n    }\n    function splitOnWhitespace(text) {\n        var array = null;\n        var length = text.length;\n        var start = 0;\n        var foundChar = false;\n        for (var i = 0; i < length; i++) {\n            var char = text.charCodeAt(i);\n            if (char <= 32 /*' '*/) {\n                if (foundChar) {\n                    if (array === null)\n                        array = [];\n                    array.push(text.substring(start, i));\n                    foundChar = false;\n                }\n                start = i + 1;\n            }\n            else {\n                foundChar = true;\n            }\n        }\n        if (foundChar) {\n            if (array === null)\n                array = [];\n            array.push(text.substring(start, length));\n            foundChar = false;\n        }\n        return array;\n    }\n    // TODO (matsko|AndrewKushnir): refactor this once we figure out how to generate separate\n    // `input('class') + classMap()` instructions.\n    function selectClassBasedInputName(inputs) {\n        return inputs.hasOwnProperty('class') ? 'class' : 'className';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * For efficiency reasons we often put several different data types (`RNode`, `LView`, `LContainer`)\n     * in same location in `LView`. This is because we don't want to pre-allocate space for it\n     * because the storage is sparse. This file contains utilities for dealing with such data types.\n     *\n     * How do we know what is stored at a given location in `LView`.\n     * - `Array.isArray(value) === false` => `RNode` (The normal storage value)\n     * - `Array.isArray(value) === true` => then the `value[0]` represents the wrapped value.\n     *   - `typeof value[TYPE] === 'object'` => `LView`\n     *      - This happens when we have a component at a given location\n     *   - `typeof value[TYPE] === true` => `LContainer`\n     *      - This happens when we have `LContainer` binding at a given location.\n     *\n     *\n     * NOTE: it is assumed that `Array.isArray` and `typeof` operations are very efficient.\n     */\n    /**\n     * Returns `RNode`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapRNode(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Returns `LView` or `null` if not found.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapLView(value) {\n        while (Array.isArray(value)) {\n            // This check is same as `isLView()` but we don't call at as we don't want to call\n            // `Array.isArray()` twice and give JITer more work for inlining.\n            if (typeof value[TYPE] === 'object')\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    /**\n     * Returns `LContainer` or `null` if not found.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapLContainer(value) {\n        while (Array.isArray(value)) {\n            // This check is same as `isLContainer()` but we don't call at as we don't want to call\n            // `Array.isArray()` twice and give JITer more work for inlining.\n            if (value[TYPE] === true)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return unwrapRNode(lView[index + HEADER_OFFSET]);\n    }\n    /**\n     * Retrieve an `RNode` for a given `TNode` and `LView`.\n     *\n     * This function guarantees in dev mode to retrieve a non-null `RNode`.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNode(tNode, lView) {\n        ngDevMode && assertTNodeForLView(tNode, lView);\n        ngDevMode && assertDataInRange(lView, tNode.index);\n        var node = unwrapRNode(lView[tNode.index]);\n        ngDevMode && !isProceduralRenderer(lView[RENDERER]) && assertDomNode(node);\n        return node;\n    }\n    /**\n     * Retrieve an `RNode` or `null` for a given `TNode` and `LView`.\n     *\n     * Some `TNode`s don't have associated `RNode`s. For example `Projection`\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNodeOrNull(tNode, lView) {\n        var index = tNode.index;\n        if (index !== -1) {\n            ngDevMode && assertTNodeForLView(tNode, lView);\n            var node = unwrapRNode(lView[index]);\n            ngDevMode && node !== null && !isProceduralRenderer(lView[RENDERER]) && assertDomNode(node);\n            return node;\n        }\n        return null;\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function load(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    function getComponentLViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        ngDevMode && assertDataInRange(hostView, nodeIndex);\n        var slotValue = hostView[nodeIndex];\n        var lView = isLView(slotValue) ? slotValue : slotValue[HOST];\n        return lView;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME] || null;\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        return (view[FLAGS] & 4 /* CreationMode */) === 4 /* CreationMode */;\n    }\n    /**\n     * Returns a boolean for whether the view is attached to the change detection tree.\n     *\n     * Note: This determines whether a view should be checked, not whether it's inserted\n     * into a container. For that, you'll want `viewAttachedToContainer` below.\n     */\n    function viewAttachedToChangeDetector(view) {\n        return (view[FLAGS] & 128 /* Attached */) === 128 /* Attached */;\n    }\n    /** Returns a boolean for whether the view is attached to a container. */\n    function viewAttachedToContainer(view) {\n        return isLContainer(view[PARENT]);\n    }\n    /** Returns a constant from `TConstants` instance. */\n    function getConstant(consts, index) {\n        return consts === null || index == null ? null : consts[index];\n    }\n    /**\n     * Resets the pre-order hook flags of the view.\n     * @param lView the LView on which the flags are reset\n     */\n    function resetPreOrderHookFlags(lView) {\n        lView[PREORDER_HOOK_FLAGS] = 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Gets the parent LView of the passed LView, if the PARENT is an LContainer, will get the parent of\n     * that LContainer, which is an LView\n     * @param lView the lView whose parent to get\n     */\n    function getLViewParent(lView) {\n        ngDevMode && assertLView(lView);\n        var parent = lView[PARENT];\n        return isLContainer(parent) ? parent[PARENT] : parent;\n    }\n    /**\n     * Retrieve the root view from any component or `LView` by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrLView any component or `LView`\n     */\n    function getRootView(componentOrLView) {\n        ngDevMode && assertDefined(componentOrLView, 'component');\n        var lView = isLView(componentOrLView) ? componentOrLView : readPatchedLView(componentOrLView);\n        while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n            lView = getLViewParent(lView);\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Given an `LView`, find the closest declaration view which is not an embedded view.\n     *\n     * This method searches for the `LView` associated with the component which declared the `LView`.\n     *\n     * This function may return itself if the `LView` passed in is not an embedded `LView`. Otherwise\n     * it walks the declaration parents until it finds a component view (non-embedded-view.)\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[T_HOST];\n        while (rootTNode !== null && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n            lView = lView[DECLARATION_VIEW];\n            rootTNode = lView[T_HOST];\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated. It does this by walking the parent views until it\n     * gets to the root view, then getting the context off of that.\n     *\n     * @param viewOrComponent the `LView` or component to get the root context for.\n     */\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstCreatePass, true, 'expected firstCreatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstCreatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentIndex = getParentInjectorIndex(parentLoc);\n            var parentLView = getParentInjectorView(parentLoc, hostView);\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[T_HOST];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[T_HOST] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, tView, token) {\n        bloomAdd(injectorIndex, tView, token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ɵcmp = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        if (attrNameToInject === 'class') {\n            return getInitialStylingValue(tNode.classes);\n        }\n        if (attrNameToInject === 'style') {\n            return getInitialStylingValue(tNode.styles);\n        }\n        var attrs = tNode.attrs;\n        if (attrs) {\n            var attrsLength = attrs.length;\n            var i = 0;\n            while (i < attrsLength) {\n                var value = attrs[i];\n                // If we hit a `Bindings` or `Template` marker then we are done.\n                if (isNameOnlyAttributeMarker(value))\n                    break;\n                // Skip namespaced attributes\n                if (value === 0 /* NamespaceURI */) {\n                    // we skip the next two values\n                    // as namespaced attributes looks like\n                    // [..., AttributeMarker.NamespaceURI, 'http://someuri.com/test', 'test:exist',\n                    // 'existValue', ...]\n                    i = i + 2;\n                }\n                else if (typeof value === 'number') {\n                    // Skip to the first value of the marked attribute.\n                    i++;\n                    while (i < attrsLength && typeof attrs[i] === 'string') {\n                        i++;\n                    }\n                }\n                else if (value === attrNameToInject) {\n                    return attrs[i + 1];\n                }\n                else {\n                    i = i + 2;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n     * filter. Negative values are reserved for special objects.\n     *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                enterDI(lView, tNode);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + stringifyForError(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    leaveDI();\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                if (bloomHash === -1) {\n                    // `-1` is a special value used to identify `Injector` types.\n                    return new NodeInjector(tNode, lView);\n                }\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? findComponentView(lView)[T_HOST] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR$1];\n            // switch to `injectInjectorOnly` implementation for module injector, since module injector\n            // should not have access to Component/Directive DI scope (that may happen through\n            // `directiveInject` implementation)\n            var previousInjectImplementation = setInjectImplementation(undefined);\n            try {\n                if (moduleInjector) {\n                    return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n                else {\n                    return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n            }\n            finally {\n                setInjectImplementation(previousInjectImplementation);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringifyForError(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponentHost(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, currentTView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param tView The tView we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, tView, token, canAccessViewProviders, isHostSpecialCase) {\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lView, index, tNode) {\n        var value = lView[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringifyForError(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            enterDI(lView, tNode);\n            try {\n                value = lView[index] = factory.factory(undefined, tData, lView, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                leaveDI();\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     *   When the returned value is negative then it represents special values such as `Injector`.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        // Negative token IDs are used for special objects such as `Injector`\n        return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetFactoryOf(type) {\n        var typeAny = type;\n        if (isForwardRef(type)) {\n            return (function () {\n                var factory = ɵɵgetFactoryOf(resolveForwardRef(typeAny));\n                return factory ? factory() : null;\n            });\n        }\n        var factory = getFactoryDef(typeAny);\n        if (factory === null) {\n            var injectorDef = getInjectorDef(typeAny);\n            factory = injectorDef && injectorDef.factory;\n        }\n        return factory || null;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = proto[NG_FACTORY_DEF] || ɵɵgetFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_TYPE = 'ngType';\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getType(error) {\n        return error[ERROR_TYPE];\n    }\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SafeValueImpl = /** @class */ (function () {\n        function SafeValueImpl(changingThisBreaksApplicationSecurity) {\n            this.changingThisBreaksApplicationSecurity = changingThisBreaksApplicationSecurity;\n        }\n        SafeValueImpl.prototype.toString = function () {\n            return \"SafeValue must use [property]=binding: \" + this.changingThisBreaksApplicationSecurity +\n                \" (see http://g.co/ng/security#xss)\";\n        };\n        return SafeValueImpl;\n    }());\n    var SafeHtmlImpl = /** @class */ (function (_super) {\n        __extends(SafeHtmlImpl, _super);\n        function SafeHtmlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeHtmlImpl.prototype.getTypeName = function () { return \"HTML\" /* Html */; };\n        return SafeHtmlImpl;\n    }(SafeValueImpl));\n    var SafeStyleImpl = /** @class */ (function (_super) {\n        __extends(SafeStyleImpl, _super);\n        function SafeStyleImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeStyleImpl.prototype.getTypeName = function () { return \"Style\" /* Style */; };\n        return SafeStyleImpl;\n    }(SafeValueImpl));\n    var SafeScriptImpl = /** @class */ (function (_super) {\n        __extends(SafeScriptImpl, _super);\n        function SafeScriptImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeScriptImpl.prototype.getTypeName = function () { return \"Script\" /* Script */; };\n        return SafeScriptImpl;\n    }(SafeValueImpl));\n    var SafeUrlImpl = /** @class */ (function (_super) {\n        __extends(SafeUrlImpl, _super);\n        function SafeUrlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeUrlImpl.prototype.getTypeName = function () { return \"URL\" /* Url */; };\n        return SafeUrlImpl;\n    }(SafeValueImpl));\n    var SafeResourceUrlImpl = /** @class */ (function (_super) {\n        __extends(SafeResourceUrlImpl, _super);\n        function SafeResourceUrlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeResourceUrlImpl.prototype.getTypeName = function () { return \"ResourceURL\" /* ResourceUrl */; };\n        return SafeResourceUrlImpl;\n    }(SafeValueImpl));\n    function unwrapSafeValue(value) {\n        return value instanceof SafeValueImpl ? value.changingThisBreaksApplicationSecurity :\n            value;\n    }\n    function allowSanitizationBypassAndThrow(value, type) {\n        var actualType = getSanitizationBypassType(value);\n        if (actualType != null && actualType !== type) {\n            // Allow ResourceURLs in URL contexts, they are strictly more trusted.\n            if (actualType === \"ResourceURL\" /* ResourceUrl */ && type === \"URL\" /* Url */)\n                return true;\n            throw new Error(\"Required a safe \" + type + \", got a \" + actualType + \" (see http://g.co/ng/security#xss)\");\n        }\n        return actualType === type;\n    }\n    function getSanitizationBypassType(value) {\n        return value instanceof SafeValueImpl && value.getTypeName() || null;\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return new SafeHtmlImpl(trustedHtml);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` hich has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return new SafeStyleImpl(trustedStyle);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return new SafeScriptImpl(trustedScript);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url`  which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return new SafeUrlImpl(trustedUrl);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return new SafeResourceUrlImpl(trustedResourceUrl);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either an allowed protocol (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /* A pattern that matches safe srcset values */\n    var SAFE_SRCSET_PATTERN = /^(?:(?:https?|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var e_2, _a;\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // Accessibility attributes as per WAI-ARIA 1.1 (W3C Working Draft 14 December 2018)\n    var ARIA_ATTRS = tagSet('aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,' +\n        'aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,' +\n        'aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,' +\n        'aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,' +\n        'aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,' +\n        'aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,' +\n        'aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS, ARIA_ATTRS);\n    // Elements whose content should not be traversed/preserved, if the elements themselves are invalid.\n    //\n    // Typically, `<invalid>Some content</invalid>` would traverse (and in this case preserve)\n    // `Some content`, but strip `invalid-element` opening/closing tags. For some elements, though, we\n    // don't want to preserve the content, if the elements themselves are going to be removed.\n    var SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS = tagSet('script,style,template');\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var traverseContent = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    traverseContent = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (traverseContent && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Sanitizes an opening element tag (if valid) and returns whether the element's contents should\n         * be traversed. Element content must always be traversed (even if the element itself is not\n         * valid/safe), unless the element is one of `SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS`.\n         *\n         * @param element The element to sanitize.\n         * @return True if the element's contents should be traversed.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return !SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS.hasOwnProperty(tagName);\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|Z|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeHtml, \"HTML\" /* Html */)) {\n            return unwrapSafeValue(unsafeHtml);\n        }\n        return _sanitizeHtml(document, renderStringify(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeStyle, \"Style\" /* Style */)) {\n            return unwrapSafeValue(unsafeStyle);\n        }\n        return _sanitizeStyle(renderStringify(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeUrl, \"URL\" /* Url */)) {\n            return unwrapSafeValue(unsafeUrl);\n        }\n        return _sanitizeUrl(renderStringify(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeResourceUrl, \"ResourceURL\" /* ResourceUrl */)) {\n            return unwrapSafeValue(unsafeResourceUrl);\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeScript, \"Script\" /* Script */)) {\n            return unwrapSafeValue(unsafeScript);\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return ɵɵsanitizeResourceUrl;\n        }\n        return ɵɵsanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     *\n     * @publicApi\n     */\n    var ɵɵdefaultStyleSanitizer = function (prop, value, mode) {\n        mode = mode || 3 /* ValidateAndSanitize */;\n        var doSanitizeValue = true;\n        if (mode & 1 /* ValidateProperty */) {\n            doSanitizeValue = prop === 'background-image' || prop === 'background' ||\n                prop === 'border-image' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image' || prop === 'clip-path';\n        }\n        if (mode & 2 /* SanitizeOnly */) {\n            return doSanitizeValue ? ɵɵsanitizeStyle(value) : value;\n        }\n        else {\n            return doSanitizeValue;\n        }\n    };\n    function validateAgainstEventProperties(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            throw new Error(msg);\n        }\n    }\n    function validateAgainstEventAttributes(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            throw new Error(msg);\n        }\n    }\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * THIS FILE CONTAINS CODE WHICH SHOULD BE TREE SHAKEN AND NEVER CALLED FROM PRODUCTION CODE!!!\n     */\n    /**\n     * Creates an `Array` construction with a given name. This is useful when\n     * looking for memory consumption to see what time of array it is.\n     *\n     *\n     * @param name Name to give to the constructor\n     * @returns A subclass of `Array` if possible. This can only be done in\n     *          environments which support `class` construct.\n     */\n    function createNamedArrayType(name) {\n        // This should never be called in prod mode, so let's verify that is the case.\n        if (ngDevMode) {\n            try {\n                // We need to do it this way so that TypeScript does not down-level the below code.\n                var FunctionConstructor = createNamedArrayType.constructor;\n                return (new FunctionConstructor('Array', \"return class \" + name + \" extends Array{}\"))(Array);\n            }\n            catch (e) {\n                // If it does not work just give up and fall back to regular Array.\n                return Array;\n            }\n        }\n        else {\n            throw new Error('Looks like we are in \\'prod mode\\', but we are creating a named Array type, which is wrong! Check your code');\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = unwrapRNode(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = unwrapRNode(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentLViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentLViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ɵcmp;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ɵdir;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNodeOrNull(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentLViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentLViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 2 /* isComponentHost */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 2 /* isComponentHost */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                result[tNode.localNames[i]] = lView[localIndex];\n                localIndex++;\n            }\n            return result;\n        }\n        return null;\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n    function throwMixedMultiProviderError() {\n        throw new Error(\"Cannot mix multi providers and regular providers\");\n    }\n    function throwInvalidProviderError(ngModuleType, providers, provider) {\n        var ngModuleDetail = '';\n        if (ngModuleType && providers) {\n            var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n            ngModuleDetail =\n                \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n        }\n        throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n     *\n     * Must be run *only* on the first template pass.\n     *\n     * Sets up the pre-order hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * @param directiveIndex The index of the directive in LView\n     * @param directiveDef The definition containing the hooks to setup in tView\n     * @param tView The current TView\n     * @param nodeIndex The index of the node to which the directive is attached\n     * @param initialPreOrderHooksLength the number of pre-order hooks already registered before the\n     * current process, used to know if the node index has to be added to the array. If it is -1,\n     * the node index is never added.\n     * @param initialPreOrderCheckHooksLength same as previous for pre-order check hooks\n     */\n    function registerPreOrderHooks(directiveIndex, directiveDef, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength) {\n        ngDevMode && assertFirstCreatePass(tView);\n        var onChanges = directiveDef.onChanges, onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n        if (initialPreOrderHooksLength >= 0 &&\n            (!tView.preOrderHooks || initialPreOrderHooksLength === tView.preOrderHooks.length) &&\n            (onChanges || onInit || doCheck)) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(nodeIndex);\n        }\n        if (initialPreOrderCheckHooksLength >= 0 &&\n            (!tView.preOrderCheckHooks ||\n                initialPreOrderCheckHooksLength === tView.preOrderCheckHooks.length) &&\n            (onChanges || doCheck)) {\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(nodeIndex);\n        }\n        if (onChanges) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, onChanges);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, onChanges);\n        }\n        if (onInit) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(-directiveIndex, onInit);\n        }\n        if (doCheck) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, doCheck);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, doCheck);\n        }\n    }\n    /**\n     *\n     * Loops through the directives on the provided `tNode` and queues hooks to be\n     * run that are not initialization hooks.\n     *\n     * Should be executed during `elementEnd()` and similar to\n     * preserve hook execution order. Content, view, and destroy hooks for projected\n     * components and directives must be called *before* their hosts.\n     *\n     * Sets up the content, view, and destroy hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n     * separately at `elementStart`.\n     *\n     * @param tView The current TView\n     * @param tNode The TNode whose directives are to be searched for hooks to queue\n     */\n    function registerPostOrderHooks(tView, tNode) {\n        ngDevMode && assertFirstCreatePass(tView);\n        // It's necessary to loop through the directives at elementEnd() (rather than processing in\n        // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n        // hooks for projected components and directives must be called *before* their hosts.\n        for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n            var directiveDef = tView.data[i];\n            if (directiveDef.afterContentInit) {\n                (tView.contentHooks || (tView.contentHooks = [])).push(-i, directiveDef.afterContentInit);\n            }\n            if (directiveDef.afterContentChecked) {\n                (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, directiveDef.afterContentChecked);\n            }\n            if (directiveDef.afterViewInit) {\n                (tView.viewHooks || (tView.viewHooks = [])).push(-i, directiveDef.afterViewInit);\n            }\n            if (directiveDef.afterViewChecked) {\n                (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n            }\n            if (directiveDef.onDestroy != null) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n            }\n        }\n    }\n    /**\n     * Executing hooks requires complex logic as we need to deal with 2 constraints.\n     *\n     * 1. Init hooks (ngOnInit, ngAfterContentInit, ngAfterViewInit) must all be executed once and only\n     * once, across many change detection cycles. This must be true even if some hooks throw, or if\n     * some recursively trigger a change detection cycle.\n     * To solve that, it is required to track the state of the execution of these init hooks.\n     * This is done by storing and maintaining flags in the view: the {@link InitPhaseState},\n     * and the index within that phase. They can be seen as a cursor in the following structure:\n     * [[onInit1, onInit2], [afterContentInit1], [afterViewInit1, afterViewInit2, afterViewInit3]]\n     * They are are stored as flags in LView[FLAGS].\n     *\n     * 2. Pre-order hooks can be executed in batches, because of the select instruction.\n     * To be able to pause and resume their execution, we also need some state about the hook's array\n     * that is being processed:\n     * - the index of the next hook to be executed\n     * - the number of init hooks already found in the processed part of the  array\n     * They are are stored as flags in LView[PREORDER_HOOK_FLAGS].\n     */\n    /**\n     * Executes pre-order check hooks ( OnChanges, DoChanges) given a view where all the init hooks were\n     * executed once. This is a light version of executeInitAndCheckPreOrderHooks where we can skip read\n     * / write of the init-hooks related flags.\n     * @param lView The LView where hooks are defined\n     * @param hooks Hooks to be run\n     * @param nodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeCheckHooks(lView, hooks, nodeIndex) {\n        callHooks(lView, hooks, 3 /* InitPhaseCompleted */, nodeIndex);\n    }\n    /**\n     * Executes post-order init and check hooks (one of AfterContentInit, AfterContentChecked,\n     * AfterViewInit, AfterViewChecked) given a view where there are pending init hooks to be executed.\n     * @param lView The LView where hooks are defined\n     * @param hooks Hooks to be run\n     * @param initPhase A phase for which hooks should be run\n     * @param nodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeInitAndCheckHooks(lView, hooks, initPhase, nodeIndex) {\n        ngDevMode && assertNotEqual(initPhase, 3 /* InitPhaseCompleted */, 'Init pre-order hooks should not be called more than once');\n        if ((lView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n            callHooks(lView, hooks, initPhase, nodeIndex);\n        }\n    }\n    function incrementInitPhaseFlags(lView, initPhase) {\n        ngDevMode &&\n            assertNotEqual(initPhase, 3 /* InitPhaseCompleted */, 'Init hooks phase should not be incremented after all init hooks have been run.');\n        var flags = lView[FLAGS];\n        if ((flags & 3 /* InitPhaseStateMask */) === initPhase) {\n            flags &= 1023 /* IndexWithinInitPhaseReset */;\n            flags += 1 /* InitPhaseStateIncrementer */;\n            lView[FLAGS] = flags;\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function callHooks(currentView, arr, initPhase, currentNodeIndex) {\n        ngDevMode && assertEqual(getCheckNoChangesMode(), false, 'Hooks should never be run in the check no changes mode.');\n        var startIndex = currentNodeIndex !== undefined ?\n            (currentView[PREORDER_HOOK_FLAGS] & 65535 /* IndexOfTheNextPreOrderHookMaskMask */) :\n            0;\n        var nodeIndexLimit = currentNodeIndex != null ? currentNodeIndex : -1;\n        var lastNodeIndexFound = 0;\n        for (var i = startIndex; i < arr.length; i++) {\n            var hook = arr[i + 1];\n            if (typeof hook === 'number') {\n                lastNodeIndexFound = arr[i];\n                if (currentNodeIndex != null && lastNodeIndexFound >= currentNodeIndex) {\n                    break;\n                }\n            }\n            else {\n                var isInitHook = arr[i] < 0;\n                if (isInitHook)\n                    currentView[PREORDER_HOOK_FLAGS] += 65536 /* NumberOfInitHooksCalledIncrementer */;\n                if (lastNodeIndexFound < nodeIndexLimit || nodeIndexLimit == -1) {\n                    callHook(currentView, initPhase, arr, i);\n                    currentView[PREORDER_HOOK_FLAGS] =\n                        (currentView[PREORDER_HOOK_FLAGS] & 4294901760 /* NumberOfInitHooksCalledMask */) + i +\n                            2;\n                }\n                i++;\n            }\n        }\n    }\n    /**\n     * Execute one hook against the current `LView`.\n     *\n     * @param currentView The current view\n     * @param initPhaseState the current state of the init phase\n     * @param arr The array in which the hooks are found\n     * @param i The current index within the hook data array\n     */\n    function callHook(currentView, initPhase, arr, i) {\n        var isInitHook = arr[i] < 0;\n        var hook = arr[i + 1];\n        var directiveIndex = isInitHook ? -arr[i] : arr[i];\n        var directive = currentView[directiveIndex];\n        if (isInitHook) {\n            var indexWithintInitPhase = currentView[FLAGS] >> 10 /* IndexWithinInitPhaseShift */;\n            // The init phase state must be always checked here as it may have been recursively\n            // updated\n            if (indexWithintInitPhase <\n                (currentView[PREORDER_HOOK_FLAGS] >> 16 /* NumberOfInitHooksCalledShift */) &&\n                (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n                currentView[FLAGS] += 1024 /* IndexWithinInitPhaseIncrementer */;\n                hook.call(directive);\n            }\n        }\n        else {\n            hook.call(directive);\n        }\n    }\n\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$4 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$5 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd = unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$5;\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        // we lowercase the class attribute value to be able to match\n        // selectors without case-sensitivity\n        // (selectors are already in lowercase when generated)\n        var matchIndex = nodeClassAttrVal.toLowerCase().indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be performed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode:\n     * - in the \"directive matching\" mode we do _not_ take TContainer's tagName into account if it is\n     * different from NG_TEMPLATE_SELECTOR (value different from NG_TEMPLATE_SELECTOR indicates that a\n     * tag name was extracted from * syntax so we would match the same directive twice);\n     * - in the \"projection\" mode, we use a tag name potentially extracted from the * syntax processing\n     * (applicable to TNodeType.Container only).\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        var tagNameToCompare = tNode.type === 0 /* Container */ && !isProjectionMode ?\n            NG_TEMPLATE_SELECTOR :\n            tNode.tagName;\n        return currentSelector === tagNameToCompare;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data of the node to match\n     * @param selector The selector to try matching against the node.\n     * @param isProjectionMode if `true` we are matching for content projection, otherwise we are doing\n     * directive matching.\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs || [];\n        // Find the index of first attribute that has no value, only a name.\n        var nameOnlyMarkerIdx = getNameOnlyMarkerIndex(nodeAttrs);\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                // special case for matching against classes when a tNode has been instantiated with\n                // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n                if ((mode & 8 /* CLASS */) && tNode.classes) {\n                    if (!isCssClassMatching(getInitialStylingValue(tNode.classes), selectorAttrValue)) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                    continue;\n                }\n                var isInlineTemplate = tNode.type == 0 /* Container */ && tNode.tagName !== NG_TEMPLATE_SELECTOR;\n                var attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs, isInlineTemplate, isProjectionMode);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    if (attrIndexInNode > nameOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(nodeAttrs[attrIndexInNode], 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        // we lowercase the attribute value to be able to match\n                        // selectors without case-sensitivity\n                        // (selectors are already in lowercase when generated)\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1].toLowerCase();\n                    }\n                    var compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                    if (compareAgainstClassName &&\n                        !isCssClassMatching(compareAgainstClassName, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines the attribute's definition array for a node to find the index of the\n     * attribute that matches the given `name`.\n     *\n     * NOTE: This will not match namespaced attributes.\n     *\n     * Attribute matching depends upon `isInlineTemplate` and `isProjectionMode`.\n     * The following table summarizes which types of attributes we attempt to match:\n     *\n     * ===========================================================================================================\n     * Modes                   | Normal Attributes | Bindings Attributes | Template Attributes | I18n\n     * Attributes\n     * ===========================================================================================================\n     * Inline + Projection     | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Inline + Directive      | NO                | NO                  | YES                 | NO\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Projection | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Directive  | YES               | YES                 | NO                  | YES\n     * ===========================================================================================================\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     * @param isInlineTemplate true if the node being matched is an inline template (e.g. `*ngFor`)\n     * rather than a manually expanded template node (e.g `<ng-template>`).\n     * @param isProjectionMode true if we are matching against content projection otherwise we are\n     * matching against directives.\n     */\n    function findAttrIndexInNode(name, attrs, isInlineTemplate, isProjectionMode) {\n        if (attrs === null)\n            return -1;\n        var i = 0;\n        if (isProjectionMode || !isInlineTemplate) {\n            var bindingsMode = false;\n            while (i < attrs.length) {\n                var maybeAttrName = attrs[i];\n                if (maybeAttrName === name) {\n                    return i;\n                }\n                else if (maybeAttrName === 3 /* Bindings */ || maybeAttrName === 6 /* I18n */) {\n                    bindingsMode = true;\n                }\n                else if (maybeAttrName === 1 /* Classes */ || maybeAttrName === 2 /* Styles */) {\n                    var value = attrs[++i];\n                    // We should skip classes here because we have a separate mechanism for\n                    // matching classes in projection mode.\n                    while (typeof value === 'string') {\n                        value = attrs[++i];\n                    }\n                    continue;\n                }\n                else if (maybeAttrName === 4 /* Template */) {\n                    // We do not care about Template attributes in this scenario.\n                    break;\n                }\n                else if (maybeAttrName === 0 /* NamespaceURI */) {\n                    // Skip the whole namespaced attribute and value. This is by design.\n                    i += 4;\n                    continue;\n                }\n                // In binding mode there are only names, rather than name-value pairs.\n                i += bindingsMode ? 1 : 2;\n            }\n            // We did not match the attribute\n            return -1;\n        }\n        else {\n            return matchTemplateAttribute(attrs, name);\n        }\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(5 /* ProjectAs */);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    function getNameOnlyMarkerIndex(nodeAttrs) {\n        for (var i = 0; i < nodeAttrs.length; i++) {\n            var nodeAttr = nodeAttrs[i];\n            if (isNameOnlyAttributeMarker(nodeAttr)) {\n                return i;\n            }\n        }\n        return nodeAttrs.length;\n    }\n    function matchTemplateAttribute(attrs, name) {\n        var i = attrs.indexOf(4 /* Template */);\n        if (i > -1) {\n            i++;\n            while (i < attrs.length) {\n                if (attrs[i] === name)\n                    return i;\n                i++;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Checks whether a selector is inside a CssSelectorList\n     * @param selector Selector to be checked.\n     * @param list List in which to look for the selector.\n     */\n    function isSelectorInSelectorList(selector, list) {\n        selectorListLoop: for (var i = 0; i < list.length; i++) {\n            var currentSelectorInList = list[i];\n            if (selector.length !== currentSelectorInList.length) {\n                continue;\n            }\n            for (var j = 0; j < selector.length; j++) {\n                if (selector[j] !== currentSelectorInList[j]) {\n                    continue selectorListLoop;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n\n    // these values will get filled in the very first time this is accessed...\n    var _state = {\n        element: null,\n        directiveIndex: -1,\n        sourceIndex: -1,\n        classesBitMask: -1,\n        classesIndex: -1,\n        stylesBitMask: -1,\n        stylesIndex: -1,\n        lastDirectClassMap: null,\n        lastDirectStyleMap: null,\n    };\n    var BIT_MASK_START_VALUE = 0;\n    // the `0` start value is reserved for [map]-based entries\n    var INDEX_START_VALUE = 1;\n    /**\n     * Returns (or instantiates) the styling state for the given element.\n     *\n     * Styling state is accessed and processed each time a style or class binding\n     * is evaluated.\n     *\n     * If and when the provided `element` doesn't match the current element in the\n     * state then this means that styling was recently cleared or the element has\n     * changed in change detection. In both cases the styling state is fully reset.\n     *\n     * If and when the provided `directiveIndex` doesn't match the current directive\n     * index in the state then this means that a new source has introduced itself into\n     * the styling code (or, in other words, another directive or component has started\n     * to apply its styling host bindings to the element).\n     */\n    function getStylingState(element, directiveIndex) {\n        if (_state.element !== element) {\n            _state.element = element;\n            _state.directiveIndex = directiveIndex;\n            _state.sourceIndex = directiveIndex === TEMPLATE_DIRECTIVE_INDEX ? 0 : 1;\n            _state.classesBitMask = BIT_MASK_START_VALUE;\n            _state.classesIndex = INDEX_START_VALUE;\n            _state.stylesBitMask = BIT_MASK_START_VALUE;\n            _state.stylesIndex = INDEX_START_VALUE;\n            _state.lastDirectClassMap = null;\n            _state.lastDirectStyleMap = null;\n        }\n        else if (_state.directiveIndex !== directiveIndex) {\n            _state.directiveIndex = directiveIndex;\n            _state.sourceIndex++;\n        }\n        return _state;\n    }\n    /**\n     * Clears the styling state so that it can be used by another element's styling code.\n     */\n    function resetStylingState() {\n        _state.element = null;\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    var VALUE_IS_EXTERNALLY_MODIFIED = {};\n    /**\n     * --------\n     *\n     * This file contains the core logic for styling in Angular.\n     *\n     * All styling bindings (i.e. `[style]`, `[style.prop]`, `[class]` and `[class.name]`)\n     * will have their values be applied through the logic in this file.\n     *\n     * When a binding is encountered (e.g. `<div [style.width]=\"w\">`) then\n     * the binding data will be populated into a `TStylingContext` data-structure.\n     * There is only one `TStylingContext` per `TStylingNode` and each element instance\n     * will update its style/class binding values in concert with the styling\n     * context.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    /**\n     * The guard/update mask bit index location for map-based bindings.\n     *\n     * All map-based bindings (i.e. `[style]` and `[class]` )\n     */\n    var STYLING_INDEX_FOR_MAP_BINDING = 0;\n    /**\n     * Visits a class-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a class-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time it's called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateClassViaContext(context, tNode, data, element, directiveIndex, prop, bindingIndex, value, forceUpdate, firstUpdatePass) {\n        var isMapBased = !prop;\n        var state = getStylingState(element, directiveIndex);\n        var countIndex = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : state.classesIndex++;\n        // even if the initial value is a `NO_CHANGE` value (e.g. interpolation or [ngClass])\n        // then we still need to register the binding within the context so that the context\n        // is aware of the binding even if things change after the first update pass.\n        if (firstUpdatePass || value !== NO_CHANGE) {\n            var updated = updateBindingData(context, tNode, data, countIndex, state.sourceIndex, prop, bindingIndex, value, forceUpdate, false, firstUpdatePass, true);\n            if (updated || forceUpdate) {\n                // We flip the bit in the bitMask to reflect that the binding\n                // at the `index` slot has changed. This identifies to the flushing\n                // phase that the bindings for this particular CSS class need to be\n                // applied again because on or more of the bindings for the CSS\n                // class have changed.\n                state.classesBitMask |= 1 << countIndex;\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Visits a style-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a style-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time it's called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateStyleViaContext(context, tNode, data, element, directiveIndex, prop, bindingIndex, value, sanitizer, forceUpdate, firstUpdatePass) {\n        var isMapBased = !prop;\n        var state = getStylingState(element, directiveIndex);\n        var countIndex = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : state.stylesIndex++;\n        // even if the initial value is a `NO_CHANGE` value (e.g. interpolation or [ngStyle])\n        // then we still need to register the binding within the context so that the context\n        // is aware of the binding even if things change after the first update pass.\n        if (firstUpdatePass || value !== NO_CHANGE) {\n            var sanitizationRequired = isMapBased ?\n                true :\n                (sanitizer ? sanitizer(prop, null, 1 /* ValidateProperty */) : false);\n            var updated = updateBindingData(context, tNode, data, countIndex, state.sourceIndex, prop, bindingIndex, value, forceUpdate, sanitizationRequired, firstUpdatePass, false);\n            if (updated || forceUpdate) {\n                // We flip the bit in the bitMask to reflect that the binding\n                // at the `index` slot has changed. This identifies to the flushing\n                // phase that the bindings for this particular property need to be\n                // applied again because on or more of the bindings for the CSS\n                // property have changed.\n                state.stylesBitMask |= 1 << countIndex;\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Called each time a binding value has changed within the provided `TStylingContext`.\n     *\n     * This function is designed to be called from `updateStyleBinding` and `updateClassBinding`.\n     * If called during the first update pass, the binding will be registered in the context.\n     *\n     * This function will also update binding slot in the provided `LStylingData` with the\n     * new binding entry (if it has changed).\n     *\n     * @returns whether or not the binding value was updated in the `LStylingData`.\n     */\n    function updateBindingData(context, tNode, data, counterIndex, sourceIndex, prop, bindingIndex, value, forceUpdate, sanitizationRequired, firstUpdatePass, isClassBased) {\n        var hostBindingsMode = isHostStylingActive(sourceIndex);\n        var hostBindingsFlag = isClassBased ? 4096 /* hasHostClassBindings */ : 131072 /* hasHostStyleBindings */;\n        if (firstUpdatePass) {\n            // this will only happen during the first update pass of the\n            // context. The reason why we can't use `tView.firstCreatePass`\n            // here is because its not guaranteed to be true when the first\n            // update pass is executed (remember that all styling instructions\n            // are run in the update phase, and, as a result, are no more\n            // styling instructions that are run in the creation phase).\n            registerBinding(context, tNode, counterIndex, sourceIndex, prop, bindingIndex, sanitizationRequired, isClassBased);\n        }\n        var changed = forceUpdate || hasValueChanged(data[bindingIndex], value);\n        if (changed) {\n            setValue(data, bindingIndex, value);\n            var doSetValuesAsStale = hasConfig(tNode, hostBindingsFlag) && !hostBindingsMode && (prop ? !value : true);\n            if (doSetValuesAsStale) {\n                renderHostBindingsAsStale(context, tNode, data, prop, isClassBased);\n            }\n        }\n        return changed;\n    }\n    /**\n     * Iterates over all host-binding values for the given `prop` value in the context and sets their\n     * corresponding binding values to `null`.\n     *\n     * Whenever a template binding changes its value to `null`, all host-binding values should be\n     * re-applied\n     * to the element when the host bindings are evaluated. This may not always happen in the event\n     * that none of the bindings changed within the host bindings code. For this reason this function\n     * is expected to be called each time a template binding becomes falsy or when a map-based template\n     * binding changes.\n     */\n    function renderHostBindingsAsStale(context, tNode, data, prop, isClassBased) {\n        var valuesCount = getValuesCount(context);\n        var hostBindingsFlag = isClassBased ? 4096 /* hasHostClassBindings */ : 131072 /* hasHostStyleBindings */;\n        if (prop !== null && hasConfig(tNode, hostBindingsFlag)) {\n            var itemsPerRow = 4 /* BindingsStartOffset */ + valuesCount;\n            var i = 2 /* ValuesStartPosition */;\n            var found = false;\n            while (i < context.length) {\n                if (getProp(context, i) === prop) {\n                    found = true;\n                    break;\n                }\n                i += itemsPerRow;\n            }\n            if (found) {\n                var bindingsStart = i + 4 /* BindingsStartOffset */;\n                var valuesStart = bindingsStart + 1; // the first column is template bindings\n                var valuesEnd = bindingsStart + valuesCount - 1;\n                for (var i_1 = valuesStart; i_1 < valuesEnd; i_1++) {\n                    var bindingIndex = context[i_1];\n                    if (bindingIndex !== 0) {\n                        setValue(data, bindingIndex, null);\n                    }\n                }\n            }\n        }\n        var mapBindingsFlag = isClassBased ? 512 /* hasClassMapBindings */ : 16384 /* hasStyleMapBindings */;\n        if (hasConfig(tNode, mapBindingsFlag)) {\n            var bindingsStart = 2 /* ValuesStartPosition */ + 4 /* BindingsStartOffset */;\n            var valuesStart = bindingsStart + 1; // the first column is template bindings\n            var valuesEnd = bindingsStart + valuesCount - 1;\n            for (var i = valuesStart; i < valuesEnd; i++) {\n                var stylingMap = getValue(data, context[i]);\n                if (stylingMap) {\n                    setMapAsDirty(stylingMap);\n                }\n            }\n        }\n    }\n    /**\n     * Registers the provided binding (prop + bindingIndex) into the context.\n     *\n     * It is needed because it will either update or insert a styling property\n     * into the context at the correct spot.\n     *\n     * When called, one of two things will happen:\n     *\n     * 1) If the property already exists in the context then it will just add\n     *    the provided `bindingValue` to the end of the binding sources region\n     *    for that particular property.\n     *\n     *    - If the binding value is a number then it will be added as a new\n     *      binding index source next to the other binding sources for the property.\n     *\n     *    - Otherwise, if the binding value is a string/boolean/null type then it will\n     *      replace the default value for the property if the default value is `null`.\n     *\n     * 2) If the property does not exist then it will be inserted into the context.\n     *    The styling context relies on all properties being stored in alphabetical\n     *    order, so it knows exactly where to store it.\n     *\n     *    When inserted, a default `null` value is created for the property which exists\n     *    as the default value for the binding. If the bindingValue property is inserted\n     *    and it is either a string, number or null value then that will replace the default\n     *    value.\n     *\n     * Note that this function is also used for map-based styling bindings. They are treated\n     * much the same as prop-based bindings, but, their property name value is set as `[MAP]`.\n     */\n    function registerBinding(context, tNode, countId, sourceIndex, prop, bindingValue, sanitizationRequired, isClassBased) {\n        var found = false;\n        prop = prop || MAP_BASED_ENTRY_PROP_NAME;\n        var totalSources = getTotalSources(context);\n        // if a new source is detected then a new column needs to be allocated into\n        // the styling context. The column is basically a new allocation of binding\n        // sources that will be available to each property.\n        while (totalSources <= sourceIndex) {\n            addNewSourceColumn(context);\n            totalSources++;\n        }\n        var collisionFlag = isClassBased ? 8192 /* hasDuplicateClassBindings */ : 262144 /* hasDuplicateStyleBindings */;\n        var isBindingIndexValue = typeof bindingValue === 'number';\n        var entriesPerRow = 4 /* BindingsStartOffset */ + getValuesCount(context);\n        var i = 2 /* ValuesStartPosition */;\n        // all style/class bindings are sorted by property name\n        while (i < context.length) {\n            var p = getProp(context, i);\n            if (prop <= p) {\n                if (prop < p) {\n                    allocateNewContextEntry(context, i, prop, sanitizationRequired);\n                }\n                else if (isBindingIndexValue) {\n                    patchConfig(tNode, collisionFlag);\n                }\n                addBindingIntoContext(context, i, bindingValue, countId, sourceIndex);\n                found = true;\n                break;\n            }\n            i += entriesPerRow;\n        }\n        if (!found) {\n            allocateNewContextEntry(context, context.length, prop, sanitizationRequired);\n            addBindingIntoContext(context, i, bindingValue, countId, sourceIndex);\n        }\n    }\n    /**\n     * Inserts a new row into the provided `TStylingContext` and assigns the provided `prop` value as\n     * the property entry.\n     */\n    function allocateNewContextEntry(context, index, prop, sanitizationRequired) {\n        var config = sanitizationRequired ? 1 /* SanitizationRequired */ :\n            0 /* Default */;\n        context.splice(index, 0, config, // 1) config value\n        DEFAULT_GUARD_MASK_VALUE, // 2) template bit mask\n        DEFAULT_GUARD_MASK_VALUE, // 3) host bindings bit mask\n        prop);\n        index += 4; // the 4 values above\n        // 5...) default binding index for the template value\n        // depending on how many sources already exist in the context,\n        // multiple default index entries may need to be inserted for\n        // the new value in the context.\n        var totalBindingsPerEntry = getTotalSources(context);\n        for (var i = 0; i < totalBindingsPerEntry; i++) {\n            context.splice(index, 0, DEFAULT_BINDING_INDEX);\n            index++;\n        }\n        // 6) default binding value for the new entry\n        context.splice(index, 0, DEFAULT_BINDING_VALUE);\n    }\n    /**\n     * Inserts a new binding value into a styling property tuple in the `TStylingContext`.\n     *\n     * A bindingValue is inserted into a context during the first update pass\n     * of a template or host bindings function. When this occurs, two things\n     * happen:\n     *\n     * - If the bindingValue value is a number then it is treated as a bindingIndex\n     *   value (a index in the `LView`) and it will be inserted next to the other\n     *   binding index entries.\n     *\n     * - Otherwise the binding value will update the default value for the property\n     *   and this will only happen if the default value is `null`.\n     */\n    function addBindingIntoContext(context, index, bindingValue, bitIndex, sourceIndex) {\n        if (typeof bindingValue === 'number') {\n            var hostBindingsMode = isHostStylingActive(sourceIndex);\n            var cellIndex = index + 4 /* BindingsStartOffset */ + sourceIndex;\n            context[cellIndex] = bindingValue;\n            var updatedBitMask = getGuardMask(context, index, hostBindingsMode) | (1 << bitIndex);\n            setGuardMask(context, index, updatedBitMask, hostBindingsMode);\n        }\n        else if (bindingValue !== null && getDefaultValue(context, index) === null) {\n            setDefaultValue(context, index, bindingValue);\n        }\n    }\n    /**\n     * Registers a new column into the provided `TStylingContext`.\n     *\n     * If and when a new source is detected then a new column needs to\n     * be allocated into the styling context. The column is basically\n     * a new allocation of binding sources that will be available to each\n     * property.\n     *\n     * Each column that exists in the styling context resembles a styling\n     * source. A styling source an either be the template or one or more\n     * components or directives all containing styling host bindings.\n     */\n    function addNewSourceColumn(context) {\n        // we use -1 here because we want to insert right before the last value (the default value)\n        var insertOffset = 4 /* BindingsStartOffset */ + getValuesCount(context) - 1;\n        var index = 2 /* ValuesStartPosition */;\n        while (index < context.length) {\n            index += insertOffset;\n            context.splice(index++, 0, DEFAULT_BINDING_INDEX);\n            // the value was inserted just before the default value, but the\n            // next entry in the context starts just after it. Therefore++.\n            index++;\n        }\n        context[0 /* TotalSourcesPosition */]++;\n    }\n    /**\n     * Applies all pending style and class bindings to the provided element.\n     *\n     * This function will attempt to flush styling via the provided `classesContext`\n     * and `stylesContext` context values. This function is designed to be run from\n     * the internal `stylingApply` function (which is scheduled to run at the very\n     * end of change detection for an element if one or more style/class bindings\n     * were processed) and will rely on any state values that are set from when\n     * any of the styling bindings executed.\n     *\n     * This function is designed to be called twice: one when change detection has\n     * processed an element within the template bindings (i.e. just as `advance()`\n     * is called) and when host bindings have been processed. In both cases the\n     * styles and classes in both contexts will be applied to the element, but the\n     * algorithm will selectively decide which bindings to run depending on the\n     * columns in the context. The provided `directiveIndex` value will help the\n     * algorithm determine which bindings to apply: either the template bindings or\n     * the host bindings (see `applyStylingToElement` for more information).\n     *\n     * Note that once this function is called all temporary styling state data\n     * (i.e. the `bitMask` and `counter` values for styles and classes will be cleared).\n     */\n    function flushStyling(renderer, data, tNode, classesContext, stylesContext, element, directiveIndex, styleSanitizer, firstUpdatePass) {\n        ngDevMode && ngDevMode.flushStyling++;\n        var state = getStylingState(element, directiveIndex);\n        var hostBindingsMode = isHostStylingActive(state.sourceIndex);\n        if (stylesContext) {\n            firstUpdatePass && syncContextInitialStyling(stylesContext, tNode, false);\n            if (state.stylesBitMask !== 0) {\n                applyStylingViaContext(stylesContext, tNode, renderer, element, data, state.stylesBitMask, setStyle, styleSanitizer, hostBindingsMode, false);\n            }\n        }\n        if (classesContext) {\n            firstUpdatePass && syncContextInitialStyling(classesContext, tNode, true);\n            if (state.classesBitMask !== 0) {\n                applyStylingViaContext(classesContext, tNode, renderer, element, data, state.classesBitMask, setClass, null, hostBindingsMode, true);\n            }\n        }\n        resetStylingState();\n    }\n    /**\n     * Registers all static styling values into the context as default values.\n     *\n     * Static styles are stored on the `tNode.styles` and `tNode.classes`\n     * properties as instances of `StylingMapArray`. When an instance of\n     * `TStylingContext` is assigned to `tNode.styles` and `tNode.classes`\n     * then the existing initial styling values are copied into the the\n     * `InitialStylingValuePosition` slot.\n     *\n     * Because all static styles/classes are collected and registered on\n     * the initial styling array each time a directive is instantiated,\n     * the context may not yet know about the static values. When this\n     * function is called it will copy over all the static style/class\n     * values from the initial styling array into the context as default\n     * values for each of the matching entries in the context.\n     *\n     * Let's imagine the following example:\n     *\n     * ```html\n     * <div style=\"color:red\"\n     *     [style.color]=\"myColor\"\n     *     dir-that-has-static-height>\n     *   ...\n     * </div>\n     * ```\n     *\n     * When the code above is processed, the underlying element/styling\n     * instructions will create an instance of `TStylingContext` for\n     * the `tNode.styles` property. Here's what that looks like:\n     *\n     * ```typescript\n     * tNode.styles = [\n     *   // ...\n     *   // initial styles\n     *   ['color:red; height:200px', 'color', 'red', 'height', '200px'],\n     *\n     *   0, 0b1, 0b0, 'color', 20, null, // [style.color] binding\n     * ]\n     * ```\n     *\n     * After this function is called it will balance out the context with\n     * the static `color` and `height` values and set them as defaults within\n     * the context:\n     *\n     * ```typescript\n     * tNode.styles = [\n     *   // ...\n     *   // initial styles\n     *   ['color:red; height:200px', 'color', 'red', 'height', '200px'],\n     *\n     *   0, 0b1, 0b0, 'color', 20, 'red',\n     *   0, 0b0, 0b0, 'height', 0, '200px',\n     * ]\n     * ```\n     */\n    function syncContextInitialStyling(context, tNode, isClassBased) {\n        // the TStylingContext always has initial style/class values which are\n        // stored in styling array format.\n        updateInitialStylingOnContext(context, tNode, getStylingMapArray(context), isClassBased);\n    }\n    /**\n     * Registers all initial styling entries into the provided context.\n     *\n     * This function will iterate over all entries in the provided `initialStyling` ar}ray and register\n     * them as default (initial) values in the provided context. Initial styling values in a context are\n     * the default values that are to be applied unless overwritten by a binding.\n     *\n     * The reason why this function exists and isn't a part of the context construction is because\n     * host binding is evaluated at a later stage after the element is created. This means that\n     * if a directive or component contains any initial styling code (i.e. `<div class=\"foo\">`)\n     * then that initial styling data can only be applied once the styling for that element\n     * is first applied (at the end of the update phase). Once that happens then the context will\n     * update itself with the complete initial styling for the element.\n     */\n    function updateInitialStylingOnContext(context, tNode, initialStyling, isClassBased) {\n        // `-1` is used here because all initial styling data is not a apart\n        // of a binding (since it's static)\n        var COUNT_ID_FOR_STYLING = -1;\n        var hasInitialStyling = false;\n        for (var i = 1 /* ValuesStartPosition */; i < initialStyling.length; i += 2 /* TupleSize */) {\n            var value = getMapValue(initialStyling, i);\n            if (value) {\n                var prop = getMapProp(initialStyling, i);\n                registerBinding(context, tNode, COUNT_ID_FOR_STYLING, 0, prop, value, false, isClassBased);\n                hasInitialStyling = true;\n            }\n        }\n        if (hasInitialStyling) {\n            patchConfig(tNode, 256 /* hasInitialStyling */);\n        }\n    }\n    /**\n     * Runs through the provided styling context and applies each value to\n     * the provided element (via the renderer) if one or more values are present.\n     *\n     * This function will iterate over all entries present in the provided\n     * `TStylingContext` array (both prop-based and map-based bindings).-\n     *\n     * Each entry, within the `TStylingContext` array, is stored alphabetically\n     * and this means that each prop/value entry will be applied in order\n     * (so long as it is marked dirty in the provided `bitMask` value).\n     *\n     * If there are any map-based entries present (which are applied to the\n     * element via the `[style]` and `[class]` bindings) then those entries\n     * will be applied as well. However, the code for that is not a part of\n     * this function. Instead, each time a property is visited, then the\n     * code below will call an external function called `stylingMapsSyncFn`\n     * and, if present, it will keep the application of styling values in\n     * map-based bindings up to sync with the application of prop-based\n     * bindings.\n     *\n     * Visit `styling/map_based_bindings.ts` to learn more about how the\n     * algorithm works for map-based styling bindings.\n     *\n     * Note that this function is not designed to be called in isolation (use\n     * the `flushStyling` function so that it can call this function for both\n     * the styles and classes contexts).\n     */\n    function applyStylingViaContext(context, tNode, renderer, element, bindingData, bitMaskValue, applyStylingFn, sanitizer, hostBindingsMode, isClassBased) {\n        var bitMask = normalizeBitMaskValue(bitMaskValue);\n        var stylingMapsSyncFn = null;\n        var applyAllValues = false;\n        var mapBindingsFlag = isClassBased ? 512 /* hasClassMapBindings */ : 16384 /* hasStyleMapBindings */;\n        if (hasConfig(tNode, mapBindingsFlag)) {\n            stylingMapsSyncFn = getStylingMapsSyncFn();\n            var mapsGuardMask = getGuardMask(context, 2 /* ValuesStartPosition */, hostBindingsMode);\n            applyAllValues = (bitMask & mapsGuardMask) !== 0;\n        }\n        var valuesCount = getValuesCount(context);\n        var totalBindingsToVisit = 1;\n        var mapsMode = applyAllValues ? 1 /* ApplyAllValues */ : 0 /* TraverseValues */;\n        if (hostBindingsMode) {\n            mapsMode |= 8 /* RecurseInnerMaps */;\n            totalBindingsToVisit = valuesCount - 1;\n        }\n        var i = getPropValuesStartPosition(context, tNode, isClassBased);\n        while (i < context.length) {\n            var guardMask = getGuardMask(context, i, hostBindingsMode);\n            if (bitMask & guardMask) {\n                var valueApplied = false;\n                var prop = getProp(context, i);\n                var defaultValue = getDefaultValue(context, i);\n                // Part 1: Visit the `[styling.prop]` value\n                for (var j = 0; j < totalBindingsToVisit; j++) {\n                    var bindingIndex = getBindingValue(context, i, j);\n                    if (!valueApplied && bindingIndex !== 0) {\n                        var value = getValue(bindingData, bindingIndex);\n                        if (isStylingValueDefined(value)) {\n                            var checkValueOnly = hostBindingsMode && j === 0;\n                            if (!checkValueOnly) {\n                                var finalValue = sanitizer && isSanitizationRequired(context, i) ?\n                                    sanitizer(prop, value, 2 /* SanitizeOnly */) :\n                                    unwrapSafeValue(value);\n                                applyStylingFn(renderer, element, prop, finalValue, bindingIndex);\n                            }\n                            valueApplied = true;\n                        }\n                    }\n                    // Part 2: Visit the `[style]` or `[class]` map-based value\n                    if (stylingMapsSyncFn) {\n                        // determine whether or not to apply the target property or to skip it\n                        var mode = mapsMode | (valueApplied ? 4 /* SkipTargetProp */ :\n                            2 /* ApplyTargetProp */);\n                        // the first column in the context (when `j == 0`) is special-cased for\n                        // template bindings. If and when host bindings are being processed then\n                        // the first column will still be iterated over, but the values will only\n                        // be checked against (not applied). If and when this happens we need to\n                        // notify the map-based syncing code to know not to apply the values it\n                        // comes across in the very first map-based binding (which is also located\n                        // in column zero).\n                        if (hostBindingsMode && j === 0) {\n                            mode |= 16 /* CheckValuesOnly */;\n                        }\n                        var valueAppliedWithinMap = stylingMapsSyncFn(context, renderer, element, bindingData, j, applyStylingFn, sanitizer, mode, prop, defaultValue);\n                        valueApplied = valueApplied || valueAppliedWithinMap;\n                    }\n                }\n                // Part 3: apply the default value (e.g. `<div style=\"width:200\">` => `200px` gets applied)\n                // if the value has not yet been applied then a truthy value does not exist in the\n                // prop-based or map-based bindings code. If and when this happens, just apply the\n                // default value (even if the default value is `null`).\n                if (!valueApplied) {\n                    applyStylingFn(renderer, element, prop, defaultValue);\n                }\n            }\n            i += 4 /* BindingsStartOffset */ + valuesCount;\n        }\n        // the map-based styling entries may have not applied all their\n        // values. For this reason, one more call to the sync function\n        // needs to be issued at the end.\n        if (stylingMapsSyncFn) {\n            if (hostBindingsMode) {\n                mapsMode |= 16 /* CheckValuesOnly */;\n            }\n            stylingMapsSyncFn(context, renderer, element, bindingData, 0, applyStylingFn, sanitizer, mapsMode);\n        }\n    }\n    /**\n     * Applies the provided styling map to the element directly (without context resolution).\n     *\n     * This function is designed to be run from the styling instructions and will be called\n     * automatically. This function is intended to be used for performance reasons in the\n     * event that there is no need to apply styling via context resolution.\n     *\n     * This function has three different cases that can occur (for each item in the map):\n     *\n     * - Case 1: Attempt to apply the current value in the map to the element (if it's `non null`).\n     *\n     * - Case 2: If a map value fails to be applied then the algorithm will find a matching entry in\n     *           the initial values present in the context and attempt to apply that.\n     *\n     * - Default Case: If the initial value cannot be applied then a default value of `null` will be\n     *                 applied (which will remove the style/class value from the element).\n     *\n     * See `allowDirectStylingApply` to learn the logic used to determine whether any style/class\n     * bindings can be directly applied.\n     *\n     * @returns whether or not the styling map was applied to the element.\n     */\n    function applyStylingMapDirectly(renderer, context, tNode, element, data, bindingIndex, value, isClassBased, sanitizer, forceUpdate, bindingValueContainsInitial) {\n        var oldValue = getValue(data, bindingIndex);\n        if (forceUpdate || hasValueChanged(oldValue, value)) {\n            var hasInitial = hasConfig(tNode, 256 /* hasInitialStyling */);\n            var initialValue = hasInitial && !bindingValueContainsInitial ? getInitialStylingValue(context) : null;\n            setValue(data, bindingIndex, value);\n            // the cached value is the last snapshot of the style or class\n            // attribute value and is used in the if statement below to\n            // keep track of internal/external changes.\n            var cachedValueIndex = bindingIndex + 1;\n            var cachedValue = getValue(data, cachedValueIndex);\n            if (cachedValue === NO_CHANGE) {\n                cachedValue = initialValue;\n            }\n            cachedValue = typeof cachedValue !== 'string' ? '' : cachedValue;\n            // If a class/style value was modified externally then the styling\n            // fast pass cannot guarantee that the external values are retained.\n            // When this happens, the algorithm will bail out and not write to\n            // the style or className attribute directly.\n            var propBindingsFlag = isClassBased ? 1024 /* hasClassPropBindings */ : 32768 /* hasStylePropBindings */;\n            var writeToAttrDirectly = !hasConfig(tNode, propBindingsFlag);\n            if (writeToAttrDirectly &&\n                checkIfExternallyModified(element, cachedValue, isClassBased)) {\n                writeToAttrDirectly = false;\n                if (oldValue !== VALUE_IS_EXTERNALLY_MODIFIED) {\n                    // direct styling will reset the attribute entirely each time,\n                    // and, for this reason, if the algorithm decides it cannot\n                    // write to the class/style attributes directly then it must\n                    // reset all the previous style/class values before it starts\n                    // to apply values in the non-direct way.\n                    removeStylingValues(renderer, element, oldValue, isClassBased);\n                    // this will instruct the algorithm not to apply class or style\n                    // values directly anymore.\n                    setValue(data, cachedValueIndex, VALUE_IS_EXTERNALLY_MODIFIED);\n                }\n            }\n            if (writeToAttrDirectly) {\n                var initialValue_1 = hasInitial && !bindingValueContainsInitial ? getInitialStylingValue(context) : null;\n                var valueToApply = writeStylingValueDirectly(renderer, element, value, isClassBased, initialValue_1);\n                setValue(data, cachedValueIndex, valueToApply || null);\n            }\n            else {\n                var applyFn = isClassBased ? setClass : setStyle;\n                var map = normalizeIntoStylingMap(oldValue, value, !isClassBased);\n                var initialStyles = hasInitial ? getStylingMapArray(context) : null;\n                for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n                    var prop = getMapProp(map, i);\n                    var value_1 = getMapValue(map, i);\n                    // case 1: apply the map value (if it exists)\n                    var applied = applyStylingValue(renderer, element, prop, value_1, applyFn, bindingIndex, sanitizer);\n                    // case 2: apply the initial value (if it exists)\n                    if (!applied && initialStyles) {\n                        applied = findAndApplyMapValue(renderer, element, applyFn, initialStyles, prop, bindingIndex, sanitizer);\n                    }\n                    // default case: apply `null` to remove the value\n                    if (!applied) {\n                        applyFn(renderer, element, prop, null, bindingIndex);\n                    }\n                }\n                var state = getStylingState(element, TEMPLATE_DIRECTIVE_INDEX);\n                if (isClassBased) {\n                    state.lastDirectClassMap = map;\n                }\n                else {\n                    state.lastDirectStyleMap = map;\n                }\n            }\n        }\n    }\n    function writeStylingValueDirectly(renderer, element, value, isClassBased, initialValue) {\n        var valueToApply;\n        if (isClassBased) {\n            valueToApply = typeof value === 'string' ? value : objectToClassName(value);\n            if (initialValue !== null) {\n                valueToApply = concatString(initialValue, valueToApply, ' ');\n            }\n            setClassName(renderer, element, valueToApply);\n        }\n        else {\n            valueToApply = forceStylesAsString(value, true);\n            if (initialValue !== null) {\n                valueToApply = initialValue + ';' + valueToApply;\n            }\n            setStyleAttr(renderer, element, valueToApply);\n        }\n        return valueToApply;\n    }\n    /**\n     * Applies the provided styling prop/value to the element directly (without context resolution).\n     *\n     * This function is designed to be run from the styling instructions and will be called\n     * automatically. This function is intended to be used for performance reasons in the\n     * event that there is no need to apply styling via context resolution.\n     *\n     * This function has four different cases that can occur:\n     *\n     * - Case 1: Apply the provided prop/value (style or class) entry to the element\n     *           (if it is `non null`).\n     *\n     * - Case 2: If value does not get applied (because its `null` or `undefined`) then the algorithm\n     *           will check to see if a styling map value was applied to the element as well just\n     *           before this (via `styleMap` or `classMap`). If and when a map is present then the\n      *          algorithm will find the matching property in the map and apply its value.\n      *\n     * - Case 3: If a map value fails to be applied then the algorithm will check to see if there\n     *           are any initial values present and attempt to apply a matching value based on\n     *           the target prop.\n     *\n     * - Default Case: If a matching initial value cannot be applied then a default value\n     *                 of `null` will be applied (which will remove the style/class value\n     *                 from the element).\n     *\n     * See `allowDirectStylingApply` to learn the logic used to determine whether any style/class\n     * bindings can be directly applied.\n     *\n     * @returns whether or not the prop/value styling was applied to the element.\n     */\n    function applyStylingValueDirectly(renderer, context, tNode, element, data, bindingIndex, prop, value, isClassBased, sanitizer) {\n        var applied = false;\n        if (hasValueChanged(data[bindingIndex], value)) {\n            setValue(data, bindingIndex, value);\n            var applyFn = isClassBased ? setClass : setStyle;\n            // case 1: apply the provided value (if it exists)\n            applied = applyStylingValue(renderer, element, prop, value, applyFn, bindingIndex, sanitizer);\n            // case 2: find the matching property in a styling map and apply the detected value\n            var mapBindingsFlag = isClassBased ? 512 /* hasClassMapBindings */ : 16384 /* hasStyleMapBindings */;\n            if (!applied && hasConfig(tNode, mapBindingsFlag)) {\n                var state = getStylingState(element, TEMPLATE_DIRECTIVE_INDEX);\n                var map = isClassBased ? state.lastDirectClassMap : state.lastDirectStyleMap;\n                applied = map ?\n                    findAndApplyMapValue(renderer, element, applyFn, map, prop, bindingIndex, sanitizer) :\n                    false;\n            }\n            // case 3: apply the initial value (if it exists)\n            if (!applied && hasConfig(tNode, 256 /* hasInitialStyling */)) {\n                var map = getStylingMapArray(context);\n                applied =\n                    map ? findAndApplyMapValue(renderer, element, applyFn, map, prop, bindingIndex) : false;\n            }\n            // default case: apply `null` to remove the value\n            if (!applied) {\n                applyFn(renderer, element, prop, null, bindingIndex);\n            }\n        }\n        return applied;\n    }\n    function applyStylingValue(renderer, element, prop, value, applyFn, bindingIndex, sanitizer) {\n        var valueToApply = unwrapSafeValue(value);\n        if (isStylingValueDefined(valueToApply)) {\n            valueToApply =\n                sanitizer ? sanitizer(prop, value, 3 /* ValidateAndSanitize */) : valueToApply;\n            applyFn(renderer, element, prop, valueToApply, bindingIndex);\n            return true;\n        }\n        return false;\n    }\n    function findAndApplyMapValue(renderer, element, applyFn, map, prop, bindingIndex, sanitizer) {\n        for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n            var p = getMapProp(map, i);\n            if (p === prop) {\n                var valueToApply = getMapValue(map, i);\n                valueToApply = sanitizer ?\n                    sanitizer(prop, valueToApply, 3 /* ValidateAndSanitize */) :\n                    valueToApply;\n                applyFn(renderer, element, prop, valueToApply, bindingIndex);\n                return true;\n            }\n            if (p > prop) {\n                break;\n            }\n        }\n        return false;\n    }\n    function normalizeBitMaskValue(value) {\n        // if pass => apply all values (-1 implies that all bits are flipped to true)\n        if (value === true)\n            return -1;\n        // if pass => skip all values\n        if (value === false)\n            return 0;\n        // return the bit mask value as is\n        return value;\n    }\n    var _activeStylingMapApplyFn = null;\n    function getStylingMapsSyncFn() {\n        return _activeStylingMapApplyFn;\n    }\n    function setStylingMapsSyncFn(fn) {\n        _activeStylingMapApplyFn = fn;\n    }\n    /**\n     * Assigns a style value to a style property for the given element.\n     */\n    var setStyle = function (renderer, native, prop, value) {\n        if (renderer !== null) {\n            // Use `isStylingValueDefined` to account for falsy values that should be bound like 0.\n            if (isStylingValueDefined(value)) {\n                // opacity, z-index and flexbox all have number values\n                // and these need to be converted into strings so that\n                // they can be assigned properly.\n                value = value.toString();\n                ngDevMode && ngDevMode.rendererSetStyle++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase);\n                }\n                else {\n                    // The reason why native style may be `null` is either because\n                    // it's a container element or it's a part of a test\n                    // environment that doesn't have styling. In either\n                    // case it's safe not to apply styling to the element.\n                    var nativeStyle = native.style;\n                    if (nativeStyle != null) {\n                        nativeStyle.setProperty(prop, value);\n                    }\n                }\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveStyle++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase);\n                }\n                else {\n                    var nativeStyle = native.style;\n                    if (nativeStyle != null) {\n                        nativeStyle.removeProperty(prop);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Adds/removes the provided className value to the provided element.\n     */\n    var setClass = function (renderer, native, className, value) {\n        if (renderer !== null && className !== '') {\n            if (value) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.addClass(native, className);\n                }\n                else {\n                    // the reason why classList may be `null` is either because\n                    // it's a container element or it's a part of a test\n                    // environment that doesn't have styling. In either\n                    // case it's safe not to apply styling to the element.\n                    var classList = native.classList;\n                    if (classList != null) {\n                        classList.add(className);\n                    }\n                }\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.removeClass(native, className);\n                }\n                else {\n                    var classList = native.classList;\n                    if (classList != null) {\n                        classList.remove(className);\n                    }\n                }\n            }\n        }\n    };\n    var setClassName = function (renderer, native, className) {\n        if (renderer !== null) {\n            if (isProceduralRenderer(renderer)) {\n                renderer.setAttribute(native, 'class', className);\n            }\n            else {\n                native.className = className;\n            }\n        }\n    };\n    var setStyleAttr = function (renderer, native, value) {\n        if (renderer !== null) {\n            if (isProceduralRenderer(renderer)) {\n                renderer.setAttribute(native, 'style', value);\n            }\n            else {\n                native.setAttribute('style', value);\n            }\n        }\n    };\n    /**\n     * Iterates over all provided styling entries and renders them on the element.\n     *\n     * This function is used alongside a `StylingMapArray` entry. This entry is not\n     * the same as the `TStylingContext` and is only really used when an element contains\n     * initial styling values (e.g. `<div style=\"width:200px\">`), but no style/class bindings\n     * are present. If and when that happens then this function will be called to render all\n     * initial styling values on an element.\n     */\n    function renderStylingMap(renderer, element, stylingValues, isClassBased) {\n        var stylingMapArr = getStylingMapArray(stylingValues);\n        if (stylingMapArr) {\n            for (var i = 1 /* ValuesStartPosition */; i < stylingMapArr.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(stylingMapArr, i);\n                var value = getMapValue(stylingMapArr, i);\n                if (isClassBased) {\n                    setClass(renderer, element, prop, value, null);\n                }\n                else {\n                    setStyle(renderer, element, prop, value, null);\n                }\n            }\n        }\n    }\n    function objectToClassName(obj) {\n        var str = '';\n        if (obj) {\n            for (var key in obj) {\n                var value = obj[key];\n                if (value) {\n                    str += (str.length ? ' ' : '') + key;\n                }\n            }\n        }\n        return str;\n    }\n    /**\n     * Determines whether or not an element style/className value has changed since the last update.\n     *\n     * This function helps Angular determine if a style or class attribute value was\n     * modified by an external plugin or API outside of the style binding code. This\n     * means any JS code that adds/removes class/style values on an element outside\n     * of Angular's styling binding algorithm.\n     *\n     * @returns true when the value was modified externally.\n     */\n    function checkIfExternallyModified(element, cachedValue, isClassBased) {\n        // this means it was checked before and there is no reason\n        // to compare the style/class values again. Either that or\n        // web workers are being used.\n        if (_global.Node === 'undefined' || cachedValue === VALUE_IS_EXTERNALLY_MODIFIED)\n            return true;\n        // comparing the DOM value against the cached value is the best way to\n        // see if something has changed.\n        var currentValue = (isClassBased ? element.className : (element.style && element.style.cssText)) || '';\n        return currentValue !== (cachedValue || '');\n    }\n    /**\n     * Removes provided styling values from the element\n     */\n    function removeStylingValues(renderer, element, values, isClassBased) {\n        var arr;\n        if (isStylingMapArray(values)) {\n            arr = values;\n        }\n        else {\n            arr = normalizeIntoStylingMap(null, values, !isClassBased);\n        }\n        var applyFn = isClassBased ? setClass : setStyle;\n        for (var i = 1 /* ValuesStartPosition */; i < arr.length; i += 2 /* TupleSize */) {\n            var value = getMapValue(arr, i);\n            if (value) {\n                var prop = getMapProp(arr, i);\n                applyFn(renderer, element, prop, false);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Advances to an element for later binding instructions.\n     *\n     * Used in conjunction with instructions like {@link property} to act on elements with specified\n     * indices, for example those created with {@link element} or {@link elementStart}.\n     *\n     * ```ts\n     * (rf: RenderFlags, ctx: any) => {\n      *   if (rf & 1) {\n      *     text(0, 'Hello');\n      *     text(1, 'Goodbye')\n      *     element(2, 'div');\n      *   }\n      *   if (rf & 2) {\n      *     advance(2); // Advance twice to the <div>.\n      *     property('title', 'test');\n      *   }\n      *  }\n      * ```\n      * @param delta Number of elements to advance forwards by.\n      *\n      * @codeGenApi\n      */\n    function ɵɵadvance(delta) {\n        ngDevMode && assertGreaterThan(delta, 0, 'Can only advance forward');\n        selectIndexInternal(getLView(), getSelectedIndex() + delta, getCheckNoChangesMode());\n    }\n    /**\n     * Selects an element for later binding instructions.\n     * @deprecated No longer being generated, but still used in unit tests.\n     * @codeGenApi\n     */\n    function ɵɵselect(index) {\n        selectIndexInternal(getLView(), index, getCheckNoChangesMode());\n    }\n    function selectIndexInternal(lView, index, checkNoChangesMode) {\n        ngDevMode && assertGreaterThan(index, -1, 'Invalid index');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        if (hasActiveElementFlag(1 /* RunExitFn */)) {\n            executeElementExitFn();\n        }\n        // Flush the initial hooks for elements in the view that have been added up to this point.\n        // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n        if (!checkNoChangesMode) {\n            var hooksInitPhaseCompleted = (lView[FLAGS] & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            if (hooksInitPhaseCompleted) {\n                var preOrderCheckHooks = lView[TVIEW].preOrderCheckHooks;\n                if (preOrderCheckHooks !== null) {\n                    executeCheckHooks(lView, preOrderCheckHooks, index);\n                }\n            }\n            else {\n                var preOrderHooks = lView[TVIEW].preOrderHooks;\n                if (preOrderHooks !== null) {\n                    executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, index);\n                }\n            }\n        }\n        // We must set the selected index *after* running the hooks, because hooks may have side-effects\n        // that cause other template functions to run, thus updating the selected index, which is global\n        // state. If we run `setSelectedIndex` *before* we run the hooks, in some cases the selected index\n        // will be altered by the time we leave the `ɵɵadvance` instruction.\n        setSelectedIndex(index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$6 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an instance of a `Proxy` and creates with an empty target object and binds it to the\n     * provided handler.\n     *\n     * The reason why this function exists is because IE doesn't support\n     * the `Proxy` class. For this reason an error must be thrown.\n     */\n    function createProxy(handler) {\n        var g = _global;\n        if (!g.Proxy) {\n            throw new Error('Proxy is not supported in this browser');\n        }\n        return new g.Proxy({}, handler);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachDebugObject(obj, debug) {\n        Object.defineProperty(obj, 'debug', { value: debug, enumerable: false });\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * --------\n     *\n     * This file contains the algorithm logic for applying map-based bindings\n     * such as `[style]` and `[class]`.\n     *\n     * --------\n     */\n    /**\n     * Enables support for map-based styling bindings (e.g. `[style]` and `[class]` bindings).\n     */\n    function activateStylingMapFeature() {\n        setStylingMapsSyncFn(syncStylingMap);\n    }\n    /**\n     * Used to apply styling values presently within any map-based bindings on an element.\n     *\n     * Angular supports map-based styling bindings which can be applied via the\n     * `[style]` and `[class]` bindings which can be placed on any HTML element.\n     * These bindings can work independently, together or alongside prop-based\n     * styling bindings (e.g. `<div [style]=\"x\" [style.width]=\"w\">`).\n     *\n     * If a map-based styling binding is detected by the compiler, the following\n     * AOT code is produced:\n     *\n     * ```typescript\n     * styleMap(ctx.styles); // styles = {key:value}\n     * classMap(ctx.classes); // classes = {key:value}|string\n     * ```\n     *\n     * If and when either of the instructions above are evaluated, then the code\n     * present in this file is included into the bundle. The mechanism used, to\n     * activate support for map-based bindings at runtime is possible via the\n     * `activeStylingMapFeature` function (which is also present in this file).\n     *\n     * # The Algorithm\n     * Whenever a map-based binding updates (which is when the identity of the\n     * map-value changes) then the map is iterated over and a `StylingMapArray` array\n     * is produced. The `StylingMapArray` instance is stored in the binding location\n     * where the `BINDING_INDEX` is situated when the `styleMap()` or `classMap()`\n     * instruction were called. Once the binding changes, then the internal `bitMask`\n     * value is marked as dirty.\n     *\n     * Styling values are applied once CD exits the element (which happens when\n     * the `advance(n)` instruction is called or the template function exits). When\n     * this occurs, all prop-based bindings are applied. If a map-based binding is\n     * present then a special flushing function (called a sync function) is made\n     * available and it will be called each time a styling property is flushed.\n     *\n     * The flushing algorithm is designed to apply styling for a property (which is\n     * a CSS property or a className value) one by one. If map-based bindings\n     * are present, then the flushing algorithm will keep calling the maps styling\n     * sync function each time a property is visited. This way, the flushing\n     * behavior of map-based bindings will always be at the same property level\n     * as the current prop-based property being iterated over (because everything\n     * is alphabetically sorted).\n     *\n     * Let's imagine we have the following HTML template code:\n     *\n     * ```html\n     * <div [style]=\"{width:'100px', height:'200px', 'z-index':'10'}\"\n     *      [style.width.px]=\"200\">...</div>\n     * ```\n     *\n     * When CD occurs, both the `[style]` and `[style.width]` bindings\n     * are evaluated. Then when the styles are flushed on screen, the\n     * following operations happen:\n     *\n     * 1. `[style.width]` is attempted to be written to the element.\n     *\n     * 2.  Once that happens, the algorithm instructs the map-based\n     *     entries (`[style]` in this case) to \"catch up\" and apply\n     *     all values up to the `width` value. When this happens the\n     *     `height` value is applied to the element (since it is\n     *     alphabetically situated before the `width` property).\n     *\n     * 3. Since there are no more prop-based entries anymore, the\n     *    loop exits and then, just before the flushing ends, it\n     *    instructs all map-based bindings to \"finish up\" applying\n     *    their values.\n     *\n     * 4. The only remaining value within the map-based entries is\n     *    the `z-index` value (`width` got skipped because it was\n     *    successfully applied via the prop-based `[style.width]`\n     *    binding). Since all map-based entries are told to \"finish up\",\n     *    the `z-index` value is iterated over and it is then applied\n     *    to the element.\n     *\n     * The most important thing to take note of here is that prop-based\n     * bindings are evaluated in order alongside map-based bindings.\n     * This allows all styling across an element to be applied in O(n)\n     * time (a similar algorithm is that of the array merge algorithm\n     * in merge sort).\n     */\n    var syncStylingMap = function (context, renderer, element, data, sourceIndex, applyStylingFn, sanitizer, mode, targetProp, defaultValue) {\n        var targetPropValueWasApplied = false;\n        // once the map-based styling code is activate it is never deactivated. For this reason a\n        // check to see if the current styling context has any map based bindings is required.\n        var totalMaps = getValuesCount(context);\n        if (totalMaps) {\n            var runTheSyncAlgorithm = true;\n            var loopUntilEnd = !targetProp;\n            // If the code is told to finish up (run until the end), but the mode\n            // hasn't been flagged to apply values (it only traverses values) then\n            // there is no point in iterating over the array because nothing will\n            // be applied to the element.\n            if (loopUntilEnd && (mode & 1 /* ApplyAllValues */) === 0) {\n                runTheSyncAlgorithm = false;\n                targetPropValueWasApplied = true;\n            }\n            if (runTheSyncAlgorithm) {\n                targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp || null, sourceIndex, defaultValue || null);\n            }\n            if (loopUntilEnd) {\n                resetSyncCursors();\n            }\n        }\n        return targetPropValueWasApplied;\n    };\n    /**\n     * Recursive function designed to apply map-based styling to an element one map at a time.\n     *\n     * This function is designed to be called from the `syncStylingMap` function and will\n     * apply map-based styling data one map at a time to the provided `element`.\n     *\n     * This function is recursive and it will call itself if a follow-up map value is to be\n     * processed. To learn more about how the algorithm works, see `syncStylingMap`.\n     */\n    function innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex, defaultValue) {\n        var totalMaps = getValuesCount(context) - 1; // maps have no default value\n        var mapsLimit = totalMaps - 1;\n        var recurseInnerMaps = currentMapIndex < mapsLimit && (mode & 8 /* RecurseInnerMaps */) !== 0;\n        var checkValuesOnly = (mode & 16 /* CheckValuesOnly */) !== 0;\n        if (checkValuesOnly) {\n            // inner modes do not check values ever (that can only happen\n            // when sourceIndex === 0)\n            mode &= ~16 /* CheckValuesOnly */;\n        }\n        var targetPropValueWasApplied = false;\n        if (currentMapIndex <= mapsLimit) {\n            var cursor = getCurrentSyncCursor(currentMapIndex);\n            var bindingIndex = getBindingValue(context, 2 /* ValuesStartPosition */, currentMapIndex);\n            var stylingMapArr = getValue(data, bindingIndex);\n            if (stylingMapArr) {\n                while (cursor < stylingMapArr.length) {\n                    var prop = getMapProp(stylingMapArr, cursor);\n                    var iteratedTooFar = targetProp && prop > targetProp;\n                    var isTargetPropMatched = !iteratedTooFar && prop === targetProp;\n                    var value = getMapValue(stylingMapArr, cursor);\n                    var valueIsDefined = isStylingValueDefined(value);\n                    // the recursive code is designed to keep applying until\n                    // it reaches or goes past the target prop. If and when\n                    // this happens then it will stop processing values, but\n                    // all other map values must also catch up to the same\n                    // point. This is why a recursive call is still issued\n                    // even if the code has iterated too far.\n                    var innerMode = iteratedTooFar ? mode : resolveInnerMapMode(mode, valueIsDefined, isTargetPropMatched);\n                    var innerProp = iteratedTooFar ? targetProp : prop;\n                    var valueApplied = recurseInnerMaps ?\n                        innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, innerMode, innerProp, currentMapIndex + 1, defaultValue) :\n                        false;\n                    if (iteratedTooFar) {\n                        if (!targetPropValueWasApplied) {\n                            targetPropValueWasApplied = valueApplied;\n                        }\n                        break;\n                    }\n                    if (!valueApplied && isValueAllowedToBeApplied(mode, isTargetPropMatched)) {\n                        valueApplied = true;\n                        if (!checkValuesOnly) {\n                            var useDefault = isTargetPropMatched && !valueIsDefined;\n                            var bindingIndexToApply = isTargetPropMatched ? bindingIndex : null;\n                            var finalValue = void 0;\n                            if (useDefault) {\n                                finalValue = defaultValue;\n                            }\n                            else {\n                                finalValue = sanitizer ?\n                                    sanitizer(prop, value, 3 /* ValidateAndSanitize */) :\n                                    (value ? unwrapSafeValue(value) : null);\n                            }\n                            applyStylingFn(renderer, element, prop, finalValue, bindingIndexToApply);\n                        }\n                    }\n                    targetPropValueWasApplied = valueApplied && isTargetPropMatched;\n                    cursor += 2 /* TupleSize */;\n                }\n                setCurrentSyncCursor(currentMapIndex, cursor);\n                // this is a fallback case in the event that the styling map is `null` for this\n                // binding but there are other map-based bindings that need to be evaluated\n                // afterwards. If the `prop` value is falsy then the intention is to cycle\n                // through all of the properties in the remaining maps as well. If the current\n                // styling map is too short then there are no values to iterate over. In either\n                // case the follow-up maps need to be iterated over.\n                if (recurseInnerMaps &&\n                    (stylingMapArr.length === 1 /* ValuesStartPosition */ || !targetProp)) {\n                    targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex + 1, defaultValue);\n                }\n            }\n            else if (recurseInnerMaps) {\n                targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex + 1, defaultValue);\n            }\n        }\n        return targetPropValueWasApplied;\n    }\n    /**\n     * Used to determine the mode for the inner recursive call.\n     *\n     * If an inner map is iterated on then this is done so for one\n     * of two reasons:\n     *\n     * - value is being applied:\n     *   if the value is being applied from this current styling\n     *   map then there is no need to apply it in a deeper map\n     *   (i.e. the `SkipTargetProp` flag is set)\n     *\n     * - value is being not applied:\n     *   apply the value if it is found in a deeper map.\n     *   (i.e. the `SkipTargetProp` flag is unset)\n     *\n     * When these reasons are encountered the flags will for the\n     * inner map mode will be configured.\n     */\n    function resolveInnerMapMode(currentMode, valueIsDefined, isTargetPropMatched) {\n        var innerMode = currentMode;\n        // the statements below figures out whether or not an inner styling map\n        // is allowed to apply its value or not. The main thing to keep note\n        // of is that if the target prop isn't matched then its expected that\n        // all values before it are allowed to be applied so long as \"apply all values\"\n        // is set to true.\n        var applyAllValues = currentMode & 1 /* ApplyAllValues */;\n        var applyTargetProp = currentMode & 2 /* ApplyTargetProp */;\n        var allowInnerApply = !valueIsDefined && (isTargetPropMatched ? applyTargetProp : applyAllValues);\n        if (allowInnerApply) {\n            // case 1: set the mode to apply the targeted prop value if it\n            // ends up being encountered in another map value\n            innerMode |= 2 /* ApplyTargetProp */;\n            innerMode &= ~4 /* SkipTargetProp */;\n        }\n        else {\n            // case 2: set the mode to skip the targeted prop value if it\n            // ends up being encountered in another map value\n            innerMode |= 4 /* SkipTargetProp */;\n            innerMode &= ~2 /* ApplyTargetProp */;\n        }\n        return innerMode;\n    }\n    /**\n     * Decides whether or not a prop/value entry will be applied to an element.\n     *\n     * To determine whether or not a value is to be applied,\n     * the following procedure is evaluated:\n     *\n     * First check to see the current `mode` status:\n     *  1. If the mode value permits all props to be applied then allow.\n     *    - But do not allow if the current prop is set to be skipped.\n     *  2. Otherwise if the current prop is permitted then allow.\n     */\n    function isValueAllowedToBeApplied(mode, isTargetPropMatched) {\n        var doApplyValue = (mode & 1 /* ApplyAllValues */) !== 0;\n        if (!doApplyValue) {\n            if (mode & 2 /* ApplyTargetProp */) {\n                doApplyValue = isTargetPropMatched;\n            }\n        }\n        else if ((mode & 4 /* SkipTargetProp */) && isTargetPropMatched) {\n            doApplyValue = false;\n        }\n        return doApplyValue;\n    }\n    /**\n     * Used to keep track of concurrent cursor values for multiple map-based styling bindings present on\n     * an element.\n     */\n    var MAP_CURSORS = [];\n    /**\n     * Used to reset the state of each cursor value being used to iterate over map-based styling\n     * bindings.\n     */\n    function resetSyncCursors() {\n        for (var i = 0; i < MAP_CURSORS.length; i++) {\n            MAP_CURSORS[i] = 1 /* ValuesStartPosition */;\n        }\n    }\n    /**\n     * Returns an active cursor value at a given mapIndex location.\n     */\n    function getCurrentSyncCursor(mapIndex) {\n        if (mapIndex >= MAP_CURSORS.length) {\n            MAP_CURSORS.push(1 /* ValuesStartPosition */);\n        }\n        return MAP_CURSORS[mapIndex];\n    }\n    /**\n     * Sets a cursor value at a given mapIndex location.\n     */\n    function setCurrentSyncCursor(mapIndex, indexValue) {\n        MAP_CURSORS[mapIndex] = indexValue;\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * Instantiates and attaches an instance of `TStylingContextDebug` to the provided context\n     */\n    function attachStylingDebugObject(context, tNode, isClassBased) {\n        var debug = new TStylingContextDebug(context, tNode, isClassBased);\n        attachDebugObject(context, debug);\n        return debug;\n    }\n    /**\n     * A human-readable debug summary of the styling data present within `TStylingContext`.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var TStylingContextDebug = /** @class */ (function () {\n        function TStylingContextDebug(context, _tNode, _isClassBased) {\n            this.context = context;\n            this._tNode = _tNode;\n            this._isClassBased = _isClassBased;\n        }\n        Object.defineProperty(TStylingContextDebug.prototype, \"config\", {\n            get: function () { return buildConfig(this._tNode, this._isClassBased); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TStylingContextDebug.prototype, \"entries\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context.\n             *\n             * See `DebugStylingContextEntry`.\n             */\n            get: function () {\n                var context = this.context;\n                var totalColumns = getValuesCount(context);\n                var entries = {};\n                var start = getPropValuesStartPosition(context, this._tNode, this._isClassBased);\n                var i = start;\n                while (i < context.length) {\n                    var prop = getProp(context, i);\n                    var templateBitMask = getGuardMask(context, i, false);\n                    var hostBindingsBitMask = getGuardMask(context, i, true);\n                    var defaultValue = getDefaultValue(context, i);\n                    var sanitizationRequired = isSanitizationRequired(context, i);\n                    var bindingsStartPosition = i + 4 /* BindingsStartOffset */;\n                    var sources = [];\n                    for (var j = 0; j < totalColumns; j++) {\n                        var bindingIndex = context[bindingsStartPosition + j];\n                        if (bindingIndex !== 0) {\n                            sources.push(bindingIndex);\n                        }\n                    }\n                    entries[prop] = {\n                        prop: prop,\n                        templateBitMask: templateBitMask,\n                        hostBindingsBitMask: hostBindingsBitMask,\n                        sanitizationRequired: sanitizationRequired,\n                        valuesCount: sources.length, defaultValue: defaultValue, sources: sources,\n                    };\n                    i += 4 /* BindingsStartOffset */ + totalColumns;\n                }\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Prints a detailed summary of each styling source grouped together with each binding index in\n         * the context.\n         */\n        TStylingContextDebug.prototype.printSources = function () {\n            var output = '\\n';\n            var context = this.context;\n            var prefix = this._isClassBased ? 'class' : 'style';\n            var bindingsBySource = [];\n            var totalColumns = getValuesCount(context);\n            var itemsPerRow = 4 /* BindingsStartOffset */ + totalColumns;\n            for (var i = 0; i < totalColumns; i++) {\n                var isDefaultColumn = i === totalColumns - 1;\n                var hostBindingsMode = i !== TEMPLATE_DIRECTIVE_INDEX;\n                var type = getTypeFromColumn(i, totalColumns);\n                var entries = [];\n                var j = 2 /* ValuesStartPosition */;\n                while (j < context.length) {\n                    var value = getBindingValue(context, j, i);\n                    if (isDefaultColumn || value > 0) {\n                        var bitMask = getGuardMask(context, j, hostBindingsMode);\n                        var bindingIndex = isDefaultColumn ? -1 : value;\n                        var prop = getProp(context, j);\n                        var isMapBased = prop === MAP_BASED_ENTRY_PROP_NAME;\n                        var binding = \"\" + prefix + (isMapBased ? '' : '.' + prop);\n                        entries.push({ binding: binding, value: value, bindingIndex: bindingIndex, bitMask: bitMask });\n                    }\n                    j += itemsPerRow;\n                }\n                bindingsBySource.push({ type: type, entries: entries.sort(function (a, b) { return a.bindingIndex - b.bindingIndex; }) });\n            }\n            bindingsBySource.forEach(function (entry) {\n                output += \"[\" + entry.type.toUpperCase() + \"]\\n\";\n                output += repeat('-', entry.type.length + 2) + '\\n';\n                var tab = '  ';\n                entry.entries.forEach(function (entry) {\n                    var isDefault = typeof entry.value !== 'number';\n                    var value = entry.value;\n                    if (!isDefault || value !== null) {\n                        output += tab + \"[\" + entry.binding + \"] = `\" + value + \"`\";\n                        output += '\\n';\n                    }\n                });\n                output += '\\n';\n            });\n            /* tslint:disable */\n            console.log(output);\n        };\n        /**\n         * Prints a detailed table of the entire styling context.\n         */\n        TStylingContextDebug.prototype.printTable = function () {\n            // IE (not Edge) is the only browser that doesn't support this feature. Because\n            // these debugging tools are not apart of the core of Angular (they are just\n            // extra tools) we can skip-out on older browsers.\n            if (!console.table) {\n                throw new Error('This feature is not supported in your browser');\n            }\n            var context = this.context;\n            var table = [];\n            var totalColumns = getValuesCount(context);\n            var itemsPerRow = 4 /* BindingsStartOffset */ + totalColumns;\n            var totalProps = Math.floor(context.length / itemsPerRow);\n            var i = 2 /* ValuesStartPosition */;\n            while (i < context.length) {\n                var prop = getProp(context, i);\n                var isMapBased = prop === MAP_BASED_ENTRY_PROP_NAME;\n                var entry = {\n                    prop: prop,\n                    'tpl mask': generateBitString(getGuardMask(context, i, false), isMapBased, totalProps),\n                    'host mask': generateBitString(getGuardMask(context, i, true), isMapBased, totalProps),\n                };\n                for (var j = 0; j < totalColumns; j++) {\n                    var key = getTypeFromColumn(j, totalColumns);\n                    var value = getBindingValue(context, i, j);\n                    entry[key] = value;\n                }\n                i += itemsPerRow;\n                table.push(entry);\n            }\n            /* tslint:disable */\n            console.table(table);\n        };\n        return TStylingContextDebug;\n    }());\n    function generateBitString(value, isMapBased, totalProps) {\n        if (isMapBased || value > 1) {\n            return \"0b\" + leftPad(value.toString(2), totalProps, '0');\n        }\n        return null;\n    }\n    function leftPad(value, max, pad) {\n        return repeat(pad, max - value.length) + value;\n    }\n    function getTypeFromColumn(index, totalColumns) {\n        if (index === TEMPLATE_DIRECTIVE_INDEX) {\n            return 'template';\n        }\n        else if (index === totalColumns - 1) {\n            return 'defaults';\n        }\n        else {\n            return \"dir #\" + index;\n        }\n    }\n    function repeat(c, times) {\n        var s = '';\n        for (var i = 0; i < times; i++) {\n            s += c;\n        }\n        return s;\n    }\n    /**\n     * A human-readable debug summary of the styling data present for a `DebugNode` instance.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var NodeStylingDebug = /** @class */ (function () {\n        function NodeStylingDebug(context, _tNode, _data, _isClassBased) {\n            this._tNode = _tNode;\n            this._data = _data;\n            this._isClassBased = _isClassBased;\n            this._sanitizer = null;\n            this._debugContext = isStylingContext(context) ?\n                new TStylingContextDebug(context, _tNode, _isClassBased) :\n                context;\n        }\n        Object.defineProperty(NodeStylingDebug.prototype, \"context\", {\n            get: function () { return this._debugContext; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Overrides the sanitizer used to process styles.\n         */\n        NodeStylingDebug.prototype.overrideSanitizer = function (sanitizer) { this._sanitizer = sanitizer; };\n        Object.defineProperty(NodeStylingDebug.prototype, \"summary\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context and\n             * what their runtime representation is.\n             *\n             * See `LStylingSummary`.\n             */\n            get: function () {\n                var entries = {};\n                var config = this.config;\n                var isClassBased = this._isClassBased;\n                var data = this._data;\n                // the direct pass code doesn't convert [style] or [class] values\n                // into StylingMapArray instances. For this reason, the values\n                // need to be converted ahead of time since the styling debug\n                // relies on context resolution to figure out what styling\n                // values have been added/removed on the element.\n                if (config.allowDirectStyling && config.hasMapBindings) {\n                    data = data.concat([]); // make a copy\n                    this._convertMapBindingsToStylingMapArrays(data);\n                }\n                this._mapValues(data, function (prop, value, bindingIndex) {\n                    entries[prop] = { prop: prop, value: value, bindingIndex: bindingIndex };\n                });\n                // because the styling algorithm runs into two different\n                // modes: direct and context-resolution, the output of the entries\n                // object is different because the removed values are not\n                // saved between updates. For this reason a proxy is created\n                // so that the behavior is the same when examining values\n                // that are no longer active on the element.\n                return createProxy({\n                    get: function (target, prop) {\n                        var value = entries[prop];\n                        if (!value) {\n                            value = {\n                                prop: prop,\n                                value: isClassBased ? false : null,\n                                bindingIndex: null,\n                            };\n                        }\n                        return value;\n                    },\n                    set: function (target, prop, value) { return false; },\n                    ownKeys: function () { return Object.keys(entries); },\n                    getOwnPropertyDescriptor: function (k) {\n                        // we use a special property descriptor here so that enumeration operations\n                        // such as `Object.keys` will work on this proxy.\n                        return {\n                            enumerable: true,\n                            configurable: true,\n                        };\n                    },\n                });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NodeStylingDebug.prototype, \"config\", {\n            get: function () { return buildConfig(this._tNode, this._isClassBased); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NodeStylingDebug.prototype, \"values\", {\n            /**\n             * Returns a key/value map of all the styles/classes that were last applied to the element.\n             */\n            get: function () {\n                var entries = {};\n                var config = this.config;\n                var data = this._data;\n                // the direct pass code doesn't convert [style] or [class] values\n                // into StylingMapArray instances. For this reason, the values\n                // need to be converted ahead of time since the styling debug\n                // relies on context resolution to figure out what styling\n                // values have been added/removed on the element.\n                if (config.allowDirectStyling && config.hasMapBindings) {\n                    data = data.concat([]); // make a copy\n                    this._convertMapBindingsToStylingMapArrays(data);\n                }\n                this._mapValues(data, function (prop, value) { entries[prop] = value; });\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NodeStylingDebug.prototype._convertMapBindingsToStylingMapArrays = function (data) {\n            var context = this.context.context;\n            var limit = getPropValuesStartPosition(context, this._tNode, this._isClassBased);\n            for (var i = 2 /* ValuesStartPosition */ + 4 /* BindingsStartOffset */; i < limit; i++) {\n                var bindingIndex = context[i];\n                var bindingValue = bindingIndex !== 0 ? getValue(data, bindingIndex) : null;\n                if (bindingValue && !Array.isArray(bindingValue)) {\n                    var stylingMapArray = normalizeIntoStylingMap(null, bindingValue, !this._isClassBased);\n                    setValue(data, bindingIndex, stylingMapArray);\n                }\n            }\n        };\n        NodeStylingDebug.prototype._mapValues = function (data, fn) {\n            // there is no need to store/track an element instance. The\n            // element is only used when the styling algorithm attempts to\n            // style the value (and we mock out the stylingApplyFn anyway).\n            var mockElement = {};\n            var mapBindingsFlag = this._isClassBased ? 512 /* hasClassMapBindings */ : 16384 /* hasStyleMapBindings */;\n            var hasMaps = hasConfig(this._tNode, mapBindingsFlag);\n            if (hasMaps) {\n                activateStylingMapFeature();\n            }\n            var mapFn = function (renderer, element, prop, value, bindingIndex) { return fn(prop, value, bindingIndex || null); };\n            var sanitizer = this._isClassBased ? null : (this._sanitizer || getCurrentStyleSanitizer());\n            // run the template bindings\n            applyStylingViaContext(this.context.context, this._tNode, null, mockElement, data, true, mapFn, sanitizer, false, this._isClassBased);\n            // and also the host bindings\n            applyStylingViaContext(this.context.context, this._tNode, null, mockElement, data, true, mapFn, sanitizer, true, this._isClassBased);\n        };\n        return NodeStylingDebug;\n    }());\n    function buildConfig(tNode, isClassBased) {\n        var hasMapBindings = hasConfig(tNode, isClassBased ? 512 /* hasClassMapBindings */ : 16384 /* hasStyleMapBindings */);\n        var hasPropBindings = hasConfig(tNode, isClassBased ? 1024 /* hasClassPropBindings */ : 32768 /* hasStylePropBindings */);\n        var hasCollisions = hasConfig(tNode, isClassBased ? 8192 /* hasDuplicateClassBindings */ : 262144 /* hasDuplicateStyleBindings */);\n        var hasTemplateBindings = hasConfig(tNode, isClassBased ? 2048 /* hasTemplateClassBindings */ : 65536 /* hasTemplateStyleBindings */);\n        var hasHostBindings = hasConfig(tNode, isClassBased ? 4096 /* hasHostClassBindings */ : 131072 /* hasHostStyleBindings */);\n        // `firstTemplatePass` here is false because the context has already been constructed\n        // directly within the behavior of the debugging tools (outside of style/class debugging,\n        // the context is constructed during the first template pass).\n        var allowDirectStyling$1 = allowDirectStyling(tNode, isClassBased, false);\n        return {\n            hasMapBindings: hasMapBindings,\n            hasPropBindings: hasPropBindings,\n            hasCollisions: hasCollisions,\n            hasTemplateBindings: hasTemplateBindings,\n            hasHostBindings: hasHostBindings,\n            allowDirectStyling: allowDirectStyling$1,\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_DEV_MODE = ((typeof ngDevMode === 'undefined' || !!ngDevMode) && initNgDevMode());\n    /*\n     * This file contains conditionally attached classes which provide human readable (debug) level\n     * information for `LView`, `LContainer` and other internal data structures. These data structures\n     * are stored internally as array which makes it very difficult during debugging to reason about the\n     * current state of the system.\n     *\n     * Patching the array with extra property does change the array's hidden class' but it does not\n     * change the cost of access, therefore this patching should not have significant if any impact in\n     * `ngDevMode` mode. (see: https://jsperf.com/array-vs-monkey-patch-array)\n     *\n     * So instead of seeing:\n     * ```\n     * Array(30) [Object, 659, null, …]\n     * ```\n     *\n     * You get to see:\n     * ```\n     * LViewDebug {\n     *   views: [...],\n     *   flags: {attached: true, ...}\n     *   nodes: [\n     *     {html: '<div id=\"123\">', ..., nodes: [\n     *       {html: '<span>', ..., nodes: null}\n     *     ]}\n     *   ]\n     * }\n     * ```\n     */\n    var LVIEW_COMPONENT_CACHE;\n    var LVIEW_EMBEDDED_CACHE;\n    var LVIEW_ROOT;\n    /**\n     * This function clones a blueprint and creates LView.\n     *\n     * Simple slice will keep the same type, and we need it to be LView\n     */\n    function cloneToLViewFromTViewBlueprint(tView) {\n        var debugTView = tView;\n        var lView = getLViewToClone(debugTView.type, tView.template && tView.template.name);\n        return lView.concat(tView.blueprint);\n    }\n    function getLViewToClone(type, name) {\n        switch (type) {\n            case 0 /* Root */:\n                if (LVIEW_ROOT === undefined)\n                    LVIEW_ROOT = new (createNamedArrayType('LRootView'))();\n                return LVIEW_ROOT;\n            case 1 /* Component */:\n                if (LVIEW_COMPONENT_CACHE === undefined)\n                    LVIEW_COMPONENT_CACHE = new Map();\n                var componentArray = LVIEW_COMPONENT_CACHE.get(name);\n                if (componentArray === undefined) {\n                    componentArray = new (createNamedArrayType('LComponentView' + nameSuffix(name)))();\n                    LVIEW_COMPONENT_CACHE.set(name, componentArray);\n                }\n                return componentArray;\n            case 2 /* Embedded */:\n                if (LVIEW_EMBEDDED_CACHE === undefined)\n                    LVIEW_EMBEDDED_CACHE = new Map();\n                var embeddedArray = LVIEW_EMBEDDED_CACHE.get(name);\n                if (embeddedArray === undefined) {\n                    embeddedArray = new (createNamedArrayType('LEmbeddedView' + nameSuffix(name)))();\n                    LVIEW_EMBEDDED_CACHE.set(name, embeddedArray);\n                }\n                return embeddedArray;\n        }\n        throw new Error('unreachable code');\n    }\n    function nameSuffix(text) {\n        if (text == null)\n            return '';\n        var index = text.lastIndexOf('_Template');\n        return '_' + (index === -1 ? text : text.substr(0, index));\n    }\n    /**\n     * This class is a debug version of Object literal so that we can have constructor name show up\n     * in\n     * debug tools in ngDevMode.\n     */\n    var TViewConstructor = /** @class */ (function () {\n        function TView(type, //\n        id, //\n        blueprint, //\n        template, //\n        queries, //\n        viewQuery, //\n        node, //\n        data, //\n        bindingStartIndex, //\n        expandoStartIndex, //\n        expandoInstructions, //\n        firstCreatePass, //\n        firstUpdatePass, //\n        staticViewQueries, //\n        staticContentQueries, //\n        preOrderHooks, //\n        preOrderCheckHooks, //\n        contentHooks, //\n        contentCheckHooks, //\n        viewHooks, //\n        viewCheckHooks, //\n        destroyHooks, //\n        cleanup, //\n        contentQueries, //\n        components, //\n        directiveRegistry, //\n        pipeRegistry, //\n        firstChild, //\n        schemas, //\n        consts) {\n            this.type = type;\n            this.id = id;\n            this.blueprint = blueprint;\n            this.template = template;\n            this.queries = queries;\n            this.viewQuery = viewQuery;\n            this.node = node;\n            this.data = data;\n            this.bindingStartIndex = bindingStartIndex;\n            this.expandoStartIndex = expandoStartIndex;\n            this.expandoInstructions = expandoInstructions;\n            this.firstCreatePass = firstCreatePass;\n            this.firstUpdatePass = firstUpdatePass;\n            this.staticViewQueries = staticViewQueries;\n            this.staticContentQueries = staticContentQueries;\n            this.preOrderHooks = preOrderHooks;\n            this.preOrderCheckHooks = preOrderCheckHooks;\n            this.contentHooks = contentHooks;\n            this.contentCheckHooks = contentCheckHooks;\n            this.viewHooks = viewHooks;\n            this.viewCheckHooks = viewCheckHooks;\n            this.destroyHooks = destroyHooks;\n            this.cleanup = cleanup;\n            this.contentQueries = contentQueries;\n            this.components = components;\n            this.directiveRegistry = directiveRegistry;\n            this.pipeRegistry = pipeRegistry;\n            this.firstChild = firstChild;\n            this.schemas = schemas;\n            this.consts = consts;\n        }\n        Object.defineProperty(TView.prototype, \"template_\", {\n            get: function () {\n                var buf = [];\n                processTNodeChildren(this.firstChild, buf);\n                return buf.join('');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TView;\n    }());\n    var TNodeConstructor = /** @class */ (function () {\n        function TNode(tView_, //\n        type, //\n        index, //\n        injectorIndex, //\n        directiveStart, //\n        directiveEnd, //\n        propertyBindings, //\n        flags, //\n        providerIndexes, //\n        tagName, //\n        attrs, //\n        localNames, //\n        initialInputs, //\n        inputs, //\n        outputs, //\n        tViews, //\n        next, //\n        projectionNext, //\n        child, //\n        parent, //\n        projection, //\n        styles, //\n        classes) {\n            this.tView_ = tView_;\n            this.type = type;\n            this.index = index;\n            this.injectorIndex = injectorIndex;\n            this.directiveStart = directiveStart;\n            this.directiveEnd = directiveEnd;\n            this.propertyBindings = propertyBindings;\n            this.flags = flags;\n            this.providerIndexes = providerIndexes;\n            this.tagName = tagName;\n            this.attrs = attrs;\n            this.localNames = localNames;\n            this.initialInputs = initialInputs;\n            this.inputs = inputs;\n            this.outputs = outputs;\n            this.tViews = tViews;\n            this.next = next;\n            this.projectionNext = projectionNext;\n            this.child = child;\n            this.parent = parent;\n            this.projection = projection;\n            this.styles = styles;\n            this.classes = classes;\n        }\n        Object.defineProperty(TNode.prototype, \"type_\", {\n            get: function () {\n                switch (this.type) {\n                    case 0 /* Container */:\n                        return 'TNodeType.Container';\n                    case 3 /* Element */:\n                        return 'TNodeType.Element';\n                    case 4 /* ElementContainer */:\n                        return 'TNodeType.ElementContainer';\n                    case 5 /* IcuContainer */:\n                        return 'TNodeType.IcuContainer';\n                    case 1 /* Projection */:\n                        return 'TNodeType.Projection';\n                    case 2 /* View */:\n                        return 'TNodeType.View';\n                    default:\n                        return 'TNodeType.???';\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"flags_\", {\n            get: function () {\n                var flags = [];\n                if (this.flags & 16 /* hasClassInput */)\n                    flags.push('TNodeFlags.hasClassInput');\n                if (this.flags & 8 /* hasContentQuery */)\n                    flags.push('TNodeFlags.hasContentQuery');\n                if (this.flags & 32 /* hasStyleInput */)\n                    flags.push('TNodeFlags.hasStyleInput');\n                if (this.flags & 256 /* hasInitialStyling */)\n                    flags.push('TNodeFlags.hasInitialStyling');\n                if (this.flags & 128 /* hasHostBindings */)\n                    flags.push('TNodeFlags.hasHostBindings');\n                if (this.flags & 2 /* isComponentHost */)\n                    flags.push('TNodeFlags.isComponentHost');\n                if (this.flags & 1 /* isDirectiveHost */)\n                    flags.push('TNodeFlags.isDirectiveHost');\n                if (this.flags & 64 /* isDetached */)\n                    flags.push('TNodeFlags.isDetached');\n                if (this.flags & 4 /* isProjected */)\n                    flags.push('TNodeFlags.isProjected');\n                return flags.join('|');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"template_\", {\n            get: function () {\n                var buf = [];\n                buf.push('<', this.tagName || this.type_);\n                if (this.attrs) {\n                    for (var i = 0; i < this.attrs.length;) {\n                        var attrName = this.attrs[i++];\n                        if (typeof attrName == 'number') {\n                            break;\n                        }\n                        var attrValue = this.attrs[i++];\n                        buf.push(' ', attrName, '=\"', attrValue, '\"');\n                    }\n                }\n                buf.push('>');\n                processTNodeChildren(this.child, buf);\n                buf.push('</', this.tagName || this.type_, '>');\n                return buf.join('');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TNode;\n    }());\n    function processTNodeChildren(tNode, buf) {\n        while (tNode) {\n            buf.push(tNode.template_);\n            tNode = tNode.next;\n        }\n    }\n    var TViewData = NG_DEV_MODE && createNamedArrayType('TViewData') || null;\n    var TVIEWDATA_EMPTY; // can't initialize here or it will not be tree shaken, because `LView`\n    // constructor could have side-effects.\n    /**\n     * This function clones a blueprint and creates TData.\n     *\n     * Simple slice will keep the same type, and we need it to be TData\n     */\n    function cloneToTViewData(list) {\n        if (TVIEWDATA_EMPTY === undefined)\n            TVIEWDATA_EMPTY = new TViewData();\n        return TVIEWDATA_EMPTY.concat(list);\n    }\n    var LViewBlueprint = NG_DEV_MODE && createNamedArrayType('LViewBlueprint') || null;\n    var MatchesArray = NG_DEV_MODE && createNamedArrayType('MatchesArray') || null;\n    var TViewComponents = NG_DEV_MODE && createNamedArrayType('TViewComponents') || null;\n    var TNodeLocalNames = NG_DEV_MODE && createNamedArrayType('TNodeLocalNames') || null;\n    var TNodeInitialInputs = NG_DEV_MODE && createNamedArrayType('TNodeInitialInputs') || null;\n    var TNodeInitialData = NG_DEV_MODE && createNamedArrayType('TNodeInitialData') || null;\n    var LCleanup = NG_DEV_MODE && createNamedArrayType('LCleanup') || null;\n    var TCleanup = NG_DEV_MODE && createNamedArrayType('TCleanup') || null;\n    function attachLViewDebug(lView) {\n        attachDebugObject(lView, new LViewDebug(lView));\n    }\n    function attachLContainerDebug(lContainer) {\n        attachDebugObject(lContainer, new LContainerDebug(lContainer));\n    }\n    function toDebug(obj) {\n        if (obj) {\n            var debug = obj.debug;\n            assertDefined(debug, 'Object does not have a debug representation.');\n            return debug;\n        }\n        else {\n            return obj;\n        }\n    }\n    /**\n     * Use this method to unwrap a native element in `LView` and convert it into HTML for easier\n     * reading.\n     *\n     * @param value possibly wrapped native DOM node.\n     * @param includeChildren If `true` then the serialized HTML form will include child elements\n     * (same\n     * as `outerHTML`). If `false` then the serialized HTML form will only contain the element\n     * itself\n     * (will not serialize child elements).\n     */\n    function toHtml(value, includeChildren) {\n        if (includeChildren === void 0) { includeChildren = false; }\n        var node = unwrapRNode(value);\n        if (node) {\n            var isTextNode = node.nodeType === Node.TEXT_NODE;\n            var outerHTML = (isTextNode ? node.textContent : node.outerHTML) || '';\n            if (includeChildren || isTextNode) {\n                return outerHTML;\n            }\n            else {\n                var innerHTML = '>' + node.innerHTML + '<';\n                return (outerHTML.split(innerHTML)[0]) + '>';\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    var LViewDebug = /** @class */ (function () {\n        function LViewDebug(_raw_lView) {\n            this._raw_lView = _raw_lView;\n        }\n        Object.defineProperty(LViewDebug.prototype, \"flags\", {\n            /**\n             * Flags associated with the `LView` unpacked into a more readable state.\n             */\n            get: function () {\n                var flags = this._raw_lView[FLAGS];\n                return {\n                    __raw__flags__: flags,\n                    initPhaseState: flags & 3 /* InitPhaseStateMask */,\n                    creationMode: !!(flags & 4 /* CreationMode */),\n                    firstViewPass: !!(flags & 8 /* FirstLViewPass */),\n                    checkAlways: !!(flags & 16 /* CheckAlways */),\n                    dirty: !!(flags & 64 /* Dirty */),\n                    attached: !!(flags & 128 /* Attached */),\n                    destroyed: !!(flags & 256 /* Destroyed */),\n                    isRoot: !!(flags & 512 /* IsRoot */),\n                    indexWithinInitPhase: flags >> 10 /* IndexWithinInitPhaseShift */,\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lView[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"host\", {\n            get: function () { return toHtml(this._raw_lView[HOST], true); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"html\", {\n            get: function () { return (this.nodes || []).map(function (node) { return toHtml(node.native, true); }).join(''); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"context\", {\n            get: function () { return this._raw_lView[CONTEXT]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"nodes\", {\n            /**\n             * The tree of nodes associated with the current `LView`. The nodes have been normalized into\n             * a\n             * tree structure with relevant details pulled out for readability.\n             */\n            get: function () {\n                var lView = this._raw_lView;\n                var tNode = lView[TVIEW].firstChild;\n                return toDebugNodes(tNode, lView);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"tView\", {\n            get: function () { return this._raw_lView[TVIEW]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"cleanup\", {\n            get: function () { return this._raw_lView[CLEANUP]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"injector\", {\n            get: function () { return this._raw_lView[INJECTOR$1]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"rendererFactory\", {\n            get: function () { return this._raw_lView[RENDERER_FACTORY]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"renderer\", {\n            get: function () { return this._raw_lView[RENDERER]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"sanitizer\", {\n            get: function () { return this._raw_lView[SANITIZER]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childHead\", {\n            get: function () { return toDebug(this._raw_lView[CHILD_HEAD]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"next\", {\n            get: function () { return toDebug(this._raw_lView[NEXT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childTail\", {\n            get: function () { return toDebug(this._raw_lView[CHILD_TAIL]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"declarationView\", {\n            get: function () { return toDebug(this._raw_lView[DECLARATION_VIEW]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"queries\", {\n            get: function () { return this._raw_lView[QUERIES]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"tHost\", {\n            get: function () { return this._raw_lView[T_HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childViews\", {\n            /**\n             * Normalized view of child views (and containers) attached at this location.\n             */\n            get: function () {\n                var childViews = [];\n                var child = this.childHead;\n                while (child) {\n                    childViews.push(child);\n                    child = child.next;\n                }\n                return childViews;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LViewDebug;\n    }());\n    /**\n     * Turns a flat list of nodes into a tree by walking the associated `TNode` tree.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function toDebugNodes(tNode, lView) {\n        if (tNode) {\n            var debugNodes = [];\n            var tNodeCursor = tNode;\n            while (tNodeCursor) {\n                debugNodes.push(buildDebugNode(tNodeCursor, lView, tNodeCursor.index));\n                tNodeCursor = tNodeCursor.next;\n            }\n            return debugNodes;\n        }\n        else {\n            return null;\n        }\n    }\n    function buildDebugNode(tNode, lView, nodeIndex) {\n        var rawValue = lView[nodeIndex];\n        var native = unwrapRNode(rawValue);\n        var componentLViewDebug = toDebug(readLViewValue(rawValue));\n        var styles = isStylingContext(tNode.styles) ?\n            new NodeStylingDebug(tNode.styles, tNode, lView, false) :\n            null;\n        var classes = isStylingContext(tNode.classes) ?\n            new NodeStylingDebug(tNode.classes, tNode, lView, true) :\n            null;\n        return {\n            html: toHtml(native),\n            native: native, styles: styles, classes: classes,\n            nodes: toDebugNodes(tNode.child, lView),\n            component: componentLViewDebug,\n        };\n    }\n    var LContainerDebug = /** @class */ (function () {\n        function LContainerDebug(_raw_lContainer) {\n            this._raw_lContainer = _raw_lContainer;\n        }\n        Object.defineProperty(LContainerDebug.prototype, \"activeIndex\", {\n            get: function () { return this._raw_lContainer[ACTIVE_INDEX]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"views\", {\n            get: function () {\n                return this._raw_lContainer.slice(CONTAINER_HEADER_OFFSET)\n                    .map(toDebug);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lContainer[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"movedViews\", {\n            get: function () { return this._raw_lContainer[MOVED_VIEWS]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"host\", {\n            get: function () { return this._raw_lContainer[HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"native\", {\n            get: function () { return this._raw_lContainer[NATIVE]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"next\", {\n            get: function () { return toDebug(this._raw_lContainer[NEXT]); },\n            enumerable: true,\n            configurable: true\n        });\n        return LContainerDebug;\n    }());\n    /**\n     * Return an `LView` value if found.\n     *\n     * @param value `LView` if any\n     */\n    function readLViewValue(value) {\n        while (Array.isArray(value)) {\n            // This check is not quite right, as it does not take into account `StylingContext`\n            // This is why it is in debug, not in util.ts\n            if (value.length >= HEADER_OFFSET - 1)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    var I18NDebugItem = /** @class */ (function () {\n        function I18NDebugItem(__raw_opCode, _lView, nodeIndex, type) {\n            this.__raw_opCode = __raw_opCode;\n            this._lView = _lView;\n            this.nodeIndex = nodeIndex;\n            this.type = type;\n        }\n        Object.defineProperty(I18NDebugItem.prototype, \"tNode\", {\n            get: function () { return getTNode(this.nodeIndex, this._lView); },\n            enumerable: true,\n            configurable: true\n        });\n        return I18NDebugItem;\n    }());\n    /**\n     * Turns a list of \"Create\" & \"Update\" OpCodes into a human-readable list of operations for\n     * debugging purposes.\n     * @param mutateOpCodes mutation opCodes to read\n     * @param updateOpCodes update opCodes to read\n     * @param icus list of ICU expressions\n     * @param lView The view the opCodes are acting on\n     */\n    function attachI18nOpCodesDebug(mutateOpCodes, updateOpCodes, icus, lView) {\n        attachDebugObject(mutateOpCodes, new I18nMutateOpCodesDebug(mutateOpCodes, lView));\n        attachDebugObject(updateOpCodes, new I18nUpdateOpCodesDebug(updateOpCodes, icus, lView));\n        if (icus) {\n            icus.forEach(function (icu) {\n                icu.create.forEach(function (icuCase) { attachDebugObject(icuCase, new I18nMutateOpCodesDebug(icuCase, lView)); });\n                icu.update.forEach(function (icuCase) {\n                    attachDebugObject(icuCase, new I18nUpdateOpCodesDebug(icuCase, icus, lView));\n                });\n            });\n        }\n    }\n    var I18nMutateOpCodesDebug = /** @class */ (function () {\n        function I18nMutateOpCodesDebug(__raw_opCodes, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nMutateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    var opCode = __raw_opCodes[i];\n                    var result = void 0;\n                    if (typeof opCode === 'string') {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Create Text Node',\n                            nodeIndex: __raw_opCodes[++i],\n                            text: opCode,\n                        };\n                    }\n                    if (typeof opCode === 'number') {\n                        switch (opCode & 7 /* MASK_OPCODE */) {\n                            case 1 /* AppendChild */:\n                                var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                                result = new I18NDebugItem(opCode, __lView, destinationNodeIndex, 'AppendChild');\n                                break;\n                            case 0 /* Select */:\n                                var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, nodeIndex, 'Select');\n                                break;\n                            case 5 /* ElementEnd */:\n                                var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'ElementEnd');\n                                break;\n                            case 4 /* Attr */:\n                                elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'Attr');\n                                result['attrName'] = __raw_opCodes[++i];\n                                result['attrValue'] = __raw_opCodes[++i];\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        switch (opCode) {\n                            case COMMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'COMMENT_MARKER',\n                                    commentValue: __raw_opCodes[++i],\n                                    nodeIndex: __raw_opCodes[++i],\n                                };\n                                break;\n                            case ELEMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'ELEMENT_MARKER',\n                                };\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Unknown Op Code',\n                            code: opCode,\n                        };\n                    }\n                    results.push(result);\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nMutateOpCodesDebug;\n    }());\n    var I18nUpdateOpCodesDebug = /** @class */ (function () {\n        function I18nUpdateOpCodesDebug(__raw_opCodes, icus, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.icus = icus;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nUpdateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes, icus = _a.icus;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    // bit code to check if we should apply the next update\n                    var checkBit = __raw_opCodes[i];\n                    // Number of opCodes to skip until next set of update codes\n                    var skipCodes = __raw_opCodes[++i];\n                    var value = '';\n                    for (var j = i + 1; j <= (i + skipCodes); j++) {\n                        var opCode = __raw_opCodes[j];\n                        if (typeof opCode === 'string') {\n                            value += opCode;\n                        }\n                        else if (typeof opCode == 'number') {\n                            if (opCode < 0) {\n                                // It's a binding index whose value is negative\n                                // We cannot know the value of the binding so we only show the index\n                                value += \"\\uFFFD\" + (-opCode - 1) + \"\\uFFFD\";\n                            }\n                            else {\n                                var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                                var tIcuIndex = void 0;\n                                var tIcu = void 0;\n                                switch (opCode & 3 /* MASK_OPCODE */) {\n                                    case 1 /* Attr */:\n                                        var attrName = __raw_opCodes[++j];\n                                        var sanitizeFn = __raw_opCodes[++j];\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Attr',\n                                            attrValue: value, attrName: attrName, sanitizeFn: sanitizeFn,\n                                        });\n                                        break;\n                                    case 0 /* Text */:\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Text', nodeIndex: nodeIndex,\n                                            text: value,\n                                        });\n                                        break;\n                                    case 2 /* IcuSwitch */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        var result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuSwitch');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['mainBinding'] = value;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                    case 3 /* IcuUpdate */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuUpdate');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    i += skipCodes;\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nUpdateOpCodesDebug;\n    }());\n\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = (function () { return Promise.resolve(null); })();\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, lView) {\n        var selectedIndex = getSelectedIndex();\n        try {\n            if (tView.expandoInstructions !== null) {\n                var bindingRootIndex = setBindingIndex(tView.expandoStartIndex);\n                setBindingRoot(bindingRootIndex);\n                var currentDirectiveIndex = -1;\n                var currentElementIndex = -1;\n                for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                    var instruction = tView.expandoInstructions[i];\n                    if (typeof instruction === 'number') {\n                        if (instruction <= 0) {\n                            // Negative numbers mean that we are starting new EXPANDO block and need to update\n                            // the current element and directive index.\n                            currentElementIndex = -instruction;\n                            setActiveHostElement(currentElementIndex);\n                            // Injector block and providers are taken into account.\n                            var providerCount = tView.expandoInstructions[++i];\n                            bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                            currentDirectiveIndex = bindingRootIndex;\n                        }\n                        else {\n                            // This is either the injector size (so the binding root can skip over directives\n                            // and get to the first set of host bindings on this node) or the host var count\n                            // (to get to the next set of host bindings on this node).\n                            bindingRootIndex += instruction;\n                        }\n                        setBindingRoot(bindingRootIndex);\n                    }\n                    else {\n                        // If it's not a number, it's a host binding function that needs to be executed.\n                        if (instruction !== null) {\n                            // Each directive gets a uniqueId value that is the same for both\n                            // create and update calls when the hostBindings function is called. The\n                            // directive uniqueId is not set anywhere--it is just incremented between\n                            // each hostBindings call and is useful for helping instruction code\n                            // uniquely determine which directive is currently active when executed.\n                            // It is important that this be called first before the actual instructions\n                            // are run because this way the first directive ID value is not zero.\n                            incrementActiveDirectiveId();\n                            setBindingIndex(bindingRootIndex);\n                            var hostCtx = unwrapRNode(lView[currentDirectiveIndex]);\n                            instruction(2 /* Update */, hostCtx, currentElementIndex);\n                        }\n                        currentDirectiveIndex++;\n                    }\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(selectedIndex);\n        }\n    }\n    /** Refreshes all content queries declared by directives in a given view */\n    function refreshContentQueries(tView, lView) {\n        var contentQueries = tView.contentQueries;\n        if (contentQueries !== null) {\n            for (var i = 0; i < contentQueries.length; i += 2) {\n                var queryStartIdx = contentQueries[i];\n                var directiveDefIdx = contentQueries[i + 1];\n                if (directiveDefIdx !== -1) {\n                    var directiveDef = tView.data[directiveDefIdx];\n                    ngDevMode &&\n                        assertDefined(directiveDef.contentQueries, 'contentQueries function should be defined');\n                    setCurrentQueryIndex(queryStartIdx);\n                    directiveDef.contentQueries(2 /* Update */, lView[directiveDefIdx], directiveDefIdx);\n                }\n            }\n        }\n    }\n    /** Refreshes child components in the current view (update mode). */\n    function refreshChildComponents(hostLView, components) {\n        for (var i = 0; i < components.length; i++) {\n            refreshComponent(hostLView, components[i]);\n        }\n    }\n    /** Renders child components in the current view (creation mode). */\n    function renderChildComponents(hostLView, components) {\n        for (var i = 0; i < components.length; i++) {\n            renderComponent(hostLView, components[i]);\n        }\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param renderer A renderer to use\n     * @returns the element created\n     */\n    function elementCreate(name, renderer, namespace) {\n        if (isProceduralRenderer(renderer)) {\n            return renderer.createElement(name, namespace);\n        }\n        else {\n            return namespace === null ? renderer.createElement(name) :\n                renderer.createElementNS(namespace, name);\n        }\n    }\n    function createLView(parentLView, tView, context, flags, host, tHostNode, rendererFactory, renderer, sanitizer, injector) {\n        var lView = ngDevMode ? cloneToLViewFromTViewBlueprint(tView) : tView.blueprint.slice();\n        lView[HOST] = host;\n        lView[FLAGS] = flags | 4 /* CreationMode */ | 128 /* Attached */ | 8 /* FirstLViewPass */;\n        resetPreOrderHookFlags(lView);\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n        lView[T_HOST] = tHostNode;\n        ngDevMode && attachLViewDebug(lView);\n        return lView;\n    }\n    function getOrCreateTNode(tView, tHostNode, index, type, name, attrs) {\n        // Keep this function short, so that the VM will inline it.\n        var adjustedIndex = index + HEADER_OFFSET;\n        var tNode = tView.data[adjustedIndex] ||\n            createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs);\n        setPreviousOrParentTNode(tNode, true);\n        return tNode;\n    }\n    function createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        var parent = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && parent !== tHostNode;\n        var tParentNode = parentInSameView ? parent : null;\n        var tNode = tView.data[adjustedIndex] =\n            createTNode(tView, tParentNode, type, adjustedIndex, name, attrs);\n        // Assign a pointer to the first child node of a given view. The first node is not always the one\n        // at index 0, in case of i18n, index 0 can be the instruction `i18nStart` and the first node has\n        // the index 1 or more, so we can't just check node index.\n        if (tView.firstChild === null) {\n            tView.firstChild = tNode;\n        }\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        return tNode;\n    }\n    function assignTViewNodeToLView(tView, tParentNode, index, lView) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        var tNode = tView.node;\n        if (tNode == null) {\n            ngDevMode && tParentNode &&\n                assertNodeOfPossibleTypes(tParentNode, 3 /* Element */, 0 /* Container */);\n            tView.node = tNode = createTNode(tView, tParentNode, //\n            2 /* View */, index, null, null);\n        }\n        return lView[T_HOST] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     *\n     * @param view The LView containing the blueprint to adjust\n     * @param numSlotsToAlloc The number of slots to alloc in the LView, should be >0\n     */\n    function allocExpando(view, numSlotsToAlloc) {\n        ngDevMode && assertGreaterThan(numSlotsToAlloc, 0, 'The number of slots to alloc should be greater than 0');\n        if (numSlotsToAlloc > 0) {\n            var tView = view[TVIEW];\n            if (tView.firstCreatePass) {\n                for (var i = 0; i < numSlotsToAlloc; i++) {\n                    tView.blueprint.push(null);\n                    tView.data.push(null);\n                    view.push(null);\n                }\n                // We should only increment the expando start index if there aren't already directives\n                // and injectors saved in the \"expando\" section\n                if (!tView.expandoInstructions) {\n                    tView.expandoStartIndex += numSlotsToAlloc;\n                }\n                else {\n                    // Since we're adding the dynamic nodes into the expando section, we need to let the host\n                    // bindings know that they should skip x slots\n                    tView.expandoInstructions.push(numSlotsToAlloc);\n                }\n            }\n        }\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Processes a view in the creation mode. This includes a number of steps in a specific order:\n     * - creating view query functions (if any);\n     * - executing a template function in the creation mode;\n     * - updating static queries (if any);\n     * - creating child components defined in a given view.\n     */\n    function renderView(lView, tView, context) {\n        ngDevMode && assertEqual(isCreationMode(lView), true, 'Should be run in creation mode');\n        enterView(lView, lView[T_HOST]);\n        try {\n            var viewQuery = tView.viewQuery;\n            if (viewQuery !== null) {\n                executeViewQueryFn(1 /* Create */, viewQuery, context);\n            }\n            // Execute a template associated with this view, if it exists. A template function might not be\n            // defined for the root component views.\n            var templateFn = tView.template;\n            if (templateFn !== null) {\n                executeTemplate(lView, templateFn, 1 /* Create */, context);\n            }\n            // This needs to be set before children are processed to support recursive components.\n            // This must be set to false immediately after the first creation run because in an\n            // ngFor loop, all the views will be created together before update mode runs and turns\n            // off firstCreatePass. If we don't set it here, instances will perform directive\n            // matching, etc again and again.\n            if (tView.firstCreatePass) {\n                tView.firstCreatePass = false;\n            }\n            // We resolve content queries specifically marked as `static` in creation mode. Dynamic\n            // content queries are resolved during change detection (i.e. update mode), after embedded\n            // views are refreshed (see block above).\n            if (tView.staticContentQueries) {\n                refreshContentQueries(tView, lView);\n            }\n            // We must materialize query results before child components are processed\n            // in case a child component has projected a container. The LContainer needs\n            // to exist so the embedded views are properly attached by the container.\n            if (tView.staticViewQueries) {\n                executeViewQueryFn(2 /* Update */, tView.viewQuery, context);\n            }\n            // Render child component views.\n            var components = tView.components;\n            if (components !== null) {\n                renderChildComponents(lView, components);\n            }\n        }\n        finally {\n            lView[FLAGS] &= ~4 /* CreationMode */;\n            leaveView();\n        }\n    }\n    /**\n     * Processes a view in update mode. This includes a number of steps in a specific order:\n     * - executing a template function in update mode;\n     * - executing hooks;\n     * - refreshing queries;\n     * - setting host bindings;\n     * - refreshing child (embedded and component) views.\n     */\n    function refreshView(lView, tView, templateFn, context) {\n        ngDevMode && assertEqual(isCreationMode(lView), false, 'Should be run in update mode');\n        enterView(lView, lView[T_HOST]);\n        var flags = lView[FLAGS];\n        try {\n            resetPreOrderHookFlags(lView);\n            setBindingIndex(tView.bindingStartIndex);\n            if (templateFn !== null) {\n                executeTemplate(lView, templateFn, 2 /* Update */, context);\n            }\n            var checkNoChangesMode = getCheckNoChangesMode();\n            var hooksInitPhaseCompleted = (flags & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            // execute pre-order hooks (OnInit, OnChanges, DoChanges)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var preOrderCheckHooks = tView.preOrderCheckHooks;\n                    if (preOrderCheckHooks !== null) {\n                        executeCheckHooks(lView, preOrderCheckHooks, null);\n                    }\n                }\n                else {\n                    var preOrderHooks = tView.preOrderHooks;\n                    if (preOrderHooks !== null) {\n                        executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, null);\n                    }\n                    incrementInitPhaseFlags(lView, 0 /* OnInitHooksToBeRun */);\n                }\n            }\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            if (tView.contentQueries !== null) {\n                refreshContentQueries(tView, lView);\n            }\n            // execute content hooks (AfterContentInit, AfterContentChecked)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var contentCheckHooks = tView.contentCheckHooks;\n                    if (contentCheckHooks !== null) {\n                        executeCheckHooks(lView, contentCheckHooks);\n                    }\n                }\n                else {\n                    var contentHooks = tView.contentHooks;\n                    if (contentHooks !== null) {\n                        executeInitAndCheckHooks(lView, contentHooks, 1 /* AfterContentInitHooksToBeRun */);\n                    }\n                    incrementInitPhaseFlags(lView, 1 /* AfterContentInitHooksToBeRun */);\n                }\n            }\n            setHostBindings(tView, lView);\n            // Refresh child component views.\n            var components = tView.components;\n            if (components !== null) {\n                refreshChildComponents(lView, components);\n            }\n            // View queries must execute after refreshing child components because a template in this view\n            // could be inserted in a child component. If the view query executes before child component\n            // refresh, the template might not yet be inserted.\n            var viewQuery = tView.viewQuery;\n            if (viewQuery !== null) {\n                executeViewQueryFn(2 /* Update */, viewQuery, context);\n            }\n            // execute view hooks (AfterViewInit, AfterViewChecked)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var viewCheckHooks = tView.viewCheckHooks;\n                    if (viewCheckHooks !== null) {\n                        executeCheckHooks(lView, viewCheckHooks);\n                    }\n                }\n                else {\n                    var viewHooks = tView.viewHooks;\n                    if (viewHooks !== null) {\n                        executeInitAndCheckHooks(lView, viewHooks, 2 /* AfterViewInitHooksToBeRun */);\n                    }\n                    incrementInitPhaseFlags(lView, 2 /* AfterViewInitHooksToBeRun */);\n                }\n            }\n        }\n        finally {\n            if (tView.firstUpdatePass === true) {\n                tView.firstUpdatePass = false;\n            }\n            lView[FLAGS] &= ~(64 /* Dirty */ | 8 /* FirstLViewPass */);\n            leaveViewProcessExit();\n        }\n    }\n    function renderComponentOrTemplate(hostView, templateFn, context) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var normalExecutionPath = !getCheckNoChangesMode();\n        var creationModeIsActive = isCreationMode(hostView);\n        try {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            var tView = hostView[TVIEW];\n            if (creationModeIsActive) {\n                renderView(hostView, tView, context);\n            }\n            refreshView(hostView, tView, templateFn, context);\n        }\n        finally {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n                rendererFactory.end();\n            }\n        }\n    }\n    function executeTemplate(lView, templateFn, rf, context) {\n        var prevSelectedIndex = getSelectedIndex();\n        try {\n            setActiveHostElement(null);\n            if (rf & 2 /* Update */ && lView.length > HEADER_OFFSET) {\n                // When we're updating, inherently select 0 so we don't\n                // have to generate that instruction for most update blocks.\n                selectIndexInternal(lView, 0, getCheckNoChangesMode());\n            }\n            templateFn(rf, context);\n        }\n        finally {\n            if (hasActiveElementFlag(1 /* RunExitFn */)) {\n                executeElementExitFn();\n            }\n            setSelectedIndex(prevSelectedIndex);\n        }\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    function executeContentQueries(tView, tNode, lView) {\n        if (isContentQueryHost(tNode)) {\n            var start = tNode.directiveStart;\n            var end = tNode.directiveEnd;\n            for (var directiveIndex = start; directiveIndex < end; directiveIndex++) {\n                var def = tView.data[directiveIndex];\n                if (def.contentQueries) {\n                    def.contentQueries(1 /* Create */, lView[directiveIndex], directiveIndex);\n                }\n            }\n        }\n    }\n    /**\n     * Creates directive instances.\n     */\n    function createDirectivesInstances(tView, lView, tNode) {\n        if (!getBindingsEnabled())\n            return;\n        instantiateAllDirectives(tView, lView, tNode, getNativeByTNode(tNode, lView));\n        if ((tNode.flags & 128 /* hasHostBindings */) === 128 /* hasHostBindings */) {\n            invokeDirectivesHostBindings(tView, lView, tNode);\n        }\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param def ComponentDef\n     * @returns TView\n     */\n    function getOrCreateTComponentView(def) {\n        return def.tView ||\n            (def.tView = createTView(1 /* Component */, -1, def.template, def.decls, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas, def.consts));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param decls The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     * @param viewQuery View queries for this view\n     * @param schemas Schemas for this view\n     * @param consts Constants for this view\n     */\n    function createTView(type, viewIndex, templateFn, decls, vars, directives, pipes, viewQuery, schemas, consts) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + decls;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = ngDevMode ?\n            new TViewConstructor(type, viewIndex, // id: number,\n            blueprint, // blueprint: LView,\n            templateFn, // template: ComponentTemplate<{}>|null,\n            null, // queries: TQueries|null\n            viewQuery, // viewQuery: ViewQueriesFunction<{}>|null,\n            null, // node: TViewNode|TElementNode|null,\n            cloneToTViewData(blueprint).fill(null, bindingStartIndex), // data: TData,\n            bindingStartIndex, // bindingStartIndex: number,\n            initialViewLength, // expandoStartIndex: number,\n            null, // expandoInstructions: ExpandoInstructions|null,\n            true, // firstCreatePass: boolean,\n            true, // firstUpdatePass: boolean,\n            false, // staticViewQueries: boolean,\n            false, // staticContentQueries: boolean,\n            null, // preOrderHooks: HookData|null,\n            null, // preOrderCheckHooks: HookData|null,\n            null, // contentHooks: HookData|null,\n            null, // contentCheckHooks: HookData|null,\n            null, // viewHooks: HookData|null,\n            null, // viewCheckHooks: HookData|null,\n            null, // destroyHooks: HookData|null,\n            null, // cleanup: any[]|null,\n            null, // contentQueries: number[]|null,\n            null, // components: number[]|null,\n            typeof directives === 'function' ?\n                directives() :\n                directives, // directiveRegistry: DirectiveDefList|null,\n            typeof pipes === 'function' ? pipes() : pipes, // pipeRegistry: PipeDefList|null,\n            null, // firstChild: TNode|null,\n            schemas, // schemas: SchemaMetadata[]|null,\n            consts) : // consts: TConstants|null\n            {\n                id: viewIndex,\n                blueprint: blueprint,\n                template: templateFn,\n                queries: null,\n                viewQuery: viewQuery,\n                node: null,\n                data: blueprint.slice().fill(null, bindingStartIndex),\n                bindingStartIndex: bindingStartIndex,\n                expandoStartIndex: initialViewLength,\n                expandoInstructions: null,\n                firstCreatePass: true,\n                firstUpdatePass: true,\n                staticViewQueries: false,\n                staticContentQueries: false,\n                preOrderHooks: null,\n                preOrderCheckHooks: null,\n                contentHooks: null,\n                contentCheckHooks: null,\n                viewHooks: null,\n                viewCheckHooks: null,\n                destroyHooks: null,\n                cleanup: null,\n                contentQueries: null,\n                components: null,\n                directiveRegistry: typeof directives === 'function' ? directives() : directives,\n                pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n                firstChild: null,\n                schemas: schemas,\n                consts: consts,\n            };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = ngDevMode ? new LViewBlueprint() : [];\n        for (var i = 0; i < initialViewLength; i++) {\n            blueprint.push(i < bindingStartIndex ? null : NO_CHANGE);\n        }\n        return blueprint;\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringifyForError(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstCreatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstCreatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param tView `TView` to which this `TNode` belongs (used only in `ngDevMode`)\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(tView, tParent, type, adjustedIndex, tagName, attrs) {\n        ngDevMode && ngDevMode.tNode++;\n        var injectorIndex = tParent ? tParent.injectorIndex : -1;\n        return ngDevMode ? new TNodeConstructor(tView, // tView_: TView\n        type, // type: TNodeType\n        adjustedIndex, // index: number\n        injectorIndex, // injectorIndex: number\n        -1, // directiveStart: number\n        -1, // directiveEnd: number\n        null, // propertyBindings: number[]|null\n        0, // flags: TNodeFlags\n        0, // providerIndexes: TNodeProviderIndexes\n        tagName, // tagName: string|null\n        attrs, // attrs: (string|AttributeMarker|(string|SelectorFlags)[])[]|null\n        null, // localNames: (string|number)[]|null\n        undefined, // initialInputs: (string[]|null)[]|null|undefined\n        undefined, // inputs: PropertyAliases|null|undefined\n        undefined, // outputs: PropertyAliases|null|undefined\n        null, // tViews: ITView|ITView[]|null\n        null, // next: ITNode|null\n        null, // projectionNext: ITNode|null\n        null, // child: ITNode|null\n        tParent, // parent: TElementNode|TContainerNode|null\n        null, // projection: number|(ITNode|RNode[])[]|null\n        null, // styles: TStylingContext|null\n        null) :\n            {\n                type: type,\n                index: adjustedIndex,\n                injectorIndex: injectorIndex,\n                directiveStart: -1,\n                directiveEnd: -1,\n                propertyBindings: null,\n                flags: 0,\n                providerIndexes: 0,\n                tagName: tagName,\n                attrs: attrs,\n                localNames: null,\n                initialInputs: undefined,\n                inputs: undefined,\n                outputs: undefined,\n                tViews: null,\n                next: null,\n                projectionNext: null,\n                child: null,\n                parent: tParent,\n                projection: null,\n                styles: null,\n                classes: null,\n            };\n    }\n    function generatePropertyAliases(inputAliasMap, directiveDefIdx, propStore) {\n        for (var publicName in inputAliasMap) {\n            if (inputAliasMap.hasOwnProperty(publicName)) {\n                propStore = propStore === null ? {} : propStore;\n                var internalName = inputAliasMap[publicName];\n                if (propStore.hasOwnProperty(publicName)) {\n                    propStore[publicName].push(directiveDefIdx, publicName, internalName);\n                }\n                else {\n                    (propStore[publicName] = [directiveDefIdx, publicName, internalName]);\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Initializes data structures required to work with directive outputs and outputs.\n     * Initialization is done for all directives matched on a given TNode.\n     */\n    function initializeInputAndOutputAliases(tView, tNode) {\n        ngDevMode && assertFirstCreatePass(tView);\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var defs = tView.data;\n        var tNodeAttrs = tNode.attrs;\n        var inputsFromAttrs = ngDevMode ? new TNodeInitialInputs() : [];\n        var inputsStore = null;\n        var outputsStore = null;\n        for (var i = start; i < end; i++) {\n            var directiveDef = defs[i];\n            var directiveInputs = directiveDef.inputs;\n            inputsFromAttrs.push(tNodeAttrs !== null ? generateInitialInputs(directiveInputs, tNodeAttrs) : null);\n            inputsStore = generatePropertyAliases(directiveInputs, i, inputsStore);\n            outputsStore = generatePropertyAliases(directiveDef.outputs, i, outputsStore);\n        }\n        if (inputsStore !== null) {\n            if (inputsStore.hasOwnProperty('class') || inputsStore.hasOwnProperty('className')) {\n                tNode.flags |= 16 /* hasClassInput */;\n            }\n            if (inputsStore.hasOwnProperty('style')) {\n                tNode.flags |= 32 /* hasStyleInput */;\n            }\n        }\n        tNode.initialInputs = inputsFromAttrs;\n        tNode.inputs = inputsStore;\n        tNode.outputs = outputsStore;\n    }\n    /**\n     * Mapping between attributes names that don't correspond to their element property names.\n     *\n     * Performance note: this function is written as a series of if checks (instead of, say, a property\n     * object lookup) for performance reasons - the series of `if` checks seems to be the fastest way of\n     * mapping property names. Do NOT change without benchmarking.\n     *\n     * Note: this mapping has to be kept in sync with the equally named mapping in the template\n     * type-checking machinery of ngtsc.\n     */\n    function mapPropName(name) {\n        if (name === 'class')\n            return 'className';\n        if (name === 'for')\n            return 'htmlFor';\n        if (name === 'formaction')\n            return 'formAction';\n        if (name === 'innerHtml')\n            return 'innerHTML';\n        if (name === 'readonly')\n            return 'readOnly';\n        if (name === 'tabindex')\n            return 'tabIndex';\n        return name;\n    }\n    function elementPropertyInternal(lView, index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData = tNode.inputs;\n        var dataValue;\n        if (!nativeOnly && inputData != null && (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponentHost(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            propName = mapPropName(propName);\n            if (ngDevMode) {\n                validateAgainstEventProperties(propName);\n                if (!validateProperty(lView, element, propName, tNode)) {\n                    // Return here since we only log warnings for unknown properties.\n                    warnAboutUnknownProperty(propName, tNode);\n                    return;\n                }\n                ngDevMode.rendererSetProperty++;\n            }\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the\n            // property is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // If the node is a container and the property didn't\n            // match any of the inputs or schemas we should throw.\n            if (ngDevMode && !matchingSchemas(lView, tNode.tagName)) {\n                warnAboutUnknownProperty(propName, tNode);\n            }\n        }\n    }\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        ngDevMode && assertLView(lView);\n        var childComponentLView = getComponentLViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 16 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 64 /* Dirty */;\n        }\n    }\n    function setNgReflectProperty(lView, element, type, attrName, value) {\n        var _a;\n        var renderer = lView[RENDERER];\n        attrName = normalizeDebugBindingName(attrName);\n        var debugValue = normalizeDebugBindingValue(value);\n        if (type === 3 /* Element */) {\n            if (value == null) {\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element, attrName) :\n                    element.removeAttribute(attrName);\n            }\n            else {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n        }\n        else {\n            var textContent = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setValue(element, textContent);\n            }\n            else {\n                element.textContent = textContent;\n            }\n        }\n    }\n    function setNgReflectProperties(lView, element, type, dataValue, value) {\n        if (type === 3 /* Element */ || type === 0 /* Container */) {\n            /**\n             * dataValue is an array containing runtime input or output names for the directives:\n             * i+0: directive instance index\n             * i+1: publicName\n             * i+2: privateName\n             *\n             * e.g. [0, 'change', 'change-minified']\n             * we want to set the reflected property with the privateName: dataValue[i+2]\n             */\n            for (var i = 0; i < dataValue.length; i += 3) {\n                setNgReflectProperty(lView, element, type, dataValue[i + 2], value);\n            }\n        }\n    }\n    function validateProperty(hostView, element, propName, tNode) {\n        // The property is considered valid if the element matches the schema, it exists on the element\n        // or it is synthetic, and we are in a browser context (web worker nodes should be skipped).\n        return matchingSchemas(hostView, tNode.tagName) || propName in element ||\n            isAnimationProp(propName) || typeof Node !== 'function' || !(element instanceof Node);\n    }\n    function matchingSchemas(hostView, tagName) {\n        var schemas = hostView[TVIEW].schemas;\n        if (schemas !== null) {\n            for (var i = 0; i < schemas.length; i++) {\n                var schema = schemas[i];\n                if (schema === NO_ERRORS_SCHEMA ||\n                    schema === CUSTOM_ELEMENTS_SCHEMA && tagName && tagName.indexOf('-') > -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n     * Logs a warning that a property is not supported on an element.\n     * @param propName Name of the invalid property.\n     * @param tNode Node on which we encountered the property.\n     */\n    function warnAboutUnknownProperty(propName, tNode) {\n        console.warn(\"Can't bind to '\" + propName + \"' since it isn't a known property of '\" + tNode.tagName + \"'.\");\n    }\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, lView, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstCreatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, lView, def);\n        }\n        var directive = getNodeInjectable(tView.data, lView, lView.length - 1, rootTNode);\n        attachPatchData(directive, lView);\n        var native = getNativeByTNode(rootTNode, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, lView, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in\n        // tsickle.\n        ngDevMode && assertFirstCreatePass(tView);\n        if (!getBindingsEnabled())\n            return false;\n        var directives = findDirectiveMatches(tView, lView, tNode);\n        var exportsMap = localRefs === null ? null : { '': -1 };\n        var hasDirectives = false;\n        if (directives !== null) {\n            hasDirectives = true;\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            var initialPreOrderHooksLength = (tView.preOrderHooks && tView.preOrderHooks.length) || 0;\n            var initialPreOrderCheckHooksLength = (tView.preOrderCheckHooks && tView.preOrderCheckHooks.length) || 0;\n            var nodeIndex = tNode.index - HEADER_OFFSET;\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, lView, def);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                if (def.contentQueries !== null)\n                    tNode.flags |= 8 /* hasContentQuery */;\n                if (def.hostBindings !== null)\n                    tNode.flags |= 128 /* hasHostBindings */;\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                registerPreOrderHooks(directiveDefIdx, def, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength);\n            }\n            initializeInputAndOutputAliases(tView, tNode);\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n        return hasDirectives;\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode, native) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!tView.firstCreatePass) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        attachPatchData(native, lView);\n        var initialInputs = tNode.initialInputs;\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            var isComponent = isComponentDef(def);\n            if (isComponent) {\n                ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */);\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            attachPatchData(directive, lView);\n            if (initialInputs !== null) {\n                setInputsFromAttrs(lView, i - start, directive, def, tNode, initialInputs);\n            }\n            if (isComponent) {\n                var componentView = getComponentLViewByIndex(tNode.index, lView);\n                componentView[CONTEXT] = directive;\n            }\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstCreatePass = tView.firstCreatePass;\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        try {\n            setActiveHostElement(elementIndex);\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                var directive = viewData[i];\n                if (def.hostBindings) {\n                    // It is important that this be called first before the actual instructions\n                    // are run because this way the first directive ID value is not zero.\n                    incrementActiveDirectiveId();\n                    invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstCreatePass);\n                }\n                else if (firstCreatePass) {\n                    expando.push(null);\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(null);\n        }\n    }\n    function invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstCreatePass) {\n        var previousExpandoLength = expando.length;\n        setCurrentDirectiveDef(def);\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        def.hostBindings(1 /* Create */, directive, elementIndex);\n        setCurrentDirectiveDef(null);\n        // `hostBindings` function may or may not contain `allocHostVars` call\n        // (e.g. it may not if it only contains host listeners), so we need to check whether\n        // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n        // expando block, to make sure we execute it for DI cycle\n        if (previousExpandoLength === expando.length && firstCreatePass) {\n            expando.push(def.hostBindings);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstCreatePass, true, 'Expando block should only be generated on first create pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertFirstCreatePass(tView);\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 4 /* ElementContainer */, 0 /* Container */);\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = ngDevMode ? new MatchesArray() : []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, viewData), tView, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 2 /* isComponentHost */)\n                            throwMultipleComponentError(tNode);\n                        markAsComponentHost(tView, tNode);\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /**\n     * Marks a given TNode as a component's host. This consists of:\n     * - setting appropriate TNode flags;\n     * - storing index of component's host element so it will be queued for view refresh during CD.\n    */\n    function markAsComponentHost(tView, hostTNode) {\n        ngDevMode && assertFirstCreatePass(tView);\n        hostTNode.flags |= 2 /* isComponentHost */;\n        (tView.components || (tView.components = ngDevMode ? new TViewComponents() : [])).push(hostTNode.index);\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames =\n                ngDevMode ? new TNodeLocalNames() : [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs) {\n                for (var i = 0; i < def.exportAs.length; i++) {\n                    exportsMap[def.exportAs[i]] = index;\n                }\n            }\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        tNode.flags |= 1 /* isDirectiveHost */;\n        // When the first directive is created on a node, save the index\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def) {\n        tView.data.push(def);\n        var directiveFactory = def.factory || (def.factory = getFactoryDef(def.type, true));\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, hostTNode, def) {\n        var native = getNativeByTNode(hostTNode, lView);\n        var tView = getOrCreateTComponentView(def);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, createLView(lView, tView, null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, native, hostTNode, rendererFactory, rendererFactory.createRenderer(native, def)));\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        lView[hostTNode.index] = componentView;\n    }\n    function elementAttributeInternal(index, name, value, lView, sanitizer, namespace) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && validateAgainstEventAttributes(name);\n        var element = getNativeByIndex(index, lView);\n        var renderer = lView[RENDERER];\n        if (value == null) {\n            ngDevMode && ngDevMode.rendererRemoveAttribute++;\n            isProceduralRenderer(renderer) ? renderer.removeAttribute(element, name, namespace) :\n                element.removeAttribute(name);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            var tNode = getTNode(index, lView);\n            var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setAttribute(element, name, strValue, namespace);\n            }\n            else {\n                namespace ? element.setAttributeNS(namespace, name, strValue) :\n                    element.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param lView Current LView that is being processed.\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param def The directive def that contains the list of inputs\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(lView, directiveIndex, instance, def, tNode, initialInputData) {\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs !== null) {\n            var setInput = def.setInput;\n            for (var i = 0; i < initialInputs.length;) {\n                var publicName = initialInputs[i++];\n                var privateName = initialInputs[i++];\n                var value = initialInputs[i++];\n                if (setInput !== null) {\n                    def.setInput(instance, value, publicName, privateName);\n                }\n                else {\n                    instance[privateName] = value;\n                }\n                if (ngDevMode) {\n                    var nativeElement = getNativeByTNode(tNode, lView);\n                    setNgReflectProperty(lView, nativeElement, tNode.type, privateName, value);\n                }\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param inputs The list of inputs from the directive def\n     * @param attrs The static attrs on this node\n     */\n    function generateInitialInputs(inputs, attrs) {\n        var inputsToStore = null;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            else if (attrName === 5 /* ProjectAs */) {\n                // Skip over the `ngProjectAs` value.\n                i += 2;\n                continue;\n            }\n            // If we hit any other attribute markers, we're done anyway. None of those are valid inputs.\n            if (typeof attrName === 'number')\n                break;\n            if (inputs.hasOwnProperty(attrName)) {\n                if (inputsToStore === null)\n                    inputsToStore = [];\n                inputsToStore.push(attrName, inputs[attrName], attrs[i + 1]);\n            }\n            i += 2;\n        }\n        return inputsToStore;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    // Not sure why I need to do `any` here but TS complains later.\n    var LContainerArray = ((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode()) &&\n        createNamedArrayType('LContainer');\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, tNode, isForViewContainerRef) {\n        ngDevMode && assertLView(currentView);\n        ngDevMode && !isProceduralRenderer(currentView[RENDERER]) && assertDomNode(native);\n        // https://jsperf.com/array-literal-vs-new-array-really\n        var lContainer = new (ngDevMode ? LContainerArray : Array)(hostNative, // host native\n        true, // Boolean `true` in this position signifies that this is an `LContainer`\n        isForViewContainerRef ? -1 : 0, // active index\n        currentView, // parent\n        null, // next\n        null, // queries\n        tNode, // t_host\n        native, // native,\n        null);\n        ngDevMode && attachLContainerDebug(lContainer);\n        return lContainer;\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes\n     * them by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        var viewOrContainer = lView[CHILD_HEAD];\n        while (viewOrContainer !== null) {\n            // Note: viewOrContainer can be an LView or an LContainer instance, but here we are only\n            // interested in LContainer\n            if (isLContainer(viewOrContainer) && viewOrContainer[ACTIVE_INDEX] === -1) {\n                for (var i = CONTAINER_HEADER_OFFSET; i < viewOrContainer.length; i++) {\n                    var embeddedLView = viewOrContainer[i];\n                    var embeddedTView = embeddedLView[TVIEW];\n                    ngDevMode && assertDefined(embeddedTView, 'TView must be allocated');\n                    refreshView(embeddedLView, embeddedTView, embeddedTView.template, embeddedLView[CONTEXT]);\n                }\n            }\n            viewOrContainer = viewOrContainer[NEXT];\n        }\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param componentHostIdx  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function refreshComponent(hostLView, componentHostIdx) {\n        ngDevMode && assertEqual(isCreationMode(hostLView), false, 'Should be run in update mode');\n        var componentView = getComponentLViewByIndex(componentHostIdx, hostLView);\n        // Only attached components that are CheckAlways or OnPush and dirty should be refreshed\n        if (viewAttachedToChangeDetector(componentView) &&\n            componentView[FLAGS] & (16 /* CheckAlways */ | 64 /* Dirty */)) {\n            var tView = componentView[TVIEW];\n            refreshView(componentView, tView, tView.template, componentView[CONTEXT]);\n        }\n    }\n    function renderComponent(hostLView, componentHostIdx) {\n        ngDevMode && assertEqual(isCreationMode(hostLView), true, 'Should be run in creation mode');\n        var componentView = getComponentLViewByIndex(componentHostIdx, hostLView);\n        syncViewWithBlueprint(componentView);\n        renderView(componentView, componentView[TVIEW], componentView[CONTEXT]);\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView.push(componentTView.blueprint[i]);\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param lViewOrLContainer The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, lViewOrLContainer) {\n        // TODO(benlesh/misko): This implementation is incorrect, because it always adds the LContainer\n        // to\n        // the end of the queue, which means if the developer retrieves the LContainers from RNodes out\n        // of\n        // order, the change detection will run out of order, as the act of retrieving the the\n        // LContainer\n        // from the RNode is what adds it to the queue.\n        if (lView[CHILD_HEAD]) {\n            lView[CHILD_TAIL][NEXT] = lViewOrLContainer;\n        }\n        else {\n            lView[CHILD_HEAD] = lViewOrLContainer;\n        }\n        lView[CHILD_TAIL] = lViewOrLContainer;\n        return lViewOrLContainer;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView) {\n            lView[FLAGS] |= 64 /* Dirty */;\n            var parent_1 = getLViewParent(lView);\n            // Stop traversing up as soon as you find a root view that wasn't attached to any container\n            if (isRootView(lView) && !parent_1) {\n                return lView;\n            }\n            // continue otherwise\n            lView = parent_1;\n        }\n        return null;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            var lView = readPatchedLView(rootComponent);\n            var tView = lView[TVIEW];\n            renderComponentOrTemplate(lView, tView.template, rootComponent);\n        }\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        try {\n            var tView = view[TVIEW];\n            refreshView(view, tView, tView.template, context);\n        }\n        catch (error) {\n            handleError(view, error);\n            throw error;\n        }\n        finally {\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    function checkNoChangesInternal(view, context) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInternal(view, context);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    function executeViewQueryFn(flags, viewQueryFn, component) {\n        ngDevMode && assertDefined(viewQueryFn, 'View queries function to execute must be defined.');\n        setCurrentQueryIndex(0);\n        viewQueryFn(flags, component);\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Stores meta-data for a property binding to be used by TestBed's `DebugElement.properties`.\n     *\n     * In order to support TestBed's `DebugElement.properties` we need to save, for each binding:\n     * - a bound property name;\n     * - a static parts of interpolated strings;\n     *\n     * A given property metadata is saved at the binding's index in the `TView.data` (in other words, a\n     * property binding metadata will be stored in `TView.data` at the same index as a bound value in\n     * `LView`). Metadata are represented as `INTERPOLATION_DELIMITER`-delimited string with the\n     * following format:\n     * - `propertyName` for bound properties;\n     * - `propertyName�prefix�interpolation_static_part1�..interpolation_static_partN�suffix` for\n     * interpolated properties.\n     *\n     * @param tData `TData` where meta-data will be saved;\n     * @param nodeIndex index of a `TNode` that is a target of the binding;\n     * @param propertyName bound property name;\n     * @param bindingIndex binding index in `LView`\n     * @param interpolationParts static interpolation parts (for property interpolations)\n     */\n    function storePropertyBindingMetadata(tData, nodeIndex, propertyName, bindingIndex) {\n        var interpolationParts = [];\n        for (var _i = 4; _i < arguments.length; _i++) {\n            interpolationParts[_i - 4] = arguments[_i];\n        }\n        // Binding meta-data are stored only the first time a given property instruction is processed.\n        // Since we don't have a concept of the \"first update pass\" we need to check for presence of the\n        // binding meta-data to decide if one should be stored (or if was stored already).\n        if (tData[bindingIndex] === null) {\n            var tNode = tData[nodeIndex + HEADER_OFFSET];\n            if (tNode.inputs == null || !tNode.inputs[propertyName]) {\n                var propBindingIdxs = tNode.propertyBindings || (tNode.propertyBindings = []);\n                propBindingIdxs.push(bindingIndex);\n                var bindingMetadata = propertyName;\n                if (interpolationParts.length > 0) {\n                    bindingMetadata +=\n                        INTERPOLATION_DELIMITER + interpolationParts.join(INTERPOLATION_DELIMITER);\n                }\n                tData[bindingIndex] = bindingMetadata;\n            }\n        }\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = ngDevMode ? new LCleanup() : []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = ngDevMode ? new TCleanup() : []);\n    }\n    /**\n     * There are cases where the sub component's renderer needs to be included\n     * instead of the current renderer (see the componentSyntheticHost* instructions).\n     */\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    /** Handles an error thrown in an LView. */\n    function handleError(lView, error) {\n        var injector = lView[INJECTOR$1];\n        var errorHandler = injector ? injector.get(ErrorHandler, null) : null;\n        errorHandler && errorHandler.handleError(error);\n    }\n    /**\n     * Set the inputs of directives at the current node to corresponding value.\n     *\n     * @param lView the `LView` which contains the directives.\n     * @param inputs mapping between the public \"input\" name and privately-known,\n     * possibly minified, property names to write to.\n     * @param value Value to set.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        var tView = lView[TVIEW];\n        for (var i = 0; i < inputs.length;) {\n            var index = inputs[i++];\n            var publicName = inputs[i++];\n            var privateName = inputs[i++];\n            var instance = lView[index];\n            ngDevMode && assertDataInRange(lView, index);\n            var def = tView.data[index];\n            var setInput = def.setInput;\n            if (setInput) {\n                def.setInput(instance, value, publicName, privateName);\n            }\n            else {\n                instance[privateName] = value;\n            }\n        }\n    }\n    /**\n     * Updates a text binding at a given index in a given LView.\n     */\n    function textBindingInternal(lView, index, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'value should not be NO_CHANGE');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var element = getNativeByIndex(index, lView);\n        ngDevMode && assertDefined(element, 'native element should exist');\n        ngDevMode && ngDevMode.rendererSetText++;\n        var renderer = lView[RENDERER];\n        isProceduralRenderer(renderer) ? renderer.setValue(element, value) : element.textContent = value;\n    }\n    /**\n     * Renders all initial styling (class and style values) on to the element from the tNode.\n     *\n     * All initial styling data (i.e. any values extracted from the `style` or `class` attributes\n     * on an element) are collected into the `tNode.styles` and `tNode.classes` data structures.\n     * These values are populated during the creation phase of an element and are then later\n     * applied once the element is instantiated. This function applies each of the static\n     * style and class entries to the element.\n     */\n    function renderInitialStyling(renderer, native, tNode, append) {\n        if (tNode.classes !== null) {\n            if (append) {\n                renderStylingMap(renderer, native, tNode.classes, true);\n            }\n            else {\n                var classes = getInitialStylingValue(tNode.classes);\n                writeStylingValueDirectly(renderer, native, classes, true, null);\n            }\n        }\n        if (tNode.styles !== null) {\n            if (append) {\n                renderStylingMap(renderer, native, tNode.styles, false);\n            }\n            else {\n                var styles = getInitialStylingValue(tNode.styles);\n                writeStylingValueDirectly(renderer, native, styles, false, null);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd$1 = unusedValueExportToPlacateAjd$1 + unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$5 + unusedValueExportToPlacateAjd$3 + unusedValueExportToPlacateAjd;\n    function getLContainer(tNode, embeddedView) {\n        ngDevMode && assertLView(embeddedView);\n        var container = embeddedView[PARENT];\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // The parent isn't an LContainer if the embedded view hasn't been attached yet.\n            return isLContainer(container) ? container : null;\n        }\n        else {\n            ngDevMode && assertLContainer(container);\n            // This is a inline view node (e.g. embeddedViewStart)\n            return container;\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function applyToElementOrContainer(action, renderer, parent, lNodeToHandle, beforeNode) {\n        // If this slot was allocated for a text node dynamically created by i18n, the text node itself\n        // won't be created until i18nApply() in the update block, so this node should be skipped.\n        // For more info, see \"ICU expressions should work inside an ngTemplateOutlet inside an ngFor\"\n        // in `i18n_spec.ts`.\n        if (lNodeToHandle != null) {\n            var lContainer = void 0;\n            var isComponent = false;\n            // We are expecting an RNode, but in the case of a component or LContainer the `RNode` is\n            // wrapped in an array which needs to be unwrapped. We need to know if it is a component and if\n            // it has LContainer so that we can process all of those cases appropriately.\n            if (isLContainer(lNodeToHandle)) {\n                lContainer = lNodeToHandle;\n            }\n            else if (isLView(lNodeToHandle)) {\n                isComponent = true;\n                ngDevMode && assertDefined(lNodeToHandle[HOST], 'HOST must be defined for a component LView');\n                lNodeToHandle = lNodeToHandle[HOST];\n            }\n            var rNode = unwrapRNode(lNodeToHandle);\n            ngDevMode && !isProceduralRenderer(renderer) && assertDomNode(rNode);\n            if (action === 0 /* Create */ && parent !== null) {\n                if (beforeNode == null) {\n                    nativeAppendChild(renderer, parent, rNode);\n                }\n                else {\n                    nativeInsertBefore(renderer, parent, rNode, beforeNode || null);\n                }\n            }\n            else if (action === 1 /* Insert */ && parent !== null) {\n                nativeInsertBefore(renderer, parent, rNode, beforeNode || null);\n            }\n            else if (action === 2 /* Detach */) {\n                nativeRemoveNode(renderer, rNode, isComponent);\n            }\n            else if (action === 3 /* Destroy */) {\n                ngDevMode && ngDevMode.rendererDestroyNode++;\n                renderer.destroyNode(rNode);\n            }\n            if (lContainer != null) {\n                applyContainer(renderer, action, lContainer, parent, beforeNode);\n            }\n        }\n    }\n    function createTextNode(value, renderer) {\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        ngDevMode && ngDevMode.rendererSetText++;\n        return isProceduralRenderer(renderer) ? renderer.createText(value) :\n            renderer.createTextNode(value);\n    }\n    function addRemoveViewFromContainer(lView, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(lView[TVIEW].node, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = lView[RENDERER];\n            var action = insertMode ? 1 /* Insert */ : 2 /* Detach */;\n            applyView(renderer, action, lView, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Detach a `LView` from the DOM by detaching its nodes.\n     *\n     * @param lView the `LView` to be detached.\n     */\n    function renderDetachView(lView) {\n        applyView(lView[RENDERER], 2 /* Detach */, lView, null, null);\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        var lViewOrLContainer = rootView[CHILD_HEAD];\n        if (!lViewOrLContainer) {\n            return cleanUpView(rootView);\n        }\n        while (lViewOrLContainer) {\n            var next = null;\n            if (isLView(lViewOrLContainer)) {\n                // If LView, traverse down to child.\n                next = lViewOrLContainer[CHILD_HEAD];\n            }\n            else {\n                ngDevMode && assertLContainer(lViewOrLContainer);\n                // If container, traverse down to its first LView.\n                var firstView = lViewOrLContainer[CONTAINER_HEADER_OFFSET];\n                if (firstView)\n                    next = firstView;\n            }\n            if (!next) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (lViewOrLContainer && !lViewOrLContainer[NEXT] && lViewOrLContainer !== rootView) {\n                    cleanUpView(lViewOrLContainer);\n                    lViewOrLContainer = getParentState(lViewOrLContainer, rootView);\n                }\n                cleanUpView(lViewOrLContainer || rootView);\n                next = lViewOrLContainer && lViewOrLContainer[NEXT];\n            }\n            lViewOrLContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param index Which index in the container to insert the child view into\n     */\n    function insertView(lView, lContainer, index) {\n        ngDevMode && assertLView(lView);\n        ngDevMode && assertLContainer(lContainer);\n        var indexInContainer = CONTAINER_HEADER_OFFSET + index;\n        var containerLength = lContainer.length;\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            lContainer[indexInContainer - 1][NEXT] = lView;\n        }\n        if (index < containerLength - CONTAINER_HEADER_OFFSET) {\n            lView[NEXT] = lContainer[indexInContainer];\n            addToArray(lContainer, CONTAINER_HEADER_OFFSET + index, lView);\n        }\n        else {\n            lContainer.push(lView);\n            lView[NEXT] = null;\n        }\n        lView[PARENT] = lContainer;\n        // track views where declaration and insertion points are different\n        var declarationLContainer = lView[DECLARATION_LCONTAINER];\n        if (declarationLContainer !== null && lContainer !== declarationLContainer) {\n            trackMovedView(declarationLContainer, lView);\n        }\n        // notify query that a new view has been added\n        var lQueries = lView[QUERIES];\n        if (lQueries !== null) {\n            lQueries.insertView(lView[TVIEW]);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 128 /* Attached */;\n    }\n    /**\n     * Track views created from the declaration container (TemplateRef) and inserted into a\n     * different LContainer.\n     */\n    function trackMovedView(declarationContainer, lView) {\n        ngDevMode && assertLContainer(declarationContainer);\n        var declaredViews = declarationContainer[MOVED_VIEWS];\n        if (declaredViews === null) {\n            declarationContainer[MOVED_VIEWS] = [lView];\n        }\n        else {\n            declaredViews.push(lView);\n        }\n    }\n    function detachMovedView(declarationContainer, lView) {\n        ngDevMode && assertLContainer(declarationContainer);\n        ngDevMode && assertDefined(declarationContainer[MOVED_VIEWS], 'A projected view should belong to a non-empty projected views collection');\n        var projectedViews = declarationContainer[MOVED_VIEWS];\n        var declaredViewIndex = projectedViews.indexOf(lView);\n        projectedViews.splice(declaredViewIndex, 1);\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method removes the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex) {\n        if (lContainer.length <= CONTAINER_HEADER_OFFSET)\n            return;\n        var indexInContainer = CONTAINER_HEADER_OFFSET + removeIndex;\n        var viewToDetach = lContainer[indexInContainer];\n        if (viewToDetach) {\n            var declarationLContainer = viewToDetach[DECLARATION_LCONTAINER];\n            if (declarationLContainer !== null && declarationLContainer !== lContainer) {\n                detachMovedView(declarationLContainer, viewToDetach);\n            }\n            if (removeIndex > 0) {\n                lContainer[indexInContainer - 1][NEXT] = viewToDetach[NEXT];\n            }\n            var removedLView = removeFromArray(lContainer, CONTAINER_HEADER_OFFSET + removeIndex);\n            addRemoveViewFromContainer(viewToDetach, false, null);\n            // notify query that a view has been removed\n            var lQueries = removedLView[QUERIES];\n            if (lQueries !== null) {\n                lQueries.detachView(removedLView[TVIEW]);\n            }\n            viewToDetach[PARENT] = null;\n            viewToDetach[NEXT] = null;\n            // Unsets the attached flag\n            viewToDetach[FLAGS] &= ~128 /* Attached */;\n        }\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, removeIndex) {\n        var detachedView = detachView(lContainer, removeIndex);\n        detachedView && destroyLView(detachedView);\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param lView The view to be destroyed.\n     */\n    function destroyLView(lView) {\n        if (!(lView[FLAGS] & 256 /* Destroyed */)) {\n            var renderer = lView[RENDERER];\n            if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n                applyView(renderer, 3 /* Destroy */, lView, null, null);\n            }\n            destroyViewTree(lView);\n        }\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param lViewOrLContainer The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(lViewOrLContainer, rootView) {\n        var tNode;\n        if (isLView(lViewOrLContainer) && (tNode = lViewOrLContainer[T_HOST]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, lViewOrLContainer);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return lViewOrLContainer[PARENT] === rootView ? null : lViewOrLContainer[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(view) {\n        if (isLView(view) && !(view[FLAGS] & 256 /* Destroyed */)) {\n            // Usually the Attached flag is removed when the view is detached from its parent, however\n            // if it's a root view, the flag won't be unset hence why we're also removing on destroy.\n            view[FLAGS] &= ~128 /* Attached */;\n            // Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook\n            // runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If\n            // We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.\n            // This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is\n            // really more of an \"afterDestroy\" hook if you think about it.\n            view[FLAGS] |= 256 /* Destroyed */;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[T_HOST];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n            var declarationContainer = view[DECLARATION_LCONTAINER];\n            // we are dealing with an embedded view that is still inserted into a container\n            if (declarationContainer !== null && isLContainer(view[PARENT])) {\n                // and this is a projected view\n                if (declarationContainer !== view[PARENT]) {\n                    detachMovedView(declarationContainer, view);\n                }\n                // For embedded views still attached to a container: remove query result from this view.\n                var lQueries = view[QUERIES];\n                if (lQueries !== null) {\n                    lQueries.detachView(view[TVIEW]);\n                }\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup !== null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a native DOM listener\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        unwrapRNode(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // native DOM listener registered with Renderer3\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            for (var i = 0; i < destroyHooks.length; i += 2) {\n                var context = view[destroyHooks[i]];\n                // Only call the destroy hook if the context has been requested.\n                if (!(context instanceof NodeInjectorFactory)) {\n                    destroyHooks[i + 1].call(context);\n                }\n            }\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is made for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tNode, currentView) {\n        // Nodes of the top-most view can be inserted eagerly.\n        if (isRootView(currentView)) {\n            return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n        }\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parentTNode = tNode.parent;\n        while (parentTNode != null && (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */)) {\n            tNode = parentTNode;\n            parentTNode = tNode.parent;\n        }\n        // If the parent tNode is null, then we are inserting across views: either into an embedded view\n        // or a component view.\n        if (parentTNode == null) {\n            var hostTNode = currentView[T_HOST];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                ngDevMode && assertNodeOfPossibleTypes(hostTNode, 3 /* Element */);\n                return currentView[HOST];\n            }\n        }\n        else {\n            var isIcuCase = tNode && tNode.type === 5 /* IcuContainer */;\n            // If the parent of this node is an ICU container, then it is represented by comment node and we\n            // need to use it as an anchor. If it is projected then it's direct parent node is the renderer.\n            if (isIcuCase && tNode.flags & 4 /* isProjected */) {\n                return getNativeByTNode(tNode, currentView).parentNode;\n            }\n            ngDevMode && assertNodeType(parentTNode, 3 /* Element */);\n            if (parentTNode.flags & 2 /* isComponentHost */) {\n                var tData = currentView[TVIEW].data;\n                var tNode_1 = tData[parentTNode.index];\n                var encapsulation = tData[tNode_1.directiveStart].encapsulation;\n                // We've got a parent which is an element in the current view. We just need to verify if the\n                // parent element is not a component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would then move it to its final destination. Note that we can't\n                // make this assumption when using the Shadow DOM, because the native projection placeholders\n                // (<content> or <slot>) have to be in place as elements are being inserted.\n                if (encapsulation !== exports.ViewEncapsulation.ShadowDom &&\n                    encapsulation !== exports.ViewEncapsulation.Native) {\n                    return null;\n                }\n            }\n            return getNativeByTNode(parentTNode, currentView);\n        }\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        ngDevMode && ngDevMode.rendererInsertBefore++;\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    function nativeAppendChild(renderer, parent, child) {\n        ngDevMode && ngDevMode.rendererAppendChild++;\n        ngDevMode && assertDefined(parent, 'parent node must be defined');\n        if (isProceduralRenderer(renderer)) {\n            renderer.appendChild(parent, child);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    }\n    function nativeAppendOrInsertBefore(renderer, parent, child, beforeNode) {\n        if (beforeNode !== null) {\n            nativeInsertBefore(renderer, parent, child, beforeNode);\n        }\n        else {\n            nativeAppendChild(renderer, parent, child);\n        }\n    }\n    /** Removes a node from the DOM given its native parent. */\n    function nativeRemoveChild(renderer, parent, child, isHostElement) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.removeChild(parent, child, isHostElement);\n        }\n        else {\n            parent.removeChild(child);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Finds a native \"anchor\" node for cases where we can't append a native child directly\n     * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.\n     * @param parentTNode\n     * @param lView\n     */\n    function getNativeAnchorNode(parentTNode, lView) {\n        if (parentTNode.type === 2 /* View */) {\n            var lContainer = getLContainer(parentTNode, lView);\n            if (lContainer === null)\n                return null;\n            var index = lContainer.indexOf(lView, CONTAINER_HEADER_OFFSET) - CONTAINER_HEADER_OFFSET;\n            return getBeforeNodeForView(index, lContainer);\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */) {\n            return getNativeByTNode(parentTNode, lView);\n        }\n        return null;\n    }\n    /**\n     * Appends the `child` native node (or a collection of nodes) to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The native child (or children) that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var renderParent = getRenderParent(childTNode, currentView);\n        if (renderParent != null) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[T_HOST];\n            var anchorNode = getNativeAnchorNode(parentTNode, currentView);\n            if (Array.isArray(childEl)) {\n                for (var i = 0; i < childEl.length; i++) {\n                    nativeAppendOrInsertBefore(renderer, renderParent, childEl[i], anchorNode);\n                }\n            }\n            else {\n                nativeAppendOrInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n        }\n    }\n    /**\n     * Returns the first native node for a given LView, starting from the provided TNode.\n     *\n     * Native nodes are returned in the order in which those appear in the native tree (DOM).\n     */\n    function getFirstNativeNode(lView, tNode) {\n        if (tNode !== null) {\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */, 5 /* IcuContainer */, 1 /* Projection */);\n            var tNodeType = tNode.type;\n            if (tNodeType === 3 /* Element */) {\n                return getNativeByTNode(tNode, lView);\n            }\n            else if (tNodeType === 0 /* Container */) {\n                return getBeforeNodeForView(-1, lView[tNode.index]);\n            }\n            else if (tNodeType === 4 /* ElementContainer */ || tNodeType === 5 /* IcuContainer */) {\n                var elIcuContainerChild = tNode.child;\n                if (elIcuContainerChild !== null) {\n                    return getFirstNativeNode(lView, elIcuContainerChild);\n                }\n                else {\n                    return getNativeByTNode(tNode, lView);\n                }\n            }\n            else {\n                var componentView = findComponentView(lView);\n                var componentHost = componentView[T_HOST];\n                var parentView = getLViewParent(componentView);\n                var firstProjectedTNode = componentHost.projection[tNode.projection];\n                if (firstProjectedTNode != null) {\n                    return getFirstNativeNode(parentView, firstProjectedTNode);\n                }\n                else {\n                    return getFirstNativeNode(lView, tNode.next);\n                }\n            }\n        }\n        return null;\n    }\n    function getBeforeNodeForView(viewIndexInContainer, lContainer) {\n        var nextViewIndex = CONTAINER_HEADER_OFFSET + viewIndexInContainer + 1;\n        if (nextViewIndex < lContainer.length) {\n            var lView = lContainer[nextViewIndex];\n            var firstTNodeOfView = lView[TVIEW].firstChild;\n            if (firstTNodeOfView !== null) {\n                return getFirstNativeNode(lView, firstTNodeOfView);\n            }\n        }\n        return lContainer[NATIVE];\n    }\n    /**\n     * Removes a native node itself using a given renderer. To remove the node we are looking up its\n     * parent from the native tree as not all platforms / browsers support the equivalent of\n     * node.remove().\n     *\n     * @param renderer A renderer to be used\n     * @param rNode The native node that should be removed\n     * @param isHostElement A flag indicating if a node to be removed is a host of a component.\n     */\n    function nativeRemoveNode(renderer, rNode, isHostElement) {\n        var nativeParent = nativeParentNode(renderer, rNode);\n        if (nativeParent) {\n            nativeRemoveChild(renderer, nativeParent, rNode, isHostElement);\n        }\n    }\n    /**\n     * Performs the operation of `action` on the node. Typically this involves inserting or removing\n     * nodes on the LView or projection boundary.\n     */\n    function applyNodes(renderer, action, tNode, lView, renderParent, beforeNode, isProjection) {\n        while (tNode != null) {\n            ngDevMode && assertTNodeForLView(tNode, lView);\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */, 1 /* Projection */, 1 /* Projection */, 5 /* IcuContainer */);\n            var rawSlotValue = lView[tNode.index];\n            var tNodeType = tNode.type;\n            if (isProjection) {\n                if (action === 0 /* Create */) {\n                    rawSlotValue && attachPatchData(unwrapRNode(rawSlotValue), lView);\n                    tNode.flags |= 4 /* isProjected */;\n                }\n            }\n            if ((tNode.flags & 64 /* isDetached */) !== 64 /* isDetached */) {\n                if (tNodeType === 4 /* ElementContainer */ || tNodeType === 5 /* IcuContainer */) {\n                    applyNodes(renderer, action, tNode.child, lView, renderParent, beforeNode, false);\n                    applyToElementOrContainer(action, renderer, renderParent, rawSlotValue, beforeNode);\n                }\n                else if (tNodeType === 1 /* Projection */) {\n                    applyProjectionRecursive(renderer, action, lView, tNode, renderParent, beforeNode);\n                }\n                else {\n                    ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */);\n                    applyToElementOrContainer(action, renderer, renderParent, rawSlotValue, beforeNode);\n                }\n            }\n            tNode = isProjection ? tNode.projectionNext : tNode.next;\n        }\n    }\n    /**\n     * `applyView` performs operation on the view as specified in `action` (insert, detach, destroy)\n     *\n     * Inserting a view without projection or containers at top level is simple. Just iterate over the\n     * root nodes of the View, and for each node perform the `action`.\n     *\n     * Things get more complicated with containers and projections. That is because coming across:\n     * - Container: implies that we have to insert/remove/destroy the views of that container as well\n     *              which in turn can have their own Containers at the View roots.\n     * - Projection: implies that we have to insert/remove/destroy the nodes of the projection. The\n     *               complication is that the nodes we are projecting can themselves have Containers\n     *               or other Projections.\n     *\n     * As you can see this is a very recursive problem. Yes recursion is not most efficient but the\n     * code is complicated enough that trying to implemented with recursion becomes unmaintainable.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyView(renderer, action, lView, renderParent, beforeNode) {\n        var tView = lView[TVIEW];\n        ngDevMode && assertNodeType(tView.node, 2 /* View */);\n        var viewRootTNode = tView.node.child;\n        applyNodes(renderer, action, viewRootTNode, lView, renderParent, beforeNode, false);\n    }\n    /**\n     * `applyProjection` performs operation on the projection.\n     *\n     * Inserting a projection requires us to locate the projected nodes from the parent component. The\n     * complication is that those nodes themselves could be re-projected from their parent component.\n     *\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param tProjectionNode node to project\n     */\n    function applyProjection(lView, tProjectionNode) {\n        var renderer = lView[RENDERER];\n        var renderParent = getRenderParent(tProjectionNode, lView);\n        var parentTNode = tProjectionNode.parent || lView[T_HOST];\n        var beforeNode = getNativeAnchorNode(parentTNode, lView);\n        applyProjectionRecursive(renderer, 0 /* Create */, lView, tProjectionNode, renderParent, beforeNode);\n    }\n    /**\n     * `applyProjectionRecursive` performs operation on the projection specified by `action` (insert,\n     * detach, destroy)\n     *\n     * Inserting a projection requires us to locate the projected nodes from the parent component. The\n     * complication is that those nodes themselves could be re-projected from their parent component.\n     *\n     * @param renderer Render to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param tProjectionNode node to project\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyProjectionRecursive(renderer, action, lView, tProjectionNode, renderParent, beforeNode) {\n        var componentLView = findComponentView(lView);\n        var componentNode = componentLView[T_HOST];\n        ngDevMode &&\n            assertEqual(typeof tProjectionNode.projection, 'number', 'expecting projection index');\n        var nodeToProjectOrRNodes = componentNode.projection[tProjectionNode.projection];\n        if (Array.isArray(nodeToProjectOrRNodes)) {\n            // This should not exist, it is a bit of a hack. When we bootstrap a top level node and we\n            // need to support passing projectable nodes, so we cheat and put them in the TNode\n            // of the Host TView. (Yes we put instance info at the T Level). We can get away with it\n            // because we know that that TView is not shared and therefore it will not be a problem.\n            // This should be refactored and cleaned up.\n            for (var i = 0; i < nodeToProjectOrRNodes.length; i++) {\n                var rNode = nodeToProjectOrRNodes[i];\n                applyToElementOrContainer(action, renderer, renderParent, rNode, beforeNode);\n            }\n        }\n        else {\n            var nodeToProject = nodeToProjectOrRNodes;\n            var projectedComponentLView = componentLView[PARENT];\n            applyNodes(renderer, action, nodeToProject, projectedComponentLView, renderParent, beforeNode, true);\n        }\n    }\n    /**\n     * `applyContainer` performs an operation on the container and its views as specified by\n     * `action` (insert, detach, destroy)\n     *\n     * Inserting a Container is complicated by the fact that the container may have Views which\n     * themselves have containers or projections.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lContainer The LContainer which needs to be inserted, detached, destroyed.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyContainer(renderer, action, lContainer, renderParent, beforeNode) {\n        ngDevMode && assertLContainer(lContainer);\n        var anchor = lContainer[NATIVE]; // LContainer has its own before node.\n        var native = unwrapRNode(lContainer);\n        // An LContainer can be created dynamically on any node by injecting ViewContainerRef.\n        // Asking for a ViewContainerRef on an element will result in a creation of a separate anchor node\n        // (comment in the DOM) that will be different from the LContainer's host node. In this particular\n        // case we need to execute action on 2 nodes:\n        // - container's host node (this is done in the executeActionOnElementOrContainer)\n        // - container's host node (this is done here)\n        if (anchor !== native) {\n            // This is very strange to me (Misko). I would expect that the native is same as anchor. I don't\n            // see a reason why they should be different, but they are.\n            //\n            // If they are we need to process the second anchor as well.\n            applyToElementOrContainer(action, renderer, renderParent, anchor, beforeNode);\n        }\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var lView = lContainer[i];\n            applyView(renderer, action, lView, renderParent, anchor);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[T_HOST];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[T_HOST];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(\n        /**\n         * This represents `LView` associated with the component when ViewRef is a ChangeDetectorRef.\n         *\n         * When ViewRef is created for a dynamic component, this also represents the `LView` for the\n         * component.\n         *\n         * For a \"regular\" ViewRef created for an embedded view, this is the `LView` for the embedded\n         * view.\n         *\n         * @internal\n         */\n        _lView, \n        /**\n         * This represents the `LView` associated with the point where `ChangeDetectorRef` was\n         * requested.\n         *\n         * This may be different from `_lView` if the `_cdRefInjectingView` is an embedded view.\n         */\n        _cdRefInjectingView) {\n            this._lView = _lView;\n            this._cdRefInjectingView = _cdRefInjectingView;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[T_HOST];\n                    return collectNativeNodes(this._lView, tView.child, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._lView[CONTEXT]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 256 /* Destroyed */) === 256 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._cdRefInjectingView || this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~128 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 128 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChangesInternal(this._lView, this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._lView);\n        };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, tNode, result, isProjection) {\n        if (isProjection === void 0) { isProjection = false; }\n        while (tNode !== null) {\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 1 /* Projection */, 4 /* ElementContainer */, 5 /* IcuContainer */);\n            var lNode = lView[tNode.index];\n            if (lNode !== null) {\n                result.push(unwrapRNode(lNode));\n            }\n            // A given lNode can represent either a native node or a LContainer (when it is a host of a\n            // ViewContainerRef). When we find a LContainer we need to descend into it to collect root nodes\n            // from the views in this container.\n            if (isLContainer(lNode)) {\n                for (var i = CONTAINER_HEADER_OFFSET; i < lNode.length; i++) {\n                    var lViewInAContainer = lNode[i];\n                    var lViewFirstChildTNode = lViewInAContainer[TVIEW].firstChild;\n                    if (lViewFirstChildTNode !== null) {\n                        collectNativeNodes(lViewInAContainer, lViewFirstChildTNode, result);\n                    }\n                }\n            }\n            var tNodeType = tNode.type;\n            if (tNodeType === 4 /* ElementContainer */ || tNodeType === 5 /* IcuContainer */) {\n                collectNativeNodes(lView, tNode.child, result);\n            }\n            else if (tNodeType === 1 /* Projection */) {\n                var componentView = findComponentView(lView);\n                var componentHost = componentView[T_HOST];\n                var parentView = getLViewParent(componentView);\n                var firstProjectedNode = componentHost.projection[tNode.projection];\n                if (firstProjectedNode !== null && parentView !== null) {\n                    collectNativeNodes(parentView, firstProjectedNode, result, true);\n                }\n            }\n            tNode = isProjection ? tNode.projectionNext : tNode.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node on which a TemplateRef is requested\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance or null if we can't create a TemplateRef on a given node type\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationView, _declarationTContainer, elementRef) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationView = _declarationView;\n                    _this._declarationTContainer = _declarationTContainer;\n                    _this.elementRef = elementRef;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context) {\n                    var embeddedTView = this._declarationTContainer.tViews;\n                    var lView = createLView(this._declarationView, embeddedTView, context, 16 /* CheckAlways */, null, embeddedTView.node);\n                    var declarationLContainer = this._declarationView[this._declarationTContainer.index];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    lView[DECLARATION_LCONTAINER] = declarationLContainer;\n                    var declarationViewLQueries = this._declarationView[QUERIES];\n                    if (declarationViewLQueries !== null) {\n                        lView[QUERIES] = declarationViewLQueries.createEmbeddedView(embeddedTView);\n                    }\n                    renderView(lView, embeddedTView, context);\n                    var viewRef = new ViewRef(lView);\n                    viewRef._tViewNode = lView[T_HOST];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, hostTNode, createElementRef(ElementRefToken, hostTNode, hostView));\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this.length > 0) {\n                        this.remove(this.length - 1);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) {\n                    return this._lContainer[VIEW_REFS] !== null && this._lContainer[VIEW_REFS][index] || null;\n                };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer.length - CONTAINER_HEADER_OFFSET; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var viewRef = templateRef.createEmbeddedView(context || {});\n                    this.insert(viewRef, index);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        // DO NOT REFACTOR. The code here used to have a `value || undefined` expression\n                        // which seems to cause internal google apps to fail. This is documented in the\n                        // following internal bug issue: go/b/142967802\n                        var result = contextInjector.get(NgModuleRef, null);\n                        if (result) {\n                            ngModuleRef = result;\n                        }\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    this.allocateContainerIfNeeded();\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    if (viewAttachedToContainer(lView)) {\n                        // If view is already attached, fall back to move() so we clean up\n                        // references appropriately.\n                        return this.move(viewRef, adjustedIdx);\n                    }\n                    insertView(lView, this._lContainer, adjustedIdx);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    addToArray(this._lContainer[VIEW_REFS], adjustedIdx, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    if (index !== -1)\n                        this.detach(index);\n                    this.insert(viewRef, newIndex);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) {\n                    return this._lContainer[VIEW_REFS] !== null ?\n                        this._lContainer[VIEW_REFS].indexOf(viewRef) :\n                        0;\n                };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, adjustedIdx);\n                    removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx);\n                    var wasDetached = view && removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx) != null;\n                    return wasDetached ? new ViewRef(view) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this.length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this.length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                ViewContainerRef_.prototype.allocateContainerIfNeeded = function () {\n                    if (this._lContainer[VIEW_REFS] === null) {\n                        this._lContainer[VIEW_REFS] = [];\n                    }\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = void 0;\n            // If the host is an element container, the native host element is guaranteed to be a\n            // comment and we can reuse that comment as anchor element for the new LContainer.\n            if (hostTNode.type === 4 /* ElementContainer */) {\n                commentNode = unwrapRNode(slotValue);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererCreateComment++;\n                commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            }\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, hostTNode, true);\n            addToViewTree(hostView, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef(isPipe) {\n        if (isPipe === void 0) { isPipe = false; }\n        return createViewRef(getPreviousOrParentTNode(), getLView(), isPipe);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param tNode The node that is requesting a ChangeDetectorRef\n     * @param lView The view to which the node belongs\n     * @param isPipe Whether the view is being injected into a pipe.\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(tNode, lView, isPipe) {\n        // `isComponentView` will be true for Component and Directives (but not for Pipes).\n        // See https://github.com/angular/angular/pull/33072 for proper fix\n        var isComponentView = !isPipe && isComponentHost(tNode);\n        if (isComponentView) {\n            // The LView represents the location where the component is declared.\n            // Instead we want the LView for the component View and so we need to look it up.\n            var componentView = getComponentLViewByIndex(tNode.index, lView); // look down\n            return new ViewRef(componentView, componentView);\n        }\n        else if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */ ||\n            tNode.type === 4 /* ElementContainer */) {\n            // The LView represents the location where the injection is requested from.\n            // We need to locate the containing LView (in case where the `lView` is an embedded view)\n            var hostComponentView = findComponentView(lView); // look up\n            return new ViewRef(hostComponentView, lView);\n        }\n        return null;\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Injects a Renderer2 for the current component. */\n    function injectRenderer2() {\n        // We need the Renderer to be based on the component that it's being injected into, however since\n        // DI happens before we've entered its view, `getLView` will return the parent view instead.\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var nodeAtIndex = getComponentLViewByIndex(tNode.index, lView);\n        return getOrCreateRenderer2(isLView(nodeAtIndex) ? nodeAtIndex : lView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var INHERITED_CLASS_WITH_DELEGATE_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(\\)\\s*{\\s+super\\(\\.\\.\\.arguments\\)/;\n    /**\n     * Determine whether a stringified type is a class which delegates its constructor\n     * to its parent.\n     *\n     * This is not trivial since compiled code can actually contain a constructor function\n     * even if the original source code did not. For instance, when the child class contains\n     * an initialized instance property.\n     */\n    function isDelegateCtor(typeStr) {\n        return DELEGATE_CTOR.test(typeStr) || INHERITED_CLASS_WITH_DELEGATE_CTOR.test(typeStr) ||\n            (INHERITED_CLASS.test(typeStr) && !INHERITED_CLASS_WITH_CTOR.test(typeStr));\n    }\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = newArray(paramAnnotations.length);\n            }\n            else {\n                result = newArray(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] && paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (isDelegateCtor(typeStr)) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return newArray(type.length);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.ownPropMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            return this._ownPropMetadata(typeOrFunc, getParentCtor(typeOrFunc)) || {};\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else if (param === ChangeDetectorRef) {\n                    meta.token = param;\n                    meta.resolved = compiler.R3ResolvedDependencyType.ChangeDetectorRef;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * injectable def (`ɵprov`) onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var ngInjectableDef = null;\n        var ngFactoryDef = null;\n        // if NG_PROV_DEF is already defined on this class then don't overwrite it\n        if (!type.hasOwnProperty(NG_PROV_DEF)) {\n            Object.defineProperty(type, NG_PROV_DEF, {\n                get: function () {\n                    if (ngInjectableDef === null) {\n                        ngInjectableDef = getCompilerFacade().compileInjectable(angularCoreDiEnv, \"ng:///\" + type.name + \"/\\u0275prov.js\", getInjectableMetadata(type, srcMeta));\n                    }\n                    return ngInjectableDef;\n                },\n            });\n        }\n        // if NG_FACTORY_DEF is already defined on this class then don't overwrite it\n        if (!type.hasOwnProperty(NG_FACTORY_DEF)) {\n            Object.defineProperty(type, NG_FACTORY_DEF, {\n                get: function () {\n                    if (ngFactoryDef === null) {\n                        var metadata = getInjectableMetadata(type, srcMeta);\n                        var compiler = getCompilerFacade();\n                        ngFactoryDef = compiler.compileFactory(angularCoreDiEnv, \"ng:///\" + type.name + \"/\\u0275fac.js\", {\n                            name: metadata.name,\n                            type: metadata.type,\n                            typeArgumentCount: metadata.typeArgumentCount,\n                            deps: reflectDependencies(type),\n                            injectFn: 'inject',\n                            target: compiler.R3FactoryTarget.Pipe\n                        });\n                    }\n                    return ngFactoryDef;\n                },\n                // Leave this configurable so that the factories from directives or pipes can take precedence.\n                configurable: true\n            });\n        }\n    }\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$1 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n    function getInjectableMetadata(type, srcMeta) {\n        // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n        var meta = srcMeta || { providedIn: null };\n        var compilerMeta = {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            providedIn: meta.providedIn,\n            userDeps: undefined,\n        };\n        if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n            compilerMeta.userDeps = convertDependencies(meta.deps);\n        }\n        if (isUseClassProvider(meta)) {\n            // The user explicitly specified useClass, and may or may not have provided deps.\n            compilerMeta.useClass = resolveForwardRef(meta.useClass);\n        }\n        else if (isUseValueProvider(meta)) {\n            // The user explicitly specified useValue.\n            compilerMeta.useValue = resolveForwardRef(meta.useValue);\n        }\n        else if (isUseFactoryProvider(meta)) {\n            // The user explicitly specified useFactory.\n            compilerMeta.useFactory = meta.useFactory;\n        }\n        else if (isUseExistingProvider(meta)) {\n            // The user explicitly specified useExisting.\n            compilerMeta.useExisting = resolveForwardRef(meta.useExisting);\n        }\n        return compilerMeta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var EMPTY_ARRAY$1 = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$2 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return ɵɵinject(resolveForwardRef(existingProvider_1.useExisting)); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY$1))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = (resolveForwardRef(classProvider_1.useClass))).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function render2CompileInjectable(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ɵprov = ɵɵdefineInjectable({\n                token: injectableType,\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var INJECTOR_SCOPE = new InjectionToken('Set Injector scope.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR = {};\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR === undefined) {\n            NULL_INJECTOR = new NullInjector();\n        }\n        return NULL_INJECTOR;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders, name) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent, name);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent, source) {\n            var _this = this;\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             * - `null` value implies that we don't have the record. Used by tree-shakable injectors\n             * to prevent further searches.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            this._destroyed = false;\n            var dedupStack = [];\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in additional providers then do the same for `def`. This order is\n            // important because `def` may include providers that override ones in additionalProviders.\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            var record = this.records.get(INJECTOR_SCOPE);\n            this.scope = record != null ? record.value : null;\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n            // Source name, used for debugging\n            this.source = source || (typeof def === 'object' ? null : stringify(def));\n        }\n        Object.defineProperty(R3Injector.prototype, \"destroyed\", {\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this._destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an injectable\n                        // def with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an injectable def and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                        }\n                        else {\n                            record = null;\n                        }\n                        this.records.set(token, record);\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record != null /* NOT null || undefined */) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                // Set the notFoundValue based on the Optional flag - if optional is set and notFoundValue\n                // is undefined, the value is null, otherwise it's the notFoundValue.\n                notFoundValue = (flags & exports.InjectFlags.Optional) && notFoundValue === THROW_IF_NOT_FOUND ?\n                    null :\n                    notFoundValue;\n                return nextInjector.get(token, notFoundValue);\n            }\n            catch (e) {\n                if (e.name === 'NullInjectorError') {\n                    var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n                    path.unshift(stringify(token));\n                    if (previousInjector) {\n                        // We still have a parent injector, keep throwing\n                        throw e;\n                    }\n                    else {\n                        // Format & throw the final error message when we don't have any previous injector\n                        return catchInjectorError(e, token, 'R3InjectorError', this.source);\n                    }\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.toString = function () {\n            var tokens = [], records = this.records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"R3Injector[\" + tokens.join(', ') + \"]\";\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this._destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         *\n         * If an `InjectorTypeWithProviders` that declares providers besides the type is specified,\n         * the function will return \"true\" to indicate that the providers of the type definition need\n         * to be processed. This allows us to process providers of injector types after all imports of\n         * an injector definition are processed. (following View Engine semantics: see FW-1349)\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return false;\n            // Either the defOrWrappedDef is an InjectorType (with injector def) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the injector def (`ɵinj`).\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return false;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                var importTypesWithProviders_1;\n                try {\n                    deepForEach(def.imports, function (imported) {\n                        if (_this.processInjectorType(imported, parents, dedupStack)) {\n                            if (importTypesWithProviders_1 === undefined)\n                                importTypesWithProviders_1 = [];\n                            // If the processed import is an injector type with providers, we store it in the\n                            // list of import types with providers, so that we can process those afterwards.\n                            importTypesWithProviders_1.push(imported);\n                        }\n                    });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n                // Imports which are declared with providers (TypeWithProviders) need to be processed\n                // after all imported modules are processed. This is similar to how View Engine\n                // processes/merges module imports in the metadata resolver. See: FW-1349.\n                if (importTypesWithProviders_1 !== undefined) {\n                    var _loop_1 = function (i) {\n                        var _a = importTypesWithProviders_1[i], ngModule_1 = _a.ngModule, providers = _a.providers;\n                        deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModule_1, providers || EMPTY_ARRAY$2); });\n                    };\n                    for (var i = 0; i < importTypesWithProviders_1.length; i++) {\n                        _loop_1(i);\n                    }\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            return (ngModule !== undefined &&\n                defOrWrappedDef.providers !== undefined);\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throwMixedMultiProviderError();\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throwMixedMultiProviderError();\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR) {\n                throwCyclicDependencyError(stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === this.scope);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        // Most tokens will have an injectable def directly on them, which specifies a factory directly.\n        var injectableDef = getInjectableDef(token);\n        var factory = injectableDef !== null ? injectableDef.factory : getFactoryDef(token);\n        if (factory !== null) {\n            return factory;\n        }\n        // If the token is an NgModule, it's also injectable but the factory is on its injector def\n        // (`ɵinj`)\n        var injectorDef = getInjectorDef(token);\n        if (injectorDef !== null) {\n            return injectorDef.factory;\n        }\n        // InjectionTokens should have an injectable def (ɵprov) and thus should be handled above.\n        // If it's missing that, it's an error.\n        if (token instanceof InjectionToken) {\n            throw new Error(\"Token \" + stringify(token) + \" is missing a \\u0275prov definition.\");\n        }\n        // Undecorated types can sometimes be created if they have no constructor arguments.\n        if (token instanceof Function) {\n            return getUndecoratedInjectableFactory(token);\n        }\n        // There was no way to resolve a factory for this token.\n        throw new Error('unreachable');\n    }\n    function getUndecoratedInjectableFactory(token) {\n        // If the token has parameters then it has dependencies that we cannot resolve implicitly.\n        var paramLength = token.length;\n        if (paramLength > 0) {\n            var args = newArray(paramLength, '?');\n            throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n        }\n        // The constructor function appears to have no parameters.\n        // This might be because it inherits from a super-class. In which case, use an injectable\n        // def from an ancestor if there is one.\n        // Otherwise this really is a simple class with no dependencies, so return a factory that\n        // just instantiates the zero-arg constructor.\n        var inheritedInjectableDef = getInheritedInjectableDef(token);\n        if (inheritedInjectableDef !== null) {\n            return function () { return inheritedInjectableDef.factory(token); };\n        }\n        else {\n            return function () { return new token(); };\n        }\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return ɵɵinject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    throwInvalidProviderError(ngModuleType, providers, provider);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function isValueProvider(value) {\n        return value !== null && typeof value == 'object' && USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function isClassProvider(value) {\n        return !!value.useClass;\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return value !== null && typeof value === 'object' &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    function INJECTOR_IMPL__PRE_R3__(providers, parent, name) {\n        return new StaticInjector(providers, parent, name);\n    }\n    function INJECTOR_IMPL__POST_R3__(providers, parent, name) {\n        return createInjector({ name: name }, parent, providers, name);\n    }\n    var INJECTOR_IMPL = INJECTOR_IMPL__POST_R3__;\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return INJECTOR_IMPL(options, parent, '');\n            }\n            else {\n                return INJECTOR_IMPL(options.providers, options.parent, options.name || '');\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ɵprov = ɵɵdefineInjectable({\n            token: Injector,\n            providedIn: 'any',\n            factory: function () { return ɵɵinject(INJECTOR); },\n        });\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Injector.__NG_ELEMENT_ID__ = -1;\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR$1 = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var NO_NEW_LINE$1 = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = Injector.NULL; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            this.scope = recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var records = this._records;\n            var record = records.get(token);\n            if (record === undefined) {\n                // This means we have never seen this record, see if it is tree shakable provider.\n                var injectableDef = getInjectableDef(token);\n                if (injectableDef) {\n                    var providedIn = injectableDef && injectableDef.providedIn;\n                    if (providedIn === 'any' || providedIn != null && providedIn === this.scope) {\n                        records.set(token, record = resolveProvider({ provide: token, useFactory: injectableDef.factory, deps: EMPTY }));\n                    }\n                }\n                if (record === undefined) {\n                    // Set record to null to make sure that we don't go through expensive lookup above again.\n                    records.set(token, null);\n                }\n            }\n            var lastInjector = setCurrentInjector(this);\n            try {\n                return tryResolveToken(token, record, records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                return catchInjectorError(e, token, 'StaticInjectorError', this.source);\n            }\n            finally {\n                setCurrentInjector(lastInjector);\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) {\n            // Just use IDENT\n        }\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        var scope = null;\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (Array.isArray(provider)) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    scope = recursivelyProcessProviders(records, provider[i]) || scope;\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                if (token === INJECTOR_SCOPE) {\n                    scope = resolvedProvider.value;\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n        return scope;\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR$1) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR$1) {\n                throw Error(NO_NEW_LINE$1 + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR$1;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? Injector.NULL : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        else if (!(flags & exports.InjectFlags.Optional)) {\n            value = Injector.NULL.get(token, notFoundValue);\n        }\n        else {\n            value = Injector.NULL.get(token, typeof notFoundValue !== 'undefined' ? notFoundValue : null);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (Array.isArray(token)) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj, 'StaticInjectorError'));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (Array.isArray(b)) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = [];\n            this.objs = [];\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = [];\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = [];\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI token that you can use to create a virtual [provider](guide/glossary#provider)\n     * that will populate the `entryComponents` field of components and NgModules\n     * based on its `useValue` property value.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) are added to the `entryComponents` property.\n     *\n     * @usageNotes\n     *\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on a router configuration that refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     * @deprecated Since 9.0.0. With Ivy, this property is no longer necessary.\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n     * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n     *\n     * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n     * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n     *\n     * // Use browser's `fetch()` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into `template` strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible for returning a `Promise` to the\n     * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var componentResolved = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component, type) {\n            var promises = [];\n            if (component.templateUrl) {\n                promises.push(cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                }));\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                promises.push(cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                }));\n            });\n            var fullyResolved = Promise.all(promises).then(function () { return componentDefResolved(type); });\n            componentResolved.push(fullyResolved);\n        });\n        clearResolutionOfComponentResourcesQueue();\n        return Promise.all(componentResolved).then(function () { return undefined; });\n    }\n    var componentResourceResolutionQueue = new Map();\n    // Track when existing ɵcmp for a Type is waiting on resources.\n    var componentDefPendingResolution = new Set();\n    function maybeQueueResolutionOfComponentResources(type, metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.set(type, metadata);\n            componentDefPendingResolution.add(type);\n        }\n    }\n    function isComponentDefPendingResolution(type) {\n        return componentDefPendingResolution.has(type);\n    }\n    function componentNeedsResolution(component) {\n        return !!((component.templateUrl && !component.hasOwnProperty('template')) ||\n            component.styleUrls && component.styleUrls.length);\n    }\n    function clearResolutionOfComponentResourcesQueue() {\n        var old = componentResourceResolutionQueue;\n        componentResourceResolutionQueue = new Map();\n        return old;\n    }\n    function restoreComponentResolutionQueue(queue) {\n        componentDefPendingResolution.clear();\n        queue.forEach(function (_, type) { return componentDefPendingResolution.add(type); });\n        componentResourceResolutionQueue = queue;\n    }\n    function isComponentResourceResolutionQueueEmpty() {\n        return componentResourceResolutionQueue.size === 0;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n    function componentDefResolved(type) {\n        componentDefPendingResolution.delete(type);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     *\n     * @codeGenApi\n     */\n    function ɵɵallocHostVars(count) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (!tView.firstCreatePass)\n            return;\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n     */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstCreatePass, true, 'Should only be called in first create pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /**\n     * On the first template pass, we need to reserve space for host binding values\n     * after directives are matched (so all directives are saved, then bindings).\n     * Because we are updating the blueprint, we only need to do this once.\n     */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstCreatePass, true, 'Should only be called in first create pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual$1(a, b) {\n        var isListLikeIterableA = isListLikeIterable$1(a);\n        var isListLikeIterableB = isListLikeIterable$1(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual$1(a, b, devModeEqual$1);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    function isListLikeIterable$1(obj) {\n        if (!isJsObject$1(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual$1(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike$1(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject$1(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, bindingIndex);\n        ngDevMode &&\n            assertNotSame(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        var oldValue = lView[bindingIndex];\n        if (Object.is(oldValue, value)) {\n            return false;\n        }\n        else {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                // View engine didn't report undefined values as changed on the first checkNoChanges pass\n                // (before the change detection was run).\n                var oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;\n                if (!devModeEqual$1(oldValueToCompare, value)) {\n                    throwErrorIfNoChangesMode(oldValue === NO_CHANGE, oldValueToCompare, value);\n                }\n            }\n            lView[bindingIndex] = value;\n            return true;\n        }\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Updates the value of or removes a bound attribute on an Element.\n     *\n     * Used in the case of `[attr.title]=\"value\"`\n     *\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param namespace Optional namespace to use when setting the attribute.\n     *\n     * @codeGenApi\n     */\n    function ɵɵattribute(name, value, sanitizer, namespace) {\n        var lView = getLView();\n        if (bindingUpdated(lView, nextBindingIndex(), value)) {\n            elementAttributeInternal(getSelectedIndex(), name, value, lView, sanitizer, namespace);\n        }\n        return ɵɵattribute;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(lView, values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var isBindingUpdated = false;\n        var bindingIndex = getBindingIndex();\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            isBindingUpdated = bindingUpdated(lView, bindingIndex++, values[i]) || isBindingUpdated;\n        }\n        setBindingIndex(bindingIndex);\n        if (!isBindingUpdated) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += renderStringify(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(lView, prefix, v0, suffix) {\n        var different = bindingUpdated(lView, nextBindingIndex(), v0);\n        return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 2 expressions.\n     */\n    function interpolation2(lView, prefix, v0, i0, v1, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated2(lView, bindingIndex, v0, v1);\n        incrementBindingIndex(2);\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 3 expressions.\n     */\n    function interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);\n        incrementBindingIndex(3);\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Create an interpolation binding with 4 expressions.\n     */\n    function interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        incrementBindingIndex(4);\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 5 expressions.\n     */\n    function interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        incrementBindingIndex(5);\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 6 expressions.\n     */\n    function interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        incrementBindingIndex(6);\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 7 expressions.\n     */\n    function interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        incrementBindingIndex(7);\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 8 expressions.\n     */\n    function interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        incrementBindingIndex(8);\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n            NO_CHANGE;\n    }\n\n    /**\n     *\n     * Update an interpolated attribute on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate1(attrName, prefix, v0, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate2(attrName, prefix, v0, i0, v1, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate3(attrName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate4(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate5(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate6(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate7(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate8(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate8;\n    }\n    /**\n     * Update an interpolated attribute on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param attrName The name of the attribute to update.\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolateV(attrName, values, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolated, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n    /**\n     * Used to perform change detection on the whole application.\n     *\n     * This is equivalent to `detectChanges`, but invoked on root component. Additionally, `tick`\n     * executes lifecycle hooks and conditionally checks components based on their\n     * `ChangeDetectionStrategy` and dirtiness.\n     *\n     * The preferred way to trigger change detection is to call `markDirty`. `markDirty` internally\n     * schedules `tick` using a scheduler in order to coalesce multiple `markDirty` calls into a\n     * single change detection run. By default, the scheduler is `requestAnimationFrame`, but can\n     * be changed when calling `renderComponent` and providing the `scheduler` option.\n     */\n    function tick(component) {\n        var rootView = getRootView(component);\n        var rootContext = rootView[CONTEXT];\n        tickRootContext(rootContext);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainer(index) {\n        var lView = getLView();\n        var tNode = containerInternal(lView, index, null, null);\n        if (lView[TVIEW].firstCreatePass) {\n            tNode.tViews = [];\n        }\n        setIsNotParent();\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param decls The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrsIndex Index of template attributes in the `consts` array.\n     * @param localRefs Index of the local references in the `consts` array.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplate(index, templateFn, decls, vars, tagName, attrsIndex, localRefsIndex, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var tViewConsts = tView.consts;\n        // TODO: consider a separate node type for templates\n        var tContainerNode = containerInternal(lView, index, tagName || null, getConstant(tViewConsts, attrsIndex));\n        var localRefs = getConstant(tViewConsts, localRefsIndex);\n        if (tView.firstCreatePass) {\n            ngDevMode && ngDevMode.firstCreatePass++;\n            resolveDirectives(tView, lView, tContainerNode, localRefs);\n            registerPostOrderHooks(tView, tContainerNode);\n            var embeddedTView = tContainerNode.tViews = createTView(2 /* Embedded */, -1, templateFn, decls, vars, tView.directiveRegistry, tView.pipeRegistry, null, tView.schemas, tViewConsts);\n            var embeddedTViewNode = createTNode(tView, null, 2 /* View */, -1, null, null);\n            embeddedTViewNode.injectorIndex = tContainerNode.injectorIndex;\n            embeddedTView.node = embeddedTViewNode;\n            if (tView.queries !== null) {\n                tView.queries.template(tView, tContainerNode);\n                embeddedTView.queries = tView.queries.embeddedTView(tContainerNode);\n            }\n        }\n        if (isDirectiveHost(tContainerNode)) {\n            createDirectivesInstances(tView, lView, tContainerNode);\n        }\n        if (localRefs != null) {\n            saveResolvedLocalsInData(lView, tContainerNode, localRefExtractor);\n        }\n        setIsNotParent();\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = load(tView.data, index);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setPreviousOrParentTNode(previousOrParentTNode, true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        if (!getCheckNoChangesMode()) {\n            var hooksInitPhaseCompleted = (lView[FLAGS] & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            if (hooksInitPhaseCompleted) {\n                var preOrderCheckHooks = tView.preOrderCheckHooks;\n                if (preOrderCheckHooks !== null) {\n                    executeCheckHooks(lView, preOrderCheckHooks, null);\n                }\n            }\n            else {\n                var preOrderHooks = tView.preOrderHooks;\n                if (preOrderHooks !== null) {\n                    executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, null);\n                }\n                incrementInitPhaseFlags(lView, 0 /* OnInitHooksToBeRun */);\n            }\n        }\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer.length - CONTAINER_HEADER_OFFSET) {\n            removeView(lContainer, nextIndex);\n        }\n    }\n    function containerInternal(lView, nodeIndex, tagName, attrs) {\n        ngDevMode && assertEqual(getBindingIndex(), lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = nodeIndex + HEADER_OFFSET;\n        ngDevMode && assertDataInRange(lView, nodeIndex + HEADER_OFFSET);\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var comment = lView[adjustedIndex] =\n            lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 0 /* Container */, tagName, attrs);\n        var lContainer = lView[adjustedIndex] = createLContainer(comment, lView, comment, tNode);\n        appendChild(comment, tNode, lView);\n        attachPatchData(comment, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, lContainer);\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n            tView.blueprint[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     *\n     * @codeGenApi\n     */\n    function ɵɵreference(index) {\n        var contextLView = getContextLView();\n        return load(contextLView, index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ɵɵdirectiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        var lView = getLView();\n        // Fall back to inject() if view hasn't been created. This situation can happen in tests\n        // if inject utilities are used before bootstrapping.\n        if (lView == null)\n            return ɵɵinject(token, flags);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), lView, token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n    /**\n     * Throws an error indicating that a factory function could not be generated by the compiler for a\n     * particular class.\n     *\n     * This instruction allows the actual error message to be optimized away when ngDevMode is turned\n     * off, saving bytes of generated code while still providing a good experience in dev mode.\n     *\n     * The name of the class is not mentioned here, but will be in the generated factory function name\n     * and thus in the stack trace.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinvalidFactory() {\n        var msg = ngDevMode ? \"This constructor was not compatible with Dependency Injection.\" : 'invalid';\n        throw new Error(msg);\n    }\n\n    /**\n     * --------\n     *\n     * This file contains the core logic for how styling instructions are processed in Angular.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    /**\n     * Sets the current style sanitizer function which will then be used\n     * within all follow-up prop and map-based style binding instructions\n     * for the given element.\n     *\n     * Note that once styling has been applied to the element (i.e. once\n     * `advance(n)` is executed or the hostBindings/template function exits)\n     * then the active `sanitizerFn` will be set to `null`. This means that\n     * once styling is applied to another element then a another call to\n     * `styleSanitizer` will need to be made.\n     *\n     * @param sanitizerFn The sanitization function that will be used to\n     *       process style prop/value entries.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleSanitizer(sanitizer) {\n        setCurrentStyleSanitizer(sanitizer);\n    }\n    /**\n     * Update a style binding on an element with the provided value.\n     *\n     * If the style value is falsy then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `styleMap` or any static styles that are\n     * present from when the element was created with `styling`).\n     *\n     * Note that the styling element is updated as part of `stylingApply`.\n     *\n     * @param prop A valid CSS property.\n     * @param value New value to write (`null` or an empty string to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     *\n     * Note that this will apply the provided style value to the host element if this function is called\n     * within a host binding function.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleProp(prop, value, suffix) {\n        stylePropInternal(getSelectedIndex(), prop, value, suffix);\n    }\n    /**\n     * Internal function for applying a single style to an element.\n     *\n     * The reason why this function has been separated from `ɵɵstyleProp` is because\n     * it is also called from `ɵɵstylePropInterpolate`.\n     */\n    function stylePropInternal(elementIndex, prop, value, suffix) {\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = nextBindingIndex();\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var firstUpdatePass = lView[TVIEW].firstUpdatePass;\n        // we check for this in the instruction code so that the context can be notified\n        // about prop or map bindings so that the direct apply check can decide earlier\n        // if it allows for context resolution to be bypassed.\n        if (firstUpdatePass) {\n            patchConfig(tNode, 32768 /* hasStylePropBindings */);\n            patchHostStylingFlag(tNode, isHostStyling(), false);\n        }\n        var updated = stylingProp(tNode, firstUpdatePass, lView, bindingIndex, prop, resolveStylePropValue(value, suffix), false);\n        if (ngDevMode) {\n            ngDevMode.styleProp++;\n            if (updated) {\n                ngDevMode.stylePropCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Update a class binding on an element with the provided value.\n     *\n     * This instruction is meant to handle the `[class.foo]=\"exp\"` case and,\n     * therefore, the class binding itself must already be allocated using\n     * `styling` within the creation block.\n     *\n     * @param prop A valid CSS class (only one).\n     * @param value A true/false value which will turn the class on or off.\n     *\n     * Note that this will apply the provided class value to the host element if this function\n     * is called within a host binding function.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassProp(className, value) {\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = nextBindingIndex();\n        var lView = getLView();\n        var elementIndex = getSelectedIndex();\n        var tNode = getTNode(elementIndex, lView);\n        var firstUpdatePass = lView[TVIEW].firstUpdatePass;\n        // we check for this in the instruction code so that the context can be notified\n        // about prop or map bindings so that the direct apply check can decide earlier\n        // if it allows for context resolution to be bypassed.\n        if (firstUpdatePass) {\n            patchConfig(tNode, 1024 /* hasClassPropBindings */);\n            patchHostStylingFlag(tNode, isHostStyling(), true);\n        }\n        var updated = stylingProp(tNode, firstUpdatePass, lView, bindingIndex, className, value, true);\n        if (ngDevMode) {\n            ngDevMode.classProp++;\n            if (updated) {\n                ngDevMode.classPropCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Shared function used to update a prop-based styling binding for an element.\n     *\n     * Depending on the state of the `tNode.styles` styles context, the style/prop\n     * value may be applied directly to the element instead of being processed\n     * through the context. The reason why this occurs is for performance and fully\n     * depends on the state of the context (i.e. whether or not there are duplicate\n     * bindings or whether or not there are map-based bindings and property bindings\n     * present together).\n     */\n    function stylingProp(tNode, firstUpdatePass, lView, bindingIndex, prop, value, isClassBased) {\n        var updated = false;\n        var native = getNativeByTNode(tNode, lView);\n        var context = isClassBased ? getClassesContext(tNode) : getStylesContext(tNode);\n        var sanitizer = isClassBased ? null : getCurrentStyleSanitizer();\n        // [style.prop] and [class.name] bindings do not use `bind()` and will\n        // therefore manage accessing and updating the new value in the lView directly.\n        // For this reason, the checkNoChanges situation must also be handled here\n        // as well.\n        if (ngDevMode && getCheckNoChangesMode()) {\n            var oldValue = getValue(lView, bindingIndex);\n            if (hasValueChanged(oldValue, value)) {\n                throwErrorIfNoChangesMode(false, oldValue, value);\n            }\n        }\n        // Direct Apply Case: bypass context resolution and apply the\n        // style/class value directly to the element\n        if (allowDirectStyling(tNode, isClassBased, firstUpdatePass)) {\n            var sanitizerToUse = isClassBased ? null : sanitizer;\n            var renderer = getRenderer(tNode, lView);\n            updated = applyStylingValueDirectly(renderer, context, tNode, native, lView, bindingIndex, prop, value, isClassBased, sanitizerToUse);\n            if (sanitizerToUse) {\n                // it's important we remove the current style sanitizer once the\n                // element exits, otherwise it will be used by the next styling\n                // instructions for the next element.\n                setElementExitFn(stylingApply);\n            }\n        }\n        else {\n            // Context Resolution (or first update) Case: save the value\n            // and defer to the context to flush and apply the style/class binding\n            // value to the element.\n            var directiveIndex = getActiveDirectiveId();\n            if (isClassBased) {\n                updated = updateClassViaContext(context, tNode, lView, native, directiveIndex, prop, bindingIndex, value, false, firstUpdatePass);\n            }\n            else {\n                updated = updateStyleViaContext(context, tNode, lView, native, directiveIndex, prop, bindingIndex, value, sanitizer, false, firstUpdatePass);\n            }\n            setElementExitFn(stylingApply);\n        }\n        return updated;\n    }\n    /**\n     * Update style bindings using an object literal on an element.\n     *\n     * This instruction is meant to apply styling via the `[style]=\"exp\"` template bindings.\n     * When styles are applied to the element they will then be updated with respect to\n     * any styles/classes set via `styleProp`. If any styles are set to falsy\n     * then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     *\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     *\n     * Note that this will apply the provided styleMap value to the host element if this function\n     * is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleMap(styles) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var firstUpdatePass = lView[TVIEW].firstUpdatePass;\n        var context = getStylesContext(tNode);\n        var hasDirectiveInput = hasStyleInput(tNode);\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = incrementBindingIndex(2);\n        var hostBindingsMode = isHostStyling();\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!hostBindingsMode && hasDirectiveInput && styles !== NO_CHANGE) {\n            updateDirectiveInputValue(context, lView, tNode, bindingIndex, styles, false, firstUpdatePass);\n            styles = NO_CHANGE;\n        }\n        // we check for this in the instruction code so that the context can be notified\n        // about prop or map bindings so that the direct apply check can decide earlier\n        // if it allows for context resolution to be bypassed.\n        if (firstUpdatePass) {\n            patchConfig(tNode, 16384 /* hasStyleMapBindings */);\n            patchHostStylingFlag(tNode, isHostStyling(), false);\n        }\n        stylingMap(context, tNode, firstUpdatePass, lView, bindingIndex, styles, false, hasDirectiveInput);\n    }\n    /**\n     * Update class bindings using an object literal or class-string on an element.\n     *\n     * This instruction is meant to apply styling via the `[class]=\"exp\"` template bindings.\n     * When classes are applied to the element they will then be updated with\n     * respect to any styles/classes set via `classProp`. If any\n     * classes are set to falsy then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     * Note that this will the provided classMap value to the host element if this function is called\n     * within a host binding.\n     *\n     * @param classes A key/value map or string of CSS classes that will be added to the\n     *        given element. Any missing classes (that have already been applied to the element\n     *        beforehand) will be removed (unset) from the element's list of CSS classes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassMap(classes) {\n        classMapInternal(getSelectedIndex(), classes);\n    }\n    /**\n     * Internal function for applying a class string or key/value map of classes to an element.\n     *\n     * The reason why this function has been separated from `ɵɵclassMap` is because\n     * it is also called from `ɵɵclassMapInterpolate`.\n     */\n    function classMapInternal(elementIndex, classes) {\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var firstUpdatePass = lView[TVIEW].firstUpdatePass;\n        var context = getClassesContext(tNode);\n        var hasDirectiveInput = hasClassInput(tNode);\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = incrementBindingIndex(2);\n        var hostBindingsMode = isHostStyling();\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!hostBindingsMode && hasDirectiveInput && classes !== NO_CHANGE) {\n            updateDirectiveInputValue(context, lView, tNode, bindingIndex, classes, true, firstUpdatePass);\n            classes = NO_CHANGE;\n        }\n        // we check for this in the instruction code so that the context can be notified\n        // about prop or map bindings so that the direct apply check can decide earlier\n        // if it allows for context resolution to be bypassed.\n        if (firstUpdatePass) {\n            patchConfig(tNode, 512 /* hasClassMapBindings */);\n            patchHostStylingFlag(tNode, isHostStyling(), true);\n        }\n        stylingMap(context, tNode, firstUpdatePass, lView, bindingIndex, classes, true, hasDirectiveInput);\n    }\n    /**\n     * Shared function used to update a map-based styling binding for an element.\n     *\n     * When this function is called it will activate support for `[style]` and\n     * `[class]` bindings in Angular.\n     */\n    function stylingMap(context, tNode, firstUpdatePass, lView, bindingIndex, value, isClassBased, hasDirectiveInput) {\n        var directiveIndex = getActiveDirectiveId();\n        var native = getNativeByTNode(tNode, lView);\n        var oldValue = getValue(lView, bindingIndex);\n        var sanitizer = getCurrentStyleSanitizer();\n        var valueHasChanged = hasValueChanged(oldValue, value);\n        // [style] and [class] bindings do not use `bind()` and will therefore\n        // manage accessing and updating the new value in the lView directly.\n        // For this reason, the checkNoChanges situation must also be handled here\n        // as well.\n        if (ngDevMode && valueHasChanged && getCheckNoChangesMode()) {\n            throwErrorIfNoChangesMode(false, oldValue, value);\n        }\n        // Direct Apply Case: bypass context resolution and apply the\n        // style/class map values directly to the element\n        if (allowDirectStyling(tNode, isClassBased, firstUpdatePass)) {\n            var sanitizerToUse = isClassBased ? null : sanitizer;\n            var renderer = getRenderer(tNode, lView);\n            applyStylingMapDirectly(renderer, context, tNode, native, lView, bindingIndex, value, isClassBased, sanitizerToUse, valueHasChanged, hasDirectiveInput);\n            if (sanitizerToUse) {\n                // it's important we remove the current style sanitizer once the\n                // element exits, otherwise it will be used by the next styling\n                // instructions for the next element.\n                setElementExitFn(stylingApply);\n            }\n        }\n        else {\n            var stylingMapArr = value === NO_CHANGE ? NO_CHANGE : normalizeIntoStylingMap(oldValue, value, !isClassBased);\n            activateStylingMapFeature();\n            // Context Resolution (or first update) Case: save the map value\n            // and defer to the context to flush and apply the style/class binding\n            // value to the element.\n            if (isClassBased) {\n                updateClassViaContext(context, tNode, lView, native, directiveIndex, null, bindingIndex, stylingMapArr, valueHasChanged, firstUpdatePass);\n            }\n            else {\n                updateStyleViaContext(context, tNode, lView, native, directiveIndex, null, bindingIndex, stylingMapArr, sanitizer, valueHasChanged, firstUpdatePass);\n            }\n            setElementExitFn(stylingApply);\n        }\n        if (ngDevMode) {\n            isClassBased ? ngDevMode.classMap : ngDevMode.styleMap++;\n            if (valueHasChanged) {\n                isClassBased ? ngDevMode.classMapCacheMiss : ngDevMode.styleMapCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Writes a value to a directive's `style` or `class` input binding (if it has changed).\n     *\n     * If a directive has a `@Input` binding that is set on `style` or `class` then that value\n     * will take priority over the underlying style/class styling bindings. This value will\n     * be updated for the binding each time during change detection.\n     *\n     * When this occurs this function will attempt to write the value to the input binding\n     * depending on the following situations:\n     *\n     * - If `oldValue !== newValue`\n     * - If `newValue` is `null` (but this is skipped if it is during the first update pass)\n     */\n    function updateDirectiveInputValue(context, lView, tNode, bindingIndex, newValue, isClassBased, firstUpdatePass) {\n        var oldValue = getValue(lView, bindingIndex);\n        if (hasValueChanged(oldValue, newValue)) {\n            // even if the value has changed we may not want to emit it to the\n            // directive input(s) in the event that it is falsy during the\n            // first update pass.\n            if (isStylingValueDefined(newValue) || !firstUpdatePass) {\n                var inputName = isClassBased ? selectClassBasedInputName(tNode.inputs) : 'style';\n                var inputs = tNode.inputs[inputName];\n                var initialValue = getInitialStylingValue(context);\n                var value = normalizeStylingDirectiveInputValue(initialValue, newValue, isClassBased);\n                setInputsForProperty(lView, inputs, value);\n                setElementExitFn(stylingApply);\n            }\n            setValue(lView, bindingIndex, newValue);\n        }\n    }\n    /**\n     * Returns the appropriate directive input value for `style` or `class`.\n     *\n     * Earlier versions of Angular expect a binding value to be passed into directive code\n     * exactly as it is unless there is a static value present (in which case both values\n     * will be stringified and concatenated).\n     */\n    function normalizeStylingDirectiveInputValue(initialValue, bindingValue, isClassBased) {\n        var value = bindingValue;\n        // we only concat values if there is an initial value, otherwise we return the value as is.\n        // Note that this is to satisfy backwards-compatibility in Angular.\n        if (initialValue.length) {\n            if (isClassBased) {\n                value = concatString(initialValue, forceClassesAsString(bindingValue));\n            }\n            else {\n                value = concatString(initialValue, forceStylesAsString(bindingValue, true), ';');\n            }\n        }\n        return value;\n    }\n    /**\n     * Flushes all styling code to the element.\n     *\n     * This function is designed to be scheduled from any of the four styling instructions\n     * in this file. When called it will flush all style and class bindings to the element\n     * via the context resolution algorithm.\n     */\n    function stylingApply() {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var elementIndex = getSelectedIndex();\n        var tNode = getTNode(elementIndex, lView);\n        var native = getNativeByTNode(tNode, lView);\n        var directiveIndex = getActiveDirectiveId();\n        var renderer = getRenderer(tNode, lView);\n        var sanitizer = getCurrentStyleSanitizer();\n        var classesContext = isStylingContext(tNode.classes) ? tNode.classes : null;\n        var stylesContext = isStylingContext(tNode.styles) ? tNode.styles : null;\n        flushStyling(renderer, lView, tNode, classesContext, stylesContext, native, directiveIndex, sanitizer, tView.firstUpdatePass);\n        resetCurrentStyleSanitizer();\n    }\n    function getRenderer(tNode, lView) {\n        return tNode.type === 3 /* Element */ ? lView[RENDERER] : null;\n    }\n    /**\n     * Searches and assigns provided all static style/class entries (found in the `attrs` value)\n     * and registers them in their respective styling contexts.\n     */\n    function registerInitialStylingOnTNode(tNode, attrs, startIndex) {\n        var hasAdditionalInitialStyling = false;\n        var styles = getStylingMapArray(tNode.styles);\n        var classes = getStylingMapArray(tNode.classes);\n        var mode = -1;\n        for (var i = startIndex; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode == 1 /* Classes */) {\n                classes = classes || allocStylingMapArray(null);\n                addItemToStylingMap(classes, attr, true);\n                hasAdditionalInitialStyling = true;\n            }\n            else if (mode == 2 /* Styles */) {\n                var value = attrs[++i];\n                styles = styles || allocStylingMapArray(null);\n                addItemToStylingMap(styles, attr, value);\n                hasAdditionalInitialStyling = true;\n            }\n        }\n        if (classes && classes.length > 1 /* ValuesStartPosition */) {\n            if (!tNode.classes) {\n                tNode.classes = classes;\n            }\n            updateRawValueOnContext(tNode.classes, stylingMapToString(classes, true));\n        }\n        if (styles && styles.length > 1 /* ValuesStartPosition */) {\n            if (!tNode.styles) {\n                tNode.styles = styles;\n            }\n            updateRawValueOnContext(tNode.styles, stylingMapToString(styles, false));\n        }\n        if (hasAdditionalInitialStyling) {\n            tNode.flags |= 256 /* hasInitialStyling */;\n        }\n        return hasAdditionalInitialStyling;\n    }\n    function updateRawValueOnContext(context, value) {\n        var stylingMapArr = getStylingMapArray(context);\n        stylingMapArr[0 /* RawValuePosition */] = value;\n    }\n    function getStylesContext(tNode) {\n        return getContext(tNode, false);\n    }\n    function getClassesContext(tNode) {\n        return getContext(tNode, true);\n    }\n    /**\n     * Returns/instantiates a styling context from/to a `tNode` instance.\n     */\n    function getContext(tNode, isClassBased) {\n        var context = isClassBased ? tNode.classes : tNode.styles;\n        if (!isStylingContext(context)) {\n            var hasDirectives = isDirectiveHost(tNode);\n            context = allocTStylingContext(context, hasDirectives);\n            if (ngDevMode) {\n                attachStylingDebugObject(context, tNode, isClassBased);\n            }\n            if (isClassBased) {\n                tNode.classes = context;\n            }\n            else {\n                tNode.styles = context;\n            }\n        }\n        return context;\n    }\n    function resolveStylePropValue(value, suffix) {\n        if (value === NO_CHANGE)\n            return value;\n        var resolvedValue = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                resolvedValue = renderStringify(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a string value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                resolvedValue = value;\n            }\n        }\n        return resolvedValue;\n    }\n    /**\n     * Whether or not the style/class binding being applied was executed within a host bindings\n     * function.\n     */\n    function isHostStyling() {\n        return isHostStylingActive(getActiveDirectiveId());\n    }\n    function patchHostStylingFlag(tNode, hostBindingsMode, isClassBased) {\n        var flag = hostBindingsMode ?\n            isClassBased ? 4096 /* hasHostClassBindings */ : 131072 /* hasHostStyleBindings */ :\n            isClassBased ? 2048 /* hasTemplateClassBindings */ : 65536 /* hasTemplateStyleBindings */;\n        patchConfig(tNode, flag);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrsIndex Index of the element's attributes in the `consts` array.\n     * @param localRefsIndex Index of the element's local references in the `consts` array.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementStart(index, name, attrsIndex, localRefsIndex) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var tViewConsts = tView.consts;\n        var attrs = getConstant(tViewConsts, attrsIndex);\n        var localRefs = getConstant(tViewConsts, localRefsIndex);\n        ngDevMode && assertEqual(getBindingIndex(), tView.bindingStartIndex, 'elements should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var renderer = lView[RENDERER];\n        var native = lView[index + HEADER_OFFSET] = elementCreate(name, renderer, getNamespace());\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 3 /* Element */, name, attrs);\n        if (attrs != null) {\n            var lastAttrIndex = setUpAttributes(renderer, native, attrs);\n            if (tView.firstCreatePass) {\n                registerInitialStylingOnTNode(tNode, attrs, lastAttrIndex);\n            }\n        }\n        if ((tNode.flags & 256 /* hasInitialStyling */) === 256 /* hasInitialStyling */) {\n            renderInitialStyling(renderer, native, tNode, false);\n        }\n        appendChild(native, tNode, lView);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstCreatePass) {\n            ngDevMode && ngDevMode.firstCreatePass++;\n            var hasDirectives = resolveDirectives(tView, lView, tNode, localRefs);\n            ngDevMode && validateElement(lView, native, tNode, hasDirectives);\n            if (tView.queries !== null) {\n                tView.queries.elementStart(tView, tNode);\n            }\n        }\n        if (isDirectiveHost(tNode)) {\n            createDirectivesInstances(tView, lView, tNode);\n            executeContentQueries(tView, tNode, lView);\n        }\n        if (localRefs != null) {\n            saveResolvedLocalsInData(lView, tNode);\n        }\n    }\n    /**\n     * Mark the end of the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDefined(previousOrParentTNode, 'No parent node to close.');\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        var tNode = previousOrParentTNode;\n        ngDevMode && assertNodeType(tNode, 3 /* Element */);\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        decreaseElementDepthCount();\n        if (tView.firstCreatePass) {\n            registerPostOrderHooks(tView, previousOrParentTNode);\n            if (isContentQueryHost(previousOrParentTNode)) {\n                tView.queries.elementEnd(previousOrParentTNode);\n            }\n        }\n        if (hasClassInput(tNode)) {\n            var inputName = selectClassBasedInputName(tNode.inputs);\n            setDirectiveStylingInput(tNode.classes, lView, tNode.inputs[inputName]);\n        }\n        if (hasStyleInput(tNode)) {\n            setDirectiveStylingInput(tNode.styles, lView, tNode.inputs['style']);\n        }\n    }\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrsIndex Index of the element's attributes in the `consts` array.\n     * @param localRefsIndex Index of the element's local references in the `consts` array.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelement(index, name, attrsIndex, localRefsIndex) {\n        ɵɵelementStart(index, name, attrsIndex, localRefsIndex);\n        ɵɵelementEnd();\n    }\n    /**\n     * Assign static attribute values to a host element.\n     *\n     * This instruction will assign static attribute values as well as class and style\n     * values to an element within the host bindings function. Since attribute values\n     * can consist of different types of values, the `attrs` array must include the values in\n     * the following format:\n     *\n     * attrs = [\n     *   // static attributes (like `title`, `name`, `id`...)\n     *   attr1, value1, attr2, value,\n     *\n     *   // a single namespace value (like `x:id`)\n     *   NAMESPACE_MARKER, namespaceUri1, name1, value1,\n     *\n     *   // another single namespace value (like `x:name`)\n     *   NAMESPACE_MARKER, namespaceUri2, name2, value2,\n     *\n     *   // a series of CSS classes that will be applied to the element (no spaces)\n     *   CLASSES_MARKER, class1, class2, class3,\n     *\n     *   // a series of CSS styles (property + value) that will be applied to the element\n     *   STYLES_MARKER, prop1, value1, prop2, value2\n     * ]\n     *\n     * All non-class and non-style attributes must be defined at the start of the list\n     * first before all class and style values are set. When there is a change in value\n     * type (like when classes and styles are introduced) a marker must be used to separate\n     * the entries. The marker values themselves are set via entries found in the\n     * [AttributeMarker] enum.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array of static values (attributes, classes and styles) with the correct marker\n     * values.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementHostAttrs(attrs) {\n        var hostElementIndex = getSelectedIndex();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var tNode = getTNode(hostElementIndex, lView);\n        // non-element nodes (e.g. `<ng-container>`) are not rendered as actual\n        // element nodes and adding styles/classes on to them will cause runtime\n        // errors...\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var lastAttrIndex = setUpAttributes(lView[RENDERER], native, attrs);\n            if (tView.firstCreatePass) {\n                var stylingNeedsToBeRendered = registerInitialStylingOnTNode(tNode, attrs, lastAttrIndex);\n                // this is only called during the first template pass in the\n                // event that this current directive assigned initial style/class\n                // host attribute values to the element. Because initial styling\n                // values are applied before directives are first rendered (within\n                // `createElement`) this means that initial styling for any directives\n                // still needs to be applied. Note that this will only happen during\n                // the first template pass and not each time a directive applies its\n                // attribute values to the element.\n                if (stylingNeedsToBeRendered) {\n                    var renderer = lView[RENDERER];\n                    renderInitialStyling(renderer, native, tNode, true);\n                }\n            }\n        }\n    }\n    function setDirectiveStylingInput(context, lView, stylingInputs) {\n        // older versions of Angular treat the input as `null` in the\n        // event that the value does not exist at all. For this reason\n        // we can't have a styling value be an empty string.\n        var value = (context && getInitialStylingValue(context)) || null;\n        // Ivy does an extra `[class]` write with a falsy value since the value\n        // is applied during creation mode. This is a deviation from VE and should\n        // be (Jira Issue = FW-1467).\n        setInputsForProperty(lView, stylingInputs, value);\n    }\n    function validateElement(hostView, element, tNode, hasDirectives) {\n        var tagName = tNode.tagName;\n        // If the element matches any directive, it's considered as valid.\n        if (!hasDirectives && tagName !== null) {\n            // The element is unknown if it's an instance of HTMLUnknownElement or it isn't registered\n            // as a custom element. Note that unknown elements with a dash in their name won't be instances\n            // of HTMLUnknownElement in browsers that support web components.\n            var isUnknown = (typeof HTMLUnknownElement === 'function' && element instanceof HTMLUnknownElement) ||\n                (typeof customElements !== 'undefined' && tagName.indexOf('-') > -1 &&\n                    !customElements.get(tagName));\n            if (isUnknown && !matchingSchemas(hostView, tagName)) {\n                var errorMessage = \"'\" + tagName + \"' is not a known element:\\n\";\n                errorMessage +=\n                    \"1. If '\" + tagName + \"' is an Angular component, then verify that it is part of this module.\\n\";\n                if (tagName && tagName.indexOf('-') > -1) {\n                    errorMessage +=\n                        \"2. If '\" + tagName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\";\n                }\n                else {\n                    errorMessage +=\n                        \"2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                throw new Error(errorMessage);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrsIndex Index of the container attributes in the `consts` array.\n     * @param localRefsIndex Index of the container's local references in the `consts` array.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerStart(index, attrsIndex, localRefsIndex) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        var tViewConsts = tView.consts;\n        var attrs = getConstant(tViewConsts, attrsIndex);\n        var localRefs = getConstant(tViewConsts, localRefsIndex);\n        ngDevMode && assertEqual(getBindingIndex(), tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var native = lView[index + HEADER_OFFSET] = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 4 /* ElementContainer */, tagName, attrs);\n        if (attrs && tView.firstCreatePass) {\n            // While ng-container doesn't necessarily support styling, we use the style context to identify\n            // and execute directives on the ng-container.\n            registerInitialStylingOnTNode(tNode, attrs, 0);\n        }\n        appendChild(native, tNode, lView);\n        attachPatchData(native, lView);\n        if (tView.firstCreatePass) {\n            ngDevMode && ngDevMode.firstCreatePass++;\n            resolveDirectives(tView, lView, tNode, localRefs);\n            if (tView.queries) {\n                tView.queries.elementStart(tView, tNode);\n            }\n        }\n        if (isDirectiveHost(tNode)) {\n            createDirectivesInstances(tView, lView, tNode);\n            executeContentQueries(tView, tNode, lView);\n        }\n        if (localRefs != null) {\n            saveResolvedLocalsInData(lView, tNode);\n        }\n    }\n    /**\n     * Mark the end of the <ng-container>.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        if (tView.firstCreatePass) {\n            registerPostOrderHooks(tView, previousOrParentTNode);\n            if (isContentQueryHost(previousOrParentTNode)) {\n                tView.queries.elementEnd(previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Creates an empty logical container using {@link elementContainerStart}\n     * and {@link elementContainerEnd}\n     *\n     * @param index Index of the element in the LView array\n     * @param attrsIndex Index of the container attributes in the `consts` array.\n     * @param localRefsIndex Index of the container's local references in the `consts` array.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainer(index, attrsIndex, localRefsIndex) {\n        ɵɵelementContainerStart(index, attrsIndex, localRefsIndex);\n        ɵɵelementContainerEnd();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewStart(viewBlockId, decls, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent();\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, decls, vars, containerTNode), null, 16 /* CheckAlways */, null, null);\n            var tParentNode = getIsParent() ? previousOrParentTNode :\n                previousOrParentTNode && previousOrParentTNode.parent;\n            assignTViewNodeToLView(viewToRender[TVIEW], tParentNode, viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param decls The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, decls, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(2 /* Embedded */, viewIndex, null, decls, vars, tView.directiveRegistry, tView.pipeRegistry, null, null, tView.consts);\n        }\n        return containerTViews[viewIndex];\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     */\n    function scanForView(lContainer, startIdx, viewBlockId) {\n        for (var i = startIdx + CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var viewAtPositionId = lContainer[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return lContainer[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, i - CONTAINER_HEADER_OFFSET);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the end of an embedded view.\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewEnd() {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var viewHost = lView[T_HOST];\n        var context = lView[CONTEXT];\n        if (isCreationMode(lView)) {\n            renderView(lView, tView, context); // creation mode pass\n        }\n        refreshView(lView, tView, tView.template, context); // update mode pass\n        var lContainer = lView[PARENT];\n        ngDevMode && assertLContainerOrUndefined(lContainer);\n        leaveViewProcessExit();\n        setPreviousOrParentTNode(viewHost, false);\n    }\n\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @codeGenApi\n     */\n    function ɵɵgetCurrentView() {\n        return getLView();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n     */\n    function ɵɵlistener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        listenerInternal(lView, lView[RENDERER], tNode, eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n    * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component.\n    *\n    * This instruction is for compatibility purposes and is designed to ensure that a\n    * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n    * in the component's renderer. Normally all host listeners are evaluated with the\n    * parent component's renderer, but, in the case of animation @triggers, they need\n    * to be evaluated with the sub component's renderer (because that's where the\n    * animation triggers are defined).\n    *\n    * Do not use this instruction as a replacement for `listener`. This instruction\n    * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n    *\n    * @param eventName Name of the event\n    * @param listenerFn The function to be called when event emits\n    * @param useCapture Whether or not to use capture in event listener\n    * @param eventTargetResolver Function that returns global target information in case this listener\n    * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n    */\n    function ɵɵcomponentHostSyntheticListener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var renderer = loadComponentRenderer(tNode, lView);\n        listenerInternal(lView, renderer, tNode, eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n     * A utility function that checks if a given element has already an event handler registered for an\n     * event with a specified name. The TView.cleanup data structure is used to find out which events\n     * are registered for a given element.\n     */\n    function findExistingListener(lView, eventName, tNodeIdx) {\n        var tView = lView[TVIEW];\n        var tCleanup = tView.cleanup;\n        if (tCleanup != null) {\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                var cleanupEventName = tCleanup[i];\n                if (cleanupEventName === eventName && tCleanup[i + 1] === tNodeIdx) {\n                    // We have found a matching event name on the same node but it might not have been\n                    // registered yet, so we must explicitly verify entries in the LView cleanup data\n                    // structures.\n                    var lCleanup = lView[CLEANUP];\n                    var listenerIdxInLCleanup = tCleanup[i + 2];\n                    return lCleanup.length > listenerIdxInLCleanup ? lCleanup[listenerIdxInLCleanup] : null;\n                }\n                // TView.cleanup can have a mix of 4-elements entries (for event handler cleanups) or\n                // 2-element entries (for directive and queries destroy hooks). As such we can encounter\n                // blocks of 4 or 2 items in the tView.cleanup and this is why we iterate over 2 elements\n                // first and jump another 2 elements if we detect listeners cleanup (4 elements). Also check\n                // documentation of TView.cleanup for more details of this data structure layout.\n                if (typeof cleanupEventName === 'string') {\n                    i += 2;\n                }\n            }\n        }\n        return null;\n    }\n    function listenerInternal(lView, renderer, tNode, eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var tView = lView[TVIEW];\n        var isTNodeDirectiveHost = isDirectiveHost(tNode);\n        var firstCreatePass = tView.firstCreatePass;\n        var tCleanup = firstCreatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        var processOutputs = true;\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : EMPTY_OBJ;\n            var target = resolved.target || native;\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(unwrapRNode(_lView[tNode.index])).target; } :\n                tNode.index;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // There might be cases where multiple directives on the same element try to register an event\n                // handler function for the same event. In this situation we want to avoid registration of\n                // several native listeners as each registration would be intercepted by NgZone and\n                // trigger change detection. This would mean that a single user action would result in several\n                // change detections being invoked. To avoid this situation we want to have only one call to\n                // native handler registration (for the same element and same type of event).\n                //\n                // In order to have just one native event handler in presence of multiple handler functions,\n                // we just register a first handler function as a native event listener and then chain\n                // (coalesce) other handler functions on top of the first native handler function.\n                var existingListener = null;\n                // Please note that the coalescing described here doesn't happen for events specifying an\n                // alternative target (ex. (document:click)) - this is to keep backward compatibility with the\n                // view engine.\n                // Also, we don't have to search for existing listeners is there are no directives\n                // matching on a given node as we can't register multiple event handlers for the same event in\n                // a template (this would mean having duplicate attributes).\n                if (!eventTargetResolver && isTNodeDirectiveHost) {\n                    existingListener = findExistingListener(lView, eventName, tNode.index);\n                }\n                if (existingListener !== null) {\n                    // Attach a new listener to coalesced listeners list, maintaining the order in which\n                    // listeners are registered. For performance reasons, we keep a reference to the last\n                    // listener in that list (in `__ngLastListenerFn__` field), so we can avoid going through\n                    // the entire set each time we need to add a new listener.\n                    var lastListenerFn = existingListener.__ngLastListenerFn__ || existingListener;\n                    lastListenerFn.__ngNextListenerFn__ = listenerFn;\n                    existingListener.__ngLastListenerFn__ = listenerFn;\n                    processOutputs = false;\n                }\n                else {\n                    // The first argument of `listen` function in Procedural Renderer is:\n                    // - either a target name (as a string) in case of global target (window, document, body)\n                    // - or element reference (in all other cases)\n                    listenerFn = wrapListener(tNode, lView, listenerFn, false /** preventDefault */);\n                    var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                    ngDevMode && ngDevMode.rendererAddEventListener++;\n                    lCleanup.push(listenerFn, cleanupFn);\n                    tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, lCleanupIndex + 1);\n                }\n            }\n            else {\n                listenerFn = wrapListener(tNode, lView, listenerFn, true /** preventDefault */);\n                target.addEventListener(eventName, listenerFn, useCapture);\n                ngDevMode && ngDevMode.rendererAddEventListener++;\n                lCleanup.push(listenerFn);\n                tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCapture);\n            }\n        }\n        // subscribe to directive outputs\n        var outputs = tNode.outputs;\n        var props;\n        if (processOutputs && outputs != null && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 3) {\n                    var index = props[i];\n                    ngDevMode && assertDataInRange(lView, index);\n                    var minifiedName = props[i + 2];\n                    var directiveInstance = lView[index];\n                    var output = directiveInstance[minifiedName];\n                    if (ngDevMode && !isObservable(output)) {\n                        throw new Error(\"@Output \" + minifiedName + \" not initialized in '\" + directiveInstance.constructor.name + \"'.\");\n                    }\n                    var subscription = output.subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    function executeListenerWithErrorHandling(lView, tNode, listenerFn, e) {\n        try {\n            // Only explicitly returning false from a listener should preventDefault\n            return listenerFn(e) !== false;\n        }\n        catch (error) {\n            handleError(lView, error);\n            return false;\n        }\n    }\n    /**\n     * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,\n     * if applicable.\n     *\n     * @param tNode The TNode associated with this listener\n     * @param lView The LView that contains this listener\n     * @param listenerFn The listener function to call\n     * @param wrapWithPreventDefault Whether or not to prevent default behavior\n     * (the procedural renderer does this already, so in those cases, we should skip)\n     */\n    function wrapListener(tNode, lView, listenerFn, wrapWithPreventDefault) {\n        // Note: we are performing most of the work in the listener function itself\n        // to optimize listener registration.\n        return function wrapListenerIn_markDirtyAndPreventDefault(e) {\n            // Ivy uses `Function` as a special token that allows us to unwrap the function\n            // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`.\n            if (e === Function) {\n                return listenerFn;\n            }\n            // In order to be backwards compatible with View Engine, events on component host nodes\n            // must also mark the component view itself dirty (i.e. the view that it owns).\n            var startView = tNode.flags & 2 /* isComponentHost */ ?\n                getComponentLViewByIndex(tNode.index, lView) :\n                lView;\n            // See interfaces/view.ts for more on LViewFlags.ManualOnPush\n            if ((lView[FLAGS] & 32 /* ManualOnPush */) === 0) {\n                markViewDirty(startView);\n            }\n            var result = executeListenerWithErrorHandling(lView, tNode, listenerFn, e);\n            // A just-invoked listener function might have coalesced listeners so we need to check for\n            // their presence and invoke as needed.\n            var nextListenerFn = wrapListenerIn_markDirtyAndPreventDefault.__ngNextListenerFn__;\n            while (nextListenerFn) {\n                // We should prevent default if any of the listeners explicitly return false\n                result = executeListenerWithErrorHandling(lView, tNode, nextListenerFn, e) && result;\n                nextListenerFn = nextListenerFn.__ngNextListenerFn__;\n            }\n            if (wrapWithPreventDefault && result === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n            return result;\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     *\n     * @codeGenApi\n     */\n    function ɵɵnextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Checks a given node against matching projection slots and returns the\n     * determined slot index. Returns \"null\" if no slot matched the given node.\n     *\n     * This function takes into account the parsed ngProjectAs selector from the\n     * node's attributes. If present, it will check whether the ngProjectAs selector\n     * matches any of the projection slot selectors.\n     */\n    function matchingProjectionSlotIndex(tNode, projectionSlots) {\n        var wildcardNgContentIndex = null;\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < projectionSlots.length; i++) {\n            var slotValue = projectionSlots[i];\n            // The last wildcard projection slot should match all nodes which aren't matching\n            // any selector. This is necessary to be backwards compatible with view engine.\n            if (slotValue === '*') {\n                wildcardNgContentIndex = i;\n                continue;\n            }\n            // If we ran into an `ngProjectAs` attribute, we should match its parsed selector\n            // to the list of selectors, otherwise we fall back to matching against the node.\n            if (ngProjectAsAttrVal === null ?\n                isNodeMatchingSelectorList(tNode, slotValue, /* isProjectionMode */ true) :\n                isSelectorInSelectorList(ngProjectAsAttrVal, slotValue)) {\n                return i; // first matching selector \"captures\" a given node\n            }\n        }\n        return wildcardNgContentIndex;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param projectionSlots? A collection of projection slots. A projection slot can be based\n     *        on a parsed CSS selectors or set to the wildcard selector (\"*\") in order to match\n     *        all nodes which do not match any selector. If not specified, a single wildcard\n     *        selector projection slot will be defined.\n     *\n     * @codeGenApi\n     */\n    function ɵɵprojectionDef(projectionSlots) {\n        var componentNode = findComponentView(getLView())[T_HOST];\n        if (!componentNode.projection) {\n            // If no explicit projection slots are defined, fall back to a single\n            // projection slot with the wildcard selector.\n            var numProjectionSlots = projectionSlots ? projectionSlots.length : 1;\n            var projectionHeads = componentNode.projection =\n                newArray(numProjectionSlots, null);\n            var tails = projectionHeads.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var slotIndex = projectionSlots ? matchingProjectionSlotIndex(componentChild, projectionSlots) : 0;\n                if (slotIndex !== null) {\n                    if (tails[slotIndex]) {\n                        tails[slotIndex].projectionNext = componentChild;\n                    }\n                    else {\n                        projectionHeads[slotIndex] = componentChild;\n                    }\n                    tails[slotIndex] = componentChild;\n                }\n                componentChild = componentChild.next;\n            }\n        }\n    }\n    var delayProjection = false;\n    function setDelayProjection(value) {\n        delayProjection = value;\n    }\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     *\n     * @codeGenApi\n    */\n    function ɵɵprojection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 1 /* Projection */, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsNotParent();\n        // We might need to delay the projection of nodes if they are in the middle of an i18n block\n        if (!delayProjection) {\n            // re-distribution of projectable nodes is stored on a component's view level\n            applyProjection(lView, tProjectionNode);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a selected element.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵproperty(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = nextBindingIndex();\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, value, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, bindingIndex);\n        }\n        return ɵɵproperty;\n    }\n\n    /**\n     *\n     * Update an interpolated property on an element with a lone bound value\n     *\n     * Used when the value passed to a property has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div title=\"{{v0}}\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate('title', v0);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate(propName, v0, sanitizer) {\n        ɵɵpropertyInterpolate1(propName, '', v0, '', sanitizer);\n        return ɵɵpropertyInterpolate;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate1(propName, prefix, v0, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(lView, getSelectedIndex(), propName, interpolatedValue, sanitizer);\n            ngDevMode &&\n                storePropertyBindingMetadata(lView[TVIEW].data, getSelectedIndex(), propName, getBindingIndex() - 1, prefix, suffix);\n        }\n        return ɵɵpropertyInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate2(propName, prefix, v0, i0, v1, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode &&\n                storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, getBindingIndex() - 2, prefix, i0, suffix);\n        }\n        return ɵɵpropertyInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate3(propName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode &&\n                storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, getBindingIndex() - 3, prefix, i0, i1, suffix);\n        }\n        return ɵɵpropertyInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate4(propName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, getBindingIndex() - 4, prefix, i0, i1, i2, suffix);\n        }\n        return ɵɵpropertyInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate5(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, getBindingIndex() - 5, prefix, i0, i1, i2, i3, suffix);\n        }\n        return ɵɵpropertyInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate6(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, getBindingIndex() - 6, prefix, i0, i1, i2, i3, i4, suffix);\n        }\n        return ɵɵpropertyInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate7(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, getBindingIndex() - 7, prefix, i0, i1, i2, i3, i4, i5, suffix);\n        }\n        return ɵɵpropertyInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate8(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, getBindingIndex() - 8, prefix, i0, i1, i2, i3, i4, i5, i6, suffix);\n        }\n        return ɵɵpropertyInterpolate8;\n    }\n    /**\n     * Update an interpolated property on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update.\n     * @param values The a collection of values and the strings inbetween those values, beginning with a\n     * string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolateV(propName, values, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            if (ngDevMode) {\n                var interpolationInBetween = [values[0]]; // prefix\n                for (var i = 2; i < values.length; i += 2) {\n                    interpolationInBetween.push(values[i]);\n                }\n                storePropertyBindingMetadata.apply(void 0, __spread([lView[TVIEW].data, nodeIndex, propName,\n                    getBindingIndex() - interpolationInBetween.length + 1], interpolationInBetween));\n            }\n        }\n        return ɵɵpropertyInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Static string value to write.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtext(index, value) {\n        if (value === void 0) { value = ''; }\n        var lView = getLView();\n        ngDevMode && assertEqual(getBindingIndex(), lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var textNative = lView[index + HEADER_OFFSET] = createTextNode(value, lView[RENDERER]);\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, 3 /* Element */, null, null);\n        // Text nodes are self closing.\n        setIsNotParent();\n        appendChild(textNative, tNode, lView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update text content with a lone bound value\n     *\n     * Used when a text node has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div>{{v0}}</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate(v0);\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate(v0) {\n        ɵɵtextInterpolate1('', v0, '');\n        return ɵɵtextInterpolate;\n    }\n    /**\n     *\n     * Update text content with single bound value surrounded by other text.\n     *\n     * Used when a text node has 1 interpolated value in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate1('prefix', v0, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation1(lView, prefix, v0, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate1;\n    }\n    /**\n     *\n     * Update text content with 2 bound values surrounded by other text.\n     *\n     * Used when a text node has 2 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate2;\n    }\n    /**\n     *\n     * Update text content with 3 bound values surrounded by other text.\n     *\n     * Used when a text node has 3 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate3;\n    }\n    /**\n     *\n     * Update text content with 4 bound values surrounded by other text.\n     *\n     * Used when a text node has 4 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see ɵɵtextInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate4;\n    }\n    /**\n     *\n     * Update text content with 5 bound values surrounded by other text.\n     *\n     * Used when a text node has 5 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate5;\n    }\n    /**\n     *\n     * Update text content with 6 bound values surrounded by other text.\n     *\n     * Used when a text node has 6 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change. @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate6;\n    }\n    /**\n     *\n     * Update text content with 7 bound values surrounded by other text.\n     *\n     * Used when a text node has 7 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate7;\n    }\n    /**\n     *\n     * Update text content with 8 bound values surrounded by other text.\n     *\n     * Used when a text node has 8 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate8;\n    }\n    /**\n     * Update text content with 9 or more bound values other surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 8.\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The a collection of values and the strings in between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     *\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolateV(values) {\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated class on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate1('prefix', v0, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     * Update an interpolated class on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolateV(values) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated style property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate1(0, 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate1(prop, prefix, v0, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate2(0, 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate2(prop, prefix, v0, i0, v1, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate3(0, 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate3(prop, prefix, v0, i0, v1, i1, v2, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate4(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate4(prop, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate5(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate5(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate6(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate6(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate7(\n     *    0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate7(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate8(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6,\n     * '-', v7, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate8(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate8;\n    }\n    /**\n     * Update an interpolated style property on an element with 8 or more bound values surrounded by\n     * text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\">\n     * </div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolateV(\n     *  0, ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`..\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolateV(prop, values, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a host element. Only applies to native node properties, not inputs.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵhostProperty(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = nextBindingIndex();\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, value, sanitizer, true);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, bindingIndex);\n        }\n        return ɵɵhostProperty;\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub component's renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     *\n     * @codeGenApi\n     */\n    function ɵɵupdateSyntheticHostBinding(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = nextBindingIndex();\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, value, sanitizer, true, loadComponentRenderer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, bindingIndex);\n        }\n        return ɵɵupdateSyntheticHostBinding;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        if (!(element instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        var context = loadLContext(element, false);\n        if (context === null)\n            return null;\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext$1(element) {\n        if (!(element instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        var context = loadLContext(element, false);\n        if (context === null)\n            return null;\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element, false);\n        if (context === null)\n            return null;\n        var lView = context.lView;\n        var parent;\n        ngDevMode && assertLView(lView);\n        while (lView[HOST] === null && (parent = getLViewParent(lView))) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = parent;\n        }\n        return lView[FLAGS] & 512 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target, false);\n        if (context === null)\n            return Injector.NULL;\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (context === null)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringifyForError(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target, false);\n        if (context === null)\n            return {};\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    /**\n     * Retrieves the rendered text for a given component.\n     *\n     * This function retrieves the host element of a component and\n     * and then returns the `textContent` for that element. This implies\n     * that the text returned will include re-projected content of\n     * the component as well.\n     *\n     * @param component The component to return the content text for.\n     */\n    function getRenderedText(component) {\n        var hostElement = getHostElement(component);\n        return hostElement.textContent || '';\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        if (!(element instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        var lContext = loadLContext(element, false);\n        if (lContext === null)\n            return [];\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = unwrapRNode(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n    /**\n     * Returns the attached `DebugNode` instance for an element in the DOM.\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * @publicApi\n     */\n    function getDebugNode(element) {\n        var debugNode = null;\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var nodeIndex = lContext.nodeIndex;\n        if (nodeIndex !== -1) {\n            var valueInLView = lView[nodeIndex];\n            // this means that value in the lView is a component with its own\n            // data. In this situation the TNode is not accessed at the same spot.\n            var tNode = isLView(valueInLView) ? valueInLView[T_HOST] :\n                getTNode(nodeIndex - HEADER_OFFSET, lView);\n            debugNode = buildDebugNode(tNode, lView, nodeIndex);\n        }\n        return debugNode;\n    }\n    /**\n     * Retrieve the component `LView` from component/element.\n     *\n     * NOTE: `LView` is a private and should not be leaked outside.\n     *       Don't export this method to `ng.*` on window.\n     *\n     * @param target Component or Element instance.\n     */\n    function getComponentLView(target) {\n        var lContext = loadLContext(target);\n        var nodeIndx = lContext.nodeIndex;\n        var lView = lContext.lView;\n        var componentLView = lView[nodeIndx];\n        ngDevMode && assertLView(componentLView);\n        return componentLView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    var _published = false;\n    /**\n     * Publishes a collection of default debug tools onto`window.ng`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext$1);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getDebugNode', getDebugNode);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ng` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        if (typeof COMPILED === 'undefined' || !COMPILED) {\n            // Note: we can't export `ng` when using closure enhanced optimization as:\n            // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n            // - we can't declare a closure extern as the namespace `ng` is already used within Google\n            //   for typings for AngularJS (via `goog.provide('ng....')`).\n            var w = _global;\n            ngDevMode && assertDefined(fn, 'function not defined');\n            if (w) {\n                var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n                if (!container) {\n                    container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n                }\n                container[name] = fn;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: A hack to not pull in the NullInjector from @angular/core.\n    var NULL_INJECTOR$1 = {\n        get: function (token, notFoundValue) {\n            throw new Error('NullInjector: Not found: ' + stringifyForError(token));\n        }\n    };\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent$1(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n            16 /* CheckAlways */ | 512 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootTView = createTView(0 /* Root */, -1, null, 1, 0, null, null, null, null, null);\n        var rootView = createLView(null, rootTView, rootContext, rootFlags, null, null, rendererFactory, renderer, undefined, opts.injector || null);\n        enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            // create mode pass\n            renderView(rootView, rootTView, null);\n            // update mode pass\n            refreshView(rootView, rootTView, null, null);\n        }\n        finally {\n            leaveView();\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        var tView = rootView[TVIEW];\n        ngDevMode && assertDataInRange(rootView, 0 + HEADER_OFFSET);\n        rootView[0 + HEADER_OFFSET] = rNode;\n        var tNode = getOrCreateTNode(tView, null, 0, 3 /* Element */, null, null);\n        var componentView = createLView(rootView, getOrCreateTComponentView(def), null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, rootView[HEADER_OFFSET], tNode, rendererFactory, renderer, sanitizer);\n        if (tView.firstCreatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), tView, def.type);\n            markAsComponentHost(tView, tNode);\n            initNodeFlags(tNode, rootView.length, 1);\n        }\n        addToViewTree(rootView, componentView);\n        // Store component view at node index, with node as the HOST\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        // We want to generate an empty QueryList for root content queries for backwards\n        // compatibility with ViewEngine.\n        if (componentDef.contentQueries) {\n            componentDef.contentQueries(1 /* Create */, component, rootView.length - 1);\n        }\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstCreatePass && componentDef.hostBindings) {\n            var elementIndex = rootTNode.index - HEADER_OFFSET;\n            setActiveHostElement(elementIndex);\n            incrementActiveDirectiveId();\n            var expando = tView.expandoInstructions;\n            invokeHostBindingsInCreationMode(componentDef, expando, component, rootTNode, tView.firstCreatePass);\n            setActiveHostElement(null);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        registerPreOrderHooks(dirIndex, def, rootTView, -1, -1, -1);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     *\n     * @codeGenApi\n     */\n    function ɵɵInheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        while (superType) {\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ɵcmp || superType.ɵdir;\n            }\n            else {\n                if (superType.ɵcmp) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ɵdir;\n            }\n            if (superDef) {\n                // Some fields in the definition may be empty, if there were no values to put in them that\n                // would've justified object creation. Unwrap them if necessary.\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n                // Merge hostBindings\n                var superHostBindings = superDef.hostBindings;\n                superHostBindings && inheritHostBindings(definition, superHostBindings);\n                // Merge queries\n                var superViewQuery = superDef.viewQuery;\n                var superContentQueries = superDef.contentQueries;\n                superViewQuery && inheritViewQuery(definition, superViewQuery);\n                superContentQueries && inheritContentQueries(definition, superContentQueries);\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    for (var i = 0; i < features.length; i++) {\n                        var feature = features[i];\n                        if (feature && feature.ngInherit) {\n                            feature(definition);\n                        }\n                    }\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n    function inheritViewQuery(definition, superViewQuery) {\n        var prevViewQuery = definition.viewQuery;\n        if (prevViewQuery) {\n            definition.viewQuery = function (rf, ctx) {\n                superViewQuery(rf, ctx);\n                prevViewQuery(rf, ctx);\n            };\n        }\n        else {\n            definition.viewQuery = superViewQuery;\n        }\n    }\n    function inheritContentQueries(definition, superContentQueries) {\n        var prevContentQueries = definition.contentQueries;\n        if (prevContentQueries) {\n            definition.contentQueries = function (rf, ctx, directiveIndex) {\n                superContentQueries(rf, ctx, directiveIndex);\n                prevContentQueries(rf, ctx, directiveIndex);\n            };\n        }\n        else {\n            definition.contentQueries = superContentQueries;\n        }\n    }\n    function inheritHostBindings(definition, superHostBindings) {\n        var prevHostBindings = definition.hostBindings;\n        // If the subclass does not have a host bindings function, we set the subclass host binding\n        // function to be the superclass's (in this feature). We should check if they're the same here\n        // to ensure we don't inherit it twice.\n        if (superHostBindings !== prevHostBindings) {\n            if (prevHostBindings) {\n                definition.hostBindings = function (rf, ctx, elementIndex) {\n                    superHostBindings(rf, ctx, elementIndex);\n                    prevHostBindings(rf, ctx, elementIndex);\n                };\n            }\n            else {\n                definition.hostBindings = superHostBindings;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Fields which exist on either directive or component definitions, and need to be copied from\n     * parent to child classes by the `ɵɵCopyDefinitionFeature`.\n     */\n    var COPY_DIRECTIVE_FIELDS = [\n        // The child class should use the providers of its parent.\n        'providersResolver',\n    ];\n    /**\n     * Fields which exist only on component definitions, and need to be copied from parent to child\n     * classes by the `ɵɵCopyDefinitionFeature`.\n     *\n     * The type here allows any field of `ComponentDef` which is not also a property of `DirectiveDef`,\n     * since those should go in `COPY_DIRECTIVE_FIELDS` above.\n     */\n    var COPY_COMPONENT_FIELDS = [\n        // The child class should use the template function of its parent, including all template\n        // semantics.\n        'template',\n        'decls',\n        'consts',\n        'vars',\n        'onPush',\n        'ngContentSelectors',\n        // The child class should use the CSS styles of its parent, including all styling semantics.\n        'styles',\n        'encapsulation',\n        // The child class should be checked by the runtime in the same way as its parent.\n        'schemas',\n    ];\n    /**\n     * Copies the fields not handled by the `ɵɵInheritDefinitionFeature` from the supertype of a\n     * definition.\n     *\n     * This exists primarily to support ngcc migration of an existing View Engine pattern, where an\n     * entire decorator is inherited from a parent to a child class. When ngcc detects this case, it\n     * generates a skeleton definition on the child class, and applies this feature.\n     *\n     * The `ɵɵCopyDefinitionFeature` then copies any needed fields from the parent class' definition,\n     * including things like the component template function.\n     *\n     * @param definition The definition of a child class which inherits from a parent class with its\n     * own definition.\n     *\n     * @codeGenApi\n     */\n    function ɵɵCopyDefinitionFeature(definition) {\n        var e_1, _a, e_2, _b;\n        var superType = getSuperType(definition.type);\n        var superDef = undefined;\n        if (isComponentDef(definition)) {\n            // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n            superDef = superType.ɵcmp;\n        }\n        else {\n            // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n            superDef = superType.ɵdir;\n        }\n        // Needed because `definition` fields are readonly.\n        var defAny = definition;\n        try {\n            // Copy over any fields that apply to either directives or components.\n            for (var COPY_DIRECTIVE_FIELDS_1 = __values(COPY_DIRECTIVE_FIELDS), COPY_DIRECTIVE_FIELDS_1_1 = COPY_DIRECTIVE_FIELDS_1.next(); !COPY_DIRECTIVE_FIELDS_1_1.done; COPY_DIRECTIVE_FIELDS_1_1 = COPY_DIRECTIVE_FIELDS_1.next()) {\n                var field = COPY_DIRECTIVE_FIELDS_1_1.value;\n                defAny[field] = superDef[field];\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (COPY_DIRECTIVE_FIELDS_1_1 && !COPY_DIRECTIVE_FIELDS_1_1.done && (_a = COPY_DIRECTIVE_FIELDS_1.return)) _a.call(COPY_DIRECTIVE_FIELDS_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        if (isComponentDef(superDef)) {\n            try {\n                // Copy over any component-specific fields.\n                for (var COPY_COMPONENT_FIELDS_1 = __values(COPY_COMPONENT_FIELDS), COPY_COMPONENT_FIELDS_1_1 = COPY_COMPONENT_FIELDS_1.next(); !COPY_COMPONENT_FIELDS_1_1.done; COPY_COMPONENT_FIELDS_1_1 = COPY_COMPONENT_FIELDS_1.next()) {\n                    var field = COPY_COMPONENT_FIELDS_1_1.value;\n                    defAny[field] = superDef[field];\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (COPY_COMPONENT_FIELDS_1_1 && !COPY_COMPONENT_FIELDS_1_1.done && (_b = COPY_COMPONENT_FIELDS_1.return)) _b.call(COPY_COMPONENT_FIELDS_1);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a basic change from a previous to a new value for a single\n     * property on a directive instance. Passed as a value in a\n     * {@link SimpleChanges} object to the `ngOnChanges` hook.\n     *\n     * @see `OnChanges`\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ɵcmp = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature()]\n     * });\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵNgOnChangesFeature() {\n        // This option ensures that the ngOnChanges lifecycle hook will be inherited\n        // from superclasses (in InheritDefinitionFeature).\n        NgOnChangesFeatureImpl.ngInherit = true;\n        return NgOnChangesFeatureImpl;\n    }\n    function NgOnChangesFeatureImpl(definition) {\n        if (definition.type.prototype.ngOnChanges) {\n            definition.setInput = ngOnChangesSetInput;\n            definition.onChanges = wrapOnChanges();\n        }\n    }\n    function wrapOnChanges() {\n        return function wrapOnChangesHook_inPreviousChangesStorage() {\n            var simpleChangesStore = getSimpleChangesStore(this);\n            var current = simpleChangesStore && simpleChangesStore.current;\n            if (current) {\n                var previous = simpleChangesStore.previous;\n                if (previous === EMPTY_OBJ) {\n                    simpleChangesStore.previous = current;\n                }\n                else {\n                    // New changes are copied to the previous store, so that we don't lose history for inputs\n                    // which were not changed this time\n                    for (var key in current) {\n                        previous[key] = current[key];\n                    }\n                }\n                simpleChangesStore.current = null;\n                this.ngOnChanges(current);\n            }\n        };\n    }\n    function ngOnChangesSetInput(instance, value, publicName, privateName) {\n        var simpleChangesStore = getSimpleChangesStore(instance) ||\n            setSimpleChangesStore(instance, { previous: EMPTY_OBJ, current: null });\n        var current = simpleChangesStore.current || (simpleChangesStore.current = {});\n        var previous = simpleChangesStore.previous;\n        var declaredName = this.declaredInputs[publicName];\n        var previousChange = previous[declaredName];\n        current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n        instance[privateName] = value;\n    }\n    var SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\n    function getSimpleChangesStore(instance) {\n        return instance[SIMPLE_CHANGES_STORE] || null;\n    }\n    function setSimpleChangesStore(instance, store) {\n        return instance[SIMPLE_CHANGES_STORE] = store;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstCreatePass) {\n            var isComponent = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isClassProvider(provider) || isTypeProvider(provider)) {\n                var prototype = (provider.useClass || provider).prototype;\n                var ngOnDestroy = prototype.ngOnDestroy;\n                if (ngOnDestroy) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(tInjectables.length, ngOnDestroy);\n                }\n            }\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, ɵɵdirectiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent);\n                }\n                if (!isViewProvider && isComponent && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, ɵɵdirectiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * ```ts\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ɵcmp = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    decls: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        ɵɵtext(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        ɵɵtextInterpolate(ctx.greeter.greet());\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     * ```\n     *\n     * @param definition\n     *\n     * @codeGenApi\n     */\n    function ɵɵProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver =\n                function (def, processProvidersFn) {\n                    return providersResolver(def, //\n                    processProvidersFn ? processProvidersFn(providers) : providers, //\n                    viewProviders);\n                };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * Base class for a factory that can create a component dynamically.\n     * Instantiate a factory for a given type of component with `resolveComponentFactory()`.\n     * Use the resulting `ComponentFactory.create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     *\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    function getComponent$1(error) {\n        return error[ERROR_COMPONENT];\n    }\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * A simple registry that maps `Components` to generated `ComponentFactory` classes\n     * that can be used to create instances of components.\n     * Use to obtain the factory for a given component type,\n     * then use the factory's `create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        /** @nocollapse */\n        Sanitizer.ɵprov = ɵɵdefineInjectable({\n            token: Sanitizer,\n            providedIn: 'root',\n            factory: function () { return null; },\n        });\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('9.0.0-rc.1+47.sha-eece138.with-local-changes');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable$1(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable$1(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike$1(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject$1(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject$1(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ɵprov = ɵɵdefineInjectable({\n            token: IterableDiffers,\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ɵprov = ɵɵdefineInjectable({\n            token: KeyValueDiffers,\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Node instance data.\n     *\n     * We have a separate type per NodeType to save memory\n     * (TextData | ElementData | ProviderData | PureExpressionData | QueryList<any>)\n     *\n     * To keep our code monomorphic,\n     * we prohibit using `NodeData` directly but enforce the use of accessors (`asElementData`, ...).\n     * This way, no usage site can get a `NodeData` from view.nodes and then use it for different\n     * purposes.\n     */\n    var NodeData = /** @class */ (function () {\n        function NodeData() {\n        }\n        return NodeData;\n    }());\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual$1(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$3 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var scope = null;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === INJECTOR_SCOPE) {\n                scope = provider.value;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            scope: scope,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = newArray(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providers[index] = data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        var providedIn = def.providedIn;\n        return providedIn != null && (providedIn === 'any' || providedIn === ngModule._def.scope ||\n            moduleTransitivelyPresent(ngModule, providedIn));\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable !== null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView$1(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView$1(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues.push(resolveDep(view, elDef, allowPrivateServices, deps[i]));\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues.push(resolveDep(view, elDef, allowPrivateServices, deps[i]));\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey = depDef.tokenKey;\n        if (tokenKey === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey) {\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue, flags) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, flags);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue, flags);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            // default to 'div' in case this component has an attribute selector\n            _this.selector = componentDef.selectors[0][0] || 'div';\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? componentDef.ngContentSelectors : [];\n            _this.isBoundToModule = !!ngModule;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            var hostRNode = rootSelectorOrNode ?\n                locateHostElement(rendererFactory, rootSelectorOrNode) :\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef), null);\n            var rootFlags = this.componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n                16 /* CheckAlways */ | 512 /* IsRoot */;\n            // Check whether this Component needs to be isolated from other components, i.e. whether it\n            // should be placed into its own (empty) root context or existing root context should be used.\n            // Note: this is internal-only convention and might change in the future, so it should not be\n            // relied upon externally.\n            var isIsolated = typeof rootSelectorOrNode === 'string' &&\n                /^#root-ng-internal-isolated-\\d+/.test(rootSelectorOrNode);\n            var rootContext = createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootTView = createTView(0 /* Root */, -1, null, 1, 0, null, null, null, null, null);\n            var rootLView = createLView(null, rootTView, rootContext, rootFlags, null, null, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            // TODO(misko): it looks like we are entering view here but we don't really need to as\n            // `renderView` does that. However as the code is written it is needed because\n            // `createRootComponentView` and `createRootComponent` both read global state. Fixing those\n            // issues would allow us to drop this.\n            enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                if (projectableNodes) {\n                    // projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n                    // case). Here we do normalize passed data structure to be an array of arrays to avoid\n                    // complex checks down the line.\n                    tElementNode.projection =\n                        projectableNodes.map(function (nodesforSlot) { return Array.from(nodesforSlot); });\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                renderView(rootLView, rootTView, null);\n            }\n            finally {\n                leaveView();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (!rootSelectorOrNode || isIsolated) {\n                // The host element of the internal or isolated root view is attached to the component's host\n                // view node.\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Creates a ComponentFactoryResolver and stores it on the injector. Or, if the\n     * ComponentFactoryResolver\n     * already exists, retrieves the existing ComponentFactoryResolver.\n     *\n     * @returns The ComponentFactoryResolver instance to use\n     */\n    function injectComponentFactoryResolver() {\n        return componentFactoryResolver;\n    }\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef, _super);\n        function ComponentRef(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = assignTViewNodeToLView(_rootLView[TVIEW], null, -1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef.prototype.destroy = function () {\n            if (this.destroyCbs) {\n                this.destroyCbs.forEach(function (fn) { return fn(); });\n                this.destroyCbs = null;\n                !this.hostView.destroyed && this.hostView.destroy();\n            }\n        };\n        ComponentRef.prototype.onDestroy = function (callback) {\n            if (this.destroyCbs) {\n                this.destroyCbs.push(callback);\n            }\n        };\n        return ComponentRef;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * NOTE: changes to the `ngI18nClosureMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    if (typeof ngI18nClosureMode === 'undefined') {\n        // These property accesses can be ignored because ngI18nClosureMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // Make sure to refer to ngI18nClosureMode as ['ngI18nClosureMode'] for closure.\n        // NOTE: we need to have it in IIFE so that the tree-shaker is happy.\n        (function () {\n            // tslint:disable-next-line:no-toplevel-property-access\n            _global['ngI18nClosureMode'] =\n                // TODO(FW-1250): validate that this actually, you know, works.\n                // tslint:disable-next-line:no-toplevel-property-access\n                typeof goog !== 'undefined' && typeof goog.getMsg === 'function';\n        })();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // THIS CODE IS GENERATED - DO NOT MODIFY\n    // See angular/tools/gulp-tasks/cldr/extract.js\n    var u = undefined;\n    function plural(n) {\n        var i = Math.floor(Math.abs(n)), v = n.toString().replace(/^[^.]*\\.?/, '').length;\n        if (i === 1 && v === 0)\n            return 1;\n        return 5;\n    }\n    var localeEn = [\n        'en', [['a', 'p'], ['AM', 'PM'], u], [['AM', 'PM'], u, u],\n        [\n            ['S', 'M', 'T', 'W', 'T', 'F', 'S'], ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n            ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n            ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']\n        ],\n        u,\n        [\n            ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n            ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            [\n                'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n                'October', 'November', 'December'\n            ]\n        ],\n        u, [['B', 'A'], ['BC', 'AD'], ['Before Christ', 'Anno Domini']], 0, [6, 0],\n        ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'],\n        ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'], ['{1}, {0}', u, '{1} \\'at\\' {0}', u],\n        ['.', ',', ';', '%', '+', '-', 'E', '×', '‰', '∞', 'NaN', ':'],\n        ['#,##0.###', '#,##0%', '¤#,##0.00', '#E0'], '$', 'US Dollar', {}, plural\n    ];\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This const is used to store the locale data registered with `registerLocaleData`\n     */\n    var LOCALE_DATA = {};\n    /**\n     * Register locale data to be used internally by Angular. See the\n     * [\"I18n guide\"](guide/i18n#i18n-pipes) to know how to import additional locale data.\n     *\n     * The signature `registerLocaleData(data: any, extraData?: any)` is deprecated since v5.1\n     */\n    function registerLocaleData(data, localeId, extraData) {\n        if (typeof localeId !== 'string') {\n            extraData = localeId;\n            localeId = data[exports.ɵLocaleDataIndex.LocaleId];\n        }\n        localeId = localeId.toLowerCase().replace(/_/g, '-');\n        LOCALE_DATA[localeId] = data;\n        if (extraData) {\n            LOCALE_DATA[localeId][exports.ɵLocaleDataIndex.ExtraData] = extraData;\n        }\n    }\n    /**\n     * Finds the locale data for a given locale.\n     *\n     * @param locale The locale code.\n     * @returns The locale data.\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function findLocaleData(locale) {\n        var normalizedLocale = normalizeLocale(locale);\n        var match = getLocaleData(normalizedLocale);\n        if (match) {\n            return match;\n        }\n        // let's try to find a parent locale\n        var parentLocale = normalizedLocale.split('-')[0];\n        match = getLocaleData(parentLocale);\n        if (match) {\n            return match;\n        }\n        if (parentLocale === 'en') {\n            return localeEn;\n        }\n        throw new Error(\"Missing locale data for the locale \\\"\" + locale + \"\\\".\");\n    }\n    /**\n     * Retrieves the plural function used by ICU expressions to determine the plural case to use\n     * for a given locale.\n     * @param locale A locale code for the locale format rules to use.\n     * @returns The plural function for the locale.\n     * @see `NgPlural`\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function getLocalePluralCase(locale) {\n        var data = findLocaleData(locale);\n        return data[exports.ɵLocaleDataIndex.PluralCase];\n    }\n    /**\n     * Helper function to get the given `normalizedLocale` from `LOCALE_DATA`\n     * or from the global `ng.common.locale`.\n     */\n    function getLocaleData(normalizedLocale) {\n        if (!(normalizedLocale in LOCALE_DATA)) {\n            LOCALE_DATA[normalizedLocale] = _global.ng && _global.ng.common && _global.ng.common.locales &&\n                _global.ng.common.locales[normalizedLocale];\n        }\n        return LOCALE_DATA[normalizedLocale];\n    }\n    /**\n     * Helper function to remove all the locale data from `LOCALE_DATA`.\n     */\n    function unregisterAllLocaleData() {\n        LOCALE_DATA = {};\n    }\n    (function (LocaleDataIndex) {\n        LocaleDataIndex[LocaleDataIndex[\"LocaleId\"] = 0] = \"LocaleId\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsFormat\"] = 1] = \"DayPeriodsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsStandalone\"] = 2] = \"DayPeriodsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysFormat\"] = 3] = \"DaysFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysStandalone\"] = 4] = \"DaysStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsFormat\"] = 5] = \"MonthsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsStandalone\"] = 6] = \"MonthsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"Eras\"] = 7] = \"Eras\";\n        LocaleDataIndex[LocaleDataIndex[\"FirstDayOfWeek\"] = 8] = \"FirstDayOfWeek\";\n        LocaleDataIndex[LocaleDataIndex[\"WeekendRange\"] = 9] = \"WeekendRange\";\n        LocaleDataIndex[LocaleDataIndex[\"DateFormat\"] = 10] = \"DateFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"TimeFormat\"] = 11] = \"TimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DateTimeFormat\"] = 12] = \"DateTimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberSymbols\"] = 13] = \"NumberSymbols\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberFormats\"] = 14] = \"NumberFormats\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencySymbol\"] = 15] = \"CurrencySymbol\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencyName\"] = 16] = \"CurrencyName\";\n        LocaleDataIndex[LocaleDataIndex[\"Currencies\"] = 17] = \"Currencies\";\n        LocaleDataIndex[LocaleDataIndex[\"PluralCase\"] = 18] = \"PluralCase\";\n        LocaleDataIndex[LocaleDataIndex[\"ExtraData\"] = 19] = \"ExtraData\";\n    })(exports.ɵLocaleDataIndex || (exports.ɵLocaleDataIndex = {}));\n    /**\n     * Returns the canonical form of a locale name - lowercase with `_` replaced with `-`.\n     */\n    function normalizeLocale(locale) {\n        return locale.toLowerCase().replace(/_/g, '-');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the plural case based on the locale\n     */\n    function getPluralCase(value, locale) {\n        var plural = getLocalePluralCase(locale)(value);\n        switch (plural) {\n            case 0:\n                return 'zero';\n            case 1:\n                return 'one';\n            case 2:\n                return 'two';\n            case 3:\n                return 'few';\n            case 4:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * The locale id that the application is using by default (for translations and ICU expressions).\n     */\n    var DEFAULT_LOCALE_ID = 'en-US';\n\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEXP = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*!]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostprocess consts\n    var ROOT_TEMPLATE_ID = 0;\n    var PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]/;\n    var PP_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]|(�\\/?\\*\\d+:\\d+�)/g;\n    var PP_ICU_VARS_REGEXP = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICU_PLACEHOLDERS_REGEXP = /{([A-Z0-9_]+)}/g;\n    var PP_ICUS_REGEXP = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    var PP_CLOSE_TEMPLATE_REGEXP = /\\/\\*/;\n    var PP_TEMPLATE_ID_REGEXP = /\\d+\\:(\\d+)/;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEXP.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else {\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        results.push(substring);\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEXP, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (cases.length > values.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�!{index}(:{block})�`/`�/!{index}(:{block})�`: *Projection Placeholder*:  Marks the\n     *   beginning and end of <ng-content> that was embedded in the original translation block.\n     *   The placeholder `index` points to the element index in the template instructions set.\n     *   An optional `block` that matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nStart(index, message, subTemplateIndex) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        // We need to delay projections until `i18nEnd`\n        setDelayProjection(true);\n        if (tView.firstCreatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(lView, tView, index, message, subTemplateIndex);\n        }\n    }\n    // Count for the number of vars that will be allocated for each i18n block.\n    // It is global because this is used in multiple functions that include loops and recursive calls.\n    // This is reset to 0 when `i18nStartFirstPass` is called.\n    var i18nVarsCount;\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(lView, tView, index, message, subTemplateIndex) {\n        var startIndex = tView.blueprint.length - HEADER_OFFSET;\n        i18nVarsCount = 0;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== lView[T_HOST] ? parentTNode.index - HEADER_OFFSET : index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = replaceNgsp(templateTranslation).split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === \"#\" /* ELEMENT */) {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === \"#\" /* ELEMENT */) {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = extractParts(value);\n                for (var j = 0; j < parts.length; j++) {\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        var icuNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parts[j];\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (parts[j] !== '') {\n                        var text = parts[j];\n                        // Even indexes are text (including bindings)\n                        var hasBinding = text.match(BINDING_REGEXP);\n                        // Create text nodes\n                        var textNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : text, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(text, textNodeIndex), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        if (i18nVarsCount > 0) {\n            allocExpando(lView, i18nVarsCount);\n        }\n        ngDevMode &&\n            attachI18nOpCodesDebug(createOpCodes, updateOpCodes, icuExpressions.length ? icuExpressions : null, lView);\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: i18nVarsCount,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode, lView) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var nextNode = tNode.next;\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // Re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== lView[T_HOST]) {\n            tNode.parent = parentTNode;\n        }\n        // If tNode was moved around, we might need to fix a broken link.\n        var cursor = tNode.next;\n        while (cursor) {\n            if (cursor.next === tNode) {\n                cursor.next = nextNode;\n            }\n            cursor = cursor.next;\n        }\n        // If the placeholder to append is a projection, we need to move the projected nodes instead\n        if (tNode.type === 1 /* Projection */) {\n            applyProjection(lView, tNode);\n            return tNode;\n        }\n        appendChild(getNativeByTNode(tNode, lView), tNode, lView);\n        var slotValue = lView[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, lView);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n     * 4. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        /**\n         * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]\n         *\n         * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n         * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root\n         * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index\n         * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in\n         * front of �#6�. The post processing step restores the right order by keeping track of the\n         * template id stack and looks for placeholders that belong to the currently active template.\n         */\n        var result = message;\n        if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {\n            var matches_1 = {};\n            var templateIdsStack_1 = [ROOT_TEMPLATE_ID];\n            result = result.replace(PP_PLACEHOLDERS_REGEXP, function (m, phs, tmpl) {\n                var content = phs || tmpl;\n                var placeholders = matches_1[content] || [];\n                if (!placeholders.length) {\n                    content.split('|').forEach(function (placeholder) {\n                        var match = placeholder.match(PP_TEMPLATE_ID_REGEXP);\n                        var templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;\n                        var isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);\n                        placeholders.push([templateId, isCloseTemplateTag, placeholder]);\n                    });\n                    matches_1[content] = placeholders;\n                }\n                if (!placeholders.length) {\n                    throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n                }\n                var currentTemplateId = templateIdsStack_1[templateIdsStack_1.length - 1];\n                var idx = 0;\n                // find placeholder index that matches current template id\n                for (var i = 0; i < placeholders.length; i++) {\n                    if (placeholders[i][0] === currentTemplateId) {\n                        idx = i;\n                        break;\n                    }\n                }\n                // update template id stack based on the current tag extracted\n                var _a = __read(placeholders[idx], 3), templateId = _a[0], isCloseTemplateTag = _a[1], placeholder = _a[2];\n                if (isCloseTemplateTag) {\n                    templateIdsStack_1.pop();\n                }\n                else if (currentTemplateId !== templateId) {\n                    templateIdsStack_1.push(templateId);\n                }\n                // remove processed tag from the list\n                placeholders.splice(idx, 1);\n                return placeholder;\n            });\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        /**\n         * Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n         */\n        result = result.replace(PP_ICU_VARS_REGEXP, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        /**\n         * Step 3: replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n         */\n        result = result.replace(PP_ICU_PLACEHOLDERS_REGEXP, function (match, key) {\n            return replacements.hasOwnProperty(key) ? replacements[key] : match;\n        });\n        /**\n         * Step 4: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case\n         * multiple ICUs have the same placeholder name\n         */\n        result = result.replace(PP_ICUS_REGEXP, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nEnd() {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(lView, tView);\n        // Stop delaying projections\n        setDelayProjection(false);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(lView, tView) {\n        ngDevMode && assertEqual(getBindingIndex(), tView.bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // Find the last node that was added before `i18nEnd`\n        var lastCreatedNode = getPreviousOrParentTNode();\n        // Read the instructions to insert/move/remove DOM elements\n        var visitedNodes = readCreateOpCodes(rootIndex, tI18n.create, lView);\n        // Remove deleted nodes\n        var index = rootIndex + 1;\n        while (index <= lastCreatedNode.index - HEADER_OFFSET) {\n            if (visitedNodes.indexOf(index) === -1) {\n                removeNode(index, lView, /* markAsDetached */ true);\n            }\n            // Check if an element has any local refs and skip them\n            var tNode = getTNode(index, lView);\n            if (tNode && (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) &&\n                tNode.localNames !== null) {\n                // Divide by 2 to get the number of local refs,\n                // since they are stored as an array that also includes directive indexes,\n                // i.e. [\"localRef\", directiveIndex, ...]\n                index += tNode.localNames.length >> 1;\n            }\n            index++;\n        }\n    }\n    /**\n     * Creates and stores the dynamic TNode, and unhooks it from the tree for now.\n     */\n    function createDynamicNodeAtIndex(lView, index, type, native, name) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        lView[index + HEADER_OFFSET] = native;\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, type, name, null);\n        // We are creating a dynamic node, the previous tNode might not be pointing at this node.\n        // We will link ourselves into the tree later with `appendI18nNode`.\n        if (previousOrParentTNode && previousOrParentTNode.next === tNode) {\n            previousOrParentTNode.next = null;\n        }\n        return tNode;\n    }\n    function readCreateOpCodes(index, createOpCodes, lView) {\n        var renderer = lView[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedNodes = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                var textNodeIndex = createOpCodes[++i];\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode =\n                    createDynamicNodeAtIndex(lView, textNodeIndex, 3 /* Element */, textRNode, null);\n                visitedNodes.push(textNodeIndex);\n                setIsNotParent();\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = lView[T_HOST];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, lView);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode, lView);\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedNodes.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, lView);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode, currentTNode.type === 3 /* Element */);\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, lView);\n                        setPreviousOrParentTNode(currentTNode, false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        // This code is used for ICU expressions only, since we don't support\n                        // directives/components in ICUs, we don't need to worry about inputs here\n                        elementAttributeInternal(elementNodeIndex, attrName, attrValue, lView);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        var commentNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(lView, commentNodeIndex, 5 /* IcuContainer */, commentRNode, null);\n                        visitedNodes.push(commentNodeIndex);\n                        attachPatchData(commentRNode, lView);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsNotParent();\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        var elementNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(lView, elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue);\n                        visitedNodes.push(elementNodeIndex);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsNotParent();\n        return visitedNodes;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += renderStringify(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            var tIcuIndex = void 0;\n                            var tIcu = void 0;\n                            var icuTNode = void 0;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var propName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementPropertyInternal(viewData, nodeIndex, propName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBindingInternal(viewData, nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    // Remove DOM element, but do *not* mark TNode as detached, since we are\n                                                    // just switching ICU cases (while keeping the same TNode), so a DOM element\n                                                    // representing a new ICU case will be re-created.\n                                                    removeNode(nodeIndex_1, viewData, /* markAsDetached */ false);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData, markAsDetached) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            nativeRemoveNode(viewData[RENDERER], removedPhRNode);\n        }\n        var slotValue = load(viewData, index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                nativeRemoveNode(viewData[RENDERER], lContainer[NATIVE]);\n            }\n        }\n        if (markAsDetached) {\n            // Define this node as detached to avoid projecting it later\n            removedPhTNode.flags |= 64 /* isDetached */;\n        }\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18n(index, message, subTemplateIndex) {\n        ɵɵi18nStart(index, message, subTemplateIndex);\n        ɵɵi18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nAttributes(index, values) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nAttributesFirstPass(lView, tView, index, values);\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(lView, tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) {\n                    // Odd indexes are ICU expressions\n                    // TODO(ocombe): support ICU expressions in attributes\n                    throw new Error('ICU expressions are not yet supported in attributes');\n                }\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        if (tView.firstCreatePass && tView.data[index + HEADER_OFFSET] === null) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                        }\n                    }\n                    else {\n                        var tNode = getTNode(previousElementIndex, lView);\n                        // Set attributes for Elements only, for other types (like ElementContainer),\n                        // only set inputs below\n                        if (tNode.type === 3 /* Element */) {\n                            elementAttributeInternal(previousElementIndex, attrName, value, lView);\n                        }\n                        // Check if that attribute is a directive input\n                        var dataValue = tNode.inputs && tNode.inputs[attrName];\n                        if (dataValue) {\n                            setInputsForProperty(lView, dataValue, value);\n                            if (ngDevMode) {\n                                var element = getNativeByIndex(previousElementIndex, lView);\n                                setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (tView.firstCreatePass && tView.data[index + HEADER_OFFSET] === null) {\n            tView.data[index + HEADER_OFFSET] = updateOpCodes;\n        }\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param value The binding's value\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `i18nExp(ctx.name)(ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nExp(value) {\n        var lView = getLView();\n        if (bindingUpdated(lView, nextBindingIndex(), value)) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n        return ɵɵi18nExp;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = getBindingIndex() - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    var resolvedCase = getPluralCase(bindingValue, getLocaleId());\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        // Adding the maximum possible of vars needed (based on the cases with the most vars)\n        i18nVarsCount += Math.max.apply(Math, __spread(vars));\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element = currentNode;\n                        var tagName = element.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n    /**\n     * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n     * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n     * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n     * and later on replaced by a space. We are re-implementing the same idea here, since translations\n     * might contain this special character.\n     */\n    var NGSP_UNICODE_REGEXP = /\\uE500/g;\n    function replaceNgsp(value) {\n        return value.replace(NGSP_UNICODE_REGEXP, ' ');\n    }\n    /**\n     * The locale id that the application is currently using (for translations and ICU expressions).\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    var LOCALE_ID = DEFAULT_LOCALE_ID;\n    /**\n     * Sets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     *\n     * @param localeId\n     */\n    function setLocaleId(localeId) {\n        assertDefined(localeId, \"Expected localeId to be defined\");\n        if (typeof localeId === 'string') {\n            LOCALE_ID = localeId.toLowerCase().replace(/_/g, '-');\n        }\n    }\n    /**\n     * Gets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    function getLocaleId() {\n        return LOCALE_ID;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n        modules.set(id, factory);\n    }\n    function assertSameOrNotExisting(id, type, incoming) {\n        if (type && type !== incoming) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(ngModuleType) {\n        if (ngModuleType.ɵmod.id !== null) {\n            var id = ngModuleType.ɵmod.id;\n            var existing = modules.get(id);\n            assertSameOrNotExisting(id, existing, ngModuleType);\n            modules.set(id, ngModuleType);\n        }\n        var imports = ngModuleType.ɵmod.imports;\n        if (imports instanceof Function) {\n            imports = imports();\n        }\n        if (imports) {\n            imports.forEach(function (i) { return registerNgModuleType(i); });\n        }\n    }\n    function clearRegisteredModuleState() {\n        modules.clear();\n    }\n    function getRegisteredModulesState() {\n        return new Map(modules);\n    }\n    function restoreRegisteredModulesState(moduleMap) {\n        modules = new Map(moduleMap);\n    }\n    function getRegisteredNgModuleType(id) {\n        return modules.get(id);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$1, _super);\n        function NgModuleRef$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            var ngLocaleIdDef = getNgLocaleIdDef(ngModuleType);\n            if (ngLocaleIdDef) {\n                setLocaleId(ngLocaleIdDef);\n            }\n            _this._bootstrapComponents = maybeUnwrapFn(ngModuleDef.bootstrap);\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders, stringify(ngModuleType));\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            var injector = this._r3Injector;\n            !injector.destroyed && injector.destroy();\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory, _super);\n        function NgModuleFactory(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            var ngModuleDef = getNgModuleDef(moduleType);\n            if (ngModuleDef !== null) {\n                // Register the NgModule with Angular's module registry. The location (and hence timing) of\n                // this call is critical to ensure this works correctly (modules get registered when expected)\n                // without bloating bundles (modules are registered when otherwise not referenced).\n                //\n                // In View Engine, registration occurs in the .ngfactory.js file as a side effect. This has\n                // several practical consequences:\n                //\n                // - If an .ngfactory file is not imported from, the module won't be registered (and can be\n                //   tree shaken).\n                // - If an .ngfactory file is imported from, the module will be registered even if an instance\n                //   is not actually created (via `create` below).\n                // - Since an .ngfactory file in View Engine references the .ngfactory files of the NgModule's\n                //   imports,\n                //\n                // In Ivy, things are a bit different. .ngfactory files still exist for compatibility, but are\n                // not a required API to use - there are other ways to obtain an NgModuleFactory for a given\n                // NgModule. Thus, relying on a side effect in the .ngfactory file is not sufficient. Instead,\n                // the side effect of registration is added here, in the constructor of NgModuleFactory,\n                // ensuring no matter how a factory is created, the module is registered correctly.\n                //\n                // An alternative would be to include the registration side effect inline following the actual\n                // NgModule definition. This also has the correct timing, but breaks tree-shaking - modules\n                // will be registered and retained even if they're otherwise never referenced.\n                registerNgModuleType(moduleType);\n            }\n            return _this;\n        }\n        NgModuleFactory.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        return noSideEffects(function () {\n            var _a;\n            var clazz = type;\n            // We determine whether a class has its own metadata by taking the metadata from the parent\n            // constructor and checking whether it's the same as the subclass metadata below. We can't use\n            // `hasOwnProperty` here because it doesn't work correctly in IE10 for static fields that are\n            // defined by TS. See https://github.com/angular/angular/pull/28439#issuecomment-459349218.\n            var parentPrototype = clazz.prototype ? Object.getPrototypeOf(clazz.prototype) : null;\n            var parentConstructor = parentPrototype && parentPrototype.constructor;\n            if (decorators !== null) {\n                if (clazz.decorators !== undefined &&\n                    (!parentConstructor || parentConstructor.decorators !== clazz.decorators)) {\n                    (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n                }\n                else {\n                    clazz.decorators = decorators;\n                }\n            }\n            if (ctorParameters !== null) {\n                // Rather than merging, clobber the existing parameters. If other projects exist which use\n                // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n                // but that is vanishingly unlikely.\n                clazz.ctorParameters = ctorParameters;\n            }\n            if (propDecorators !== null) {\n                // The property decorator objects are merged as it is possible different fields have different\n                // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n                // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n                // decorator that's also been downleveled.\n                if (clazz.propDecorators !== undefined &&\n                    (!parentConstructor || parentConstructor.propDecorators !== clazz.propDecorators)) {\n                    clazz.propDecorators = __assign(__assign({}, clazz.propDecorators), propDecorators);\n                }\n                else {\n                    clazz.propDecorators = propDecorators;\n                }\n            }\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |-------decls------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return isCreationMode(lView) ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstCreatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeFactory = pipeDef.factory || (pipeDef.factory = getFactoryDef(pipeDef.type, true));\n        var pipeInstance = pipeFactory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     *\n     * @publicApi\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind1(index, slotOffset, v1) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind2(index, slotOffset, v1, v2) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind3(index, slotOffset, v1, v2, v3) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBindV(index, slotOffset, values) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(lView, index) {\n        return lView[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue$1(lView, newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = getBindingIndex();\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in components with the `@Output` directive to emit custom events\n     * synchronously or asynchronously, and register handlers for those events\n     * by subscribing to an instance.\n     *\n     * @usageNotes\n     *\n     * Extends\n     * [RxJS `Subject`](https://rxjs.dev/api/index/class/Subject)\n     * for Angular by adding the `emit()` method.\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```html\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```html\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * @see [Observables in Angular](guide/observables-in-angular)\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function symbolIterator() {\n        return this._results[getSymbolIterator()]();\n    }\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n            // This function should be declared on the prototype, but doing so there will cause the class\n            // declaration to have side-effects and become not tree-shakable. For this reason we do it in\n            // the constructor.\n            // [getSymbolIterator()](): Iterator<T> { ... }\n            var symbol = getSymbolIterator();\n            var proto = QueryList.prototype;\n            if (!proto[symbol])\n                proto[symbol] = symbolIterator;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        /**\n         * Returns a copy of the internal results list as an Array.\n         */\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        /**\n         * Updates the stored data of the query list, and resets the `dirty` flag to `false`, so that\n         * on change detection, it will not notify of changes to the queries, unless a new change\n         * occurs.\n         *\n         * @param resultsTree The query results to store\n         */\n        QueryList.prototype.reset = function (resultsTree) {\n            this._results = flatten(resultsTree);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        /**\n         * Triggers a change event by emitting on the `changes` {@link EventEmitter}.\n         */\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$7 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$8 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd$2 = unusedValueExportToPlacateAjd$7 + unusedValueExportToPlacateAjd$2 + unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$8;\n    var LQuery_ = /** @class */ (function () {\n        function LQuery_(queryList) {\n            this.queryList = queryList;\n            this.matches = null;\n        }\n        LQuery_.prototype.clone = function () { return new LQuery_(this.queryList); };\n        LQuery_.prototype.setDirty = function () { this.queryList.setDirty(); };\n        return LQuery_;\n    }());\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        LQueries_.prototype.createEmbeddedView = function (tView) {\n            var tQueries = tView.queries;\n            if (tQueries !== null) {\n                var noOfInheritedQueries = tView.contentQueries !== null ? tView.contentQueries[0] : tQueries.length;\n                var viewLQueries = [];\n                // An embedded view has queries propagated from a declaration view at the beginning of the\n                // TQueries collection and up until a first content query declared in the embedded view. Only\n                // propagated LQueries are created at this point (LQuery corresponding to declared content\n                // queries will be instantiated from the content query instructions for each directive).\n                for (var i = 0; i < noOfInheritedQueries; i++) {\n                    var tQuery = tQueries.getByIndex(i);\n                    var parentLQuery = this.queries[tQuery.indexInDeclarationView];\n                    viewLQueries.push(parentLQuery.clone());\n                }\n                return new LQueries_(viewLQueries);\n            }\n            return null;\n        };\n        LQueries_.prototype.insertView = function (tView) { this.dirtyQueriesWithMatches(tView); };\n        LQueries_.prototype.detachView = function (tView) { this.dirtyQueriesWithMatches(tView); };\n        LQueries_.prototype.dirtyQueriesWithMatches = function (tView) {\n            for (var i = 0; i < this.queries.length; i++) {\n                if (getTQuery(tView, i).matches !== null) {\n                    this.queries[i].setDirty();\n                }\n            }\n        };\n        return LQueries_;\n    }());\n    var TQueryMetadata_ = /** @class */ (function () {\n        function TQueryMetadata_(predicate, descendants, isStatic, read) {\n            if (read === void 0) { read = null; }\n            this.predicate = predicate;\n            this.descendants = descendants;\n            this.isStatic = isStatic;\n            this.read = read;\n        }\n        return TQueryMetadata_;\n    }());\n    var TQueries_ = /** @class */ (function () {\n        function TQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        TQueries_.prototype.elementStart = function (tView, tNode) {\n            ngDevMode && assertFirstCreatePass(tView, 'Queries should collect results on the first template pass only');\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].elementStart(tView, tNode);\n            }\n        };\n        TQueries_.prototype.elementEnd = function (tNode) {\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].elementEnd(tNode);\n            }\n        };\n        TQueries_.prototype.embeddedTView = function (tNode) {\n            var queriesForTemplateRef = null;\n            for (var i = 0; i < this.length; i++) {\n                var childQueryIndex = queriesForTemplateRef !== null ? queriesForTemplateRef.length : 0;\n                var tqueryClone = this.getByIndex(i).embeddedTView(tNode, childQueryIndex);\n                if (tqueryClone) {\n                    tqueryClone.indexInDeclarationView = i;\n                    if (queriesForTemplateRef !== null) {\n                        queriesForTemplateRef.push(tqueryClone);\n                    }\n                    else {\n                        queriesForTemplateRef = [tqueryClone];\n                    }\n                }\n            }\n            return queriesForTemplateRef !== null ? new TQueries_(queriesForTemplateRef) : null;\n        };\n        TQueries_.prototype.template = function (tView, tNode) {\n            ngDevMode && assertFirstCreatePass(tView, 'Queries should collect results on the first template pass only');\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].template(tView, tNode);\n            }\n        };\n        TQueries_.prototype.getByIndex = function (index) {\n            ngDevMode && assertDataInRange(this.queries, index);\n            return this.queries[index];\n        };\n        Object.defineProperty(TQueries_.prototype, \"length\", {\n            get: function () { return this.queries.length; },\n            enumerable: true,\n            configurable: true\n        });\n        TQueries_.prototype.track = function (tquery) { this.queries.push(tquery); };\n        return TQueries_;\n    }());\n    var TQuery_ = /** @class */ (function () {\n        function TQuery_(metadata, nodeIndex) {\n            if (nodeIndex === void 0) { nodeIndex = -1; }\n            this.metadata = metadata;\n            this.matches = null;\n            this.indexInDeclarationView = -1;\n            this.crossesNgTemplate = false;\n            /**\n             * A flag indicating if a given query still applies to nodes it is crossing. We use this flag\n             * (alongside with _declarationNodeIndex) to know when to stop applying content queries to\n             * elements in a template.\n             */\n            this._appliesToNextNode = true;\n            this._declarationNodeIndex = nodeIndex;\n        }\n        TQuery_.prototype.elementStart = function (tView, tNode) {\n            if (this.isApplyingToNode(tNode)) {\n                this.matchTNode(tView, tNode);\n            }\n        };\n        TQuery_.prototype.elementEnd = function (tNode) {\n            if (this._declarationNodeIndex === tNode.index) {\n                this._appliesToNextNode = false;\n            }\n        };\n        TQuery_.prototype.template = function (tView, tNode) { this.elementStart(tView, tNode); };\n        TQuery_.prototype.embeddedTView = function (tNode, childQueryIndex) {\n            if (this.isApplyingToNode(tNode)) {\n                this.crossesNgTemplate = true;\n                // A marker indicating a `<ng-template>` element (a placeholder for query results from\n                // embedded views created based on this `<ng-template>`).\n                this.addMatch(-tNode.index, childQueryIndex);\n                return new TQuery_(this.metadata);\n            }\n            return null;\n        };\n        TQuery_.prototype.isApplyingToNode = function (tNode) {\n            if (this._appliesToNextNode && this.metadata.descendants === false) {\n                return this._declarationNodeIndex === (tNode.parent ? tNode.parent.index : -1);\n            }\n            return this._appliesToNextNode;\n        };\n        TQuery_.prototype.matchTNode = function (tView, tNode) {\n            if (Array.isArray(this.metadata.predicate)) {\n                var localNames = this.metadata.predicate;\n                for (var i = 0; i < localNames.length; i++) {\n                    this.matchTNodeWithReadOption(tView, tNode, getIdxOfMatchingSelector(tNode, localNames[i]));\n                }\n            }\n            else {\n                var typePredicate = this.metadata.predicate;\n                if (typePredicate === TemplateRef) {\n                    if (tNode.type === 0 /* Container */) {\n                        this.matchTNodeWithReadOption(tView, tNode, -1);\n                    }\n                }\n                else {\n                    this.matchTNodeWithReadOption(tView, tNode, locateDirectiveOrProvider(tNode, tView, typePredicate, false, false));\n                }\n            }\n        };\n        TQuery_.prototype.matchTNodeWithReadOption = function (tView, tNode, nodeMatchIdx) {\n            if (nodeMatchIdx !== null) {\n                var read = this.metadata.read;\n                if (read !== null) {\n                    if (read === ElementRef || read === ViewContainerRef ||\n                        read === TemplateRef && tNode.type === 0 /* Container */) {\n                        this.addMatch(tNode.index, -2);\n                    }\n                    else {\n                        var directiveOrProviderIdx = locateDirectiveOrProvider(tNode, tView, read, false, false);\n                        if (directiveOrProviderIdx !== null) {\n                            this.addMatch(tNode.index, directiveOrProviderIdx);\n                        }\n                    }\n                }\n                else {\n                    this.addMatch(tNode.index, nodeMatchIdx);\n                }\n            }\n        };\n        TQuery_.prototype.addMatch = function (tNodeIdx, matchIdx) {\n            if (this.matches === null) {\n                this.matches = [tNodeIdx, matchIdx];\n            }\n            else {\n                this.matches.push(tNodeIdx, matchIdx);\n            }\n        };\n        return TQuery_;\n    }());\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames !== null) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    function createResultByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        else if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function createResultForNode(lView, tNode, matchingIdx, read) {\n        if (matchingIdx === -1) {\n            // if read token and / or strategy is not specified, detect it using appropriate tNode type\n            return createResultByTNodeType(tNode, lView);\n        }\n        else if (matchingIdx === -2) {\n            // read a special token from a node injector\n            return createSpecialToken(lView, tNode, read);\n        }\n        else {\n            // read a token\n            return getNodeInjectable(lView[TVIEW].data, lView, matchingIdx, tNode);\n        }\n    }\n    function createSpecialToken(lView, tNode, read) {\n        if (read === ElementRef) {\n            return createElementRef(ElementRef, tNode, lView);\n        }\n        else if (read === TemplateRef) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, lView);\n        }\n        else if (read === ViewContainerRef) {\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n            return createContainerRef(ViewContainerRef, ElementRef, tNode, lView);\n        }\n        else {\n            ngDevMode &&\n                throwError(\"Special token to read should be one of ElementRef, TemplateRef or ViewContainerRef but got \" + stringify(read) + \".\");\n        }\n    }\n    /**\n     * A helper function that creates query results for a given view. This function is meant to do the\n     * processing once and only once for a given view instance (a set of results for a given view\n     * doesn't change).\n     */\n    function materializeViewResults(lView, tQuery, queryIndex) {\n        var lQuery = lView[QUERIES].queries[queryIndex];\n        if (lQuery.matches === null) {\n            var tViewData = lView[TVIEW].data;\n            var tQueryMatches = tQuery.matches;\n            var result = [];\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var matchedNodeIdx = tQueryMatches[i];\n                if (matchedNodeIdx < 0) {\n                    // we at the <ng-template> marker which might have results in views created based on this\n                    // <ng-template> - those results will be in separate views though, so here we just leave\n                    // null as a placeholder\n                    result.push(null);\n                }\n                else {\n                    ngDevMode && assertDataInRange(tViewData, matchedNodeIdx);\n                    var tNode = tViewData[matchedNodeIdx];\n                    result.push(createResultForNode(lView, tNode, tQueryMatches[i + 1], tQuery.metadata.read));\n                }\n            }\n            lQuery.matches = result;\n        }\n        return lQuery.matches;\n    }\n    /**\n     * A helper function that collects (already materialized) query results from a tree of views,\n     * starting with a provided LView.\n     */\n    function collectQueryResults(lView, queryIndex, result) {\n        var tQuery = lView[TVIEW].queries.getByIndex(queryIndex);\n        var tQueryMatches = tQuery.matches;\n        if (tQueryMatches !== null) {\n            var lViewResults = materializeViewResults(lView, tQuery, queryIndex);\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var tNodeIdx = tQueryMatches[i];\n                if (tNodeIdx > 0) {\n                    var viewResult = lViewResults[i / 2];\n                    ngDevMode && assertDefined(viewResult, 'materialized query result should be defined');\n                    result.push(viewResult);\n                }\n                else {\n                    var childQueryIndex = tQueryMatches[i + 1];\n                    var declarationLContainer = lView[-tNodeIdx];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    // collect matches for views inserted in this container\n                    for (var i_1 = CONTAINER_HEADER_OFFSET; i_1 < declarationLContainer.length; i_1++) {\n                        var embeddedLView = declarationLContainer[i_1];\n                        if (embeddedLView[DECLARATION_LCONTAINER] === embeddedLView[PARENT]) {\n                            collectQueryResults(embeddedLView, childQueryIndex, result);\n                        }\n                    }\n                    // collect matches for views created from this declaration container and inserted into\n                    // different containers\n                    if (declarationLContainer[MOVED_VIEWS] !== null) {\n                        var embeddedLViews = declarationLContainer[MOVED_VIEWS];\n                        for (var i_2 = 0; i_2 < embeddedLViews.length; i_2++) {\n                            collectQueryResults(embeddedLViews[i_2], childQueryIndex, result);\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     *\n     * @returns `true` if a query got dirty during change detection or if this is a static query\n     * resolving in creation mode, `false` otherwise.\n     *\n     * @codeGenApi\n     */\n    function ɵɵqueryRefresh(queryList) {\n        var lView = getLView();\n        var queryIndex = getCurrentQueryIndex();\n        setCurrentQueryIndex(queryIndex + 1);\n        var tQuery = getTQuery(lView[TVIEW], queryIndex);\n        if (queryList.dirty && (isCreationMode(lView) === tQuery.metadata.isStatic)) {\n            if (tQuery.matches === null) {\n                queryList.reset([]);\n            }\n            else {\n                var result = tQuery.crossesNgTemplate ? collectQueryResults(lView, queryIndex, []) :\n                    materializeViewResults(lView, tQuery, queryIndex);\n                queryList.reset(result);\n                queryList.notifyOnChanges();\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Creates new QueryList for a static view query.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticViewQuery(predicate, descend, read) {\n        viewQueryInternal(getLView(), predicate, descend, read, true);\n    }\n    /**\n     * Creates new QueryList, stores the reference in LView and returns QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵviewQuery(predicate, descend, read) {\n        viewQueryInternal(getLView(), predicate, descend, read, false);\n    }\n    function viewQueryInternal(lView, predicate, descend, read, isStatic) {\n        var tView = lView[TVIEW];\n        if (tView.firstCreatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), -1);\n            if (isStatic) {\n                tView.staticViewQueries = true;\n            }\n        }\n        createLQuery(lView);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getLView(), predicate, descend, read, false, getPreviousOrParentTNode(), directiveIndex);\n    }\n    /**\n     * Registers a QueryList, associated with a static content query, for later refresh\n     * (part of a view refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticContentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getLView(), predicate, descend, read, true, getPreviousOrParentTNode(), directiveIndex);\n    }\n    function contentQueryInternal(lView, predicate, descend, read, isStatic, tNode, directiveIndex) {\n        var tView = lView[TVIEW];\n        if (tView.firstCreatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), tNode.index);\n            saveContentQueryAndDirectiveIndex(tView, directiveIndex);\n            if (isStatic) {\n                tView.staticContentQueries = true;\n            }\n        }\n        createLQuery(lView);\n    }\n    /**\n     * Loads a QueryList corresponding to the current view or content query.\n     *\n     * @codeGenApi\n     */\n    function ɵɵloadQuery() {\n        return loadQueryInternal(getLView(), getCurrentQueryIndex());\n    }\n    function loadQueryInternal(lView, queryIndex) {\n        ngDevMode &&\n            assertDefined(lView[QUERIES], 'LQueries should be defined when trying to load a query');\n        ngDevMode && assertDataInRange(lView[QUERIES].queries, queryIndex);\n        return lView[QUERIES].queries[queryIndex].queryList;\n    }\n    function createLQuery(lView) {\n        var queryList = new QueryList();\n        storeCleanupWithContext(lView, queryList, queryList.destroy);\n        if (lView[QUERIES] === null)\n            lView[QUERIES] = new LQueries_();\n        lView[QUERIES].queries.push(new LQuery_(queryList));\n    }\n    function createTQuery(tView, metadata, nodeIndex) {\n        if (tView.queries === null)\n            tView.queries = new TQueries_();\n        tView.queries.track(new TQuery_(metadata, nodeIndex));\n    }\n    function saveContentQueryAndDirectiveIndex(tView, directiveIndex) {\n        var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n        var lastSavedDirectiveIndex = tView.contentQueries.length ? tViewContentQueries[tViewContentQueries.length - 1] : -1;\n        if (directiveIndex !== lastSavedDirectiveIndex) {\n            tViewContentQueries.push(tView.queries.length - 1, directiveIndex);\n        }\n    }\n    function getTQuery(tView, index) {\n        ngDevMode && assertDefined(tView.queries, 'TQueries must be defined to retrieve a TQuery');\n        return tView.queries.getByIndex(index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n    /**\n     * Returns the appropriate `ChangeDetectorRef` for a pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectPipeChangeDetectorRef(flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        var value = injectChangeDetectorRef(true);\n        if (value == null && !(flags & exports.InjectFlags.Optional)) {\n            throw new Error(\"No provider for ChangeDetectorRef!\");\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = (function () { return ({\n        'ɵɵattribute': ɵɵattribute,\n        'ɵɵattributeInterpolate1': ɵɵattributeInterpolate1,\n        'ɵɵattributeInterpolate2': ɵɵattributeInterpolate2,\n        'ɵɵattributeInterpolate3': ɵɵattributeInterpolate3,\n        'ɵɵattributeInterpolate4': ɵɵattributeInterpolate4,\n        'ɵɵattributeInterpolate5': ɵɵattributeInterpolate5,\n        'ɵɵattributeInterpolate6': ɵɵattributeInterpolate6,\n        'ɵɵattributeInterpolate7': ɵɵattributeInterpolate7,\n        'ɵɵattributeInterpolate8': ɵɵattributeInterpolate8,\n        'ɵɵattributeInterpolateV': ɵɵattributeInterpolateV,\n        'ɵɵdefineComponent': ɵɵdefineComponent,\n        'ɵɵdefineDirective': ɵɵdefineDirective,\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵdefineNgModule': ɵɵdefineNgModule,\n        'ɵɵdefinePipe': ɵɵdefinePipe,\n        'ɵɵdirectiveInject': ɵɵdirectiveInject,\n        'ɵɵgetFactoryOf': ɵɵgetFactoryOf,\n        'ɵɵgetInheritedFactory': ɵɵgetInheritedFactory,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵinjectAttribute': ɵɵinjectAttribute,\n        'ɵɵinvalidFactory': ɵɵinvalidFactory,\n        'ɵɵinjectPipeChangeDetectorRef': ɵɵinjectPipeChangeDetectorRef,\n        'ɵɵtemplateRefExtractor': ɵɵtemplateRefExtractor,\n        'ɵɵNgOnChangesFeature': ɵɵNgOnChangesFeature,\n        'ɵɵProvidersFeature': ɵɵProvidersFeature,\n        'ɵɵCopyDefinitionFeature': ɵɵCopyDefinitionFeature,\n        'ɵɵInheritDefinitionFeature': ɵɵInheritDefinitionFeature,\n        'ɵɵcontainer': ɵɵcontainer,\n        'ɵɵnextContext': ɵɵnextContext,\n        'ɵɵcontainerRefreshStart': ɵɵcontainerRefreshStart,\n        'ɵɵcontainerRefreshEnd': ɵɵcontainerRefreshEnd,\n        'ɵɵnamespaceHTML': ɵɵnamespaceHTML,\n        'ɵɵnamespaceMathML': ɵɵnamespaceMathML,\n        'ɵɵnamespaceSVG': ɵɵnamespaceSVG,\n        'ɵɵenableBindings': ɵɵenableBindings,\n        'ɵɵdisableBindings': ɵɵdisableBindings,\n        'ɵɵallocHostVars': ɵɵallocHostVars,\n        'ɵɵelementStart': ɵɵelementStart,\n        'ɵɵelementEnd': ɵɵelementEnd,\n        'ɵɵelement': ɵɵelement,\n        'ɵɵelementContainerStart': ɵɵelementContainerStart,\n        'ɵɵelementContainerEnd': ɵɵelementContainerEnd,\n        'ɵɵelementContainer': ɵɵelementContainer,\n        'ɵɵpureFunction0': ɵɵpureFunction0,\n        'ɵɵpureFunction1': ɵɵpureFunction1,\n        'ɵɵpureFunction2': ɵɵpureFunction2,\n        'ɵɵpureFunction3': ɵɵpureFunction3,\n        'ɵɵpureFunction4': ɵɵpureFunction4,\n        'ɵɵpureFunction5': ɵɵpureFunction5,\n        'ɵɵpureFunction6': ɵɵpureFunction6,\n        'ɵɵpureFunction7': ɵɵpureFunction7,\n        'ɵɵpureFunction8': ɵɵpureFunction8,\n        'ɵɵpureFunctionV': ɵɵpureFunctionV,\n        'ɵɵgetCurrentView': ɵɵgetCurrentView,\n        'ɵɵrestoreView': ɵɵrestoreView,\n        'ɵɵlistener': ɵɵlistener,\n        'ɵɵprojection': ɵɵprojection,\n        'ɵɵupdateSyntheticHostBinding': ɵɵupdateSyntheticHostBinding,\n        'ɵɵcomponentHostSyntheticListener': ɵɵcomponentHostSyntheticListener,\n        'ɵɵpipeBind1': ɵɵpipeBind1,\n        'ɵɵpipeBind2': ɵɵpipeBind2,\n        'ɵɵpipeBind3': ɵɵpipeBind3,\n        'ɵɵpipeBind4': ɵɵpipeBind4,\n        'ɵɵpipeBindV': ɵɵpipeBindV,\n        'ɵɵprojectionDef': ɵɵprojectionDef,\n        'ɵɵhostProperty': ɵɵhostProperty,\n        'ɵɵproperty': ɵɵproperty,\n        'ɵɵpropertyInterpolate': ɵɵpropertyInterpolate,\n        'ɵɵpropertyInterpolate1': ɵɵpropertyInterpolate1,\n        'ɵɵpropertyInterpolate2': ɵɵpropertyInterpolate2,\n        'ɵɵpropertyInterpolate3': ɵɵpropertyInterpolate3,\n        'ɵɵpropertyInterpolate4': ɵɵpropertyInterpolate4,\n        'ɵɵpropertyInterpolate5': ɵɵpropertyInterpolate5,\n        'ɵɵpropertyInterpolate6': ɵɵpropertyInterpolate6,\n        'ɵɵpropertyInterpolate7': ɵɵpropertyInterpolate7,\n        'ɵɵpropertyInterpolate8': ɵɵpropertyInterpolate8,\n        'ɵɵpropertyInterpolateV': ɵɵpropertyInterpolateV,\n        'ɵɵpipe': ɵɵpipe,\n        'ɵɵqueryRefresh': ɵɵqueryRefresh,\n        'ɵɵviewQuery': ɵɵviewQuery,\n        'ɵɵstaticViewQuery': ɵɵstaticViewQuery,\n        'ɵɵstaticContentQuery': ɵɵstaticContentQuery,\n        'ɵɵloadQuery': ɵɵloadQuery,\n        'ɵɵcontentQuery': ɵɵcontentQuery,\n        'ɵɵreference': ɵɵreference,\n        'ɵɵelementHostAttrs': ɵɵelementHostAttrs,\n        'ɵɵclassMap': ɵɵclassMap,\n        'ɵɵclassMapInterpolate1': ɵɵclassMapInterpolate1,\n        'ɵɵclassMapInterpolate2': ɵɵclassMapInterpolate2,\n        'ɵɵclassMapInterpolate3': ɵɵclassMapInterpolate3,\n        'ɵɵclassMapInterpolate4': ɵɵclassMapInterpolate4,\n        'ɵɵclassMapInterpolate5': ɵɵclassMapInterpolate5,\n        'ɵɵclassMapInterpolate6': ɵɵclassMapInterpolate6,\n        'ɵɵclassMapInterpolate7': ɵɵclassMapInterpolate7,\n        'ɵɵclassMapInterpolate8': ɵɵclassMapInterpolate8,\n        'ɵɵclassMapInterpolateV': ɵɵclassMapInterpolateV,\n        'ɵɵstyleMap': ɵɵstyleMap,\n        'ɵɵstyleProp': ɵɵstyleProp,\n        'ɵɵstylePropInterpolate1': ɵɵstylePropInterpolate1,\n        'ɵɵstylePropInterpolate2': ɵɵstylePropInterpolate2,\n        'ɵɵstylePropInterpolate3': ɵɵstylePropInterpolate3,\n        'ɵɵstylePropInterpolate4': ɵɵstylePropInterpolate4,\n        'ɵɵstylePropInterpolate5': ɵɵstylePropInterpolate5,\n        'ɵɵstylePropInterpolate6': ɵɵstylePropInterpolate6,\n        'ɵɵstylePropInterpolate7': ɵɵstylePropInterpolate7,\n        'ɵɵstylePropInterpolate8': ɵɵstylePropInterpolate8,\n        'ɵɵstylePropInterpolateV': ɵɵstylePropInterpolateV,\n        'ɵɵstyleSanitizer': ɵɵstyleSanitizer,\n        'ɵɵclassProp': ɵɵclassProp,\n        'ɵɵselect': ɵɵselect,\n        'ɵɵadvance': ɵɵadvance,\n        'ɵɵtemplate': ɵɵtemplate,\n        'ɵɵtext': ɵɵtext,\n        'ɵɵtextInterpolate': ɵɵtextInterpolate,\n        'ɵɵtextInterpolate1': ɵɵtextInterpolate1,\n        'ɵɵtextInterpolate2': ɵɵtextInterpolate2,\n        'ɵɵtextInterpolate3': ɵɵtextInterpolate3,\n        'ɵɵtextInterpolate4': ɵɵtextInterpolate4,\n        'ɵɵtextInterpolate5': ɵɵtextInterpolate5,\n        'ɵɵtextInterpolate6': ɵɵtextInterpolate6,\n        'ɵɵtextInterpolate7': ɵɵtextInterpolate7,\n        'ɵɵtextInterpolate8': ɵɵtextInterpolate8,\n        'ɵɵtextInterpolateV': ɵɵtextInterpolateV,\n        'ɵɵembeddedViewStart': ɵɵembeddedViewStart,\n        'ɵɵembeddedViewEnd': ɵɵembeddedViewEnd,\n        'ɵɵi18n': ɵɵi18n,\n        'ɵɵi18nAttributes': ɵɵi18nAttributes,\n        'ɵɵi18nExp': ɵɵi18nExp,\n        'ɵɵi18nStart': ɵɵi18nStart,\n        'ɵɵi18nEnd': ɵɵi18nEnd,\n        'ɵɵi18nApply': ɵɵi18nApply,\n        'ɵɵi18nPostprocess': ɵɵi18nPostprocess,\n        'ɵɵresolveWindow': ɵɵresolveWindow,\n        'ɵɵresolveDocument': ɵɵresolveDocument,\n        'ɵɵresolveBody': ɵɵresolveBody,\n        'ɵɵsetComponentScope': ɵɵsetComponentScope,\n        'ɵɵsetNgModuleScope': ɵɵsetNgModuleScope,\n        'ɵɵsanitizeHtml': ɵɵsanitizeHtml,\n        'ɵɵsanitizeStyle': ɵɵsanitizeStyle,\n        'ɵɵdefaultStyleSanitizer': ɵɵdefaultStyleSanitizer,\n        'ɵɵsanitizeResourceUrl': ɵɵsanitizeResourceUrl,\n        'ɵɵsanitizeScript': ɵɵsanitizeScript,\n        'ɵɵsanitizeUrl': ɵɵsanitizeUrl,\n        'ɵɵsanitizeUrlOrResourceUrl': ɵɵsanitizeUrlOrResourceUrl,\n    }); })();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$4 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ɵmod` and `ɵinj` properties to the module class.\n     *\n     * It's possible to compile a module via this API which will allow duplicate declarations in its\n     * root.\n     */\n    function compileNgModuleDefs(moduleType, ngModule, allowDuplicateDeclarationsInRoot) {\n        if (allowDuplicateDeclarationsInRoot === void 0) { allowDuplicateDeclarationsInRoot = false; }\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$4);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MOD_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    if (ngDevMode && ngModule.imports && ngModule.imports.indexOf(moduleType) > -1) {\n                        // We need to assert this immediately, because allowing it to continue will cause it to\n                        // go into an infinite loop before we've reached the point where we throw all the errors.\n                        throw new Error(\"'\" + stringifyForError(moduleType) + \"' module can't import itself\");\n                    }\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng:///\" + moduleType.name + \"/\\u0275mod.js\", {\n                        type: moduleType,\n                        bootstrap: flatten(ngModule.bootstrap || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten(ngModule.imports || EMPTY_ARRAY$4)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten(ngModule.exports || EMPTY_ARRAY$4)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                        schemas: ngModule.schemas ? flatten(ngModule.schemas) : null,\n                        id: ngModule.id || null,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJ_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$4,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng:///\" + moduleType.name + \"/\\u0275inj.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot, importingModule) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef;\n        if (importingModule) {\n            ngModuleDef = getNgModuleDef(moduleType);\n            if (!ngModuleDef) {\n                throw new Error(\"Unexpected value '\" + moduleType.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n        else {\n            ngModuleDef = getNgModuleDef(moduleType, true);\n        }\n        var errors = [];\n        var declarations = maybeUnwrapFn(ngModuleDef.declarations);\n        var imports = maybeUnwrapFn(ngModuleDef.imports);\n        flatten(imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n            verifySemanticsOfNgModuleImport(mod, moduleType);\n            verifySemanticsOfNgModuleDef(mod, false, moduleType);\n        });\n        var exports = maybeUnwrapFn(ngModuleDef.exports);\n        declarations.forEach(verifyDeclarationsHaveDefinitions);\n        declarations.forEach(verifyDirectivesHaveSelector);\n        var combinedDeclarations = __spread(declarations.map(resolveForwardRef), flatten(imports.map(computeCombinedExports)).map(resolveForwardRef));\n        exports.forEach(verifyExportsAreDeclaredOrReExported);\n        declarations.forEach(function (decl) { return verifyDeclarationIsUnique(decl, allowDuplicateDeclarationsInRoot); });\n        declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten(ngModule.imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n                    verifySemanticsOfNgModuleImport(mod, moduleType);\n                    verifySemanticsOfNgModuleDef(mod, false, moduleType);\n                });\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyCorrectBootstrapType);\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents &&\n                deepForEach(ngModule.entryComponents, verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + stringifyForError(type) + \"' declared by the module '\" + stringifyForError(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyDirectivesHaveSelector(type) {\n            type = resolveForwardRef(type);\n            var def = getDirectiveDef(type);\n            if (!getComponentDef(type) && def && def.selectors.length == 0) {\n                errors.push(\"Directive \" + stringifyForError(type) + \" has no selector, please add it!\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + stringifyForError(type) + \" from \" + stringifyForError(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type, suppressErrors) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                if (!suppressErrors) {\n                    var modules = [existingModule, moduleType].map(stringifyForError).sort();\n                    errors.push(\"Type \" + stringifyForError(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                        (\"Please consider moving \" + stringifyForError(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                        (\"You can also create a new NgModule that exports and includes \" + stringifyForError(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n                }\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + stringifyForError(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyCorrectBootstrapType(type) {\n            type = resolveForwardRef(type);\n            if (!getComponentDef(type)) {\n                errors.push(stringifyForError(type) + \" cannot be used as an entry component.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    deepForEach(component.entryComponents, verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n        function verifySemanticsOfNgModuleImport(type, importingModule) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type) || getDirectiveDef(type)) {\n                throw new Error(\"Unexpected directive '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n            if (getPipeDef(type)) {\n                throw new Error(\"Unexpected pipe '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten(maybeUnwrapFn(ngModuleDef.exports).map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type, false);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ɵcmp set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$4);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMP_DEF)) {\n                // A `ɵcmp` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIR_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () {\n            return Array.from(transitiveScopes.compilation.directives)\n                .map(function (dir) {\n                return dir.hasOwnProperty(NG_COMP_DEF) ? getComponentDef(dir) : getDirectiveDef(dir);\n            })\n                .filter(function (def) { return !!def; });\n        };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n        componentDef.schemas = transitiveScopes.schemas;\n        // Since we avoid Components/Directives/Pipes recompiling in case there are no overrides, we\n        // may face a problem where previously compiled defs available to a given Component/Directive\n        // are cached in TView and may become stale (in case any of these defs gets recompiled). In\n        // order to avoid this problem, we force fresh TView to be created.\n        componentDef.tView = null;\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType, processNgModuleFn) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have a module def (\\u0275mod property)\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            schemas: def.schemas || null,\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        maybeUnwrapFn(def.declarations).forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has a ɵcmp or ɵdir, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        maybeUnwrapFn(def.imports).forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have a \\u0275mod property\");\n            }\n            if (processNgModuleFn) {\n                processNgModuleFn(importedType);\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType, processNgModuleFn);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        maybeUnwrapFn(def.exports).forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have a\n            // ɵcmp as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType, processNgModuleFn);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * component def (ɵcmp) onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ɵcmp`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        // Initialize ngDevMode. This must be the first statement in compileComponent.\n        // See the `initNgDevMode` docstring for more information.\n        (typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode();\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(type, metadata);\n        // Note that we're using the same function as `Directive`, because that's only subset of metadata\n        // that we need to create the ngFactoryDef. We're avoiding using the component metadata\n        // because we'd have to resolve the asynchronous templates.\n        addDirectiveFactoryDef(type, metadata);\n        Object.defineProperty(type, NG_COMP_DEF, {\n            get: function () {\n                if (ngComponentDef === null) {\n                    var compiler = getCompilerFacade();\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + type.name + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + metadata.templateUrl);\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var templateUrl = metadata.templateUrl || \"ng:///\" + type.name + \"/template.html\";\n                    var meta = __assign(__assign({}, directiveMetadata(type, metadata)), { typeSourceSpan: compiler.createParseSourceSpan('Component', type.name, templateUrl), template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    if (meta.usesInheritance) {\n                        addDirectiveDefToUndecoratedParents(type);\n                    }\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, templateUrl, meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * directive def onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        addDirectiveFactoryDef(type, directive || {});\n        Object.defineProperty(type, NG_DIR_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    // `directive` can be null in the case of abstract directives as a base class\n                    // that use `@Directive()` with no selector. In that case, pass empty object to the\n                    // `directiveMetadata` function instead of null.\n                    var meta = getDirectiveMetadata(type, directive || {});\n                    ngDirectiveDef =\n                        getCompilerFacade().compileDirective(angularCoreEnv, meta.sourceMapUrl, meta.metadata);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function getDirectiveMetadata(type, metadata) {\n        var name = type && type.name;\n        var sourceMapUrl = \"ng:///\" + name + \"/\\u0275dir.js\";\n        var compiler = getCompilerFacade();\n        var facade = directiveMetadata(type, metadata);\n        facade.typeSourceSpan = compiler.createParseSourceSpan('Directive', name, sourceMapUrl);\n        if (facade.usesInheritance) {\n            addDirectiveDefToUndecoratedParents(type);\n        }\n        return { metadata: facade, sourceMapUrl: sourceMapUrl };\n    }\n    function addDirectiveFactoryDef(type, metadata) {\n        var ngFactoryDef = null;\n        Object.defineProperty(type, NG_FACTORY_DEF, {\n            get: function () {\n                if (ngFactoryDef === null) {\n                    var meta = getDirectiveMetadata(type, metadata);\n                    var compiler = getCompilerFacade();\n                    ngFactoryDef = compiler.compileFactory(angularCoreEnv, \"ng:///\" + type.name + \"/\\u0275fac.js\", __assign(__assign({}, meta.metadata), { injectFn: 'directiveInject', target: compiler.R3FactoryTarget.Directive }));\n                }\n                return ngFactoryDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().ownPropMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector !== undefined ? metadata.selector : null,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY,\n            outputs: metadata.outputs || EMPTY_ARRAY,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: { usesOnChanges: usesLifecycleHook(type, 'ngOnChanges') },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n            viewQueries: extractQueriesMetadata(type, propMetadata, isViewQuery)\n        };\n    }\n    /**\n     * Adds a directive definition to all parent classes of a type that don't have an Angular decorator.\n     */\n    function addDirectiveDefToUndecoratedParents(type) {\n        var objPrototype = Object.prototype;\n        var parent = Object.getPrototypeOf(type);\n        // Go up the prototype until we hit `Object`.\n        while (parent && parent !== objPrototype) {\n            // Since inheritance works if the class was annotated already, we only need to add\n            // the def if there are no annotations and the def hasn't been created already.\n            if (!getDirectiveDef(parent) && !getComponentDef(parent) &&\n                shouldAddAbstractDirective(parent)) {\n                compileDirective(parent, null);\n            }\n            parent = Object.getPrototypeOf(parent);\n        }\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null,\n            static: !!ann.static\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                var annotations_1 = propMetadata[field];\n                annotations_1.forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + stringifyForError(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        if (annotations_1.some(isInputAnnotation)) {\n                            throw new Error(\"Cannot combine @Input decorators with query decorators\");\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        return exportAs === undefined ? null : splitByComma(exportAs);\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function isInputAnnotation(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n    function usesLifecycleHook(type, name) {\n        var prototype = type.prototype;\n        return prototype && prototype.hasOwnProperty(name);\n    }\n    var LIFECYCLE_HOOKS = [\n        'ngOnChanges', 'ngOnInit', 'ngOnDestroy', 'ngDoCheck', 'ngAfterViewInit', 'ngAfterViewChecked',\n        'ngAfterContentInit', 'ngAfterContentChecked'\n    ];\n    function shouldAddAbstractDirective(type) {\n        if (LIFECYCLE_HOOKS.some(function (hookName) { return usesLifecycleHook(type, hookName); })) {\n            return true;\n        }\n        var propMetadata = getReflect().ownPropMetadata(type);\n        for (var field in propMetadata) {\n            var annotations = propMetadata[field];\n            for (var i = 0; i < annotations.length; i++) {\n                var current = annotations[i];\n                var metadataName = current.ngMetadataName;\n                if (isInputAnnotation(current) || isContentQuery(current) || isViewQuery(current) ||\n                    metadataName === 'Output' || metadataName === 'HostBinding' ||\n                    metadataName === 'HostListener') {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        var ngFactoryDef = null;\n        Object.defineProperty(type, NG_FACTORY_DEF, {\n            get: function () {\n                if (ngFactoryDef === null) {\n                    var metadata = getPipeMetadata(type, meta);\n                    var compiler = getCompilerFacade();\n                    ngFactoryDef = compiler.compileFactory(angularCoreEnv, \"ng:///\" + metadata.name + \"/\\u0275fac.js\", __assign(__assign({}, metadata), { injectFn: 'directiveInject', target: compiler.R3FactoryTarget.Pipe }));\n                }\n                return ngFactoryDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var metadata = getPipeMetadata(type, meta);\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng:///\" + metadata.name + \"/\\u0275pipe.js\", metadata);\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function getPipeMetadata(type, meta) {\n        return {\n            type: type,\n            typeArgumentCount: 0,\n            name: type.name,\n            deps: reflectDependencies(type),\n            pipeName: meta.name,\n            pure: meta.pure !== undefined ? meta.pure : true\n        };\n    }\n\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Decorator that binds a DOM event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     *\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```ts\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\n    var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__POST_R3__;\n\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ɵinj = ɵɵdefineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The existence of this constant (in this particular file) informs the Angular compiler that the\n     * current program is actually @angular/core, which needs to be compiled specially.\n     */\n    var ITS_JUST_ANGULAR = true;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus.ɵfac = function ApplicationInitStatus_Factory(t) { return new (t || ApplicationInitStatus)(ɵɵinject(APP_INITIALIZER, 8)); };\n        ApplicationInitStatus.ɵprov = ɵɵdefineInjectable({ token: ApplicationInitStatus, factory: function (t) { return ApplicationInitStatus.ɵfac(t); }, providedIn: null });\n        return ApplicationInitStatus;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationInitStatus, [{\n            type: Injectable\n        }], function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [APP_INITIALIZER]\n                }, {\n                    type: Optional\n                }] }]; }, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console.ɵfac = function Console_Factory(t) { return new (t || Console)(); };\n        Console.ɵprov = ɵɵdefineInjectable({ token: Console, factory: function (t) { return Console.ɵfac(t); }, providedIn: null });\n        return Console;\n    }());\n    /*@__PURE__*/ setClassMetadata(Console, [{\n            type: Injectable\n        }], null, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID$1 = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var SWITCH_IVY_ENABLED__PRE_R3__ = false;\n    var ivyEnabled = SWITCH_IVY_ENABLED__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    var Compiler_compileModuleSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__POST_R3__;\n    var Compiler_compileModuleAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n        var moduleDef = getNgModuleDef(moduleType);\n        var componentFactories = maybeUnwrapFn(moduleDef.declarations)\n            .reduce(function (factories, declaration) {\n            var componentDef = getComponentDef(declaration);\n            componentDef && factories.push(new ComponentFactory$1(componentDef));\n            return factories;\n        }, []);\n        return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler.ɵfac = function Compiler_Factory(t) { return new (t || Compiler)(); };\n        Compiler.ɵprov = ɵɵdefineInjectable({ token: Compiler, factory: function (t) { return Compiler.ɵfac(t); }, providedIn: null });\n        return Compiler;\n    }());\n    /*@__PURE__*/ setClassMetadata(Compiler, [{\n            type: Injectable\n        }], null, null);\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = (function () { return Promise.resolve(0); })();\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getNativeRequestAnimationFrame() {\n        var nativeRequestAnimationFrame = _global['requestAnimationFrame'];\n        var nativeCancelAnimationFrame = _global['cancelAnimationFrame'];\n        if (typeof Zone !== 'undefined' && nativeRequestAnimationFrame && nativeCancelAnimationFrame) {\n            // use unpatched version of requestAnimationFrame(native delegate) if possible\n            // to avoid another Change detection\n            var unpatchedRequestAnimationFrame = nativeRequestAnimationFrame[Zone.__symbol__('OriginalDelegate')];\n            if (unpatchedRequestAnimationFrame) {\n                nativeRequestAnimationFrame = unpatchedRequestAnimationFrame;\n            }\n            var unpatchedCancelAnimationFrame = nativeCancelAnimationFrame[Zone.__symbol__('OriginalDelegate')];\n            if (unpatchedCancelAnimationFrame) {\n                nativeCancelAnimationFrame = unpatchedCancelAnimationFrame;\n            }\n        }\n        return { nativeRequestAnimationFrame: nativeRequestAnimationFrame, nativeCancelAnimationFrame: nativeCancelAnimationFrame };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b, _c = _a.shouldCoalesceEventChangeDetection, shouldCoalesceEventChangeDetection = _c === void 0 ? false : _c;\n            this.hasPendingMacrotasks = false;\n            this.hasPendingMicrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            self.shouldCoalesceEventChangeDetection = shouldCoalesceEventChangeDetection;\n            self.lastRequestAnimationFrameId = -1;\n            self.nativeRequestAnimationFrame = getNativeRequestAnimationFrame().nativeRequestAnimationFrame;\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function delayChangeDetectionForEvents(zone) {\n        if (zone.lastRequestAnimationFrameId !== -1) {\n            return;\n        }\n        zone.lastRequestAnimationFrameId = zone.nativeRequestAnimationFrame.call(_global, function () {\n            zone.lastRequestAnimationFrameId = -1;\n            updateMicroTaskStatus(zone);\n            checkStable(zone);\n        });\n        updateMicroTaskStatus(zone);\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        var delayChangeDetectionForEventsDelegate = function () { delayChangeDetectionForEvents(zone); };\n        var maybeDelayChangeDetection = !!zone.shouldCoalesceEventChangeDetection &&\n            zone.nativeRequestAnimationFrame && delayChangeDetectionForEventsDelegate;\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true, 'maybeDelayChangeDetection': maybeDelayChangeDetection },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    if (maybeDelayChangeDetection && task.type === 'eventTask') {\n                        maybeDelayChangeDetection();\n                    }\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone._hasPendingMicrotasks = hasTaskState.microTask;\n                        updateMicroTaskStatus(zone);\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function updateMicroTaskStatus(zone) {\n        if (zone._hasPendingMicrotasks ||\n            (zone.shouldCoalesceEventChangeDetection && zone.lastRequestAnimationFrameId !== -1)) {\n            zone.hasPendingMicrotasks = true;\n        }\n        else {\n            zone.hasPendingMicrotasks = false;\n        }\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return fn.apply(applyThis, applyArgs);\n        };\n        NoopNgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return fn.apply(applyThis, applyArgs);\n        };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            return fn.apply(applyThis, applyArgs);\n        };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.ɵfac = function Testability_Factory(t) { return new (t || Testability)(ɵɵinject(NgZone)); };\n        Testability.ɵprov = ɵɵdefineInjectable({ token: Testability, factory: function (t) { return Testability.ɵfac(t); }, providedIn: null });\n        return Testability;\n    }());\n    /*@__PURE__*/ setClassMetadata(Testability, [{\n            type: Injectable\n        }], function () { return [{ type: NgZone }]; }, null);\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.ɵfac = function TestabilityRegistry_Factory(t) { return new (t || TestabilityRegistry)(); };\n        TestabilityRegistry.ɵprov = ɵɵdefineInjectable({ token: TestabilityRegistry, factory: function (t) { return TestabilityRegistry.ɵfac(t); }, providedIn: null });\n        return TestabilityRegistry;\n    }());\n    /*@__PURE__*/ setClassMetadata(TestabilityRegistry, [{\n            type: Injectable\n        }], function () { return []; }, null);\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__POST_R3__;\n    function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        var moduleFactory = new NgModuleFactory$1(moduleType);\n        if (isComponentResourceResolutionQueueEmpty()) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compilerOptions = injector.get(COMPILER_OPTIONS, []).concat(options);\n        var compilerProviders = _mergeArrays(compilerOptions.map(function (o) { return o.providers; }));\n        // In case there are no compiler providers, we just return the module factory as\n        // there won't be any resource loader. This can happen with Ivy, because AOT compiled\n        // modules can be still passed through \"bootstrapModule\". In that case we shouldn't\n        // unnecessarily require the JIT compiler.\n        if (compilerProviders.length === 0) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compiler = getCompilerFacade();\n        var compilerInjector = Injector.create({ providers: compilerProviders });\n        var resourceLoader = compilerInjector.get(compiler.ResourceLoader);\n        // The resource loader can also return a string while the \"resolveComponentResources\"\n        // always expects a promise. Therefore we need to wrap the returned value in a promise.\n        return resolveComponentResources(function (url) { return Promise.resolve(resourceLoader.get(url)); })\n            .then(function () { return moduleFactory; });\n    }\n    // the `window.ng` global utilities are only available in non-VE versions of\n    // Angular. The function switch below will make sure that the code is not\n    // included into Angular when PRE mode is active.\n    function publishDefaultGlobalUtils__PRE_R3__() { }\n    function publishDefaultGlobalUtils__POST_R3__() {\n        ngDevMode && publishDefaultGlobalUtils();\n    }\n    var publishDefaultGlobalUtils$1 = publishDefaultGlobalUtils__POST_R3__;\n    var isBoundToModule = isBoundToModule__POST_R3__;\n    function isBoundToModule__PRE_R3__(cf) {\n        return cf instanceof ComponentFactoryBoundToModule;\n    }\n    function isBoundToModule__POST_R3__(cf) {\n        return cf.isBoundToModule;\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        publishDefaultGlobalUtils$1();\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true }, {\n                        provide: INJECTOR_SCOPE,\n                        useValue: 'platform'\n                    });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZoneEventCoalescing = (options && options.ngZoneEventCoalescing) || false;\n            var ngZone = getNgZone(ngZoneOption, ngZoneEventCoalescing);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                // If the `LOCALE_ID` provider is defined at bootstrap we set the value for runtime i18n (ivy)\n                if (ivyEnabled) {\n                    var localeId = moduleRef.injector.get(LOCALE_ID$1, DEFAULT_LOCALE_ID);\n                    setLocaleId(localeId || DEFAULT_LOCALE_ID);\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef.ɵfac = function PlatformRef_Factory(t) { return new (t || PlatformRef)(ɵɵinject(Injector)); };\n        PlatformRef.ɵprov = ɵɵdefineInjectable({ token: PlatformRef, factory: function (t) { return PlatformRef.ɵfac(t); }, providedIn: null });\n        return PlatformRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(PlatformRef, [{\n            type: Injectable\n        }], function () { return [{ type: Injector }]; }, null);\n    function getNgZone(ngZoneOption, ngZoneEventCoalescing) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) || new NgZone({\n                enableLongStackTrace: isDevMode(),\n                shouldCoalesceEventChangeDetection: ngZoneEventCoalescing\n            });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign(__assign({}, dst), objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @usageNotes\n     *\n     * {@a is-stable-examples}\n     * ### isStable examples and caveats\n     *\n     * Note two important points about `isStable`, demonstrated in the examples below:\n     * - the application will never be stable if you start any kind\n     * of recurrent asynchronous task when the application starts\n     * (for example for a polling process, started with a `setInterval`, a `setTimeout`\n     * or using RxJS operators like `interval`);\n     * - the `isStable` Observable runs outside of the Angular zone.\n     *\n     * Let's imagine that you start a recurrent task\n     * (here incrementing a counter, using RxJS `interval`),\n     * and at the same time subscribe to `isStable`.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *      filter(stable => stable)\n     *   ).subscribe(() => console.log('App is stable now');\n     *   interval(1000).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, `isStable` will never emit `true`,\n     * and the trace \"App is stable now\" will never get logged.\n     *\n     * If you want to execute something when the app is stable,\n     * you have to wait for the application to be stable\n     * before starting your polling process.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     tap(stable => console.log('App is stable now')),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, the trace \"App is stable now\" will be logged\n     * and then the counter starts incrementing every second.\n     *\n     * Note also that this Observable runs outside of the Angular zone,\n     * which means that the code in the subscription\n     * to this Observable will not trigger the change detection.\n     *\n     * Let's imagine that instead of logging the counter value,\n     * you update a field of your component\n     * and display it in its template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => this.value = counter);\n     * }\n     * ```\n     * As the `isStable` Observable runs outside the zone,\n     * the `value` field will be updated properly,\n     * but the template will not be refreshed!\n     *\n     * You'll have to manually trigger the change detection to update the template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => {\n     *     this.value = counter;\n     *     cd.detectChanges();\n     *   });\n     * }\n     * ```\n     *\n     * Or make the subscription callback run inside the zone.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, zone: NgZone) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => zone.run(() => this.value = counter));\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = isBoundToModule(componentFactory) ? undefined : this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var e_1, _a, e_2, _b;\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef._tickScope();\n            try {\n                this._runningTick = true;\n                try {\n                    for (var _c = __values(this._views), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var view = _d.value;\n                        view.detectChanges();\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                if (this._enforceNoNewChanges) {\n                    try {\n                        for (var _e = __values(this._views), _f = _e.next(); !_f.done; _f = _e.next()) {\n                            var view = _f.value;\n                            view.checkNoChanges();\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef.ɵfac = function ApplicationRef_Factory(t) { return new (t || ApplicationRef)(ɵɵinject(NgZone), ɵɵinject(Console), ɵɵinject(Injector), ɵɵinject(ErrorHandler), ɵɵinject(ComponentFactoryResolver), ɵɵinject(ApplicationInitStatus)); };\n        ApplicationRef.ɵprov = ɵɵdefineInjectable({ token: ApplicationRef, factory: function (t) { return ApplicationRef.ɵfac(t); }, providedIn: null });\n        return ApplicationRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationRef, [{\n            type: Injectable\n        }], function () { return [{ type: NgZone }, { type: Console }, { type: Injector }, { type: ErrorHandler }, { type: ComponentFactoryResolver }, { type: ApplicationInitStatus }]; }, null);\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n    function _mergeArrays(parts) {\n        var result = [];\n        parts.forEach(function (part) { return part && result.push.apply(result, __spread(part)); });\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `NgModuleFactoryLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    function getModuleFactory__PRE_R3__(id) {\n        var factory = getRegisteredNgModuleType(id);\n        if (!factory)\n            throw noModuleError(id);\n        return factory;\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = getRegisteredNgModuleType(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__POST_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoaderConfig`\n     * is part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var legacyOfflineMode = !ivyEnabled && this._compiler instanceof Compiler;\n            return legacyOfflineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.ɵfac = function SystemJsNgModuleLoader_Factory(t) { return new (t || SystemJsNgModuleLoader)(ɵɵinject(Compiler), ɵɵinject(SystemJsNgModuleLoaderConfig, 8)); };\n        SystemJsNgModuleLoader.ɵprov = ɵɵdefineInjectable({ token: SystemJsNgModuleLoader, factory: function (t) { return SystemJsNgModuleLoader.ɵfac(t); }, providedIn: null });\n        return SystemJsNgModuleLoader;\n    }());\n    /*@__PURE__*/ setClassMetadata(SystemJsNgModuleLoader, [{\n            type: Injectable\n        }], function () { return [{ type: Compiler }, { type: SystemJsNgModuleLoaderConfig, decorators: [{\n                    type: Optional\n                }] }]; }, null);\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @publicApi\n     */\n    var DebugEventListener = /** @class */ (function () {\n        function DebugEventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return DebugEventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _a;\n            var _this = this;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement &&\n                    (getComponent(nativeElement) || getViewComponent(nativeElement));\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () {\n                return getComponent(this.nativeNode) || getContext$1(this.nativeNode);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () {\n                try {\n                    var context = loadLContext(this.nativeNode);\n                    var lView = context.lView;\n                    var tData = lView[TVIEW].data;\n                    var tNode = tData[context.nodeIndex];\n                    return tNode.tagName;\n                }\n                catch (e) {\n                    return this.nativeNode.nodeName;\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            /**\n             *  Gets a map of property names to property values for an element.\n             *\n             *  This map includes:\n             *  - Regular property bindings (e.g. `[id]=\"id\"`)\n             *  - Host property bindings (e.g. `host: { '[id]': \"id\" }`)\n             *  - Interpolated property bindings (e.g. `id=\"{{ value }}\")\n             *\n             *  It does not include:\n             *  - input property bindings (e.g. `[myCustomInput]=\"value\"`)\n             *  - attribute bindings (e.g. `[attr.role]=\"menu\"`)\n             */\n            get: function () {\n                var context = loadLContext(this.nativeNode, false);\n                if (context == null) {\n                    return {};\n                }\n                var lView = context.lView;\n                var tData = lView[TVIEW].data;\n                var tNode = tData[context.nodeIndex];\n                var properties = collectPropertyBindings(tNode, lView, tData);\n                var className = collectClassNames(this);\n                if (className) {\n                    properties['className'] =\n                        properties['className'] ? properties['className'] + (\" \" + className) : className;\n                }\n                return properties;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (!element) {\n                    return attributes;\n                }\n                var context = loadLContext(element, false);\n                if (context == null) {\n                    return {};\n                }\n                var lView = context.lView;\n                var tNodeAttrs = lView[TVIEW].data[context.nodeIndex].attrs;\n                var lowercaseTNodeAttrs = [];\n                // For debug nodes we take the element's attribute directly from the DOM since it allows us\n                // to account for ones that weren't set via bindings (e.g. ViewEngine keeps track of the ones\n                // that are set through `Renderer2`). The problem is that the browser will lowercase all names,\n                // however since we have the attributes already on the TNode, we can preserve the case by going\n                // through them once, adding them to the `attributes` map and putting their lower-cased name\n                // into an array. Afterwards when we're going through the native DOM attributes, we can check\n                // whether we haven't run into an attribute already through the TNode.\n                if (tNodeAttrs) {\n                    var i = 0;\n                    while (i < tNodeAttrs.length) {\n                        var attrName = tNodeAttrs[i];\n                        // Stop as soon as we hit a marker. We only care about the regular attributes. Everything\n                        // else will be handled below when we read the final attributes off the DOM.\n                        if (typeof attrName !== 'string')\n                            break;\n                        var attrValue = tNodeAttrs[i + 1];\n                        attributes[attrName] = attrValue;\n                        lowercaseTNodeAttrs.push(attrName.toLowerCase());\n                        i += 2;\n                    }\n                }\n                var eAttrs = element.attributes;\n                for (var i = 0; i < eAttrs.length; i++) {\n                    var attr = eAttrs[i];\n                    // Make sure that we don't assign the same attribute both in its\n                    // case-sensitive form and the lower-cased one from the browser.\n                    if (lowercaseTNodeAttrs.indexOf(attr.name) === -1) {\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                if (this.nativeElement && this.nativeElement.style) {\n                    return this.nativeElement.style;\n                }\n                return {};\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                if (!this._classesProxy) {\n                    var element_1 = this.nativeElement;\n                    // we use a proxy here because VE code expects `.classes` to keep\n                    // track of which classes have been added and removed. Because we\n                    // do not make use of a debug renderer anymore, the return value\n                    // must always be `false` in the event that a class does not exist\n                    // on the element (even if it wasn't added and removed beforehand).\n                    this._classesProxy = createProxy({\n                        get: function (target, prop) {\n                            return element_1 ? element_1.classList.contains(prop) : false;\n                        },\n                        set: function (target, prop, value) {\n                            return element_1 ? element_1.classList.toggle(prop, !!value) : false;\n                        },\n                        ownKeys: function () { return element_1 ? Array.from(element_1.classList).sort() : []; },\n                        getOwnPropertyDescriptor: function (k) {\n                            // we use a special property descriptor here so that enumeration operations\n                            // such as `Object.keys` will work on this proxy.\n                            return {\n                                enumerable: true,\n                                configurable: true,\n                            };\n                        },\n                    });\n                }\n                return this._classesProxy;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            var node = this.nativeNode;\n            var invokedListeners = [];\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    var callback = listener.callback;\n                    callback(eventObj);\n                    invokedListeners.push(callback);\n                }\n            });\n            // We need to check whether `eventListeners` exists, because it's something\n            // that Zone.js only adds to `EventTarget` in browser environments.\n            if (typeof node.eventListeners === 'function') {\n                // Note that in Ivy we wrap event listeners with a call to `event.preventDefault` in some\n                // cases. We use `Function` as a special token that gives us access to the actual event\n                // listener.\n                node.eventListeners(eventName).forEach(function (listener) {\n                    var unwrappedListener = listener(Function);\n                    return invokedListeners.indexOf(unwrappedListener) === -1 && unwrappedListener(eventObj);\n                });\n            }\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    function _queryAllR3(parentElement, predicate, matches, elementsOnly) {\n        var context = loadLContext(parentElement.nativeNode);\n        var parentTNode = context.lView[TVIEW].data[context.nodeIndex];\n        _queryNodeChildrenR3(parentTNode, context.lView, predicate, matches, elementsOnly, parentElement.nativeNode);\n    }\n    /**\n     * Recursively match the current TNode against the predicate, and goes on with the next ones.\n     *\n     * @param tNode the current TNode\n     * @param lView the LView of this TNode\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenR3(tNode, lView, predicate, matches, elementsOnly, rootNativeNode) {\n        var e_1, _a;\n        var nativeNode = getNativeByTNodeOrNull(tNode, lView);\n        // For each type of TNode, specific logic is executed.\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            // Case 1: the TNode is an element\n            // The native node has to be checked.\n            _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode);\n            if (isComponentHost(tNode)) {\n                // If the element is the host of a component, then all nodes in its view have to be processed.\n                // Note: the component's content (tNode.child) will be processed from the insertion points.\n                var componentView = getComponentLViewByIndex(tNode.index, lView);\n                if (componentView && componentView[TVIEW].firstChild) {\n                    _queryNodeChildrenR3(componentView[TVIEW].firstChild, componentView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n            }\n            else {\n                if (tNode.child) {\n                    // Otherwise, its children have to be processed.\n                    _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n                // We also have to query the DOM directly in order to catch elements inserted through\n                // Renderer2. Note that this is __not__ optimal, because we're walking similar trees multiple\n                // times. ViewEngine could do it more efficiently, because all the insertions go through\n                // Renderer2, however that's not the case in Ivy. This approach is being used because:\n                // 1. Matching the ViewEngine behavior would mean potentially introducing a depedency\n                //    from `Renderer2` to Ivy which could bring Ivy code into ViewEngine.\n                // 2. We would have to make `Renderer3` \"know\" about debug nodes.\n                // 3. It allows us to capture nodes that were inserted directly via the DOM.\n                nativeNode && _queryNativeNodeDescendants(nativeNode, predicate, matches, elementsOnly);\n            }\n            // In all cases, if a dynamic container exists for this node, each view inside it has to be\n            // processed.\n            var nodeOrContainer = lView[tNode.index];\n            if (isLContainer(nodeOrContainer)) {\n                _queryNodeChildrenInContainerR3(nodeOrContainer, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // Case 2: the TNode is a container\n            // The native node has to be checked.\n            var lContainer = lView[tNode.index];\n            _addQueryMatchR3(lContainer[NATIVE], predicate, matches, elementsOnly, rootNativeNode);\n            // Each view inside the container has to be processed.\n            _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        else if (tNode.type === 1 /* Projection */) {\n            // Case 3: the TNode is a projection insertion point (i.e. a <ng-content>).\n            // The nodes projected at this location all need to be processed.\n            var componentView = findComponentView(lView);\n            var componentHost = componentView[T_HOST];\n            var head = componentHost.projection[tNode.projection];\n            if (Array.isArray(head)) {\n                try {\n                    for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                        var nativeNode_1 = head_1_1.value;\n                        _addQueryMatchR3(nativeNode_1, predicate, matches, elementsOnly, rootNativeNode);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n            else if (head) {\n                var nextLView = componentView[PARENT];\n                var nextTNode = nextLView[TVIEW].data[head.index];\n                _queryNodeChildrenR3(nextTNode, nextLView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.child) {\n            // Case 4: the TNode is a view.\n            _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        // We don't want to go to the next sibling of the root node.\n        if (rootNativeNode !== nativeNode) {\n            // To determine the next node to be processed, we need to use the next or the projectionNext\n            // link, depending on whether the current node has been projected.\n            var nextTNode = (tNode.flags & 4 /* isProjected */) ? tNode.projectionNext : tNode.next;\n            if (nextTNode) {\n                _queryNodeChildrenR3(nextTNode, lView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n    }\n    /**\n     * Process all TNodes in a given container.\n     *\n     * @param lContainer the container to be processed\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode) {\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var childView = lContainer[i];\n            _queryNodeChildrenR3(childView[TVIEW].node, childView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n    /**\n     * Match the current native node against the predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode) {\n        if (rootNativeNode !== nativeNode) {\n            var debugNode = getDebugNode$1(nativeNode);\n            if (!debugNode) {\n                return;\n            }\n            // Type of the \"predicate and \"matches\" array are set based on the value of\n            // the \"elementsOnly\" parameter. TypeScript is not able to properly infer these\n            // types with generics, so we manually cast the parameters accordingly.\n            if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n            else if (!elementsOnly && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n        }\n    }\n    /**\n     * Match all the descendants of a DOM node against a predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     */\n    function _queryNativeNodeDescendants(parentNode, predicate, matches, elementsOnly) {\n        var nodes = parentNode.childNodes;\n        var length = nodes.length;\n        for (var i = 0; i < length; i++) {\n            var node = nodes[i];\n            var debugNode = getDebugNode$1(node);\n            if (debugNode) {\n                if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                else if (!elementsOnly && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                _queryNativeNodeDescendants(node, predicate, matches, elementsOnly);\n            }\n        }\n    }\n    /**\n     * Iterates through the property bindings for a given node and generates\n     * a map of property names to values. This map only contains property bindings\n     * defined in templates, not in host bindings.\n     */\n    function collectPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        var bindingIndexes = tNode.propertyBindings;\n        if (bindingIndexes !== null) {\n            for (var i = 0; i < bindingIndexes.length; i++) {\n                var bindingIndex = bindingIndexes[i];\n                var propMetadata = tData[bindingIndex];\n                var metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);\n                var propertyName = metadataParts[0];\n                if (metadataParts.length > 1) {\n                    var value = metadataParts[1];\n                    for (var j = 1; j < metadataParts.length - 1; j++) {\n                        value += renderStringify(lView[bindingIndex + j - 1]) + metadataParts[j + 1];\n                    }\n                    properties[propertyName] = value;\n                }\n                else {\n                    properties[propertyName] = lView[bindingIndex];\n                }\n            }\n        }\n        return properties;\n    }\n    function collectClassNames(debugElement) {\n        var e_2, _a;\n        var classes = debugElement.classes;\n        var output = '';\n        try {\n            for (var _b = __values(Object.keys(classes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var className = _c.value;\n                if (classes[className]) {\n                    output = output ? output + (\" \" + className) : className;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return output;\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__PRE_R3__(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    var NG_DEBUG_PROPERTY = '__ng_debug__';\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            if (!(nativeNode.hasOwnProperty(NG_DEBUG_PROPERTY))) {\n                nativeNode[NG_DEBUG_PROPERTY] = nativeNode.nodeType == Node.ELEMENT_NODE ?\n                    new DebugElement__POST_R3__(nativeNode) :\n                    new DebugNode__POST_R3__(nativeNode);\n            }\n            return nativeNode[NG_DEBUG_PROPERTY];\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode$1 = getDebugNode__POST_R3__;\n    function getAllDebugNodes() {\n        return Array.from(_nativeNodeToDebugNode.values());\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__POST_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        locale = locale || getGlobalLocale();\n        if (ivyEnabled) {\n            setLocaleId(locale);\n        }\n        return locale;\n    }\n    /**\n     * Work out the locale from the potential global properties.\n     *\n     * * Closure Compiler: use `goog.LOCALE`.\n     * * Ivy enabled: use `$localize.locale`\n     */\n    function getGlobalLocale() {\n        if (ngI18nClosureMode && typeof goog !== 'undefined' && goog.LOCALE !== 'en') {\n            // * The default `goog.LOCALE` value is `en`, while Angular used `en-US`.\n            // * In order to preserve backwards compatibility, we use Angular default value over\n            //   Closure Compiler's one.\n            return goog.LOCALE;\n        }\n        else {\n            // KEEP `typeof $localize !== 'undefined' && $localize.locale` IN SYNC WITH THE LOCALIZE\n            // COMPILE-TIME INLINER.\n            //\n            // * During compile time inlining of translations the expression will be replaced\n            //   with a string literal that is the current locale. Other forms of this expression are not\n            //   guaranteed to be replaced.\n            //\n            // * During runtime translation evaluation, the developer is required to set `$localize.locale`\n            //   if required, or just to provide their own `LOCALE_ID` provider.\n            return (ivyEnabled && typeof $localize !== 'undefined' && $localize.locale) ||\n                DEFAULT_LOCALE_ID;\n        }\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID$1,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID$1), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule.ɵmod = ɵɵdefineNgModule({ type: ApplicationModule });\n        ApplicationModule.ɵinj = ɵɵdefineInjector({ factory: function ApplicationModule_Factory(t) { return new (t || ApplicationModule)(ɵɵinject(ApplicationRef)); }, providers: APPLICATION_MODULE_PROVIDERS });\n        return ApplicationModule;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationModule, [{\n            type: NgModule,\n            args: [{ providers: APPLICATION_MODULE_PROVIDERS }]\n        }], function () { return [{ type: ApplicationRef }]; }, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        var _a;\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = [];\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = [];\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode, name);\n        }\n        else {\n            renderer.removeClass(renderNode, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, newArray(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, newArray(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = [];\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames.push(key);\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = [];\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings.push({\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = [];\n                    if (bindLen > 0)\n                        value.push(v0);\n                    if (bindLen > 1)\n                        value.push(v1);\n                    if (bindLen > 2)\n                        value.push(v2);\n                    if (bindLen > 3)\n                        value.push(v3);\n                    if (bindLen > 4)\n                        value.push(v4);\n                    if (bindLen > 5)\n                        value.push(v5);\n                    if (bindLen > 6)\n                        value.push(v6);\n                    if (bindLen > 7)\n                        value.push(v7);\n                    if (bindLen > 8)\n                        value.push(v8);\n                    if (bindLen > 9)\n                        value.push(v9);\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = [];\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode;\n        var renderer = view.renderer;\n        renderNode = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode);\n        }\n        return { renderText: renderNode };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef = overrideComponentView;\n        }\n        else {\n            viewDef = applyProviderOverridesToView(viewDef);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef, elIndex) {\n            for (var i = elIndex + 1; i < viewDef.nodes.length; i++) {\n                var nodeDef = viewDef.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            var debugNode = getDebugNode$1(node);\n            removeDebugNodeFromIndex(debugNode);\n            if (debugNode instanceof DebugNode__PRE_R3__) {\n                debugNode.listeners.length = 0;\n            }\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(newChild);\n            var debugRefEl = getDebugNode$1(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode$1(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new DebugEventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            scope: def.scope, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    if (ngDevMode) {\n        // This helper is to give a reasonable error message to people upgrading to v9 that have not yet\n        // installed `@angular/localize` in their app.\n        // tslint:disable-next-line: no-toplevel-property-access\n        _global.$localize = _global.$localize || function () {\n            throw new Error('It looks like your application or one of its dependencies is using i18n.\\n' +\n                'Angular 9 introduced a global `$localize()` function that needs to be loaded.\\n' +\n                'Please run `ng add @angular/localize` from the Angular CLI.\\n' +\n                '(For non-CLI projects, add `import \\'@angular/localize/init\\';` to your polyfills.ts file)');\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_ID = APP_ID;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.ApplicationModule = ApplicationModule;\n    exports.ApplicationRef = ApplicationRef;\n    exports.Attribute = Attribute;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.Component = Component;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ComponentRef = ComponentRef;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.DebugElement = DebugElement;\n    exports.DebugEventListener = DebugEventListener;\n    exports.DebugNode = DebugNode;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.Directive = Directive;\n    exports.ElementRef = ElementRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ErrorHandler = ErrorHandler;\n    exports.EventEmitter = EventEmitter;\n    exports.Host = Host;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.INJECTOR = INJECTOR;\n    exports.Inject = Inject;\n    exports.Injectable = Injectable;\n    exports.InjectionToken = InjectionToken;\n    exports.Injector = Injector;\n    exports.Input = Input;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.LOCALE_ID = LOCALE_ID$1;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgProbeToken = NgProbeToken;\n    exports.NgZone = NgZone;\n    exports.Optional = Optional;\n    exports.Output = Output;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.Pipe = Pipe;\n    exports.PlatformRef = PlatformRef;\n    exports.Query = Query;\n    exports.QueryList = QueryList;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.Sanitizer = Sanitizer;\n    exports.Self = Self;\n    exports.SimpleChange = SimpleChange;\n    exports.SkipSelf = SkipSelf;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.TemplateRef = TemplateRef;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.Type = Type;\n    exports.VERSION = VERSION;\n    exports.Version = Version;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.ViewRef = ViewRef$1;\n    exports.WrappedValue = WrappedValue;\n    exports.asNativeElements = asNativeElements;\n    exports.assertPlatform = assertPlatform;\n    exports.createPlatform = createPlatform;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.defineInjectable = defineInjectable;\n    exports.destroyPlatform = destroyPlatform;\n    exports.enableProdMode = enableProdMode;\n    exports.forwardRef = forwardRef;\n    exports.getDebugNode = getDebugNode$1;\n    exports.getModuleFactory = getModuleFactory;\n    exports.getPlatform = getPlatform;\n    exports.inject = inject;\n    exports.isDevMode = isDevMode;\n    exports.platformCore = platformCore;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ɵConsole = Console;\n    exports.ɵDEFAULT_LOCALE_ID = DEFAULT_LOCALE_ID;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$3;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵINJECTOR_IMPL__POST_R3__ = INJECTOR_IMPL__POST_R3__;\n    exports.ɵINJECTOR_SCOPE = INJECTOR_SCOPE;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵNG_COMP_DEF = NG_COMP_DEF;\n    exports.ɵNG_DIR_DEF = NG_DIR_DEF;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_INJ_DEF = NG_INJ_DEF;\n    exports.ɵNG_MOD_DEF = NG_MOD_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_PROV_DEF = NG_PROV_DEF;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵallowSanitizationBypassAndThrow = allowSanitizationBypassAndThrow;\n    exports.ɵand = anchorDef;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵclearResolutionOfComponentResourcesQueue = clearResolutionOfComponentResourcesQueue;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵcreateInjector = createInjector;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵdevModeEqual = devModeEqual$1;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵfindLocaleData = findLocaleData;\n    exports.ɵflushModuleScopingQueueAsMuchAsPossible = flushModuleScopingQueueAsMuchAsPossible;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵgetDirectives = getDirectives;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵgetLocalePluralCase = getLocalePluralCase;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵgetSanitizationBypassType = getSanitizationBypassType;\n    exports.ɵglobal = _global;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵisBoundToModule__POST_R3__ = isBoundToModule__POST_R3__;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵisListLikeIterable = isListLikeIterable$1;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵpid = pipeDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵqud = queryDef;\n    exports.ɵregisterLocaleData = registerLocaleData;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵregisterNgModuleType = registerNgModuleType;\n    exports.ɵrenderComponent = renderComponent$1;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵsetLocaleId = setLocaleId;\n    exports.ɵstore = store;\n    exports.ɵstringify = stringify;\n    exports.ɵted = textDef;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵunregisterLocaleData = unregisterAllLocaleData;\n    exports.ɵunv = unwrapValue;\n    exports.ɵunwrapSafeValue = unwrapSafeValue;\n    exports.ɵvid = viewDef;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵɵCopyDefinitionFeature = ɵɵCopyDefinitionFeature;\n    exports.ɵɵInheritDefinitionFeature = ɵɵInheritDefinitionFeature;\n    exports.ɵɵNgOnChangesFeature = ɵɵNgOnChangesFeature;\n    exports.ɵɵProvidersFeature = ɵɵProvidersFeature;\n    exports.ɵɵadvance = ɵɵadvance;\n    exports.ɵɵallocHostVars = ɵɵallocHostVars;\n    exports.ɵɵattribute = ɵɵattribute;\n    exports.ɵɵattributeInterpolate1 = ɵɵattributeInterpolate1;\n    exports.ɵɵattributeInterpolate2 = ɵɵattributeInterpolate2;\n    exports.ɵɵattributeInterpolate3 = ɵɵattributeInterpolate3;\n    exports.ɵɵattributeInterpolate4 = ɵɵattributeInterpolate4;\n    exports.ɵɵattributeInterpolate5 = ɵɵattributeInterpolate5;\n    exports.ɵɵattributeInterpolate6 = ɵɵattributeInterpolate6;\n    exports.ɵɵattributeInterpolate7 = ɵɵattributeInterpolate7;\n    exports.ɵɵattributeInterpolate8 = ɵɵattributeInterpolate8;\n    exports.ɵɵattributeInterpolateV = ɵɵattributeInterpolateV;\n    exports.ɵɵclassMap = ɵɵclassMap;\n    exports.ɵɵclassMapInterpolate1 = ɵɵclassMapInterpolate1;\n    exports.ɵɵclassMapInterpolate2 = ɵɵclassMapInterpolate2;\n    exports.ɵɵclassMapInterpolate3 = ɵɵclassMapInterpolate3;\n    exports.ɵɵclassMapInterpolate4 = ɵɵclassMapInterpolate4;\n    exports.ɵɵclassMapInterpolate5 = ɵɵclassMapInterpolate5;\n    exports.ɵɵclassMapInterpolate6 = ɵɵclassMapInterpolate6;\n    exports.ɵɵclassMapInterpolate7 = ɵɵclassMapInterpolate7;\n    exports.ɵɵclassMapInterpolate8 = ɵɵclassMapInterpolate8;\n    exports.ɵɵclassMapInterpolateV = ɵɵclassMapInterpolateV;\n    exports.ɵɵclassProp = ɵɵclassProp;\n    exports.ɵɵcomponentHostSyntheticListener = ɵɵcomponentHostSyntheticListener;\n    exports.ɵɵcontainer = ɵɵcontainer;\n    exports.ɵɵcontainerRefreshEnd = ɵɵcontainerRefreshEnd;\n    exports.ɵɵcontainerRefreshStart = ɵɵcontainerRefreshStart;\n    exports.ɵɵcontentQuery = ɵɵcontentQuery;\n    exports.ɵɵdefaultStyleSanitizer = ɵɵdefaultStyleSanitizer;\n    exports.ɵɵdefineComponent = ɵɵdefineComponent;\n    exports.ɵɵdefineDirective = ɵɵdefineDirective;\n    exports.ɵɵdefineInjectable = ɵɵdefineInjectable;\n    exports.ɵɵdefineInjector = ɵɵdefineInjector;\n    exports.ɵɵdefineNgModule = ɵɵdefineNgModule;\n    exports.ɵɵdefinePipe = ɵɵdefinePipe;\n    exports.ɵɵdirectiveInject = ɵɵdirectiveInject;\n    exports.ɵɵdisableBindings = ɵɵdisableBindings;\n    exports.ɵɵelement = ɵɵelement;\n    exports.ɵɵelementContainer = ɵɵelementContainer;\n    exports.ɵɵelementContainerEnd = ɵɵelementContainerEnd;\n    exports.ɵɵelementContainerStart = ɵɵelementContainerStart;\n    exports.ɵɵelementEnd = ɵɵelementEnd;\n    exports.ɵɵelementHostAttrs = ɵɵelementHostAttrs;\n    exports.ɵɵelementStart = ɵɵelementStart;\n    exports.ɵɵembeddedViewEnd = ɵɵembeddedViewEnd;\n    exports.ɵɵembeddedViewStart = ɵɵembeddedViewStart;\n    exports.ɵɵenableBindings = ɵɵenableBindings;\n    exports.ɵɵgetCurrentView = ɵɵgetCurrentView;\n    exports.ɵɵgetFactoryOf = ɵɵgetFactoryOf;\n    exports.ɵɵgetInheritedFactory = ɵɵgetInheritedFactory;\n    exports.ɵɵhostProperty = ɵɵhostProperty;\n    exports.ɵɵi18n = ɵɵi18n;\n    exports.ɵɵi18nApply = ɵɵi18nApply;\n    exports.ɵɵi18nAttributes = ɵɵi18nAttributes;\n    exports.ɵɵi18nEnd = ɵɵi18nEnd;\n    exports.ɵɵi18nExp = ɵɵi18nExp;\n    exports.ɵɵi18nPostprocess = ɵɵi18nPostprocess;\n    exports.ɵɵi18nStart = ɵɵi18nStart;\n    exports.ɵɵinject = ɵɵinject;\n    exports.ɵɵinjectAttribute = ɵɵinjectAttribute;\n    exports.ɵɵinjectPipeChangeDetectorRef = ɵɵinjectPipeChangeDetectorRef;\n    exports.ɵɵinvalidFactory = ɵɵinvalidFactory;\n    exports.ɵɵlistener = ɵɵlistener;\n    exports.ɵɵloadQuery = ɵɵloadQuery;\n    exports.ɵɵnamespaceHTML = ɵɵnamespaceHTML;\n    exports.ɵɵnamespaceMathML = ɵɵnamespaceMathML;\n    exports.ɵɵnamespaceSVG = ɵɵnamespaceSVG;\n    exports.ɵɵnextContext = ɵɵnextContext;\n    exports.ɵɵpipe = ɵɵpipe;\n    exports.ɵɵpipeBind1 = ɵɵpipeBind1;\n    exports.ɵɵpipeBind2 = ɵɵpipeBind2;\n    exports.ɵɵpipeBind3 = ɵɵpipeBind3;\n    exports.ɵɵpipeBind4 = ɵɵpipeBind4;\n    exports.ɵɵpipeBindV = ɵɵpipeBindV;\n    exports.ɵɵprojection = ɵɵprojection;\n    exports.ɵɵprojectionDef = ɵɵprojectionDef;\n    exports.ɵɵproperty = ɵɵproperty;\n    exports.ɵɵpropertyInterpolate = ɵɵpropertyInterpolate;\n    exports.ɵɵpropertyInterpolate1 = ɵɵpropertyInterpolate1;\n    exports.ɵɵpropertyInterpolate2 = ɵɵpropertyInterpolate2;\n    exports.ɵɵpropertyInterpolate3 = ɵɵpropertyInterpolate3;\n    exports.ɵɵpropertyInterpolate4 = ɵɵpropertyInterpolate4;\n    exports.ɵɵpropertyInterpolate5 = ɵɵpropertyInterpolate5;\n    exports.ɵɵpropertyInterpolate6 = ɵɵpropertyInterpolate6;\n    exports.ɵɵpropertyInterpolate7 = ɵɵpropertyInterpolate7;\n    exports.ɵɵpropertyInterpolate8 = ɵɵpropertyInterpolate8;\n    exports.ɵɵpropertyInterpolateV = ɵɵpropertyInterpolateV;\n    exports.ɵɵpureFunction0 = ɵɵpureFunction0;\n    exports.ɵɵpureFunction1 = ɵɵpureFunction1;\n    exports.ɵɵpureFunction2 = ɵɵpureFunction2;\n    exports.ɵɵpureFunction3 = ɵɵpureFunction3;\n    exports.ɵɵpureFunction4 = ɵɵpureFunction4;\n    exports.ɵɵpureFunction5 = ɵɵpureFunction5;\n    exports.ɵɵpureFunction6 = ɵɵpureFunction6;\n    exports.ɵɵpureFunction7 = ɵɵpureFunction7;\n    exports.ɵɵpureFunction8 = ɵɵpureFunction8;\n    exports.ɵɵpureFunctionV = ɵɵpureFunctionV;\n    exports.ɵɵqueryRefresh = ɵɵqueryRefresh;\n    exports.ɵɵreference = ɵɵreference;\n    exports.ɵɵresolveBody = ɵɵresolveBody;\n    exports.ɵɵresolveDocument = ɵɵresolveDocument;\n    exports.ɵɵresolveWindow = ɵɵresolveWindow;\n    exports.ɵɵrestoreView = ɵɵrestoreView;\n    exports.ɵɵsanitizeHtml = ɵɵsanitizeHtml;\n    exports.ɵɵsanitizeResourceUrl = ɵɵsanitizeResourceUrl;\n    exports.ɵɵsanitizeScript = ɵɵsanitizeScript;\n    exports.ɵɵsanitizeStyle = ɵɵsanitizeStyle;\n    exports.ɵɵsanitizeUrl = ɵɵsanitizeUrl;\n    exports.ɵɵsanitizeUrlOrResourceUrl = ɵɵsanitizeUrlOrResourceUrl;\n    exports.ɵɵselect = ɵɵselect;\n    exports.ɵɵsetComponentScope = ɵɵsetComponentScope;\n    exports.ɵɵsetNgModuleScope = ɵɵsetNgModuleScope;\n    exports.ɵɵstaticContentQuery = ɵɵstaticContentQuery;\n    exports.ɵɵstaticViewQuery = ɵɵstaticViewQuery;\n    exports.ɵɵstyleMap = ɵɵstyleMap;\n    exports.ɵɵstyleProp = ɵɵstyleProp;\n    exports.ɵɵstylePropInterpolate1 = ɵɵstylePropInterpolate1;\n    exports.ɵɵstylePropInterpolate2 = ɵɵstylePropInterpolate2;\n    exports.ɵɵstylePropInterpolate3 = ɵɵstylePropInterpolate3;\n    exports.ɵɵstylePropInterpolate4 = ɵɵstylePropInterpolate4;\n    exports.ɵɵstylePropInterpolate5 = ɵɵstylePropInterpolate5;\n    exports.ɵɵstylePropInterpolate6 = ɵɵstylePropInterpolate6;\n    exports.ɵɵstylePropInterpolate7 = ɵɵstylePropInterpolate7;\n    exports.ɵɵstylePropInterpolate8 = ɵɵstylePropInterpolate8;\n    exports.ɵɵstylePropInterpolateV = ɵɵstylePropInterpolateV;\n    exports.ɵɵstyleSanitizer = ɵɵstyleSanitizer;\n    exports.ɵɵtemplate = ɵɵtemplate;\n    exports.ɵɵtemplateRefExtractor = ɵɵtemplateRefExtractor;\n    exports.ɵɵtext = ɵɵtext;\n    exports.ɵɵtextInterpolate = ɵɵtextInterpolate;\n    exports.ɵɵtextInterpolate1 = ɵɵtextInterpolate1;\n    exports.ɵɵtextInterpolate2 = ɵɵtextInterpolate2;\n    exports.ɵɵtextInterpolate3 = ɵɵtextInterpolate3;\n    exports.ɵɵtextInterpolate4 = ɵɵtextInterpolate4;\n    exports.ɵɵtextInterpolate5 = ɵɵtextInterpolate5;\n    exports.ɵɵtextInterpolate6 = ɵɵtextInterpolate6;\n    exports.ɵɵtextInterpolate7 = ɵɵtextInterpolate7;\n    exports.ɵɵtextInterpolate8 = ɵɵtextInterpolate8;\n    exports.ɵɵtextInterpolateV = ɵɵtextInterpolateV;\n    exports.ɵɵupdateSyntheticHostBinding = ɵɵupdateSyntheticHostBinding;\n    exports.ɵɵviewQuery = ɵɵviewQuery;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}