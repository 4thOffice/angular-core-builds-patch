{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","compiler","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","getClosureSafeProperty","objWithPropertyToExtract","key","Error","fillProperties","target","source","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_INJECTABLE_DEF","ngInjectableDef","NG_INJECTOR_DEF","ngInjectorDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","__NG_ELEMENT_ID__","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","getInjectableDef","type","getInjectorDef","InjectionToken","_desc","ngMetadataName","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","defineProperty","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ÉµChangeDetectorStatus","ViewEncapsulation","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","styleUrls","unwrapResponse","response","text","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","Inject","Optional","Self","SkipSelf","Host","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","get","notFoundValue","Injector","parent","isArray","StaticInjector","NULL","inject","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","USE_VALUE","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","j","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","flags","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","forEach","v","obj","charAt","substr","context","parts","JSON","replace","_injectImplementation","_currentInjector","setCurrentInjector","injector","former","injectInjectorOnly","injectRootLimpMode","setInjectImplementation","impl","previous","injectableDef","injectArgs","types","arg","EMPTY$1","EMPTY_ARRAY","_renderCompCount","defineComponent","componentDefinition","typePrototype","declaredInputs","def","providersResolver","consts","vars","hostVars","template","hostBindings","contentQueries","contentQueriesRefresh","attributes","inputs","outputs","exportAs","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","id","styles","_","noSideEffects","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","getComponentDef","getDirectiveDef","getPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","secondary","newLookup","minifiedKey","publicName","declaredName","defineBase","baseDefinition","defineDirective","definePipe","pipeDef","pure","getNgModuleDef","MONKEY_PATCH_KEY_NAME","HEADER_OFFSET","TVIEW","FLAGS","PARENT","NEXT","QUERIES","HOST","HOST_NODE","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR$1","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","CONTENT_QUERIES","DECLARATION_VIEW","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","renderer","rendererFactory","elementDepthCount","bindingsEnabled","previousOrParentTNode","isParent","tView","currentQueries","creationMode","viewData","NodeInjectorFactory","ACTIVE_INDEX","VIEWS","NATIVE","RENDER_PARENT","TNODE","PARENT_INJECTOR","INJECTOR_SIZE","NO_PARENT_INJECTOR","FactoryPrototype","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","stringify$1","loadInternal","arr","readElementValue","getNativeByIndex","getNativeByTNode","tNode","hostView","getTNode","view","getComponentViewByIndex","nodeIndex","slotValue","isContentQueryHost","isComponent","isComponentDef","isLContainer","getRootView","lViewData","readPatchedLViewData","getRootContext","viewOrComponent","readPatchedData","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","getContext","mpValue","isComponentInstance","instance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","firstChild","directiveIndexStart","getDirectiveStartIndex","directiveIndexEnd","getDirectiveEndIndex","traverseNextElement","discoverDirectives","includeComponents","directiveStartIndex","directiveEndIndex","findViaNativeElement","existingCtx","native","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","startIndex","count","queueInitHooks","initHooks","checkHooks","queueLifecycleHooks","firstTemplatePass","start","end","queueContentHooks","queueViewHooks","queueDestroyHooks","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeInitHooks","currentView","executeHooks","allHooks","hooksToCall","callHooks","getRenderer","getRendererFactory","getCurrentSanitizer","enableBindings","disableBindings","getCurrentView","restoreView","viewToRestore","contextViewData","getPreviousOrParentTNode","setPreviousOrParentTNode","setTNodeAndViewData","getIsParent","setIsParent","getTView","getCurrentQueries","setCurrentQueries","queries","getCreationMode","getViewData","getCleanup","getTViewCleanup","cleanup","checkNoChangesMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","getFirstTemplatePass","setFirstTemplatePass","bindingRootIndex","getBindingRoot","setBindingRoot","enterView","newView","hostTNode","oldView","bindingStartIndex","resetComponentState","leaveView","creationOnly","includeViewProviders","setIncludeViewProviders","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentData","footer","diPublicInInjector","bloomAdd","bloomBit","mask","b6","b5","tData","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveViewData","previousTView","shouldSearchParent","bloomHasToken","searchTokensOnInjector","NOT_FOUND","moduleInjector","injectorView","currentTView","nodeFlags","nodeProviderIndexes","providerIndexes","tInjectables","canAccessViewProviders","node","startInjectables","startDirectives","directiveCount","providerTokenOrDef","getNodeInjectable","lData","isFactory","getPrototypeOf","previousIncludeViewProviders","previousInjectImplementation","getFactoryOf","typeAny","getInheritedFactory","throwMultipleComponentError","tagName","RendererStyleFlags3","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","getParentNative","getHostNative","getLContainer","embeddedView","containerHostIndex","getContainerRenderParent","tViewNode","container","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","rootTNode","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","lContainer","componentView","findComponentView","head","projection","insertBefore","removeChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","lView","containerIndex","views","splice","detachView","removeIndex","detached","viewToDetach","removeView","containerHost","destroyLView","getLViewChild","childIndex","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","removeListeners","removeEventListener","cleanupFn","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","destroy","getRenderParent","canInsertNativeNode","tNodeParent","getHighestElementContainer","currentNode","canInsertNativeChildOfView","viewTNode","canInsertNativeChildOfElement","nativeInsertBefore","appendChild","childEl","childTNode","parentEl","parentTNode","getBeforeNodeForView","ngContainer","containerNative","parentNative","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","nodeAttrs","attrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","NO_CHANGE","BoundPlayerFactory","CorePlayerHandler","_players","flushPlayers","player","play","queuePlayer","createEmptyStylingContext","element","sanitizer","initialStylingValues","getStylingContext","storageIndex","wrapper","isStylingContext","stylingTemplate","allocStylingContext","templateStyleContext","addPlayerInternal","playerContext","rootContext","playerContextIndex","ref","addEventListener","playerHandler","getPlayerContext","stylingContext","allocPlayerContext","EMPTY_ARR","EMPTY_OBJ","updateStyleProp","input","singleIndex","currValue","getValue","currFlag","getPointers","hasValueChanged","isClassBased_5","playerBuilder","ClassAndStylePlayerBuilder","value_1","currPlayerIndex","getPlayerBuilderIndex","playerBuildersAreDirty","hasPlayerBuilderChanged","newIndex","setPlayerBuilder","setPlayerBuilderIndex","setValue","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","valueExists","setDirty","setContextDirty","setContextPlayersDirty","setStyle","prop","store","DashCase","setProperty","removeStyle","removeProperty","setClass","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBased","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","getStyleSanitizer","setProp","builder","insertionIndex","playerBuilderIndex","getPlayerBuilder","setFlag","getProp","limitToSingleClasses","findEntryPositionByProp","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","tmpPlayerBuilderIndex","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","playerIndex","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","prepareInitialFlag","_element","_type","_values","_dirty","_factory","buildPlayer","currentPlayer","_CLEAN_PROMISE","refreshDescendantViews","setHostBindings","parentFirstTemplatePass","refreshDynamicEmbeddedViews","container_1","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","directiveDefIdx","refreshChildComponents","componentRefresh","expandoInstructions","expandoStartIndex","currentDirectiveIndex","currentElementIndex","instruction","executeInitAndContentHooks","createLViewData","createNodeAtIndex","createTNode","createViewNode","viewToRender","rf","_isParent","_previousOrParentTNode","tickRootContext","namespaceHTML","nextContext","level","nextContextImpl","walkUpViews","nestingLevel","renderComponentOrTemplate","componentOrContext","templateFn","begin","getRenderFlags","_currentNamespace","namespaceSVG","namespaceMathML","elementStart","elementEnd","elementCreate","setUpAttributes","createDirectivesAndLocals","getElementDepthCount","increaseElementDepthCount","overriddenRenderer","rendererToUse","createElement","createElementNS","localRefExtractor","getBindingsEnabled","resolveDirectives","exportsMap","","generateExpandoInstructionBlock","elementIndex","totalHostVars","initNodeFlags","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","prefillHostVars","findDirectiveMatches","registry","directiveRegistry","matches","instantiateAllDirectives","addComponentLogic","postProcessDirective","saveResolvedLocalsInData","localIndex","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","pipeRegistry","isProc","attrName","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","setRendererFactory","defaultRenderer","selectRootElement","querySelector","listener","eventName","listenerFn","useCapture","storeCleanupFn","listen","wrappedListener","wrapListenerWithPreventDefault","wrapListenerIn_preventDefault","preventDefault","returnValue","cleanupInstances","generatePropertyAliases","outputData","createOutput","subscription","subscribe","storeCleanupWithContext","unsubscribe","addNode","decreaseElementDepthCount","elementAttribute","element_1","removeAttribute","strValue","elementProperty","dataValue","inputData","initializeTNodeInputs","setInputsForProperty","markDirtyIfOnPush","tViews","tParent","initialInputs","tNodeFlags","direction","propStore","isInput","defs","directiveDef","propertyAliasMap","internalName","elementClassProp","stylingIndex","val","updateClassProp","addOrRemove","elementStyling","classDeclarations","styleDeclarations","styleSanitizer","hasClassInput","createStylingContextTemplate","initialClassDeclarations","initialStyleDeclarations","onlyProcessSingleClasses","stylesLookup","classesLookup","totalStyleDeclarations","hasPassedDeclarations","initialStaticClasses","styleProps","classNames","classNamesIndexStart","totalProps","maxLength","multiStart","isClassBased_1","indexForInitial","initialValue","indexForSingle","initialFlag","delegateToClassInput","initialClasses","elementStylingApply","renderStyleAndClassBindings","rootOrView","classesStore","stylesStore","totalPlayersQueued","isContextDirty","flushPlayerBuilders","multiStartIndex","onlySingleClasses","isClassBased_6","readInitialValue","valueToApply","playersStartIndex","playerInsertionIndex","oldPlayer","scheduleTick","elementStyleProp","styleIndex","suffix","valueToAdd","elementStylingMap","classes","classInputVal","updateStylingMap","classesInput","stylesInput","classesPlayerBuilder","stylesPlayerBuilder","classesValue","stylesValue","ignoreAllClassUpdates","ignoreAllStyleUpdates","applyAllClasses","classesPlayerBuilderIndex","stylesPlayerBuilderIndex","split","classesStartIndex","dirty","ctxIndex","propIndex","propLimit","isClassBased_2","adjustedPropIndex","newProp","newValue","indexOfEntry","valueToCompare","flagToCompare","newFlag","isClassBased_3","isClassBased_4","textNative","textBinding","element_2","textContent","directive","postProcessBaseDirective","setInputsFromAttrs","directiveIndex","initialInputData","generateInitialInputs","minifiedInputName","attrValue","numberOfDirectives","directiveFactory","nodeInjectorFactory","queueHostBindingForCheck","addToViewTree","queueComponentIndexForCheck","createLContainer","hostNative","isForViewContainerRef","containerInternal","comment","createComment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerTNode","scanForView","tContainerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","viewHost","adjustedElementIndex","viewAttached","syncViewWithBlueprint","componentTView","detectChangesInternal","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","nextNode","projectionNodeStack$1","selectorIndex","nodeToProject","projectedView","currentComponentView","firstProjectedNode","adjustedHostIndex","markViewDirty","res_1","nothingScheduled","clean","scheduler","rootComponent","detectChanges","detectChangesInRootView","hostTView","createViewQuery","updateViewQuery","bindingUpdated","interpolationV","different","content","interpolation1","prefix","v0","interpolation2","i0","v1","bindingUpdated2","interpolation3","i1","v2","bindingUpdated3","interpolation4","i2","v3","bindingUpdated4","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","getContextViewData","loadQueryList","queryListIdx","load","getBinding","bindingIndex","isDifferent","throwErrorIfNoChangesMode","msg","updateBinding","exp1","exp2","exp3","exp4","directiveInject","injectAttribute","attrNameToInject","injectAttributeImpl","registerContentQuery","queryList","savedContentQueriesLength","tViewContentQueries","CLEAN_PROMISE","R3ElementRef","R3TemplateRef","R3ViewContainerRef","NgModuleRef","NgModuleFactory","ViewRef","_view","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","_lookUpContext","enumerable","configurable","detach","callback","markForCheck","reattach","checkNoChanges","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","_super","_this","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_renderer","_queries","_injectorIndex","createEmbeddedView","container$$1","createEmbeddedViewAndNode","declarationView","viewRef","hostContainer","NodeInjector","_tNode","_hostView","loadContext","ROOT_EXPANDO_INSTRUCTIONS","createRootComponentView","rNode","createRootComponent","hostRNode","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","isComponentDef$1","definition","InheritDefinitionFeature","superType","getSuperType","_loop_1","e_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","prevViewQuery_1","superViewQuery_1","ctx","prevContentQueries_1","superContentQueries_1","prevContentQueriesRefresh_1","superContentQueriesRefresh_1","queryIndex","features_1","features_1_1","e_1_1","return","superPrototype","PRIVATE_PREFIX","NgOnChangesFeature","declaredToMinifiedInputs","proto","privateMinKey_1","originalProperty","checkProto","getOwnPropertyDescriptor","setter_1","simpleChanges","writable","currentChange","onChangesWrapper","delegateHook","ngOnChanges","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$1","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","destroyed","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","has","assertNotDestroyed","service","clear","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefFactory","hydrate","defOrWrappedDef","parents","ngModule","imported","delete","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","existing","multiRecord_1","hasOnDestroy","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","resolveProvider$1","lInjectablesBlueprint","isComponent$$1","providerFactory","beginIndex","endIndex","cptViewProvidersCount","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","factoryFn","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","item","multiResolve","result","factories","componentCount","multiProviders","ProvidersFeature","viewProviders","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","RendererStyleFlags2","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_parent","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","ngContentSelectors","projectableNodes","rootSelectorOrNode","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","SWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Renderer2","SWITCH_RENDERER2_FACTORY","SWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","getOrCreateRenderer2","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","requestAnimationFrame","setTimeout","WRAP_RENDERER_FACTORY2","ComponentFactory$$1","isInternalRootView","rootFlags","tElementNode","projection$$1","nodeList","firstTNode","previousTNode","componentRef","ComponentRef$1","ComponentRef$$1","destroyCbs","changeDetectorRef","i18nTagRegex","appendI18nNode","i18nAttribute","i18nExp","expression","i18nStart","subTemplateIndex","i18nEnd","i18nApply","instructions","localParentTNode","localPreviousTNode","elementTNode","textRNode","removedElement","removedTNode","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","ngModuleType","parentInjector","_bootstrapComponents","componentFactoryResolver","NgModuleFactory$1","NgModuleFactory$$1","moduleType","pureFunction0","slotOffset","pureFn","thisArg","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef$1","pipeInstance","pipeBind1","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","err","completeFn","sink","Subscription","Subject","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","SWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","LQueries_","shallow","deep","track","predicate","descend","read","createQuery","clone","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","isRootNodeOfQuery","removeView$1","query","containerValues","list","viewValuesIdx","getIdxOfMatchingSelector","queryRead","matchingIdx","getIdxOfMatchingDirective","queryReadByTNodeType","addMatch","directiveIdx","matchingValue","createPredicate","_valuesTree","QueryList","QueryList_","changes","filter","find","reduce","init","some","toArray","reset","flatten","notifyOnChanges","memoryIndex","getOrCreateCurrentQueries","QueryType","queryRefresh","templateRefExtractor","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","console","warn","tagSet","tags","_b","_c","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","srcset","elAttr","lower","trim","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","c","sanitizeHtml","sanitize","HTML","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","angularCoreEnv","ÉµdefineBase","ÉµdefineComponent","ÉµdefineDirective","ÉµdefineNgModule","ÉµdefinePipe","ÉµdirectiveInject","ÉµgetFactoryOf","ÉµgetInheritedFactory","ÉµinjectAttribute","ÉµtemplateRefExtractor","ÉµNgOnChangesFeature","ÉµProvidersFeature","ÉµInheritDefinitionFeature","ÉµelementAttribute","Éµbind","Éµcontainer","ÉµnextContext","ÉµcontainerRefreshStart","ÉµcontainerRefreshEnd","ÉµloadQueryList","ÉµnamespaceHTML","ÉµnamespaceMathML","ÉµnamespaceSVG","ÉµenableBindings","ÉµdisableBindings","ÉµelementStart","ÉµelementEnd","Éµelement","ÉµEC","elementContainerStart","ÉµeC","elementContainerEnd","ÉµpureFunction0","ÉµpureFunction1","ÉµpureFunction2","ÉµpureFunction3","ÉµpureFunction4","ÉµpureFunction5","ÉµpureFunction6","ÉµpureFunction7","ÉµpureFunction8","ÉµpureFunctionV","ÉµgetCurrentView","ÉµrestoreView","Éµinterpolation1","Éµinterpolation2","Éµinterpolation3","Éµinterpolation4","Éµinterpolation5","Éµinterpolation6","Éµinterpolation7","Éµinterpolation8","ÉµinterpolationV","ÉµelementClassProp","Éµlistener","Éµload","Éµprojection","ÉµelementProperty","ÉµpipeBind1","ÉµpipeBind2","ÉµpipeBind3","ÉµpipeBind4","ÉµpipeBindV","ÉµprojectionDef","Éµpipe","Éµquery","ÉµqueryRefresh","ÉµregisterContentQuery","Éµreference","ÉµelementStyling","ÉµelementStylingMap","ÉµelementStyleProp","ÉµelementStylingApply","Éµtemplate","Éµtext","ÉµtextBinding","ÉµembeddedViewStart","ÉµembeddedViewEnd","Éµi18nAttribute","Éµi18nExp","Éµi18nStart","Éµi18nEnd","Éµi18nApply","ÉµsanitizeHtml","ÉµsanitizeStyle","ÉµdefaultStyleSanitizer","ÉµsanitizeResourceUrl","ÉµsanitizeScript","sanitizeScript","unsafeScript","SCRIPT","ÉµsanitizeUrl","Type","Function","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","dep","reflectDependency","LiteralExpr","host","optional","resolved","R3ResolvedDependencyType","Token","skipSelf","setTokenAndResolvedType","WrappedNodeExpr","param","EMPTY_ARRAY$2","compileNgModule","compileNgModuleDefs","setScopeOnDeclaredComponents","flatten$1","transitiveScopes","transitiveScopesFor","declaration","patchComponentDefWithScope","ngSelectorScope","wrapReference","expandModuleWithProviders","emitInline","jitExpression","compileInjector","statements","from","compilation","dir","isNgModule","scopes","exported","declared","importedTyped","importedScope","entry","exportedTyped","exportedScope","out","isModuleWithProviders","compileComponent","metadata","maybeQueueResolutionOfComponentResources","constantPool","ConstantPool","parseTemplate","preserveWhitespaces","errors","compileComponentFromMetadata","directiveMetadata","viewQueries","wrapDirectivesInClosure","makeBindingParser","preStatements","hasSelectorScope","compileDirective","sourceMapUrl","compileDirectiveFromMetadata","extractHostBindings","parseHostBindings","listeners","properties","_loop_2","field","ann","isHostBinding","isHostListener","hostPropertyName","inputsFromMetadata","parseInputOutputs","outputsFromMetadata","inputsFromType","outputsFromType","isOutput","bindingPropertyName","typeArgumentCount","lifecycle","usesOnChanges","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","piece","compilePipe","compilePipeFromMetadata","Version","Directive","SWITCH_COMPILE_DIRECTIVE","Component","Default","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","Output","HostBinding","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","VERSION","full","major","minor","patch","isUseClassProvider","USE_VALUE$2","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","Injectable","SWITCH_COMPILE_INJECTABLE","SWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","srcMeta","hasAProvider","ctorDeps","userDeps","computeProvidedIn","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","isPromise","isObservable","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","ApplicationInitStatus_Factory","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","Math","floor","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","Console_Factory","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","Compiler_Factory","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","scope","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","taskTrackingZone","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","pop","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","Testability_Factory","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","TestabilityRegistry_Factory","_NoopGetTestability","compileNgModuleFactory","compileNgModuleFactory__POST_R3__","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","desc","marker","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","ApplicationRef","ngDoBootstrap","PlatformRef_Factory","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","componentOrFactory","componentFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","ApplicationRef_Factory","NgModuleFactoryLoader","moduleFactories","QueryList$1","_results","flatten$2","flat","flatItem","last","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","SystemJsNgModuleLoader_Factory","modulePath","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","ViewContainerRef_","_lContainer","_hostTNode","_viewRefs","getParentInjectorTNode","startTNode","parentTNode_1","templateRef","adjustedIdx","_adjustIndex","createComponent","ngModuleRef","contextInjector","insert","move","shift","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","injectChangeDetectorRef","createViewRef","componentIndex","hostComponentView","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode","nativeNode","_debugContext","DebugElement","addChild","references","providerTokens","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","MissingTranslationStrategy","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","APPLICATION_MODULE_PROVIDERS","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","locale","ApplicationModule","ApplicationModule_Factory","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","_addDebugContext","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","elDef","selectorOrNode","ns","ShadowDom","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","binding","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","_data","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyName","propertyValue","attributeValue","setBindingDebugInfo","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","attr","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","style","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","Render3DebugRendererFactory2","Render3DebugContext","_nativeNode","getInjector","getHostComponent","lDebugCtx","directivesCount","directiveIdxStart","getLocalRefs","discoverLocalRefs","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ÉµNoopNgZone","getModuleFactory","ÉµALLOW_MULTIPLE_PLATFORMS","ÉµAPP_ID_RANDOM_PROVIDER","ÉµdefaultIterableDiffers","ÉµdefaultKeyValueDiffers","ÉµdevModeEqual","ÉµisListLikeIterable","ÉµisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ÉµConsole","ÉµgetInjectableDef","Éµinject","ÉµsetCurrentInjector","ÉµAPP_ROOT","ÉµivyEnabled","ÉµComponentFactory","ÉµCodegenComponentFactoryResolver","ÉµresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ÉµReflectionCapabilities","ÉµRenderDebugInfo","Éµ_sanitizeHtml","Éµ_sanitizeStyle","Éµ_sanitizeUrl","Éµglobal","ÉµlooseIdentical","Éµstringify","ÉµmakeDecorator","ÉµisObservable","ÉµisPromise","ÉµclearOverrides","ÉµinitServicesIfNeeded","ÉµoverrideComponentView","ÉµoverrideProvider","ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ÉµdetectChanges","ÉµrenderComponent","renderComponent","ÉµRender3ComponentFactory","ÉµRender3ComponentRef","ÉµProvidersResolver","ÉµRender3NgModuleRef","ÉµmarkDirty","markDirty","ÉµNgModuleFactory","ÉµNO_CHANGE","Éµstore","ÉµwhenRendered","whenRendered","getRootContext$2","Éµi18nExpMapping","i18nExpMapping","translation","placeholders","staticText","Éµi18nInterpolation1","i18nInterpolation1","Éµi18nInterpolation2","i18nInterpolation2","Éµi18nInterpolation3","i18nInterpolation3","idx","Éµi18nInterpolation4","i18nInterpolation4","b1","Éµi18nInterpolation5","i18nInterpolation5","Éµi18nInterpolation6","i18nInterpolation6","Éµi18nInterpolation7","i18nInterpolation7","b2","Éµi18nInterpolation8","i18nInterpolation8","Éµi18nInterpolationV","i18nInterpolationV","Éµi18nMapping","i18nMapping","elements","expressions","templateRoots","lastChildIndex","translationParts","generateMappingInstructions","tmplIndex","partIndex","tmplInstructions","phVisited","openedTagCount","maxIndex","currentElements","currentExpressions","phIndex","templateRootIndex","newTmplIndex","tmplElements","phKeys","ph","tmplExpressions","ÉµWRAP_RENDERER_FACTORY2","ÉµRender3DebugRendererFactory2","ÉµcompileComponent","ÉµcompileDirective","ÉµcompileNgModule","ÉµcompileNgModuleDefs","ÉµpatchComponentDefWithScope","ÉµcompilePipe","ÉµbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ÉµbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ÉµbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ÉµbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ÉµbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ÉµgetContext","ÉµbindPlayerFactory","bindPlayerFactory","ÉµaddPlayer","addPlayer","element$$1","getOrCreatePlayerContext","getRootContext$1","getRootView$1","componentOrView","ÉµgetPlayers","getPlayers","getPlayersInternal","players","nonFactoryPlayersStart","ÉµcompileNgModuleFactory__POST_R3__","ÉµSWITCH_COMPILE_COMPONENT__POST_R3__","ÉµSWITCH_COMPILE_DIRECTIVE__POST_R3__","ÉµSWITCH_COMPILE_PIPE__POST_R3__","ÉµSWITCH_COMPILE_NGMODULE__POST_R3__","ÉµSWITCH_COMPILE_INJECTABLE__POST_R3__","ÉµSWITCH_IVY_ENABLED__POST_R3__","ÉµSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","ÉµSWITCH_ELEMENT_REF_FACTORY__POST_R3__","ÉµSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","ÉµSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","ÉµSWITCH_RENDERER2_FACTORY__POST_R3__","ÉµpublishGlobalUtil","publishGlobalUtil","ÉµregisterModuleFactory","registerModuleFactory","ÉµEMPTY_ARRAY","ÉµEMPTY_MAP","Éµand","templateFactory","Éµccf","createComponentFactory","Éµcmf","createNgModuleFactory","defFactory","Éµcrt","createRendererType2","Éµdid","outputDefs","Éµeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","name_1","_e","resolveRendererType2","isFilled","None","ÉµelementEventFullName","ÉµgetComponentViewDefinitionFactory","ÉµinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","Éµinterpolate","interpolate","constAndInterp","Éµmod","moduleDef","Éµmpd","moduleProvideDef","Éµncd","ngContentDef","Éµnov","Éµpid","Éµprd","Éµpad","pureArrayDef","argCount","Éµpod","pureObjectDef","propToIndex","nbKeys","Éµppd","purePipeDef","Éµqud","Éµted","textDef","Éµunv","unwrapValue","nodeIdx","globalBindingIdx","Éµvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v7.1.0-beta.0+8.sha-b0476f3\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('@angular/compiler'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', '@angular/compiler', 'rxjs/operators'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.ng.compiler,global.rxjs.operators));\n}(this, (function (exports,rxjs,compiler,operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @publicApi\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explictly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explictly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ÉµChangeDetectorStatus || (exports.ÉµChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        componentResourceResolutionQueue.clear();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return component.templateUrl || component.styleUrls && component.styleUrls.length;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        var fn = type;\n        if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef) {\n            return fn();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR); },\n        });\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'Éµ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = 0 /* Default */; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & 4 /* SkipSelf */)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, 0 /* Default */));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & 2 /* Self */)) {\n            value = parent.get(token, notFoundValue, 0 /* Default */);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n    * Current implementation of inject.\n    *\n    * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n    * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n    * way for two reasons:\n    *  1. `Injector` should not depend on ivy logic.\n    *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n    */\n    var _injectImplementation;\n    function inject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & 8 /* Optional */ ? null : undefined, flags);\n        }\n    }\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & 8 /* Optional */)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = 0 /* Default */;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= 8 /* Optional */;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= 4 /* SkipSelf */;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= 2 /* Self */;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n        // NOTE: Under Ivy we may have both window & global defined in the Node\n        //    environment since ensureDocument() in render3.ts sets global.window.\n        if (typeof window != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            window['ngDevMode'] = newCounters;\n        }\n        if (typeof global != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            global['ngDevMode'] = newCounters;\n        }\n        if (typeof self != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            self['ngDevMode'] = newCounters;\n        }\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY$1 = {};\n    var EMPTY_ARRAY = [];\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY$1);\n        Object.freeze(EMPTY_ARRAY);\n    }\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            hostVars: componentDefinition.hostVars || 0,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            attributes: componentDefinition.attributes || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName')\n     *   propName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   a0: 'propName1',\n     *   b1: ['publicName', 'propName2'],\n     * }\n     * ```\n     *\n     * becomes\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'publicName': 'b1'\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in:\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'propName2': 'b1'\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY$1;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[declaredName] = minifiedKey);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type) {\n        return type[NG_MODULE_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Size of LViewData's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 17;\n    // Below are constants for LViewData indices to help us look up LViewData members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var FLAGS = 1;\n    var PARENT = 2;\n    var NEXT = 3;\n    var QUERIES = 4;\n    var HOST = 5;\n    var HOST_NODE = 6;\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER = 11;\n    var SANITIZER = 12;\n    var TAIL = 13;\n    var CONTAINER_INDEX = 14;\n    var CONTENT_QUERIES = 15;\n    var DECLARATION_VIEW = 16;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    var VIEWS = 1;\n    // PARENT, NEXT, QUERIES, and HOST are indices 2, 3, 4, and 5.\n    // As we already have these constants in LViewData, we don't need to re-create them.\n    var NATIVE = 6;\n    var RENDER_PARENT = 7;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LViewData` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LViewData`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LViewData` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    var FactoryPrototype = NodeInjectorFactory.prototype;\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj != null && typeof obj == 'object' && Object.getPrototypeOf(obj) == FactoryPrototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b, checkNoChangesMode) {\n        if (ngDevMode && checkNoChangesMode) {\n            return !devModeEqual(a, b);\n        }\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n    /** Retrieves a value from any `LViewData` or `TData`. */\n    function loadInternal(index, arr) {\n        ngDevMode && assertDataInRangeInternal(index + HEADER_OFFSET, arr);\n        return arr[index + HEADER_OFFSET];\n    }\n    function assertDataInRangeInternal(index, arr) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n    /**\n     * Takes the value of a slot in `LViewData` and returns the element node.\n     *\n     * Normally, element nodes are stored flat, but if the node has styles/classes on it,\n     * it might be wrapped in a styling context. Or if that node has a directive that injects\n     * ViewContainerRef, it may be wrapped in an LContainer. Or if that node is a component,\n     * it will be wrapped in LViewData. It could even have all three, so we keep looping\n     * until we find something that isn't an array.\n     *\n     * @param value The initial value in `LViewData`\n     */\n    function readElementValue(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, arr) {\n        return readElementValue(arr[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return readElementValue(hostView[tNode.index]);\n    }\n    function getTNode(index, view) {\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LViewData or an LContainer. If LContainer, unwrap to find LViewData.\n        var slotValue = hostView[nodeIndex];\n        return slotValue.length >= HEADER_OFFSET ? slotValue : slotValue[HOST];\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 16384 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isLContainer(value) {\n        // Styling contexts are also arrays, but their first index contains an element node\n        return Array.isArray(value) && typeof value[ACTIVE_INDEX] === 'number';\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LViewData` until\n     * reaching the root `LViewData`.\n     *\n     * @param component any component\n     */\n    function getRootView(target) {\n        ngDevMode && assertDefined(target, 'component');\n        var lViewData = Array.isArray(target) ? target : readPatchedLViewData(target);\n        while (lViewData && !(lViewData[FLAGS] & 64 /* IsRoot */)) {\n            lViewData = lViewData[PARENT];\n        }\n        return lViewData;\n    }\n    function getRootContext(viewOrComponent) {\n        return getRootView(viewOrComponent)[CONTEXT];\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLViewData(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lViewData;\n        }\n        return null;\n    }\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 15 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LViewData instance from which to start walking up the view tree\n     * @returns The LViewData instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LViewData instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        var parentTNode = startView[HOST_NODE];\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[HOST_NODE];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LViewData` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     */\n    function getContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LViewData instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lViewData = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lViewData, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lViewData, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = discoverDirectives(nodeIndex, lViewData, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lViewData, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, compontent or\n                // directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = readElementValue(lViewData[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lViewData, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomElement(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lViewData = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lViewData = parentContext;\n                    }\n                    else {\n                        lViewData = parentContext.lViewData;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lViewData) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lViewData, rElement);\n                    if (index >= 0) {\n                        var native = readElementValue(lViewData[index]);\n                        var context = createLContext(lViewData, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lViewData, nodeIndex, native) {\n        return {\n            lViewData: lViewData,\n            nodeIndex: nodeIndex, native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lViewData = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lViewData)) {\n            var nodeIndex = findViaComponent(lViewData, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lViewData);\n            var context = createLContext(lViewData, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lViewData;\n            view = getComponentViewByIndex(context.nodeIndex, context.lViewData);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LViewData and returns the matching index\n     */\n    function findViaNativeElement(lViewData, target) {\n        var tNode = lViewData[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lViewData);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else if (tNode.parent) {\n            return tNode.parent.next || null;\n        }\n        return null;\n    }\n    /**\n     * Locates the component within the given LViewData and returns the matching index\n     */\n    function findViaComponent(lViewData, componentInstance) {\n        var componentIndices = lViewData[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lViewData);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lViewData);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LViewData and returns the matching index\n     */\n    function findViaDirective(lViewData, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LViewData of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lViewData[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = getDirectiveStartIndex(tNode);\n            var directiveIndexEnd = getDirectiveEndIndex(tNode, directiveIndexStart);\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lViewData[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    function assertDomElement(element) {\n        assertEqual(element.nodeType, 1, 'The provided value must be an instance of an HTMLElement');\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lViewData The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function discoverDirectives(nodeIndex, lViewData, includeComponents) {\n        var tNode = lViewData[TVIEW].data[nodeIndex];\n        var directiveStartIndex = getDirectiveStartIndex(tNode);\n        var directiveEndIndex = getDirectiveEndIndex(tNode, directiveStartIndex);\n        if (!includeComponents && tNode.flags & 4096 /* isComponent */)\n            directiveStartIndex++;\n        return lViewData.slice(directiveStartIndex, directiveEndIndex);\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lViewData, nodeIndex) {\n        var tNode = lViewData[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                var localRefName = tNode.localNames[i];\n                var directiveIndex = tNode.localNames[i + 1];\n                result[localRefName] =\n                    directiveIndex === -1 ? getNativeByTNode(tNode, lViewData) : lViewData[directiveIndex];\n            }\n            return result;\n        }\n        return null;\n    }\n    function getDirectiveStartIndex(tNode) {\n        // the tNode instances store a flag value which then has a\n        // pointer which tells the starting index of where all the\n        // active directives are in the master directive array\n        return tNode.flags >> 16 /* DirectiveStartingIndexShift */;\n    }\n    function getDirectiveEndIndex(tNode, startIndex) {\n        // The end value is also a part of the same flag\n        // (see `TNodeFlags` to see how the flag bit shifting\n        // values are used).\n        var count = tNode.flags & 4095 /* DirectiveCountMask */;\n        return count ? (startIndex + count) : -1;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LViewData\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(flags, tView) {\n        if (tView.firstTemplatePass) {\n            var start = flags >> 16 /* DirectiveStartingIndexShift */;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var end = start + count;\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, creationMode) {\n        if (currentView[FLAGS] & 16 /* RunInit */) {\n            executeHooks(currentView, tView.initHooks, tView.checkHooks, creationMode);\n            currentView[FLAGS] &= ~16 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(data, allHooks, checkHooks, creationMode) {\n        var hooksToCall = creationMode ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(data, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * creation mode.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(currentView, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(currentView[arr[i]]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property gets set before entering a template.\n     *\n     * This renderer can be one of two varieties of Renderer3:\n     *\n     * - ObjectedOrientedRenderer3\n     *\n     * This is the native browser API style, e.g. operations are methods on individual objects\n     * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n     * size).\n     *\n     * - ProceduralRenderer3\n     *\n     * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n     * that enables element manipulation. This also facilitates backwards compatibility with\n     * Renderer2.\n     */\n    var renderer;\n    function getRenderer() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return renderer;\n    }\n    var rendererFactory;\n    function getRendererFactory() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return rendererFactory;\n    }\n    function setRendererFactory(factory) {\n        rendererFactory = factory;\n    }\n    function getCurrentSanitizer() {\n        return viewData && viewData[SANITIZER];\n    }\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LViewData` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function enableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function disableBindings() {\n        bindingsEnabled = false;\n    }\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return viewData;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextViewData = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode) {\n        previousOrParentTNode = tNode;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        previousOrParentTNode = tNode;\n        viewData = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsParent(value) {\n        isParent = value;\n    }\n    var tView;\n    function getTView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return tView;\n    }\n    var currentQueries;\n    function getCurrentQueries() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueries;\n    }\n    function setCurrentQueries(queries) {\n        currentQueries = queries;\n    }\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (i.e. this previousOrParentTNode points to a node on which we\n     * create content queries).\n     */\n    function getOrCreateCurrentQueries(QueryType) {\n        // if this is the first content query on a node, any existing LQueries needs to be cloned\n        // in subsequent template passes, the cloning occurs before directive instantiation.\n        if (previousOrParentTNode && previousOrParentTNode !== viewData[HOST_NODE] &&\n            !isContentQueryHost(previousOrParentTNode)) {\n            currentQueries && (currentQueries = currentQueries.clone());\n            previousOrParentTNode.flags |= 16384 /* hasContentQuery */;\n        }\n        return currentQueries || (currentQueries = new QueryType(null, null, null));\n    }\n    /**\n     * This property gets set before entering a template.\n     */\n    var creationMode;\n    function getCreationMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return creationMode;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var viewData;\n    /**\n     * Internal function that returns the current LViewData instance.\n     *\n     * The getCurrentView() instruction should be used for anything public.\n     */\n    function getViewData() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return viewData;\n    }\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextViewData = null;\n    function getContextViewData() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextViewData;\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    function getFirstTemplatePass() {\n        return firstTemplatePass;\n    }\n    function setFirstTemplatePass(value) {\n        firstTemplatePass = value;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        var oldView = viewData;\n        tView = newView && newView[TVIEW];\n        creationMode = newView && (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n        firstTemplatePass = newView && tView.firstTemplatePass;\n        bindingRootIndex = newView && tView.bindingStartIndex;\n        renderer = newView && newView[RENDERER];\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        viewData = contextViewData = newView;\n        oldView && (oldView[QUERIES] = currentQueries);\n        currentQueries = newView && newView[QUERIES];\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextViewData = walkUpViews(level, contextViewData);\n        return contextViewData[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n     * only, i.e. the first update will be done later. Only possible for dynamically created views.\n     */\n    function leaveView(newView, creationOnly) {\n        if (!creationOnly) {\n            if (!checkNoChangesMode) {\n                executeHooks(viewData, tView.viewHooks, tView.viewCheckHooks, creationMode);\n            }\n            // Views are clean and in update mode after being checked, so these bits are cleared\n            viewData[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n        }\n        viewData[FLAGS] |= 16 /* RunInit */;\n        viewData[BINDING_INDEX] = tView.bindingStartIndex;\n        enterView(newView, null);\n    }\n    function assertPreviousIsParent() {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent() {\n        assertDefined(previousOrParentTNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataInRange(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertDataInRangeInternal(index, arr || viewData);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = false;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = type[NG_ELEMENT_ID];\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 4096 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // view offset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[HOST_NODE];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view[HOST_NODE];\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 15 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, token) {\n        bloomAdd(injectorIndex, view[TVIEW], token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 1 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * @param nodeInjector Node injector where the search should start\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @returns the value from the injector or `null` when not found\n     */\n    function getOrCreateInjectable(tNode, lViewData, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var bloomHash = bloomHashBitOrFactory(token);\n        // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n        // so just call the factory function to create it.\n        if (typeof bloomHash === 'function') {\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveViewData = getViewData();\n            setTNodeAndViewData(tNode, lViewData);\n            try {\n                return bloomHash();\n            }\n            finally {\n                setTNodeAndViewData(savePreviousOrParentTNode, saveViewData);\n            }\n        }\n        else if (typeof bloomHash == 'number') {\n            // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n            // A reference to the previous injector TView that was found while climbing the element injector\n            // tree. This is used to know if viewProviders can be accessed on the current injector.\n            var previousTView = null;\n            var injectorIndex = getInjectorIndex(tNode, lViewData);\n            var parentLocation = NO_PARENT_INJECTOR;\n            // If we should skip this injector, start by searching the parent injector.\n            if (flags & 4 /* SkipSelf */) {\n                parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lViewData) :\n                    lViewData[injectorIndex + PARENT_INJECTOR];\n                if (!shouldSearchParent(flags, parentLocation)) {\n                    injectorIndex = -1;\n                }\n                else {\n                    previousTView = lViewData[TVIEW];\n                    injectorIndex = getParentInjectorIndex(parentLocation);\n                    lViewData = getParentInjectorView(parentLocation, lViewData);\n                }\n            }\n            // Traverse up the injector tree until we find a potential match or until we know there\n            // *isn't* a match.\n            while (injectorIndex !== -1) {\n                parentLocation = lViewData[injectorIndex + PARENT_INJECTOR];\n                // Check the current injector. If it matches, see if it contains token.\n                var tView = lViewData[TVIEW];\n                if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                    // At this point, we have an injector which *may* contain the token, so we step through\n                    // the providers and directives associated with the injector's corresponding node to get\n                    // the instance.\n                    var instance = searchTokensOnInjector(injectorIndex, lViewData, token, previousTView);\n                    if (instance !== NOT_FOUND) {\n                        return instance;\n                    }\n                }\n                if (shouldSearchParent(flags, parentLocation) &&\n                    bloomHasToken(bloomHash, injectorIndex, lViewData)) {\n                    // The def wasn't found anywhere on this node, so it was a false positive.\n                    // Traverse up the tree and continue searching.\n                    previousTView = tView;\n                    injectorIndex = getParentInjectorIndex(parentLocation);\n                    lViewData = getParentInjectorView(parentLocation, lViewData);\n                }\n                else {\n                    // If we should not search parent OR If the ancestor bloom filter value does not have the\n                    // bit corresponding to the directive we can give up on traversing up to find the specific\n                    // injector.\n                    injectorIndex = -1;\n                }\n            }\n        }\n        if ((flags & (2 /* Self */ | 1 /* Host */)) === 0) {\n            var moduleInjector = lViewData[INJECTOR$1];\n            if (moduleInjector) {\n                return moduleInjector.get(token, notFoundValue, flags & 8 /* Optional */);\n            }\n            else {\n                return injectRootLimpMode(token, notFoundValue, flags & 8 /* Optional */);\n            }\n        }\n        if (flags & 8 /* Optional */) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringify$1(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, injectorView, token, previousTView) {\n        var currentTView = injectorView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        var nodeFlags = tNode.flags;\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = currentTView.data;\n        // First, we step through providers\n        var canAccessViewProviders = false;\n        // We need to determine if view providers can be accessed by the starting element.\n        // It happens in 2 cases:\n        // 1) On the initial element injector , if we are instantiating a token which can see the\n        // viewProviders of the component of that element. Such token are:\n        // - the component itself (but not other directives)\n        // - viewProviders tokens of the component (but not providers tokens)\n        // 2) Upper in the element injector tree, if the starting element is actually in the view of\n        // the current element. To determine this, we track the transition of view during the climb,\n        // and check the host node of the current view to identify component views.\n        if (previousTView == null && isComponent(tNode) && includeViewProviders ||\n            previousTView != null && previousTView != currentTView &&\n                (currentTView.node == null || currentTView.node.type === 3 /* Element */)) {\n            canAccessViewProviders = true;\n        }\n        var startInjectables = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var startDirectives = nodeFlags >> 16 /* DirectiveStartingIndexShift */;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? startInjectables : startInjectables + cptViewProvidersCount;\n        var directiveCount = nodeFlags & 4095 /* DirectiveCountMask */;\n        for (var i = startingIndex; i < startDirectives + directiveCount; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < startDirectives && token === providerTokenOrDef ||\n                i >= startDirectives && providerTokenOrDef.type === token) {\n                return getNodeInjectable(tInjectables, injectorView, i, tNode);\n            }\n        }\n        return NOT_FOUND;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringify$1(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveViewData = getViewData();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(null, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveViewData);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     */\n    function bloomHashBitOrFactory(token) {\n        var tokenId = token[NG_ELEMENT_ID];\n        return typeof tokenId === 'number' ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, parentLocation) {\n        return !(flags & 2 /* Self */ ||\n            (flags & 1 /* Host */ && getParentInjectorViewOffset(parentLocation) > 0));\n    }\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, oldValue, currValue) {\n        if (checkNoChangesMode) {\n            var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n            if (creationMode) {\n                msg +=\n                    \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                        \" Has it been created in a change detection hook ?\";\n            }\n            // TODO: include debug context\n            throw new Error(msg);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Retrieves the parent element of a given node. */\n    function getParentNative(tNode, currentView) {\n        return tNode.parent == null ? getHostNative(currentView) :\n            getNativeByTNode(tNode.parent, currentView);\n    }\n    /**\n     * Gets the host element given a view. Will return null if the current view is an embedded view,\n     * which does not have a host element.\n     */\n    function getHostNative(currentView) {\n        var hostTNode = currentView[HOST_NODE];\n        return hostTNode && hostTNode.type !== 2 /* View */ ?\n            getNativeByTNode(hostTNode, currentView[PARENT]) :\n            null;\n    }\n    function getLContainer(tNode, embeddedView) {\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = embeddedView[CONTAINER_INDEX];\n            return containerHostIndex > -1 ? embeddedView[PARENT][containerHostIndex] : null;\n        }\n        else {\n            // This is a inline view node (e.g. embeddedViewStart)\n            return embeddedView[PARENT][tNode.parent.index];\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? container[RENDER_PARENT] : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], beforeNode);\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], beforeNode);\n                if (renderParent)\n                    lContainer[RENDER_PARENT] = renderParent;\n                if (lContainer[VIEWS].length) {\n                    currentView = lContainer[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[HOST_NODE];\n                var head = componentHost.projection[tNode.projection];\n                // Must store both the TNode and the view because this projection node could be nested\n                // deeply inside embedded views, and we need to get back down to this particular nested view.\n                projectionNodeStack[++projectionNodeIndex] = tNode;\n                projectionNodeStack[++projectionNodeIndex] = currentView;\n                if (head) {\n                    currentView = componentView[PARENT];\n                    nextTNode = currentView[TVIEW].data[head.index];\n                }\n            }\n            else {\n                // Otherwise, this is a View or an ElementContainer\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.next === null && (tNode.flags & 8192 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                nextTNode = tNode.next;\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[TVIEW].node;\n                    if (tNode === null || tNode === rootTNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = currentView[PARENT];\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */ && currentView[NEXT]) {\n                        currentView = currentView[NEXT];\n                        nextTNode = currentView[TVIEW].node;\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lViewData LViewData for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lViewData) {\n        var rootTNode = lViewData[HOST_NODE];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lViewData[PARENT], 'viewData.parent');\n            lViewData = lViewData[PARENT];\n            rootTNode = lViewData[HOST_NODE];\n        }\n        return lViewData;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            isProceduralRenderer(renderer) ?\n                renderer.insertBefore(parent, node, beforeNode) :\n                parent.insertBefore(node, beforeNode, true);\n        }\n        else if (action === 1 /* Detach */) {\n            isProceduralRenderer(renderer) ?\n                renderer.removeChild(parent, node) :\n                parent.removeChild(node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LViewData, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LViewData.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0];\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param parentView The new parent of the inserted view\n     * @param index The index at which to insert the view\n     * @param containerIndex The index of the container node, if dynamic\n     */\n    function insertView(lView, lContainer, parentView, index, containerIndex) {\n        var views = lContainer[VIEWS];\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container's host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (containerIndex > -1) {\n            lView[CONTAINER_INDEX] = containerIndex;\n            lView[PARENT] = parentView;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 8 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @param detached Whether or not this view is already detached.\n     */\n    function detachView(lContainer, removeIndex, detached) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!detached) {\n            addRemoveViewFromContainer(viewToDetach, false);\n        }\n        if (viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[CONTAINER_INDEX] = -1;\n        viewToDetach[PARENT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~8 /* Attached */;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param tContainer The TContainer node associated with the LContainer\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, containerHost, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        detachView(lContainer, removeIndex, !!containerHost.detached);\n        destroyLView(view);\n    }\n    /** Gets the child of the given LViewData */\n    function getLViewChild(viewData) {\n        var childIndex = viewData[TVIEW].childIndex;\n        return childIndex === -1 ? null : viewData[childIndex];\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 32 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var tNode;\n        if (state.length >= HEADER_OFFSET && (tNode = state[HOST_NODE]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, state);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Removes all listeners and call all onDestroys in a given view.\n     *\n     * @param view The LViewData to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer.length >= HEADER_OFFSET) {\n            var view = viewOrContainer;\n            removeListeners(view);\n            executeOnDestroys(view);\n            executePipeOnDestroys(view);\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(viewData) {\n        var cleanup = viewData[TVIEW].cleanup;\n        if (cleanup != null) {\n            for (var i = 0; i < cleanup.length - 1; i += 2) {\n                if (typeof cleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var native = readElementValue(viewData[cleanup[i + 1]]);\n                    var listener = viewData[CLEANUP][cleanup[i + 2]];\n                    native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n                    i += 2;\n                }\n                else if (typeof cleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = viewData[CLEANUP][cleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = viewData[CLEANUP][cleanup[i + 1]];\n                    cleanup[i].call(context);\n                }\n            }\n            viewData[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view, destroyHooks);\n        }\n    }\n    /** Calls pipe destroy hooks for this view */\n    function executePipeOnDestroys(viewData) {\n        var pipeDestroyHooks = viewData[TVIEW] && viewData[TVIEW].pipeDestroyHooks;\n        if (pipeDestroyHooks) {\n            callHooks(viewData, pipeDestroyHooks);\n        }\n    }\n    function getRenderParent(tNode, currentView) {\n        if (canInsertNativeNode(tNode, currentView)) {\n            var hostTNode = currentView[HOST_NODE];\n            var tNodeParent = tNode.parent;\n            if (tNodeParent != null && tNodeParent.type === 4 /* ElementContainer */) {\n                tNode = getHighestElementContainer(tNodeParent);\n            }\n            return tNode.parent == null && hostTNode.type === 2 /* View */ ?\n                getContainerRenderParent(hostTNode, currentView) :\n                getParentNative(tNode, currentView);\n        }\n        return null;\n    }\n    function canInsertNativeChildOfElement(tNode) {\n        // If the parent is null, then we are inserting across views. This happens when we\n        // insert a root element of the component view into the component host element and it\n        // should always be eager.\n        if (tNode.parent == null ||\n            // We should also eagerly insert if the parent is a regular, non-component element\n            // since we know that this relationship will never be broken.\n            tNode.parent.type === 3 /* Element */ && !(tNode.parent.flags & 4096 /* isComponent */)) {\n            return true;\n        }\n        // Parent is a Component. Component's content nodes are not inserted immediately\n        // because they will be projected, and so doing insert at this point would be wasteful.\n        // Since the projection would than move it to its final destination.\n        return false;\n    }\n    /**\n     * We might delay insertion of children for a given view if it is disconnected.\n     * This might happen for 2 main reasons:\n     * - view is not inserted into any container (view was created but not inserted yet)\n     * - view is inserted into a container but the container itself is not inserted into the DOM\n     * (container might be part of projection or child of a view that is not inserted yet).\n     *\n     * In other words we can insert children of a given view if this view was inserted into a container\n     * and\n     * the container itself has its render parent determined.\n     */\n    function canInsertNativeChildOfView(viewTNode, view) {\n        // Because we are inserting into a `View` the `View` may be disconnected.\n        var container = getLContainer(viewTNode, view);\n        if (container == null || container[RENDER_PARENT] == null) {\n            // The `View` is not inserted into a `Container` or the parent `Container`\n            // itself is disconnected. So we have to delay.\n            return false;\n        }\n        // The parent `Container` is in inserted state, so we can eagerly insert into\n        // this location.\n        return true;\n    }\n    /**\n     * Returns whether a native element can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     *\n\n     *\n     * @param parent The parent where the child will be inserted into.\n     * @param currentView Current LView being processed.\n     * @return boolean Whether the child should be inserted now (or delayed until later).\n     */\n    function canInsertNativeNode(tNode, currentView) {\n        var currentNode = tNode;\n        var parent = tNode.parent;\n        if (tNode.parent && tNode.parent.type === 4 /* ElementContainer */) {\n            currentNode = getHighestElementContainer(tNode);\n            parent = currentNode.parent;\n        }\n        if (parent === null)\n            parent = currentView[HOST_NODE];\n        if (parent && parent.type === 2 /* View */) {\n            return canInsertNativeChildOfView(parent, currentView);\n        }\n        else {\n            // Parent is a regular element or a component\n            return canInsertNativeChildOfElement(currentNode);\n        }\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The child that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var renderer = currentView[RENDERER];\n            var parentEl = getParentNative(childTNode, currentView);\n            var parentTNode = childTNode.parent || currentView[HOST_NODE];\n            if (parentTNode.type === 2 /* View */) {\n                var lContainer = getLContainer(parentTNode, currentView);\n                var views = lContainer[VIEWS];\n                var index = views.indexOf(currentView);\n                nativeInsertBefore(renderer, lContainer[RENDER_PARENT], childEl, getBeforeNodeForView(index, views, lContainer[NATIVE]));\n            }\n            else if (parentTNode.type === 4 /* ElementContainer */) {\n                var renderParent = getRenderParent(childTNode, currentView);\n                nativeInsertBefore(renderer, renderParent, childEl, parentEl);\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.appendChild(parentEl, childEl) :\n                    parentEl.appendChild(childEl);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Gets the top-level ng-container if ng-containers are nested.\n     *\n     * @param ngContainer The TNode of the starting ng-container\n     * @returns tNode The TNode of the highest level ng-container\n     */\n    function getHighestElementContainer(ngContainer) {\n        while (ngContainer.parent != null && ngContainer.parent.type === 4 /* ElementContainer */) {\n            ngContainer = ngContainer.parent;\n        }\n        return ngContainer;\n    }\n    function getBeforeNodeForView(index, views, containerNative) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[HOST_NODE];\n            return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes the `child` element from the DOM if not in view and not projected.\n     *\n     * @param childTNode The TNode of the child to remove\n     * @param childEl The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(childTNode, childEl, currentView) {\n        // We only remove the element if not in View or not projected.\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var parentNative = getParentNative(childTNode, currentView);\n            var renderer = currentView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.removeChild(parentNative, childEl) :\n                parentNative.removeChild(childEl);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var renderParent = getRenderParent(tProjectionNode, currentView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            nodeOrContainer[RENDER_PARENT] = renderParent;\n            var views = nodeOrContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                nodeOrContainer[RENDER_PARENT] = renderParent;\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && current !== tNode.tagName) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 1 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector) {\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /**\n     * Combines the binding value and a factory for an animation player.\n     *\n     * Used to bind a player to an element template binding (currently only\n     * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n     * supported). The provided `factoryFn` function will be run once all\n     * the associated bindings have been evaluated on the element and is\n     * designed to return a player which will then be placed on the element.\n     *\n     * @param factoryFn The function that is used to create a player\n     *   once all the rendering-related (styling values) have been\n     *   processed for the element binding.\n     * @param value The raw value that will be exposed to the binding\n     *   so that the binding can update its internal values when\n     *   any changes are evaluated.\n     */\n    function bindPlayerFactory(factoryFn, value) {\n        return new BoundPlayerFactory(factoryFn, value);\n    }\n    var BoundPlayerFactory = /** @class */ (function () {\n        function BoundPlayerFactory(fn, value) {\n            this.fn = fn;\n            this.value = value;\n        }\n        return BoundPlayerFactory;\n    }());\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent && player.state === 0 /* Pending */) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function createEmptyStylingContext(element, sanitizer, initialStylingValues) {\n        return [\n            null,\n            sanitizer || null,\n            initialStylingValues || [null],\n            0,\n            0,\n            element || null,\n            null,\n            null // PreviousMultiStyleValue\n        ];\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[5 /* ElementPosition */] = element;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContext(index, viewData) {\n        var storageIndex = index + HEADER_OFFSET;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LViewData or an LContainer\n            var stylingTemplate = getTNode(index, viewData).stylingTemplate;\n            if (wrapper !== viewData) {\n                storageIndex = HOST;\n            }\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isStylingContext(value) {\n        // Not an LViewData or an LContainer\n        return typeof value[FLAGS] !== 'number' && typeof value[ACTIVE_INDEX] !== 'number';\n    }\n    function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n        ref = ref || element;\n        if (playerContextIndex) {\n            playerContext[playerContextIndex] = player;\n        }\n        else {\n            playerContext.push(player);\n        }\n        if (player) {\n            player.addEventListener(200 /* Destroyed */, function () {\n                var index = playerContext.indexOf(player);\n                var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                // if the player is being removed from the factory side of the context\n                // (which is where the [style] and [class] bindings do their thing) then\n                // that side of the array cannot be resized since the respective bindings\n                // have pointer index values that point to the associated factory instance\n                if (index) {\n                    if (index < nonFactoryPlayerIndex) {\n                        playerContext[index] = null;\n                    }\n                    else {\n                        playerContext.splice(index, 1);\n                    }\n                }\n                player.destroy();\n            });\n            var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n            playerHandler.queuePlayer(player, ref);\n            return true;\n        }\n        return false;\n    }\n    function getPlayersInternal(playerContext) {\n        var players = [];\n        var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n        // add all factory-based players (which are apart of [style] and [class] bindings)\n        for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n            var player = playerContext[i];\n            if (player) {\n                players.push(player);\n            }\n        }\n        // add all custom players (not apart of [style] and [class] bindings)\n        for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n            players.push(playerContext[i]);\n        }\n        return players;\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getContext(target);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return null;\n        }\n        var lViewData = context.lViewData, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContext(nodeIndex - HEADER_OFFSET, lViewData);\n        return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n    }\n    function getPlayerContext(stylingContext) {\n        return stylingContext[0 /* PlayerContext */];\n    }\n    function allocPlayerContext(data) {\n        return data[0 /* PlayerContext */] =\n            [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n    }\n    function throwInvalidRefError() {\n        throw new Error('Only elements that exist in an Angular application can be used for animations');\n    }\n\n    var EMPTY_ARR = [];\n    var EMPTY_OBJ = {};\n    /**\n     * Creates a styling context template where styling information is stored.\n     * Any styles that are later referenced using `updateStyleProp` must be\n     * passed in within this function. Initial values for those styles are to\n     * be declared after all initial style properties are declared (this change in\n     * mode between declarations and initial styles is made possible using a special\n     * enum value found in `definition.ts`).\n     *\n     * @param initialStyleDeclarations a list of style declarations and initial style values\n     *    that are used later within the styling context.\n     *\n     *    -> ['width', 'height', SPECIAL_ENUM_VAL, 'width', '100px']\n     *       This implies that `width` and `height` will be later styled and that the `width`\n     *       property has an initial value of `100px`.\n     *\n     * @param initialClassDeclarations a list of class declarations and initial class values\n     *    that are used later within the styling context.\n     *\n     *    -> ['foo', 'bar', SPECIAL_ENUM_VAL, 'foo', true]\n     *       This implies that `foo` and `bar` will be later styled and that the `foo`\n     *       class will be applied to the element as an initial class since it's true\n     */\n    function createStylingContextTemplate(initialClassDeclarations, initialStyleDeclarations, styleSanitizer, onlyProcessSingleClasses) {\n        var initialStylingValues = [null];\n        var context = createEmptyStylingContext(null, styleSanitizer, initialStylingValues);\n        // we use two maps since a class name might collide with a CSS style prop\n        var stylesLookup = {};\n        var classesLookup = {};\n        var totalStyleDeclarations = 0;\n        if (initialStyleDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialStyleDeclarations.length; i++) {\n                var v = initialStyleDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var prop = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialStyleDeclarations[++i];\n                        initialStylingValues.push(value);\n                        stylesLookup[prop] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        totalStyleDeclarations++;\n                        stylesLookup[prop] = 0;\n                    }\n                }\n            }\n        }\n        // make where the class offsets begin\n        context[4 /* ClassOffsetPosition */] = totalStyleDeclarations;\n        var initialStaticClasses = onlyProcessSingleClasses ? [] : null;\n        if (initialClassDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialClassDeclarations.length; i++) {\n                var v = initialClassDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var className = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialClassDeclarations[++i];\n                        initialStylingValues.push(value);\n                        classesLookup[className] = initialStylingValues.length - 1;\n                        initialStaticClasses && initialStaticClasses.push(className);\n                    }\n                    else {\n                        classesLookup[className] = 0;\n                    }\n                }\n            }\n        }\n        var styleProps = Object.keys(stylesLookup);\n        var classNames = Object.keys(classesLookup);\n        var classNamesIndexStart = styleProps.length;\n        var totalProps = styleProps.length + classNames.length;\n        // *2 because we are filling for both single and multi style spaces\n        var maxLength = totalProps * 4 /* Size */ * 2 + 8 /* SingleStylesStartPosition */;\n        // we need to fill the array from the start so that we can access\n        // both the multi and the single array positions in the same loop block\n        for (var i = 8 /* SingleStylesStartPosition */; i < maxLength; i++) {\n            context.push(null);\n        }\n        var singleStart = 8 /* SingleStylesStartPosition */;\n        var multiStart = totalProps * 4 /* Size */ + 8 /* SingleStylesStartPosition */;\n        // fill single and multi-level styles\n        for (var i = 0; i < totalProps; i++) {\n            var isClassBased_1 = i >= classNamesIndexStart;\n            var prop = isClassBased_1 ? classNames[i - classNamesIndexStart] : styleProps[i];\n            var indexForInitial = isClassBased_1 ? classesLookup[prop] : stylesLookup[prop];\n            var initialValue = initialStylingValues[indexForInitial];\n            var indexForMulti = i * 4 /* Size */ + multiStart;\n            var indexForSingle = i * 4 /* Size */ + singleStart;\n            var initialFlag = prepareInitialFlag(prop, isClassBased_1, styleSanitizer || null);\n            setFlag(context, indexForSingle, pointers(initialFlag, indexForInitial, indexForMulti));\n            setProp(context, indexForSingle, prop);\n            setValue(context, indexForSingle, null);\n            setPlayerBuilderIndex(context, indexForSingle, 0);\n            var flagForMulti = initialFlag | (initialValue !== null ? 1 /* Dirty */ : 0 /* None */);\n            setFlag(context, indexForMulti, pointers(flagForMulti, indexForInitial, indexForSingle));\n            setProp(context, indexForMulti, prop);\n            setValue(context, indexForMulti, null);\n            setPlayerBuilderIndex(context, indexForMulti, 0);\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        var masterFlag = pointers(0, 0, multiStart) |\n            (onlyProcessSingleClasses ? 16 /* OnlyProcessSingleClasses */ : 0);\n        setFlag(context, 3 /* MasterFlagPosition */, masterFlag);\n        setContextDirty(context, initialStylingValues.length > 1);\n        if (initialStaticClasses) {\n            context[6 /* PreviousOrCachedMultiClassValue */] = initialStaticClasses.join(' ');\n        }\n        return context;\n    }\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyleAndClassBindings` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classesInput The key/value map of CSS class names that will be used for the update.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classesInput, stylesInput) {\n        stylesInput = stylesInput || null;\n        var element = context[5 /* ElementPosition */];\n        var classesPlayerBuilder = classesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(classesInput, element, 2 /* Class */) :\n            null;\n        var stylesPlayerBuilder = stylesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(stylesInput, element, 3 /* Style */) :\n            null;\n        var classesValue = classesPlayerBuilder ?\n            classesInput.value :\n            classesInput;\n        var stylesValue = stylesPlayerBuilder ? stylesInput.value : stylesInput;\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        var ignoreAllClassUpdates = limitToSingleClasses(context) || classesValue === NO_CHANGE ||\n            classesValue === context[6 /* PreviousOrCachedMultiClassValue */];\n        var ignoreAllStyleUpdates = stylesValue === NO_CHANGE || stylesValue === context[7 /* PreviousMultiStyleValue */];\n        if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n            return;\n        context[6 /* PreviousOrCachedMultiClassValue */] = classesValue;\n        context[7 /* PreviousMultiStyleValue */] = stylesValue;\n        var classNames = EMPTY_ARR;\n        var applyAllClasses = false;\n        var playerBuildersAreDirty = false;\n        var classesPlayerBuilderIndex = classesPlayerBuilder ? 1 /* ClassMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        var stylesPlayerBuilderIndex = stylesPlayerBuilder ? 3 /* StyleMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (!ignoreAllClassUpdates) {\n            if (typeof classesValue == 'string') {\n                classNames = classesValue.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n            else {\n                classNames = classesValue ? Object.keys(classesValue) : EMPTY_ARR;\n            }\n        }\n        var classes = (classesValue || EMPTY_OBJ);\n        var styleProps = stylesValue ? Object.keys(stylesValue) : EMPTY_ARR;\n        var styles = stylesValue || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased_2 = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased_2 && !ignoreAllStyleUpdates) || (isClassBased_2 && !ignoreAllClassUpdates);\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (processValue) {\n                var adjustedPropIndex = isClassBased_2 ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased_2 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased_2 ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var playerBuilderIndex = isClassBased_2 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    var flag = getPointers(context, ctxIndex);\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex);\n                    if (hasValueChanged(flag, value, newValue)) {\n                        setValue(context, ctxIndex, newValue);\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        var initialValue = getInitialValue(context, flag);\n                        // there is no point in setting this to dirty if the previously\n                        // rendered value was being referenced by the initial style (or null)\n                        if (hasValueChanged(flag, initialValue, newValue)) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (hasValueChanged(flagToCompare, valueToCompare, newValue)) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            if (hasValueChanged(flagToCompare, initialValue, newValue)) {\n                                setDirty(context, ctxIndex, true);\n                                playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        var newFlag = prepareInitialFlag(newProp, isClassBased_2, getStyleSanitizer(context));\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        insertNewMultiProperty(context, ctxIndex, isClassBased_2, newProp, newFlag, newValue, playerBuilderIndex);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 4 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased_3 = (flag & 2 /* Class */) === 2 /* Class */;\n            var processValue = (!isClassBased_3 && !ignoreAllStyleUpdates) || (isClassBased_3 && !ignoreAllClassUpdates);\n            if (processValue) {\n                var value = getValue(context, ctxIndex);\n                var doRemoveValue = valueExists(value, isClassBased_3);\n                if (doRemoveValue) {\n                    setDirty(context, ctxIndex, true);\n                    setValue(context, ctxIndex, null);\n                    // we keep the player factory the same so that the `nulled` value can\n                    // be instructed into the player because removing a style and/or a class\n                    // is a valid animation player instruction.\n                    var playerBuilderIndex = isClassBased_3 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex);\n                    dirty = true;\n                }\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        var sanitizer = getStyleSanitizer(context);\n        while (propIndex < propLimit) {\n            var isClassBased_4 = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased_4 && !ignoreAllStyleUpdates) || (isClassBased_4 && !ignoreAllClassUpdates);\n            if (processValue) {\n                var adjustedPropIndex = isClassBased_4 ? propIndex - classesStartIndex : propIndex;\n                var prop = isClassBased_4 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var value = isClassBased_4 ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n                var flag = prepareInitialFlag(prop, isClassBased_4, sanitizer) | 1 /* Dirty */;\n                var playerBuilderIndex = isClassBased_4 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                context.push(flag, prop, value, playerBuilderIndex);\n                dirty = true;\n            }\n            propIndex++;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n    }\n    /**\n     * Sets and resolves a single styling property/value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyleAndClassBindings` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param index The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     */\n    function updateStyleProp(context, index, input) {\n        var singleIndex = 8 /* SingleStylesStartPosition */ + index * 4 /* Size */;\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n        // didn't change ... nothing to make a note of\n        if (hasValueChanged(currFlag, currValue, value)) {\n            var isClassBased_5 = (currFlag & 2 /* Class */) === 2 /* Class */;\n            var element = context[5 /* ElementPosition */];\n            var playerBuilder = input instanceof BoundPlayerFactory ?\n                new ClassAndStylePlayerBuilder(input, element, isClassBased_5 ? 2 /* Class */ : 3 /* Style */) :\n                null;\n            var value_1 = (playerBuilder ? input.value : input);\n            var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n            var playerBuildersAreDirty = false;\n            var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n            if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n                var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n                playerBuilderIndex = playerBuilder ? newIndex : 0;\n                setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex);\n                playerBuildersAreDirty = true;\n            }\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value_1);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value_1, isClassBased_5) && valueExists(valueForMulti, isClassBased_5)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n            if (playerBuildersAreDirty) {\n                setContextPlayersDirty(context, true);\n            }\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param index The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, index, addOrRemove) {\n        var adjustedIndex = index + context[4 /* ClassOffsetPosition */];\n        updateStyleProp(context, adjustedIndex, addOrRemove);\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param classesStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param stylesStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @returns number the total amount of players that got queued for animation (if any)\n     */\n    function renderStyleAndClassBindings(context, renderer, rootOrView, classesStore, stylesStore) {\n        var totalPlayersQueued = 0;\n        if (isContextDirty(context)) {\n            var flushPlayerBuilders = context[3 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n            var native = context[5 /* ElementPosition */];\n            var multiStartIndex = getMultiStartIndex(context);\n            var styleSanitizer = getStyleSanitizer(context);\n            var onlySingleClasses = limitToSingleClasses(context);\n            for (var i = 8 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var flag = getPointers(context, i);\n                    var playerBuilder = getPlayerBuilder(context, i);\n                    var isClassBased_6 = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var readInitialValue = !isClassBased_6 || !onlySingleClasses;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased_6)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    if (!valueExists(valueToApply, isClassBased_6) && readInitialValue) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    if (isClassBased_6) {\n                        setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                    }\n                    else {\n                        var sanitizer = (flag & 4 /* Sanitize */) ? styleSanitizer : null;\n                        setStyle(native, prop, valueToApply, renderer, sanitizer, stylesStore, playerBuilder);\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            if (flushPlayerBuilders) {\n                var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n                var playerContext = getPlayerContext(context);\n                var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                    var builder = playerContext[i];\n                    var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                    var oldPlayer = playerContext[playerInsertionIndex];\n                    if (builder) {\n                        var player = builder.buildPlayer(oldPlayer);\n                        if (player !== undefined) {\n                            if (player != null) {\n                                var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                                wasQueued && totalPlayersQueued++;\n                            }\n                            if (oldPlayer) {\n                                oldPlayer.destroy();\n                            }\n                        }\n                    }\n                    else if (oldPlayer) {\n                        // the player builder has been removed ... therefore we should delete the associated\n                        // player\n                        oldPlayer.destroy();\n                    }\n                }\n                setContextPlayersDirty(context, false);\n            }\n            setContextDirty(context, false);\n        }\n        return totalPlayersQueued;\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(prop, value);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(prop, value);\n            }\n        }\n        else if (value) {\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native['style'].setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native['style'].removeProperty(prop);\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store, playerBuilder) {\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(className, add);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(className, add);\n            }\n        }\n        else if (add) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                native['classList'].add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                native['classList'].remove(className);\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBased(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 15 /* BitMask */) | (staticIndex << 5 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 5 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        return context[2 /* InitialStylesPosition */][index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 5 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 5 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 8 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[3 /* MasterFlagPosition */]);\n    }\n    function getStyleSanitizer(context) {\n        return context[1 /* StyleSanitizerPosition */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function hasPlayerBuilderChanged(context, builder, index) {\n        var playerContext = context[0 /* PlayerContext */];\n        if (builder) {\n            if (!playerContext || index === 0) {\n                return true;\n            }\n        }\n        else if (!playerContext) {\n            return false;\n        }\n        return playerContext[index] !== builder;\n    }\n    function setPlayerBuilder(context, builder, insertionIndex) {\n        var playerContext = context[0 /* PlayerContext */] || allocPlayerContext(context);\n        if (insertionIndex > 0) {\n            playerContext[insertionIndex] = builder;\n        }\n        else {\n            insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            playerContext.splice(insertionIndex, 0, builder, null);\n            playerContext[0 /* NonBuilderPlayersStart */] +=\n                2 /* PlayerAndPlayerBuildersTupleSize */;\n        }\n        return insertionIndex;\n    }\n    function setPlayerBuilderIndex(context, index, playerBuilderIndex) {\n        context[index + 3 /* PlayerBuilderIndexOffset */] = playerBuilderIndex;\n    }\n    function getPlayerBuilderIndex(context, index) {\n        return context[index + 3 /* PlayerBuilderIndexOffset */] || 0;\n    }\n    function getPlayerBuilder(context, index) {\n        var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n        if (playerBuilderIndex) {\n            var playerContext = context[0 /* PlayerContext */];\n            if (playerContext) {\n                return playerContext[playerBuilderIndex];\n            }\n        }\n        return null;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 3 /* MasterFlagPosition */);\n    }\n    function limitToSingleClasses(context) {\n        return context[3 /* MasterFlagPosition */] & 16 /* OnlyProcessSingleClasses */;\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 3 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function setContextPlayersDirty(context, isDirtyYes) {\n        if (isDirtyYes) {\n            context[3 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n        }\n        else {\n            context[3 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n        }\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 4 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        setPlayerBuilderIndex(context, indexA, getPlayerBuilderIndex(context, indexB));\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n        setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBased(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value, playerIndex) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, playerIndex);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 4 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n    function prepareInitialFlag(name, isClassBased, sanitizer) {\n        if (isClassBased) {\n            return 2 /* Class */;\n        }\n        else if (sanitizer && sanitizer(name)) {\n            return 4 /* Sanitize */;\n        }\n        return 0 /* None */;\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n    var ClassAndStylePlayerBuilder = /** @class */ (function () {\n        function ClassAndStylePlayerBuilder(factory, _element, _type) {\n            this._element = _element;\n            this._type = _type;\n            this._values = {};\n            this._dirty = false;\n            this._factory = factory;\n        }\n        ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n            if (this._values[prop] !== value) {\n                this._values[prop] = value;\n                this._dirty = true;\n            }\n        };\n        ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer) {\n            // if no values have been set here then this means the binding didn't\n            // change and therefore the binding values were not updated through\n            // `setValue` which means no new player will be provided.\n            if (this._dirty) {\n                var player = this._factory.fn(this._element, this._type, this._values, currentPlayer || null);\n                this._values = {};\n                this._dirty = false;\n                return player;\n            }\n            return undefined;\n        };\n        return ClassAndStylePlayerBuilder;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(viewData) {\n        var tView = getTView();\n        var creationMode = getCreationMode();\n        var checkNoChangesMode = getCheckNoChangesMode();\n        setHostBindings(tView, viewData);\n        var parentFirstTemplatePass = getFirstTemplatePass();\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = false;\n        setFirstTemplatePass(false);\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n        }\n        refreshDynamicEmbeddedViews(viewData);\n        // Content query results must be refreshed before content hooks are called.\n        refreshContentQueries(tView);\n        if (!checkNoChangesMode) {\n            executeHooks(viewData, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n        refreshChildComponents(tView.components, parentFirstTemplatePass);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        if (tView.expandoInstructions) {\n            var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n            setBindingRoot(bindingRootIndex);\n            var currentDirectiveIndex = -1;\n            var currentElementIndex = -1;\n            for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                var instruction = tView.expandoInstructions[i];\n                if (typeof instruction === 'number') {\n                    if (instruction <= 0) {\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\n                        // the current element and directive index.\n                        currentElementIndex = -instruction;\n                        // Injector block is taken into account.\n                        bindingRootIndex += INJECTOR_SIZE;\n                        currentDirectiveIndex = bindingRootIndex;\n                    }\n                    else {\n                        // This is either the injector size (so the binding root can skip over directives\n                        // and get to the first set of host bindings on this node) or the host var count\n                        // (to get to the next set of host bindings on this node).\n                        bindingRootIndex += instruction;\n                    }\n                    setBindingRoot(bindingRootIndex);\n                }\n                else {\n                    // If it's not a number, it's a host binding function that needs to be executed.\n                    viewData[BINDING_INDEX] = bindingRootIndex;\n                    // We must subtract the header offset because the load() instruction\n                    // expects a raw, unadjusted index.\n                    instruction(currentDirectiveIndex - HEADER_OFFSET, currentElementIndex);\n                    currentDirectiveIndex++;\n                }\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx - HEADER_OFFSET, tView.contentQueries[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components, parentFirstTemplatePass) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i], parentFirstTemplatePass);\n            }\n        }\n    }\n    function executeInitAndContentHooks(viewData) {\n        if (!getCheckNoChangesMode()) {\n            var tView = getTView();\n            var creationMode = getCreationMode();\n            executeInitHooks(viewData, tView, creationMode);\n            executeHooks(viewData, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n    }\n    function createLViewData(renderer, tView, context, flags, sanitizer) {\n        var viewData = getViewData();\n        var instance = tView.blueprint.slice();\n        instance[FLAGS] = flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */;\n        instance[PARENT] = instance[DECLARATION_VIEW] = viewData;\n        instance[CONTEXT] = context;\n        instance[INJECTOR$1] = viewData ? viewData[INJECTOR$1] : null;\n        instance[RENDERER] = renderer;\n        instance[SANITIZER] = sanitizer || null;\n        return instance;\n    }\n    function createNodeAtIndex(index, type, native, name, attrs) {\n        var viewData = getViewData();\n        var tView = getTView();\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertLessThan(adjustedIndex, viewData.length, \"Slot should have been initialized with null\");\n        viewData[adjustedIndex] = native;\n        var tNode = tView.data[adjustedIndex];\n        if (tNode == null) {\n            var previousOrParentTNode = getPreviousOrParentTNode();\n            var isParent = getIsParent();\n            tNode = tView.data[adjustedIndex] =\n                createTNode(viewData, type, adjustedIndex, name, attrs, null);\n            // Now link ourselves into the tree.\n            if (previousOrParentTNode) {\n                if (isParent && previousOrParentTNode.child == null &&\n                    (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                    // We are in the same view, which means we are adding content node to the parent view.\n                    previousOrParentTNode.child = tNode;\n                }\n                else if (!isParent) {\n                    previousOrParentTNode.next = tNode;\n                }\n            }\n        }\n        if (tView.firstChild == null && type === 3 /* Element */) {\n            tView.firstChild = tNode;\n        }\n        setPreviousOrParentTNode(tNode);\n        setIsParent(true);\n        return tNode;\n    }\n    function createViewNode(index, view) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        if (view[TVIEW].node == null) {\n            view[TVIEW].node = createTNode(view, 2 /* View */, index, null, null, null);\n        }\n        setIsParent(true);\n        var tNode = view[TVIEW].node;\n        setPreviousOrParentTNode(tNode);\n        return view[HOST_NODE] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function adjustBlueprintForNewNode(view) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n            tView.blueprint.push(null);\n            view.push(null);\n        }\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, renderer, queries, injectorIndex) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var lView = createLViewData(renderer, tView, context, 2 /* CheckAlways */, getCurrentSanitizer());\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        createViewNode(-1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        setIsParent(_isParent);\n        setPreviousOrParentTNode(_previousOrParentTNode);\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context, rf) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var oldView;\n        if (viewToRender[FLAGS] & 64 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(viewToRender[CONTEXT]);\n        }\n        else {\n            try {\n                setIsParent(true);\n                setPreviousOrParentTNode(null);\n                oldView = enterView(viewToRender, viewToRender[HOST_NODE]);\n                namespaceHTML();\n                tView.template(rf, context);\n                if (rf & 2 /* Update */) {\n                    refreshDescendantViews(viewToRender);\n                }\n                else {\n                    // This must be set to false immediately after the first creation run because in an\n                    // ngFor loop, all the views will be created together before update mode runs and turns\n                    // off firstTemplatePass. If we don't set it here, instances will perform directive\n                    // matching, etc again and again.\n                    viewToRender[TVIEW].firstTemplatePass = false;\n                    setFirstTemplatePass(false);\n                }\n            }\n            finally {\n                // renderEmbeddedTemplate() is called twice, once for creation only and then once for\n                // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n                var isCreationOnly = (rf & 1 /* Create */) === 1 /* Create */;\n                leaveView(oldView, isCreationOnly);\n                setIsParent(_isParent);\n                setPreviousOrParentTNode(_previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n    function renderComponentOrTemplate(hostView, componentOrContext, templateFn) {\n        var rendererFactory = getRendererFactory();\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        try {\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (templateFn) {\n                namespaceHTML();\n                templateFn(getRenderFlags(hostView), componentOrContext);\n                refreshDescendantViews(hostView);\n            }\n            else {\n                executeInitAndContentHooks(hostView);\n                // Element was stored at 0 in data and directive was stored at 0 in directives\n                // in renderComponent()\n                setHostBindings(getTView(), hostView);\n                componentRefresh(HEADER_OFFSET, false);\n            }\n        }\n        finally {\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. By default, the update block is run with the\n     * creation block when the view is in creation mode. Otherwise, the update block is run\n     * alone.\n     *\n     * Dynamically created views do NOT use this configuration (update block and create block are\n     * always run separately).\n     */\n    function getRenderFlags(view) {\n        return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg/';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        var viewData = getViewData();\n        var tView = getTView();\n        var renderer = getRenderer();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? 'ng-container' : '');\n        ngDevMode && assertDataInRange(index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, null, attrs || null);\n        appendChild(native, tNode, viewData);\n        createDirectivesAndLocals(tView, viewData, localRefs);\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var tView = getTView();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        var currentQueries = getCurrentQueries();\n        if (currentQueries) {\n            setCurrentQueries(currentQueries.addNode(previousOrParentTNode));\n        }\n        queueLifecycleHooks(previousOrParentTNode.flags, tView);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        var viewData = getViewData();\n        var tView = getTView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n        if (attrs) {\n            setUpAttributes(native, attrs);\n        }\n        appendChild(native, tNode, viewData);\n        createDirectivesAndLocals(tView, viewData, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, viewData);\n        }\n        increaseElementDepthCount();\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || getRenderer();\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, viewData, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getFirstTemplatePass()) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, viewData, findDirectiveMatches(tView, viewData, previousOrParentTNode), previousOrParentTNode, localRefs || null);\n        }\n        instantiateAllDirectives(tView, viewData, previousOrParentTNode);\n        saveResolvedLocalsInData(viewData, previousOrParentTNode, localRefExtractor);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LViewData in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData =\n                createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice(),\n            childIndex: -1,\n            bindingStartIndex: bindingStartIndex,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            pipeDestroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            firstChild: null,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[CONTAINER_INDEX] = -1;\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function setUpAttributes(native, attrs) {\n        var renderer = getRenderer();\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n                i += 2;\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (attrName === 0 /* NamespaceURI */) {\n                    // Namespaced attributes\n                    var namespaceURI = attrs[i + 1];\n                    var attrName_1 = attrs[i + 2];\n                    var attrVal = attrs[i + 3];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                    i += 4;\n                }\n                else {\n                    // Standard attributes\n                    var attrVal = attrs[i + 1];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                    i += 2;\n                }\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        ngDevMode && assertDataInRange(-1);\n        setRendererFactory(factory);\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener.\n     */\n    function listener(eventName, listenerFn, useCapture) {\n        if (useCapture === void 0) { useCapture = false; }\n        var viewData = getViewData();\n        var tNode = getPreviousOrParentTNode();\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, viewData);\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            var renderer = getRenderer();\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                var cleanupFn = renderer.listen(native, eventName, listenerFn);\n                storeCleanupFn(viewData, cleanupFn);\n            }\n            else {\n                var wrappedListener = wrapListenerWithPreventDefault(listenerFn);\n                native.addEventListener(eventName, wrappedListener, useCapture);\n                var cleanupInstances = getCleanup(viewData);\n                cleanupInstances.push(wrappedListener);\n                if (getFirstTemplatePass()) {\n                    getTViewCleanup(viewData).push(eventName, tNode.index, cleanupInstances.length - 1, useCapture);\n                }\n            }\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode.flags, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var outputData;\n        if (outputs && (outputData = outputs[eventName])) {\n            createOutput(viewData, outputData, listenerFn);\n        }\n    }\n    /**\n     * Iterates through the outputs associated with a particular event name and subscribes to\n     * each output.\n     */\n    function createOutput(viewData, outputs, listener) {\n        for (var i = 0; i < outputs.length; i += 2) {\n            ngDevMode && assertDataInRange(outputs[i], viewData);\n            var subscription = viewData[outputs[i]][outputs[i + 1]].subscribe(listener);\n            storeCleanupWithContext(viewData, subscription, subscription.unsubscribe);\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(view, context, cleanupFn) {\n        if (!view)\n            view = getViewData();\n        getCleanup(view).push(context);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(cleanupFn, view[CLEANUP].length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        var currentQueries = getCurrentQueries();\n        if (currentQueries) {\n            setCurrentQueries(currentQueries.addNode(previousOrParentTNode));\n        }\n        queueLifecycleHooks(previousOrParentTNode.flags, getTView());\n        decreaseElementDepthCount();\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var viewData = getViewData();\n            var renderer = getRenderer();\n            var element_1 = getNativeByIndex(index, viewData);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1, name) :\n                    element_1.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1, name, strValue) :\n                    element_1.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an Element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementProperty(index, propName, value, sanitizer) {\n        if (value === NO_CHANGE)\n            return;\n        var viewData = getViewData();\n        var element = getNativeByIndex(index, viewData);\n        var tNode = getTNode(index, viewData);\n        var inputData = initializeTNodeInputs(tNode);\n        var dataValue;\n        if (inputData && (dataValue = inputData[propName])) {\n            setInputsForProperty(viewData, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(viewData, index + HEADER_OFFSET);\n        }\n        else if (tNode.type === 3 /* Element */) {\n            var renderer = getRenderer();\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value) : value;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            isProceduralRenderer(renderer) ?\n                renderer.setProperty(element, propName, value) :\n                (element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(viewData, type, adjustedIndex, tagName, attrs, tViews) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && ngDevMode.tNode++;\n        var parent = getIsParent() ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && viewData && parent !== viewData[HOST_NODE];\n        var tParent = parentInSameView ? parent : null;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            flags: 0,\n            providerIndexes: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: tParent,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(viewData, inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(inputs[i], viewData);\n            viewData[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param number tNodeFlags node flags\n     * @param Direction direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNodeFlags, direction) {\n        var tView = getTView();\n        var count = tNodeFlags & 4095 /* DirectiveCountMask */;\n        var propStore = null;\n        if (count > 0) {\n            var start = tNodeFlags >> 16 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Add or remove a class in a `classList` on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case\n     *\n     * @param index The index of the element to update in the data array\n     * @param className Name of class to toggle. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value A value indicating if a given class should be added or removed.\n     */\n    function elementClassProp(index, stylingIndex, value) {\n        var val = (value instanceof BoundPlayerFactory) ? value : (!!value);\n        updateClassProp(getStylingContext(index, getViewData()), stylingIndex, val);\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to apply all styling\n     * (e.g. `style=\"...\"`) values to the element. This is also where the provided index\n     * value is allocated for the styling details for its corresponding element (the element\n     * index is the previous index value from this one).\n     *\n     * (Note this function calls `elementStylingApply` immediately when called.)\n     *\n     *\n     * @param index Index value which will be allocated to store styling data for the element.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classDeclarations A key/value array of CSS classes that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any classes placed on the element by multiple (`[class]`) or singular (`[class.named]`)\n     *   bindings. If a class binding changes its value to a falsy value then the matching initial\n     *   class value that are passed in here will be applied to the element (if matched).\n     * @param styleDeclarations A key/value array of CSS styles that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any styles placed on the element by multiple (`[style]`) or singular (`[style.prop]`)\n     *   bindings. If a style binding changes its value to null then the initial styling\n     *   values that are passed in here will be applied to the element (if matched).\n     * @param styleSanitizer An optional sanitizer function that will be used (if provided)\n     *   to sanitize the any CSS property values that are applied to the element (during rendering).\n     */\n    function elementStyling(classDeclarations, styleDeclarations, styleSanitizer) {\n        var tNode = getPreviousOrParentTNode();\n        var inputData = initializeTNodeInputs(tNode);\n        if (!tNode.stylingTemplate) {\n            var hasClassInput = inputData && inputData.hasOwnProperty('class') ? true : false;\n            if (hasClassInput) {\n                tNode.flags |= 32768 /* hasClassInput */;\n            }\n            // initialize the styling template.\n            tNode.stylingTemplate = createStylingContextTemplate(classDeclarations, styleDeclarations, styleSanitizer, hasClassInput);\n        }\n        if (styleDeclarations && styleDeclarations.length ||\n            classDeclarations && classDeclarations.length) {\n            var index = tNode.index - HEADER_OFFSET;\n            if (delegateToClassInput(tNode)) {\n                var stylingContext = getStylingContext(index, getViewData());\n                var initialClasses = stylingContext[6 /* PreviousOrCachedMultiClassValue */];\n                setInputsForProperty(getViewData(), tNode.inputs['class'], initialClasses);\n            }\n            elementStylingApply(index);\n        }\n    }\n    /**\n     * Apply all styling values to the element which have been queued by any styling instructions.\n     *\n     * This instruction is meant to be run once one or more `elementStyle` and/or `elementStyleProp`\n     * have been issued against the element. This function will also determine if any styles have\n     * changed and will then skip the operation if there is nothing new to render.\n     *\n     * Once called then all queued styles will be flushed.\n     *\n     * @param index Index of the element's styling storage that will be rendered.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     */\n    function elementStylingApply(index) {\n        var viewData = getViewData();\n        var totalPlayersQueued = renderStyleAndClassBindings(getStylingContext(index, viewData), getRenderer(), viewData);\n        if (totalPlayersQueued > 0) {\n            var rootContext = getRootContext(viewData);\n            scheduleTick(rootContext, 2 /* FlushPlayers */);\n        }\n    }\n    /**\n     * Queue a given style to be rendered on an Element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param styleIndex Index of the style property on this element. (Monotonically increasing.)\n     * @param value New value to write (null to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     */\n    function elementStyleProp(index, styleIndex, value, suffix) {\n        var valueToAdd = null;\n        if (value) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = stringify$1(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index, getViewData()), styleIndex, valueToAdd);\n    }\n    /**\n     * Queue a key/value map of styles to be rendered on an Element.\n     *\n     * This instruction is meant to handle the `[style]=\"exp\"` usage. When styles are applied to\n     * the Element they will then be placed with respect to any styles set with `elementStyleProp`.\n     * If any styles are set to `null` then they will be removed from the element (unless the same\n     * style properties have been assigned to the element during creation using `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     */\n    function elementStylingMap(index, classes, styles) {\n        var viewData = getViewData();\n        var tNode = getTNode(index, viewData);\n        var stylingContext = getStylingContext(index, viewData);\n        if (delegateToClassInput(tNode) && classes !== NO_CHANGE) {\n            var initialClasses = stylingContext[6 /* PreviousOrCachedMultiClassValue */];\n            var classInputVal = (initialClasses.length ? (initialClasses + ' ') : '') + classes;\n            setInputsForProperty(getViewData(), tNode.inputs['class'], classInputVal);\n        }\n        updateStylingMap(stylingContext, classes, styles);\n    }\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        var viewData = getViewData();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], getTView().bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, getRenderer());\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        setIsParent(false);\n        appendChild(textNative, tNode, viewData);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && assertDataInRange(index + HEADER_OFFSET);\n            var element_2 = getNativeByIndex(index, getViewData());\n            ngDevMode && assertDefined(element_2, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            var renderer = getRenderer();\n            isProceduralRenderer(renderer) ? renderer.setValue(element_2, stringify$1(value)) :\n                element_2.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        if (getFirstTemplatePass()) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, previousOrParentTNode);\n        postProcessBaseDirective(viewData, previousOrParentTNode, directive, def);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var exportsMap = localRefs ? { '': -1 } : null;\n        generateExpandoInstructionBlock(tView, tNode, directives);\n        var totalHostVars = 0;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, viewData, def, def.factory);\n                totalHostVars += def.hostVars;\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                queueInitHooks(directiveDefIdx, def.onInit, def.doCheck, tView);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n        prefillHostVars(tView, viewData, totalHostVars);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, viewData, previousOrParentTNode) {\n        var start = previousOrParentTNode.flags >> 16 /* DirectiveStartingIndexShift */;\n        var end = start + previousOrParentTNode.flags & 4095 /* DirectiveCountMask */;\n        if (!getFirstTemplatePass() && start < end) {\n            getOrCreateNodeInjectorForNode(previousOrParentTNode, viewData);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(viewData, previousOrParentTNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, viewData, i, previousOrParentTNode);\n            postProcessDirective(viewData, directive, def, i);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directives) {\n        var directiveCount = directives ? directives.length : 0;\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        if (directiveCount > 0) {\n            (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, directiveCount);\n        }\n    }\n    /**\n    * On the first template pass, we need to reserve space for host binding values\n    * after directives are matched (so all directives are saved, then bindings).\n    * Because we are updating the blueprint, we only need to do this once.\n    */\n    function prefillHostVars(tView, viewData, totalHostVars) {\n        for (var i = 0; i < totalHostVars; i++) {\n            viewData.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(viewData, directive, def, directiveDefIdx) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        postProcessBaseDirective(viewData, previousOrParentTNode, directive, def);\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, directive, def.inputs, previousOrParentTNode);\n        }\n        if (def.contentQueries) {\n            def.contentQueries(directiveDefIdx);\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(viewData, previousOrParentTNode, directive, def) {\n        var native = getNativeByTNode(previousOrParentTNode, viewData);\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], getTView().bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent();\n        attachPatchData(directive, viewData);\n        if (native) {\n            attachPatchData(native, viewData);\n        }\n        // TODO(misko): setUpAttributes should be a feature for better treeshakability.\n        if (def.attributes != null && previousOrParentTNode.type == 3 /* Element */) {\n            setUpAttributes(native, def.attributes);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors)) {\n                    matches || (matches = []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), viewData), viewData, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 4096 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 4096 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(previousOrParentTNode) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        var tView = getTView();\n        (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n    }\n    /** Stores index of directive and host element so it will be queued for binding refresh during CD.\n    */\n    function queueHostBindingForCheck(tView, def) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        tView.expandoInstructions.push(def.hostBindings, def.hostVars);\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'expected firstTemplatePass to be true');\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 4096 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = index << 16 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ |\n            numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n        if (def.hostBindings)\n            queueHostBindingForCheck(tView, def);\n    }\n    function addComponentLogic(viewData, previousOrParentTNode, def) {\n        var native = getNativeByTNode(previousOrParentTNode, viewData);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var componentView = addToViewTree(viewData, previousOrParentTNode.index, createLViewData(getRendererFactory().createRenderer(native, def), tView, null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, getCurrentSanitizer()));\n        componentView[HOST_NODE] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        componentView[HOST] = viewData[previousOrParentTNode.index];\n        viewData[previousOrParentTNode.index] = componentView;\n        if (getFirstTemplatePass()) {\n            queueComponentIndexForCheck(previousOrParentTNode);\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, hostTNode, currentView, native, isForViewContainerRef) {\n        return [\n            isForViewContainerRef ? -1 : 0,\n            [],\n            currentView,\n            null,\n            null,\n            hostNative,\n            native,\n            getRenderParent(hostTNode, currentView) // renderParent\n        ];\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var viewData = getViewData();\n        var tView = getTView();\n        // TODO: consider a separate node type for templates\n        var tNode = containerInternal(index, tagName || null, attrs || null);\n        if (getFirstTemplatePass()) {\n            tNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        createDirectivesAndLocals(tView, viewData, localRefs, localRefExtractor);\n        var currentQueries = getCurrentQueries();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (currentQueries) {\n            setCurrentQueries(currentQueries.addNode(previousOrParentTNode));\n        }\n        queueLifecycleHooks(tNode.flags, tView);\n        setIsParent(false);\n    }\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var tNode = containerInternal(index, null, null);\n        getFirstTemplatePass() && (tNode.tViews = []);\n        setIsParent(false);\n    }\n    function containerInternal(index, tagName, attrs) {\n        var viewData = getViewData();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], getTView().bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = getRenderer().createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n        var lContainer = viewData[adjustedIndex] =\n            createLContainer(viewData[adjustedIndex], tNode, viewData, comment);\n        appendChild(comment, tNode, viewData);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(viewData, index + HEADER_OFFSET, lContainer);\n        var currentQueries = getCurrentQueries();\n        if (currentQueries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = currentQueries.container();\n        }\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        var viewData = getViewData();\n        var tView = getTView();\n        var previousOrParentTNode = loadInternal(index, tView.data);\n        setPreviousOrParentTNode(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setIsParent(true);\n        viewData[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        if (!getCheckNoChangesMode()) {\n            // We need to execute init hooks here so ngOnInit hooks are called in top level views\n            // before they are called in embedded views (for backwards compatibility).\n            executeInitHooks(viewData, tView, getCreationMode());\n        }\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getViewData()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, previousOrParentTNode, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lViewData) {\n        for (var current = getLViewChild(lViewData); current !== null; current = current[NEXT]) {\n            // Note: current can be an LViewData or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LViewData\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var dynamicViewData = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT], 2 /* Update */);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param tContainerNode to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, tContainerNode, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, tContainerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        var viewData = getViewData();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = viewData[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, containerTNode, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent(true);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLViewData(getRenderer(), getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 2 /* CheckAlways */, getCurrentSanitizer());\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            createViewNode(viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (getCreationMode()) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, viewData, lContainer[ACTIVE_INDEX], -1);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return getRenderFlags(viewToRender);\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getTView();\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        var viewData = getViewData();\n        var viewHost = viewData[HOST_NODE];\n        refreshDescendantViews(viewData);\n        leaveView(viewData[PARENT]);\n        setPreviousOrParentTNode(viewHost);\n        setIsParent(false);\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LViewData[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex, parentFirstTemplatePass) {\n        ngDevMode && assertDataInRange(adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, getViewData());\n        ngDevMode && assertNodeType(getTView().data[adjustedElementIndex], 3 /* Element */);\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n            parentFirstTemplatePass && syncViewWithBlueprint(hostView);\n            detectChangesInternal(hostView, hostView[CONTEXT]);\n        }\n    }\n    /**\n     * Syncs an LViewData instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LViewData is created.\n     * 3. Second <comp> is matched as a component and its LViewData is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LViewData was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentView(getViewData())[HOST_NODE];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                    componentChild.next = null;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var viewData = getViewData();\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsParent(false);\n        // re-distribution of projectable nodes is stored on a component's view level\n        var componentView = findComponentView(viewData);\n        var componentNode = componentView[HOST_NODE];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        var projectedView = componentView[PARENT];\n        var projectionNodeIndex = -1;\n        while (nodeToProject) {\n            if (nodeToProject.type === 1 /* Projection */) {\n                // This node is re-projected, so we must go up the tree to get its projected nodes.\n                var currentComponentView = findComponentView(projectedView);\n                var currentComponentHost = currentComponentView[HOST_NODE];\n                var firstProjectedNode = currentComponentHost.projection[nodeToProject.projection];\n                if (firstProjectedNode) {\n                    projectionNodeStack$1[++projectionNodeIndex] = nodeToProject;\n                    projectionNodeStack$1[++projectionNodeIndex] = projectedView;\n                    nodeToProject = firstProjectedNode;\n                    projectedView = currentComponentView[PARENT];\n                    continue;\n                }\n            }\n            else {\n                // This flag must be set now or we won't know that this node is projected\n                // if the nodes are inserted into a container later.\n                nodeToProject.flags |= 8192 /* isProjected */;\n                appendProjectedNode(nodeToProject, tProjectionNode, viewData, projectedView);\n            }\n            // If we are finished with a list of re-projected nodes, we need to get\n            // back to the root projection node that was re-projected.\n            if (nodeToProject.next === null && projectedView !== componentView[PARENT]) {\n                projectedView = projectionNodeStack$1[projectionNodeIndex--];\n                nodeToProject = projectionNodeStack$1[projectionNodeIndex--];\n            }\n            nodeToProject = nodeToProject.next;\n        }\n    }\n    /**\n     * Adds LViewData or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param currentView The view where LViewData or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LViewData[], adjusted for header\n     * @param state The LViewData or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(currentView, adjustedHostIndex, state) {\n        var tView = getTView();\n        var firstTemplatePass = getFirstTemplatePass();\n        if (currentView[TAIL]) {\n            currentView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        currentView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LViewData dirty. */\n    function markDirtyIfOnPush(viewData, viewIndex) {\n        var view = getComponentViewByIndex(viewIndex, viewData);\n        if (!(view[FLAGS] & 2 /* CheckAlways */)) {\n            view[FLAGS] |= 4 /* Dirty */;\n        }\n    }\n    /** Wraps an event listener with preventDefault behavior. */\n    function wrapListenerWithPreventDefault(listenerFn) {\n        return function wrapListenerIn_preventDefault(e) {\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /** Marks current view and all ancestors dirty */\n    function markViewDirty(view) {\n        var currentView = view;\n        while (currentView && !(currentView[FLAGS] & 64 /* IsRoot */)) {\n            currentView[FLAGS] |= 4 /* Dirty */;\n            currentView = currentView[PARENT];\n        }\n        currentView[FLAGS] |= 4 /* Dirty */;\n        ngDevMode && assertDefined(currentView[CONTEXT], 'rootContext should be defined');\n        var rootContext = currentView[CONTEXT];\n        scheduleTick(rootContext, 1 /* DetectChanges */);\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLViewData(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        detectChangesInternal(getComponentViewByInstance(component), component);\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lViewData The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lViewData) {\n        tickRootContext(lViewData[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChanges(component);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lViewData The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lViewData) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lViewData);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function detectChangesInternal(hostView, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        var templateFn = hostTView.template;\n        var viewQuery = hostTView.viewQuery;\n        try {\n            namespaceHTML();\n            createViewQuery(viewQuery, hostView[FLAGS], component);\n            templateFn(getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView);\n            updateViewQuery(viewQuery, component);\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function createViewQuery(viewQuery, flags, component) {\n        if (viewQuery && (flags & 1 /* CreationMode */)) {\n            viewQuery(1 /* Create */, component);\n        }\n    }\n    function updateViewQuery(viewQuery, component) {\n        if (viewQuery) {\n            viewQuery(2 /* Update */, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        markViewDirty(getComponentViewByInstance(component));\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        return bindingUpdated(getViewData()[BINDING_INDEX]++, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(getViewData()[BINDING_INDEX]++, values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var different = bindingUpdated(getViewData()[BINDING_INDEX]++, v0);\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated2(viewData[BINDING_INDEX], v0, v1);\n        viewData[BINDING_INDEX] += 2;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated3(viewData[BINDING_INDEX], v0, v1, v2);\n        viewData[BINDING_INDEX] += 3;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        viewData[BINDING_INDEX] += 4;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated(viewData[BINDING_INDEX] + 4, v4) || different;\n        viewData[BINDING_INDEX] += 5;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated2(viewData[BINDING_INDEX] + 4, v4, v5) || different;\n        viewData[BINDING_INDEX] += 6;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated3(viewData[BINDING_INDEX] + 4, v4, v5, v6) || different;\n        viewData[BINDING_INDEX] += 7;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated4(viewData[BINDING_INDEX] + 4, v4, v5, v6, v7) || different;\n        viewData[BINDING_INDEX] += 8;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var tView = getTView();\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        getViewData()[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        var contextViewData = getContextViewData();\n        return loadInternal(index, contextViewData);\n    }\n    function loadQueryList(queryListIdx) {\n        var viewData = getViewData();\n        ngDevMode && assertDefined(viewData[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        ngDevMode && assertDataInRange(queryListIdx, viewData[CONTENT_QUERIES]);\n        return viewData[CONTENT_QUERIES][queryListIdx];\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(index, getViewData());\n    }\n    /** Gets the current binding value. */\n    function getBinding(bindingIndex) {\n        var viewData = getViewData();\n        ngDevMode && assertDataInRange(viewData[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(viewData[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return viewData[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(bindingIndex, value) {\n        var viewData = getViewData();\n        var checkNoChangesMode = getCheckNoChangesMode();\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && assertLessThan(bindingIndex, viewData.length, \"Slot should have been initialized to NO_CHANGE\");\n        if (viewData[bindingIndex] === NO_CHANGE) {\n            viewData[bindingIndex] = value;\n        }\n        else if (isDifferent(viewData[bindingIndex], value, checkNoChangesMode)) {\n            throwErrorIfNoChangesMode(getCreationMode(), checkNoChangesMode, viewData[bindingIndex], value);\n            viewData[bindingIndex] = value;\n        }\n        else {\n            return false;\n        }\n        return true;\n    }\n    /** Updates binding and returns the value. */\n    function updateBinding(bindingIndex, value) {\n        return getViewData()[bindingIndex] = value;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(bindingIndex, exp1);\n        return bindingUpdated(bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated(bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated2(bindingIndex + 2, exp3, exp4) || different;\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        return getOrCreateInjectable(getPreviousOrParentTNode(), getViewData(), token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     */\n    function injectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     */\n    function registerContentQuery(queryList, currentDirectiveIndex) {\n        var viewData = getViewData();\n        var tView = getTView();\n        var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n        if (getFirstTemplatePass()) {\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n            if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n            }\n        }\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode) {\n            if (tNode.inputs === undefined) {\n                // mark inputs as checked\n                tNode.inputs = generatePropertyAliases(tNode.flags, 0 /* Input */);\n            }\n            return tNode.inputs;\n        }\n        return null;\n    }\n    function delegateToClassInput(tNode) {\n        return tNode.flags & 32768 /* hasClassInput */;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_view, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._view = _view;\n        }\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._view[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._viewContainerRef && viewAttached(this._view)) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._view);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._view, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._view); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._view[FLAGS] &= ~8 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._view[FLAGS] |= 8 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () {\n            var rendererFactory = getRendererFactory();\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            detectChanges(this.context);\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n        };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) { this._viewContainerRef = vcRef; };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) { this._appRef = appRef; };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = this._view[PARENT][this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        return RootViewRef;\n    }(ViewRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getViewData());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getViewData());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _renderer, _queries, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._renderer = _renderer;\n                    _this._queries = _queries;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container$$1, hostTNode, hostView, index) {\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._renderer, this._queries, this._injectorIndex);\n                    if (container$$1) {\n                        insertView(lView, container$$1, hostView, index, hostTNode.index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context, 1 /* Create */);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[HOST_NODE];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        var hostContainer = hostView[hostTNode.index];\n        ngDevMode && assertNodeType(hostTNode, 0 /* Container */);\n        ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n        return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, getRenderer(), hostContainer[QUERIES], hostTNode.injectorIndex);\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getViewData());\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _hostView) {\n            this._tNode = _tNode;\n            this._hostView = _hostView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._hostView, token, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NullInjector() :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this._lContainer[VIEWS].length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer[VIEWS].length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, this._hostTNode, this._hostView, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._view;\n                    var adjustedIdx = this._adjustIndex(index);\n                    insertView(lView, this._lContainer, this._hostView, adjustedIdx, this._hostTNode.index);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    var index = this.indexOf(viewRef);\n                    this.detach(index);\n                    this.insert(viewRef, this._adjustIndex(newIndex));\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, this._hostTNode, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    detachView(this._lContainer, adjustedIdx, !!this._hostTNode.detached);\n                    return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this._lContainer[VIEWS].length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var comment = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostTNode, hostView, comment, true);\n            appendChild(comment, hostTNode, hostView);\n            addToViewTree(hostView, hostTNode.index, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), getViewData(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.flags >> 16 /* DirectiveStartingIndexShift */;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getViewData());\n    }\n\n    /**\n     * NOTE: The following functions might not be ideal for core usage in Angular...\n     *\n     * Each function below is designed\n     */\n    /**\n     * Returns the component instance associated with the target.\n     *\n     * If a DOM is used then it will return the component that\n     *    owns the view where the element is situated.\n     * If a component instance is used then it will return the\n     *    instance of the parent component depending on where\n     *    the component instance is exists in a template.\n     * If a directive instance is used then it will return the\n     *    component that contains that directive in it's template.\n     */\n    function getComponent(target) {\n        var context = loadContext(target);\n        if (context.component === undefined) {\n            var lViewData = context.lViewData;\n            while (lViewData) {\n                var ctx = lViewData[CONTEXT];\n                if (ctx && isComponentInstance(ctx)) {\n                    context.component = ctx;\n                    break;\n                }\n                lViewData = lViewData[PARENT];\n            }\n            if (context.component === undefined) {\n                context.component = null;\n            }\n        }\n        return context.component;\n    }\n    /**\n     * Returns the host component instance associated with the target.\n     *\n     * This will only return a component instance of the DOM node\n     * contains an instance of a component on it.\n     */\n    function getHostComponent(target) {\n        var context = loadContext(target);\n        var tNode = context.lViewData[TVIEW].data[context.nodeIndex];\n        if (tNode.flags & 4096 /* isComponent */) {\n            var componentView = getComponentViewByIndex(context.nodeIndex, context.lViewData);\n            return componentView[CONTEXT];\n        }\n        return null;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated.\n     */\n    function getRootContext$1(target) {\n        var lViewData = Array.isArray(target) ? target : loadContext(target).lViewData;\n        var rootLViewData = getRootView$1(lViewData);\n        return rootLViewData[CONTEXT];\n    }\n    /**\n     * Returns a list of all the components in the application\n     * that are have been bootstrapped.\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext$1(target).components);\n    }\n    /**\n     * Returns the injector instance that is associated with\n     * the element, component or directive.\n     */\n    function getInjector(target) {\n        var context = loadContext(target);\n        var tNode = context.lViewData[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lViewData);\n    }\n    /**\n     * Returns a list of all the directives that are associated\n     * with the underlying target element.\n     */\n    function getDirectives(target) {\n        var context = loadContext(target);\n        if (context.directives === undefined) {\n            context.directives = discoverDirectives(context.nodeIndex, context.lViewData, false);\n        }\n        return context.directives || [];\n    }\n    /**\n     * Returns LContext associated with a target passed as an argument.\n     * Throws if a given target doesn't have associated LContext.\n     */\n    function loadContext(target) {\n        var context = getContext(target);\n        if (!context) {\n            throw new Error(ngDevMode ? 'Unable to find the given context data for the given target' :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LViewData` until\n     * reaching the root `LViewData`.\n     *\n     * @param componentOrView any component or view\n     */\n    function getRootView$1(componentOrView) {\n        var lViewData;\n        if (Array.isArray(componentOrView)) {\n            ngDevMode && assertDefined(componentOrView, 'lViewData');\n            lViewData = componentOrView;\n        }\n        else {\n            ngDevMode && assertDefined(componentOrView, 'component');\n            lViewData = readPatchedLViewData(componentOrView);\n        }\n        while (lViewData && !(lViewData[FLAGS] & 64 /* IsRoot */)) {\n            lViewData = lViewData[PARENT];\n        }\n        return lViewData;\n    }\n    /**\n     *  Retrieve map of local references (local reference name => element or directive instance).\n     */\n    function getLocalRefs(target) {\n        var context = loadContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lViewData, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=local\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ngDev).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ngDev';\n    /*\n     * Publishes a collection of default debug tools onto `window._ng_`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    var _published = false;\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getHostComponent', getHostComponent);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ngDevMode` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Root component will always have an element index of 0 and an injector size of 1\n    var ROOT_EXPANDO_INSTRUCTIONS = [0, 1];\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n            2 /* CheckAlways */ | 64 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler || requestAnimationFrame.bind(window), opts.playerHandler || null);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLViewData(renderer, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags);\n        rootView[INJECTOR$1] = opts.injector || null;\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, renderer, sanitizer);\n            component = createRootComponent(hostRNode, componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            executeInitAndContentHooks(rootView);\n            detectChangesInternal(componentView, component);\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        var componentView = createLViewData(renderer, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, sanitizer);\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n        if (tView.firstTemplatePass) {\n            tView.expandoInstructions = ROOT_EXPANDO_INSTRUCTIONS.slice();\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n            tNode.flags = 4096 /* isComponent */;\n            initNodeFlags(tNode, rootView.length, 1);\n        }\n        // Store component view at node index, with node as the HOST\n        componentView[HOST] = rootView[HEADER_OFFSET];\n        componentView[HOST_NODE] = tNode;\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(hostRNode, componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        if (tView.firstTemplatePass)\n            prefillHostVars(tView, rootView, componentDef.hostVars);\n        setHostBindings(tView, rootView);\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLViewData(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        queueInitHooks(dirIndex, def.onInit, def.doCheck, rootTView);\n        queueLifecycleHooks(dirIndex << 16 /* DirectiveStartingIndexShift */ | 1, rootTView);\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext$2(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext$2(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determines if a definition is a {@link ComponentDef} or a {@link DirectiveDef}\n     * @param definition The definition to examine\n     */\n    function isComponentDef$1(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef$1(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (directiveIndex, elementIndex) {\n                            superHostBindings_1(directiveIndex, elementIndex);\n                            prevHostBindings_1(directiveIndex, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                if (isComponentDef$1(definition) && isComponentDef$1(superDef)) {\n                    var prevViewQuery_1 = definition.viewQuery;\n                    var superViewQuery_1 = superDef.viewQuery;\n                    if (superViewQuery_1) {\n                        if (prevViewQuery_1) {\n                            definition.viewQuery = function (rf, ctx) {\n                                superViewQuery_1(rf, ctx);\n                                prevViewQuery_1(rf, ctx);\n                            };\n                        }\n                        else {\n                            definition.viewQuery = superViewQuery_1;\n                        }\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function (dirIndex) {\n                            superContentQueries_1(dirIndex);\n                            prevContentQueries_1(dirIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge Content Queries Refresh\n                var prevContentQueriesRefresh_1 = definition.contentQueriesRefresh;\n                var superContentQueriesRefresh_1 = superDef.contentQueriesRefresh;\n                if (superContentQueriesRefresh_1) {\n                    if (prevContentQueriesRefresh_1) {\n                        definition.contentQueriesRefresh = function (directiveIndex, queryIndex) {\n                            superContentQueriesRefresh_1(directiveIndex, queryIndex);\n                            prevContentQueriesRefresh_1(directiveIndex, queryIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueriesRefresh = superContentQueriesRefresh_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature !== InheritDefinitionFeature) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                return \"break\";\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.afterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.afterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.afterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                    definition.onInit = definition.onInit || superPrototype.onInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY$1) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature(definition) {\n        var declaredToMinifiedInputs = definition.declaredInputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (declaredName) {\n            if (declaredToMinifiedInputs.hasOwnProperty(declaredName)) {\n                var minifiedKey = declaredToMinifiedInputs[declaredName];\n                var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n                // Walk the prototype chain to see if we find a property descriptor\n                // That way we can honor setters and getters that were inherited.\n                var originalProperty = undefined;\n                var checkProto = proto;\n                while (!originalProperty && checkProto &&\n                    Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                    originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                    checkProto = Object.getPrototypeOf(checkProto);\n                }\n                var getter = originalProperty && originalProperty.get;\n                var setter_1 = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minifiedKey, {\n                    get: getter ||\n                        (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            simpleChanges = {};\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                        var currentChange = simpleChanges[declaredName];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[declaredName] =\n                                new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey_1] = value;\n                        }\n                        if (setter_1)\n                            setter_1.call(this, value);\n                    },\n                    // Make the property configurable in dev mode to allow overriding in tests\n                    configurable: !!ngDevMode\n                });\n            }\n        };\n        for (var declaredName in declaredToMinifiedInputs) {\n            _loop_1(declaredName);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    }\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            if (delegateHook)\n                delegateHook.apply(this);\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$1 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, new Set()); });\n            additionalProviders &&\n                deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = 0 /* Default */; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & 4 /* SkipSelf */)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var next = !(flags & 2 /* Self */) ? this.parent : getNullInjector();\n                return this.parent.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Check for circular dependencies.\n            if (parents.has(defType)) {\n                throw new Error(\"Circular dependency: type \" + stringify(defType) + \" ends up importing itself.\");\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                parents.add(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    parents.delete(defType);\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            if (def.providers != null) {\n                deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$1) {\n                throw new Error(\"Circular dep for \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$1;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefFactory(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            // TODO(alxhub): there should probably be a strict mode which throws here instead of assuming a\n            // no-args constructor.\n            return function () { return new token(); };\n        }\n        return injectableDef.factory;\n    }\n    function providerToRecord(provider) {\n        var factory = providerToFactory(provider);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider) {\n        var token = resolveForwardRef(provider);\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefFactory(provider);\n        }\n        else {\n            token = resolveForwardRef(provider.provide);\n            if (isValueProvider(provider)) {\n                factory = function () { return provider.useValue; };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(provider.useExisting); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = provider.useClass || token;\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (value === void 0) { value = NOT_YET; }\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!value.useExisting;\n    }\n    function isFactoryProvider(value) {\n        return !!value.useFactory;\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /*\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var viewData = getViewData();\n        var tView = viewData[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent$$1 = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent$$1, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent$$1, false);\n        }\n    }\n    /**\n    * Resolves a provider and publishes it to the DI system.\n    */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider);\n            }\n        }\n        else {\n            var viewData = getViewData();\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var previousOrParentTNode = getPreviousOrParentTNode();\n            var beginIndex = previousOrParentTNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = previousOrParentTNode.flags >> 16 /* DirectiveStartingIndexShift */;\n            var cptViewProvidersCount = previousOrParentTNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, directiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(previousOrParentTNode, viewData), viewData, token);\n                    tInjectables.push(token);\n                    previousOrParentTNode.flags += 1 << 16 /* DirectiveStartingIndexShift */;\n                    if (isViewProvider) {\n                        previousOrParentTNode.providerIndexes +=\n                            65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    viewData.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    viewData[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(previousOrParentTNode, viewData), viewData, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent$$1, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    previousOrParentTNode.flags += 1 << 16 /* DirectiveStartingIndexShift */;\n                    if (isViewProvider) {\n                        previousOrParentTNode.providerIndexes +=\n                            65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    viewData.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent$$1);\n                }\n                if (!isViewProvider && isComponent$$1 && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n    * Add a factory in a multi factory.\n    */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n    * Returns the index of item in the array, but only in the begin to end range.\n    */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n    * Use this with `multi` `providers`.\n    */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n    * Use this with `multi` `viewProviders`.\n    *\n    * This factory knows how to concatenate itself with the existing `multi` `providers`.\n    */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n    * Maps an array of factories into an array of values.\n    */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n    * Creates a multi factory.\n    */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent$$1, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, directiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent$$1 && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        text(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        textBinding(0, bind(ctx.greeter.greet()));\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     *\n     * @param definition\n     */\n    function ProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver = function (def) {\n                return providersResolver(def, providers, viewProviders);\n            };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /** @internal */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /** @internal */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        function ComponentFactoryResolver$$1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () {\n            var useRaf = typeof requestAnimationFrame !== 'undefined' && typeof window !== 'undefined';\n            return useRaf ? requestAnimationFrame.bind(window) : setTimeout;\n        },\n    });\n    /**\n     * A function used to wrap the `RendererFactory2`.\n     * Used in tests to change the `RendererFactory2` into a `DebugRendererFactory2`.\n     */\n    var WRAP_RENDERER_FACTORY2 = new InjectionToken('WRAP_RENDERER_FACTORY2');\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        function ComponentFactory$$1(componentDef) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors = [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            var rendererFactory;\n            if (ngModule) {\n                var wrapper = ngModule.injector.get(WRAP_RENDERER_FACTORY2, function (v) { return v; });\n                rendererFactory = wrapper(ngModule.injector.get(RendererFactory2));\n            }\n            else {\n                rendererFactory = domRendererFactory3;\n            }\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            var rootFlags = this.componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n                2 /* CheckAlways */ | 64 /* IsRoot */;\n            var rootContext = ngModule && !isInternalRootView ?\n                ngModule.injector.get(ROOT_CONTEXT) :\n                createRootContext(requestAnimationFrame.bind(window));\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootView = createLViewData(renderer, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags);\n            rootView[INJECTOR$1] = ngModule && ngModule.injector || null;\n            // rootView is the parent when bootstrapping\n            var oldView = enterView(rootView, null);\n            var component;\n            var tElementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootView, renderer);\n                tElementNode = getTNode(0, rootView);\n                // Transform the arrays of native nodes into a structure that can be consumed by the\n                // projection instruction. This is needed to support the reprojection of these nodes.\n                if (projectableNodes) {\n                    var index = 0;\n                    var tView = rootView[TVIEW];\n                    var projection$$1 = tElementNode.projection = [];\n                    for (var i = 0; i < projectableNodes.length; i++) {\n                        var nodeList = projectableNodes[i];\n                        var firstTNode = null;\n                        var previousTNode = null;\n                        for (var j = 0; j < nodeList.length; j++) {\n                            if (tView.firstTemplatePass) {\n                                // For dynamically created components such as ComponentRef, we create a new TView for\n                                // each insert. This is not ideal since we should be sharing the TViews.\n                                // Also the logic here should be shared with `component.ts`'s `renderComponent`\n                                // method.\n                                tView.expandoStartIndex++;\n                                tView.blueprint.splice(++index + HEADER_OFFSET, 0, null);\n                                tView.data.splice(index + HEADER_OFFSET, 0, null);\n                                rootView.splice(index + HEADER_OFFSET, 0, null);\n                            }\n                            var tNode = createNodeAtIndex(index, 3 /* Element */, nodeList[j], null, null);\n                            previousTNode ? (previousTNode.next = tNode) : (firstTNode = tNode);\n                            previousTNode = tNode;\n                        }\n                        projection$$1.push(firstTNode);\n                    }\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(hostRNode, componentView, this.componentDef, rootView, rootContext, [LifecycleHooksFeature]);\n                // Execute the template in creation mode only, and then turn off the CreationMode flag\n                renderEmbeddedTemplate(componentView, componentView[TVIEW], component, 1 /* Create */);\n                componentView[FLAGS] &= ~1 /* CreationMode */;\n            }\n            finally {\n                enterView(oldView, null);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, rootView, injector, createElementRef(ElementRef, tElementNode, rootView));\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, rootView, injector, location) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(rootView);\n            _this.hostView._tViewNode = createViewNode(-1, rootView);\n            _this.injector = injector;\n            _this.componentType = componentType;\n            return _this;\n        }\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var i18nTagRegex = /{\\$([^}]+)}/g;\n    /**\n     * Takes a translation string, the initial list of placeholders (elements and expressions) and the\n     * indexes of their corresponding expression nodes to return a list of instructions for each\n     * template function.\n     *\n     * Because embedded templates have different indexes for each placeholder, each parameter (except\n     * the translation) is an array, where each value corresponds to a different template, by order of\n     * appearance.\n     *\n     * @param translation A translation string where placeholders are represented by `{$name}`\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns A list of instructions used to translate each template.\n     */\n    function i18nMapping(translation, elements, expressions, templateRoots, lastChildIndex) {\n        var translationParts = translation.split(i18nTagRegex);\n        var nbTemplates = templateRoots ? templateRoots.length + 1 : 1;\n        var instructions = (new Array(nbTemplates)).fill(undefined);\n        generateMappingInstructions(0, 0, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n        return instructions;\n    }\n    /**\n     * Internal function that reads the translation parts and generates a set of instructions for each\n     * template.\n     *\n     * See `i18nMapping()` for more details.\n     *\n     * @param tmplIndex The order of appearance of the template.\n     * 0 for the root template, following indexes match the order in `templateRoots`.\n     * @param partIndex The current index in `translationParts`.\n     * @param translationParts The translation string split into an array of placeholders and text\n     * elements.\n     * @param instructions The current list of instructions to update.\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns the current index in `translationParts`\n     */\n    function generateMappingInstructions(tmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex) {\n        var tmplInstructions = [];\n        var phVisited = [];\n        var openedTagCount = 0;\n        var maxIndex = 0;\n        var currentElements = elements && elements[tmplIndex] ? elements[tmplIndex] : null;\n        var currentExpressions = expressions && expressions[tmplIndex] ? expressions[tmplIndex] : null;\n        instructions[tmplIndex] = tmplInstructions;\n        for (; partIndex < translationParts.length; partIndex++) {\n            // The value can either be text or the name of a placeholder (element/template root/expression)\n            var value = translationParts[partIndex];\n            // Odd indexes are placeholders\n            if (partIndex & 1) {\n                var phIndex = void 0;\n                if (currentElements && currentElements[value] !== undefined) {\n                    phIndex = currentElements[value];\n                    // The placeholder represents a DOM element, add an instruction to move it\n                    var templateRootIndex = templateRoots ? templateRoots.indexOf(value) : -1;\n                    if (templateRootIndex !== -1 && (templateRootIndex + 1) !== tmplIndex) {\n                        // This is a template root, it has no closing tag, not treating it as an element\n                        tmplInstructions.push(phIndex | -2147483648 /* TemplateRoot */);\n                    }\n                    else {\n                        tmplInstructions.push(phIndex | 1073741824 /* Element */);\n                        openedTagCount++;\n                    }\n                    phVisited.push(value);\n                }\n                else if (currentExpressions && currentExpressions[value] !== undefined) {\n                    phIndex = currentExpressions[value];\n                    // The placeholder represents an expression, add an instruction to move it\n                    tmplInstructions.push(phIndex | 1610612736 /* Expression */);\n                    phVisited.push(value);\n                }\n                else {\n                    // It is a closing tag\n                    tmplInstructions.push(-1073741824 /* CloseNode */);\n                    if (tmplIndex > 0) {\n                        openedTagCount--;\n                        // If we have reached the closing tag for this template, exit the loop\n                        if (openedTagCount === 0) {\n                            break;\n                        }\n                    }\n                }\n                if (phIndex !== undefined && phIndex > maxIndex) {\n                    maxIndex = phIndex;\n                }\n                if (templateRoots) {\n                    var newTmplIndex = templateRoots.indexOf(value) + 1;\n                    if (newTmplIndex !== 0 && newTmplIndex !== tmplIndex) {\n                        partIndex = generateMappingInstructions(newTmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n                    }\n                }\n            }\n            else if (value) {\n                // It's a non-empty string, create a text node\n                tmplInstructions.push(536870912 /* Text */, value);\n            }\n        }\n        // Add instructions to remove elements that are not used in the translation\n        if (elements) {\n            var tmplElements = elements[tmplIndex];\n            if (tmplElements) {\n                var phKeys = Object.keys(tmplElements);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplElements[ph];\n                        // Add an instruction to remove the element\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        // Add instructions to remove expressions that are not used in the translation\n        if (expressions) {\n            var tmplExpressions = expressions[tmplIndex];\n            if (tmplExpressions) {\n                var phKeys = Object.keys(tmplExpressions);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplExpressions[ph];\n                        if (ngDevMode) {\n                            assertLessThan(index.toString(2).length, 28, \"Index \" + index + \" is too big and will overflow\");\n                        }\n                        // Add an instruction to remove the expression\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        if (tmplIndex === 0 && typeof lastChildIndex === 'number') {\n            // The current parent is an ng-container and it has more children after the translation that we\n            // need to append to keep the order of the DOM nodes correct\n            for (var i = maxIndex + 1; i <= lastChildIndex; i++) {\n                if (ngDevMode) {\n                    assertLessThan(i.toString(2).length, 28, \"Index \" + i + \" is too big and will overflow\");\n                }\n                tmplInstructions.push(i | -1610612736 /* Any */);\n            }\n        }\n        return partIndex;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        if (ngDevMode) {\n            ngDevMode.rendererMoveNode++;\n        }\n        var viewData = getViewData();\n        // On first pass, re-organize node tree to put this node in the correct position.\n        var firstTemplatePass = viewData[TVIEW].firstTemplatePass;\n        if (firstTemplatePass) {\n            if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n                tNode.next = parentTNode.child;\n                parentTNode.child = tNode;\n            }\n            else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n                tNode.next = previousTNode.next;\n                previousTNode.next = tNode;\n            }\n            else {\n                tNode.next = null;\n            }\n            if (parentTNode !== viewData[HOST_NODE]) {\n                tNode.parent = parentTNode;\n            }\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    function i18nAttribute(index, attrs) {\n        // placeholder for i18nAttribute function\n    }\n    function i18nExp(expression) {\n        // placeholder for i18nExp function\n    }\n    function i18nStart(index, message, subTemplateIndex) {\n        if (subTemplateIndex === void 0) { subTemplateIndex = 0; }\n        // placeholder for i18nExp function\n    }\n    function i18nEnd() {\n        // placeholder for i18nEnd function\n    }\n    /**\n     * Takes a list of instructions generated by `i18nMapping()` to transform the template accordingly.\n     *\n     * @param startIndex Index of the first element to translate (for instance the first child of the\n     * element with the i18n attribute).\n     * @param instructions The list of instructions to apply on the current view.\n     */\n    function i18nApply(startIndex, instructions) {\n        var viewData = getViewData();\n        if (ngDevMode) {\n            assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nApply should be called before any binding');\n        }\n        if (!instructions) {\n            return;\n        }\n        var renderer = getRenderer();\n        var startTNode = getTNode(startIndex, viewData);\n        var localParentTNode = startTNode.parent || viewData[HOST_NODE];\n        var localPreviousTNode = localParentTNode;\n        resetComponentState(); // We don't want to add to the tree with the wrong previous node\n        for (var i = 0; i < instructions.length; i++) {\n            var instruction = instructions[i];\n            switch (instruction & -536870912 /* InstructionMask */) {\n                case 1073741824 /* Element */:\n                    var elementTNode = getTNode(instruction & 536870911 /* IndexMask */, viewData);\n                    localPreviousTNode = appendI18nNode(elementTNode, localParentTNode, localPreviousTNode);\n                    localParentTNode = elementTNode;\n                    break;\n                case 1610612736 /* Expression */:\n                case -2147483648 /* TemplateRoot */:\n                case -1610612736 /* Any */:\n                    var nodeIndex = instruction & 536870911 /* IndexMask */;\n                    localPreviousTNode =\n                        appendI18nNode(getTNode(nodeIndex, viewData), localParentTNode, localPreviousTNode);\n                    break;\n                case 536870912 /* Text */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererCreateTextNode++;\n                    }\n                    var value = instructions[++i];\n                    var textRNode = createTextNode(value, renderer);\n                    // If we were to only create a `RNode` then projections won't move the text.\n                    // Create text node at the current end of viewData. Must subtract header offset because\n                    // createNodeAtIndex takes a raw index (not adjusted by header offset).\n                    adjustBlueprintForNewNode(viewData);\n                    var textTNode = createNodeAtIndex(viewData.length - 1 - HEADER_OFFSET, 3 /* Element */, textRNode, null, null);\n                    localPreviousTNode = appendI18nNode(textTNode, localParentTNode, localPreviousTNode);\n                    resetComponentState();\n                    break;\n                case -1073741824 /* CloseNode */:\n                    localPreviousTNode = localParentTNode;\n                    localParentTNode = localParentTNode.parent || viewData[HOST_NODE];\n                    break;\n                case -536870912 /* RemoveNode */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererRemoveNode++;\n                    }\n                    var removeIndex = instruction & 536870911 /* IndexMask */;\n                    var removedElement = getNativeByIndex(removeIndex, viewData);\n                    var removedTNode = getTNode(removeIndex, viewData);\n                    removeChild(removedTNode, removedElement || null, viewData);\n                    var slotValue = load(removeIndex);\n                    if (isLContainer(slotValue)) {\n                        var lContainer = slotValue;\n                        if (removedTNode.type !== 0 /* Container */) {\n                            removeChild(removedTNode, lContainer[NATIVE] || null, viewData);\n                        }\n                        removedTNode.detached = true;\n                        lContainer[RENDER_PARENT] = null;\n                    }\n                    break;\n            }\n        }\n    }\n    /**\n     * Takes a translation string and the initial list of expressions and returns a list of instructions\n     * that will be used to translate an attribute.\n     * Even indexes contain static strings, while odd indexes contain the index of the expression whose\n     * value will be concatenated into the final translation.\n     */\n    function i18nExpMapping(translation, placeholders) {\n        var staticText = translation.split(i18nTagRegex);\n        // odd indexes are placeholders\n        for (var i = 1; i < staticText.length; i += 2) {\n            staticText[i] = placeholders[staticText[i]];\n        }\n        return staticText;\n    }\n    /**\n     * Checks if the value of an expression has changed and replaces it by its value in a translation,\n     * or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation1(instructions, v0) {\n        var different = bindingUpdated(getViewData()[BINDING_INDEX]++, v0);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                res += stringify$1(v0);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 2 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation2(instructions, v0, v1) {\n        var viewData = getViewData();\n        var different = bindingUpdated2(viewData[BINDING_INDEX], v0, v1);\n        viewData[BINDING_INDEX] += 2;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b1 ? v1 : v0;\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 3 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation3(instructions, v0, v1, v2) {\n        var viewData = getViewData();\n        var different = bindingUpdated3(viewData[BINDING_INDEX], v0, v1, v2);\n        viewData[BINDING_INDEX] += 3;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? v2 : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 4 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation4(instructions, v0, v1, v2, v3) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        viewData[BINDING_INDEX] += 4;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 5 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation5(instructions, v0, v1, v2, v3, v4) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated(viewData[BINDING_INDEX] + 4, v4) || different;\n        viewData[BINDING_INDEX] += 5;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? v4 : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 6 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */ function i18nInterpolation6(instructions, v0, v1, v2, v3, v4, v5) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated2(viewData[BINDING_INDEX] + 4, v4, v5) || different;\n        viewData[BINDING_INDEX] += 6;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b1 ? v5 : v4) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 7 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation7(instructions, v0, v1, v2, v3, v4, v5, v6) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated3(viewData[BINDING_INDEX] + 4, v4, v5, v6) || different;\n        viewData[BINDING_INDEX] += 7;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? v6 : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 8 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     * @param v7 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation8(instructions, v0, v1, v2, v3, v4, v5, v6, v7) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated4(viewData[BINDING_INDEX] + 4, v4, v5, v6, v7) || different;\n        viewData[BINDING_INDEX] += 8;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? (b1 ? v7 : v6) : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Create a translated interpolation binding with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions then `i18nInterpolation()` should be used instead. It is faster\n     * because there is no need to create an array of expressions and iterate over it.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolationV(instructions, values) {\n        var viewData = getViewData();\n        var different = false;\n        for (var i = 0; i < values.length; i++) {\n            // Check if bindings have changed\n            bindingUpdated(viewData[BINDING_INDEX]++, values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are placeholders\n            if (i & 1) {\n                res += stringify$1(values[instructions[i]]);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useFactory: function () { return new ComponentFactoryResolver$1(); },\n        deps: [],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, parentInjector) {\n            var _this = _super.call(this) || this;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                COMPONENT_FACTORY_RESOLVER, {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                }\n            ];\n            _this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n            _this.instance = _this.injector.get(ngModuleType);\n            _this.componentFactoryResolver = new ComponentFactoryResolver$1();\n            return _this;\n        }\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return getCreationMode() ?\n            updateBinding(bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(bindingIndex, exp) ?\n            updateBinding(bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated2(bindingIndex, exp1, exp2) ?\n            updateBinding(bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated3(bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(bindingIndex + 4, exp5) || different ?\n            updateBinding(bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(bindingIndex + 6, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getTView();\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory(null);\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1);\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2);\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3);\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4);\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values);\n    }\n    function isPure(index) {\n        return getTView().data[index + HEADER_OFFSET].pure;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /** @internal */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            if (isContentQueryHost(tNode)) {\n                add(this.shallow, tNode);\n                if (tNode.parent && isContentQueryHost(tNode.parent)) {\n                    // if node has a content query and parent also has a content query\n                    // both queries need to check this node for shallow matches\n                    add(this.parent.shallow, tNode);\n                }\n                return this.parent;\n            }\n            isRootNodeOfQuery(tNode) && add(this.shallow, tNode);\n            return this;\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function isRootNodeOfQuery(tNode) {\n        return tNode.parent === null || isContentQueryHost(tNode.parent);\n    }\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Iterates over all the directives for a node and returns index of a directive for a given type.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param currentView The view we are currently processing\n     * @param type Type of a directive to look for.\n     * @returns Index of a found directive or null when none found.\n     */\n    function getIdxOfMatchingDirective(tNode, currentView, type) {\n        var defs = currentView[TVIEW].data;\n        if (defs) {\n            var flags = tNode.flags;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var start = flags >> 16 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            for (var i = start; i < end; i++) {\n                var def = defs[i];\n                if (def.type === type) {\n                    return i;\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryRead(tNode, currentView, read) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = getIdxOfMatchingDirective(tNode, currentView, read);\n            if (matchingIdx !== null) {\n                return currentView[matchingIdx];\n            }\n        }\n        return null;\n    }\n    function queryReadByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function add(query, tNode) {\n        var currentView = getViewData();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                // if read token and / or strategy is not specified, use type as read token\n                var result = queryRead(tNode, currentView, predicate.read || type);\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var directiveIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (directiveIdx !== null) {\n                        var result = null;\n                        if (predicate.read) {\n                            result = queryRead(tNode, currentView, predicate.read);\n                        }\n                        else {\n                            if (directiveIdx > -1) {\n                                result = currentView[directiveIdx];\n                            }\n                            else {\n                                // if read token and / or strategy is not specified,\n                                // detect it using appropriate tNode type\n                                result = queryReadByTNodeType(tNode, currentView);\n                            }\n                        }\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    var QueryList_ = /** @class */ (function () {\n        function QueryList_() {\n            this.dirty = true;\n            this.changes = new EventEmitter();\n            this._values = [];\n            /** @internal */\n            this._valuesTree = [];\n        }\n        Object.defineProperty(QueryList_.prototype, \"length\", {\n            get: function () { return this._values.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"first\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[0] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"last\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[values.length - 1] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList_.prototype.filter = function (fn) {\n            return this._values.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList_.prototype.find = function (fn) {\n            return this._values.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList_.prototype.reduce = function (fn, init) {\n            return this._values.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList_.prototype.some = function (fn) {\n            return this._values.some(fn);\n        };\n        QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n        QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n        QueryList_.prototype.toString = function () { return this._values.toString(); };\n        QueryList_.prototype.reset = function (res) {\n            this._values = flatten(res);\n            this.dirty = false;\n        };\n        QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        QueryList_.prototype.setDirty = function () { this.dirty = true; };\n        QueryList_.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList_;\n    }());\n    var QueryList = QueryList_;\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, \n    // TODO: \"read\" should be an AbstractType (FW-486)\n    read) {\n        ngDevMode && assertPreviousIsParent();\n        var queryList = new QueryList();\n        var queries = getOrCreateCurrentQueries(LQueries_);\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(null, queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type) ? true : false;\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (e) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (e) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts`s have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ÉµdefineBase': defineBase,\n        'ÉµdefineComponent': defineComponent,\n        'ÉµdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ÉµdefineNgModule': defineNgModule,\n        'ÉµdefinePipe': definePipe,\n        'ÉµdirectiveInject': directiveInject,\n        'ÉµgetFactoryOf': getFactoryOf,\n        'ÉµgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ÉµinjectAttribute': injectAttribute,\n        'ÉµtemplateRefExtractor': templateRefExtractor,\n        'ÉµNgOnChangesFeature': NgOnChangesFeature,\n        'ÉµProvidersFeature': ProvidersFeature,\n        'ÉµInheritDefinitionFeature': InheritDefinitionFeature,\n        'ÉµelementAttribute': elementAttribute,\n        'Éµbind': bind,\n        'Éµcontainer': container,\n        'ÉµnextContext': nextContext,\n        'ÉµcontainerRefreshStart': containerRefreshStart,\n        'ÉµcontainerRefreshEnd': containerRefreshEnd,\n        'ÉµloadQueryList': loadQueryList,\n        'ÉµnamespaceHTML': namespaceHTML,\n        'ÉµnamespaceMathML': namespaceMathML,\n        'ÉµnamespaceSVG': namespaceSVG,\n        'ÉµenableBindings': enableBindings,\n        'ÉµdisableBindings': disableBindings,\n        'ÉµelementStart': elementStart,\n        'ÉµelementEnd': elementEnd,\n        'Éµelement': element,\n        'ÉµEC': elementContainerStart,\n        'ÉµeC': elementContainerEnd,\n        'ÉµpureFunction0': pureFunction0,\n        'ÉµpureFunction1': pureFunction1,\n        'ÉµpureFunction2': pureFunction2,\n        'ÉµpureFunction3': pureFunction3,\n        'ÉµpureFunction4': pureFunction4,\n        'ÉµpureFunction5': pureFunction5,\n        'ÉµpureFunction6': pureFunction6,\n        'ÉµpureFunction7': pureFunction7,\n        'ÉµpureFunction8': pureFunction8,\n        'ÉµpureFunctionV': pureFunctionV,\n        'ÉµgetCurrentView': getCurrentView,\n        'ÉµrestoreView': restoreView,\n        'Éµinterpolation1': interpolation1,\n        'Éµinterpolation2': interpolation2,\n        'Éµinterpolation3': interpolation3,\n        'Éµinterpolation4': interpolation4,\n        'Éµinterpolation5': interpolation5,\n        'Éµinterpolation6': interpolation6,\n        'Éµinterpolation7': interpolation7,\n        'Éµinterpolation8': interpolation8,\n        'ÉµinterpolationV': interpolationV,\n        'ÉµelementClassProp': elementClassProp,\n        'Éµlistener': listener,\n        'Éµload': load,\n        'Éµprojection': projection,\n        'ÉµelementProperty': elementProperty,\n        'ÉµpipeBind1': pipeBind1,\n        'ÉµpipeBind2': pipeBind2,\n        'ÉµpipeBind3': pipeBind3,\n        'ÉµpipeBind4': pipeBind4,\n        'ÉµpipeBindV': pipeBindV,\n        'ÉµprojectionDef': projectionDef,\n        'Éµpipe': pipe,\n        'Éµquery': query,\n        'ÉµqueryRefresh': queryRefresh,\n        'ÉµregisterContentQuery': registerContentQuery,\n        'Éµreference': reference,\n        'ÉµelementStyling': elementStyling,\n        'ÉµelementStylingMap': elementStylingMap,\n        'ÉµelementStyleProp': elementStyleProp,\n        'ÉµelementStylingApply': elementStylingApply,\n        'Éµtemplate': template,\n        'Éµtext': text,\n        'ÉµtextBinding': textBinding,\n        'ÉµembeddedViewStart': embeddedViewStart,\n        'ÉµembeddedViewEnd': embeddedViewEnd,\n        'Éµi18nAttribute': i18nAttribute,\n        'Éµi18nExp': i18nExp,\n        'Éµi18nStart': i18nStart,\n        'Éµi18nEnd': i18nEnd,\n        'Éµi18nApply': i18nApply,\n        'ÉµsanitizeHtml': sanitizeHtml,\n        'ÉµsanitizeStyle': sanitizeStyle,\n        'ÉµdefaultStyleSanitizer': defaultStyleSanitizer,\n        'ÉµsanitizeResourceUrl': sanitizeResourceUrl,\n        'ÉµsanitizeScript': sanitizeScript,\n        'ÉµsanitizeUrl': sanitizeUrl\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        return deps.map(function (dep) { return reflectDependency(dep); });\n    }\n    function reflectDependency(dep) {\n        var meta = {\n            token: new compiler.LiteralExpr(null),\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            if (token === Injector) {\n                meta.resolved = compiler.R3ResolvedDependencyType.Injector;\n            }\n            else {\n                meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            }\n            meta.token = new compiler.WrappedNodeExpr(token);\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = new compiler.WrappedNodeExpr(param.token);\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = new compiler.LiteralExpr(param.attributeName);\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        compileNgModuleDefs(moduleType, ngModule);\n        setScopeOnDeclaredComponents(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            get: function () {\n                if (ngModuleDef === null) {\n                    var meta = {\n                        type: wrap(moduleType),\n                        bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$2).map(wrapReference),\n                        declarations: declarations.map(wrapReference),\n                        imports: flatten$1(ngModule.imports || EMPTY_ARRAY$2)\n                            .map(expandModuleWithProviders)\n                            .map(wrapReference),\n                        exports: flatten$1(ngModule.exports || EMPTY_ARRAY$2)\n                            .map(expandModuleWithProviders)\n                            .map(wrapReference),\n                        emitInline: true,\n                    };\n                    var res = compiler.compileNgModule(meta);\n                    ngModuleDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", []);\n                }\n                return ngModuleDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    var meta = {\n                        name: moduleType.name,\n                        type: wrap(moduleType),\n                        deps: reflectDependencies(moduleType),\n                        providers: new compiler.WrappedNodeExpr(ngModule.providers || EMPTY_ARRAY$2),\n                        imports: new compiler.WrappedNodeExpr([\n                            ngModule.imports || EMPTY_ARRAY$2,\n                            ngModule.exports || EMPTY_ARRAY$2,\n                        ]),\n                    };\n                    var res = compiler.compileInjector(meta);\n                    ngInjectorDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", res.statements);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopes.compilation.directives)\n            .map(function (dir) { return getDirectiveDef(dir) || getComponentDef(dir); })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedTyped = imported;\n            if (!isNgModule(importedTyped)) {\n                throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedTyped);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedTyped = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedTyped)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedTyped);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getNgModuleDef(exportedTyped)) {\n                scopes.exported.pipes.add(exportedTyped);\n            }\n            else {\n                scopes.exported.directives.add(exportedTyped);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$1(values) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$1(value)));\n            }\n            else {\n                out.push(value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function wrap(value) {\n        return new compiler.WrappedNodeExpr(value);\n    }\n    function wrapReference(value) {\n        var wrapped = wrap(value);\n        return { value: wrapped, type: wrapped };\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + stringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + stringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    // The ConstantPool is a requirement of the JIT'er.\n                    var constantPool = new compiler.ConstantPool();\n                    // Parse the template and check for errors.\n                    var template = compiler.parseTemplate(metadata.template, \"ng://\" + stringify(type) + \"/template.html\", {\n                        preserveWhitespaces: metadata.preserveWhitespaces || false,\n                    }, '');\n                    if (template.errors !== undefined) {\n                        var errors = template.errors.map(function (err) { return err.toString(); }).join(', ');\n                        throw new Error(\"Errors during JIT compilation of template for \" + stringify(type) + \": \" + errors);\n                    }\n                    var animations = metadata.animations !== null ? new compiler.WrappedNodeExpr(metadata.animations) : null;\n                    // Compile the component metadata, including template, into an expression.\n                    // TODO(alxhub): implement inputs, outputs, queries, etc.\n                    var res = compiler.compileComponentFromMetadata(__assign({}, directiveMetadata(type, metadata), { template: template, directives: new Map(), pipes: new Map(), viewQueries: [], wrapDirectivesInClosure: false, styles: metadata.styles || [], encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, animations: animations, viewProviders: metadata.viewProviders ? new compiler.WrappedNodeExpr(metadata.viewProviders) :\n                            null }), constantPool, compiler.makeBindingParser());\n                    var preStatements = __spread(constantPool.statements, res.statements);\n                    ngComponentDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngComponentDef.js\", preStatements);\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var constantPool = new compiler.ConstantPool();\n                    var sourceMapUrl = \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\";\n                    var res = compiler.compileDirectiveFromMetadata(directiveMetadata(type, directive), constantPool, compiler.makeBindingParser());\n                    var preStatements = __spread(constantPool.statements, res.statements);\n                    ngDirectiveDef = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, preStatements);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        var host = extractHostBindings(metadata, propMetadata);\n        var inputsFromMetadata = parseInputOutputs(metadata.inputs || []);\n        var outputsFromMetadata = parseInputOutputs(metadata.outputs || []);\n        var inputsFromType = {};\n        var outputsFromType = {};\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isInput(ann)) {\n                        inputsFromType[field] = ann.bindingPropertyName || field;\n                    }\n                    else if (isOutput(ann)) {\n                        outputsFromType[field] = ann.bindingPropertyName || field;\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return {\n            name: type.name,\n            type: new compiler.WrappedNodeExpr(type),\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type), host: host,\n            inputs: __assign({}, inputsFromMetadata, inputsFromType),\n            outputs: __assign({}, outputsFromMetadata, outputsFromType),\n            queries: [],\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: metadata.exportAs || null,\n            providers: metadata.providers ? new compiler.WrappedNodeExpr(metadata.providers) : null\n        };\n    }\n    function extractHostBindings(metadata, propMetadata) {\n        // First parse the declarations from the metadata.\n        var _a = compiler.parseHostBindings(metadata.host || {}), attributes = _a.attributes, listeners = _a.listeners, properties = _a.properties, animations = _a.animations;\n        if (Object.keys(animations).length > 0) {\n            throw new Error(\"Animation bindings are as-of-yet unsupported in Ivy\");\n        }\n        var _loop_2 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isHostBinding(ann)) {\n                        properties[ann.hostPropertyName || field] = field;\n                    }\n                    else if (isHostListener(ann)) {\n                        listeners[ann.eventName || field] = field + \"(\" + (ann.args || []).join(',') + \")\";\n                    }\n                });\n            }\n        };\n        // Next, loop over the properties of the object, looking for @HostBinding and @HostListener.\n        for (var field in propMetadata) {\n            _loop_2(field);\n        }\n        return { attributes: attributes, listeners: listeners, properties: properties };\n    }\n    function isInput(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function isOutput(value) {\n        return value.ngMetadataName === 'Output';\n    }\n    function isHostBinding(value) {\n        return value.ngMetadataName === 'HostBinding';\n    }\n    function isHostListener(value) {\n        return value.ngMetadataName === 'HostListener';\n    }\n    function parseInputOutputs(values) {\n        return values.reduce(function (map, value) {\n            var _a = __read(value.split(',').map(function (piece) { return piece.trim(); }), 2), field = _a[0], property = _a[1];\n            map[field] = property || field;\n            return map;\n        }, {});\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var sourceMapUrl = \"ng://\" + stringify$1(type) + \"/ngPipeDef.js\";\n                    var name_1 = type.name;\n                    var res = compiler.compilePipeFromMetadata({\n                        name: name_1,\n                        type: new compiler.WrappedNodeExpr(type),\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true,\n                    });\n                    ngPipeDef = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, res.statements);\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @usageNotes\n     *\n     * ### Using animations\n     *\n     * The following snippet shows an animation trigger in a component's\n     * metadata. The trigger is attached to an element in the component's\n     * template, using \"@_trigger_name_\", and a state expression that is evaluated\n     * at run time to determine whether the animation should start.\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'animation-cmp',\n     *   templateUrl: 'animation-cmp.html',\n     *   animations: [\n     *     trigger('myTriggerName', [\n     *       state('on', style({ opacity: 1 }),\n     *       state('off', style({ opacity: 0 }),\n     *       transition('on => off', [\n     *         animate(\"1s\")\n     *       ])\n     *     ])\n     *   ]\n     * })\n     * ```\n     *\n     * ```html\n     * <!-- animation-cmp.html -->\n     * <div @myTriggerName=\"expression\">...</div>\n     * ```\n     *\n     * ### Preserving whitespace\n     *\n     * Removing whitespace can greatly reduce AOT-generated code size, and speed up view creation.\n     * As of Angular 6, default for `preserveWhitespaces` is false (whitespace is removed).\n     * To change the default setting for all components in your application, set\n     * the `preserveWhitespaces` option of the AOT compiler.\n     *\n     * Current implementation removes whitespace characters as follows:\n     * - Trims all whitespaces at the beginning and the end of a template.\n     * - Removes whitespace-only text nodes. For example,\n     * `<button>Action 1</button>  <button>Action 2</button>` becomes\n     * `<button>Action 1</button><button>Action 2</button>`.\n     * - Replaces a series of whitespace characters in text nodes with a single space.\n     * For example, `<span>\\n some text\\n</span>` becomes `<span> some text </span>`.\n     * - Does NOT alter text nodes inside HTML tags such as `<pre>` or `<textarea>`,\n     * where whitespace characters are significant.\n     *\n     * Note that these transformations can influence DOM nodes layout, although impact\n     * should be minimal.\n     *\n     * You can override the default behavior to preserve whitespace characters\n     * in certain fragments of a template. For example, you can exclude an entire\n     * DOM sub-tree by using the `ngPreserveWhitespaces` attribute:\n     *\n     * ```html\n     * <div ngPreserveWhitespaces>\n     *     whitespaces are preserved here\n     *     <span>    and here </span>\n     * </div>\n     * ```\n     *\n     * You can force a single space to be preserved in a text node by using `&ngsp;`,\n     * which is replaced with a space character by Angular's template\n     * compiler:\n     *\n     * ```html\n     * <a>Spaces</a>&ngsp;<a>between</a>&ngsp;<a>links.</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * Note that sequences of `&ngsp;` are still collapsed to just one space character when\n     * the `preserveWhitespaces` option is set to `false`.\n     *\n     * ```html\n     * <a>before</a>&ngsp;&ngsp;&ngsp;<a>after</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * To preserve sequences of whitespace characters, use the\n     * `ngPreserveWhitespaces` attribute.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0];\n        };\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('7.1.0-beta.0+8.sha-b0476f3');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n        var meta = srcMeta || { providedIn: null };\n        var def = null;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Check whether the injectable metadata includes a provider specification.\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var ctorDeps = reflectDependencies(type);\n                    var userDeps = undefined;\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        userDeps = convertDependencies(meta.deps);\n                    }\n                    // Decide which flavor of factory to generate, based on the provider specified.\n                    // Only one of the use* fields should be set.\n                    var useClass = undefined;\n                    var useFactory = undefined;\n                    var useValue = undefined;\n                    var useExisting = undefined;\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        useClass = new compiler.WrappedNodeExpr(type);\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        useClass = new compiler.WrappedNodeExpr(meta.useClass);\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        useValue = new compiler.WrappedNodeExpr(meta.useValue);\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        useFactory = new compiler.WrappedNodeExpr(meta.useFactory);\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        useExisting = new compiler.WrappedNodeExpr(meta.useExisting);\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    var _a = compiler.compileInjectable({\n                        name: type.name,\n                        type: new compiler.WrappedNodeExpr(type),\n                        providedIn: computeProvidedIn(meta.providedIn),\n                        useClass: useClass,\n                        useFactory: useFactory,\n                        useValue: useValue,\n                        useExisting: useExisting,\n                        ctorDeps: ctorDeps,\n                        userDeps: userDeps,\n                    }), expression = _a.expression, statements = _a.statements;\n                    def = compiler.jitExpression(expression, angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", statements);\n                }\n                return def;\n            },\n        });\n    }\n    function computeProvidedIn(providedIn) {\n        if (providedIn == null || typeof providedIn === 'string') {\n            return new compiler.LiteralExpr(providedIn);\n        }\n        else {\n            return new compiler.WrappedNodeExpr(providedIn);\n        }\n    }\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    function isUseValueProvider(meta) {\n        return USE_VALUE$2 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus.ngInjectableDef = defineInjectable({ token: ApplicationInitStatus, factory: function ApplicationInitStatus_Factory(t) { return new (t || ApplicationInitStatus)(inject(APP_INITIALIZER, 8)); }, providedIn: null });\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console.ngInjectableDef = defineInjectable({ token: Console, factory: function Console_Factory(t) { return new (t || Console)(); }, providedIn: null });\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n        }\n        /**\n         * Compiles the given NgModule and all of its components. All templates of the components listed\n         * in `entryComponents` have to be inlined.\n         */\n        Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n        /**\n         * Compiles the given NgModule and all of its components\n         */\n        Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n        /**\n         * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler.ngInjectableDef = defineInjectable({ token: Compiler, factory: function Compiler_Factory(t) { return new (t || Compiler)(); }, providedIn: null });\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this._watchAngularEvents();\n            _ngZone.run(function () { _this.taskTrackingZone = Zone.current.get('TaskTrackingZone'); });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.ngInjectableDef = defineInjectable({ token: Testability, factory: function Testability_Factory(t) { return new (t || Testability)(inject(NgZone)); }, providedIn: null });\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.ngInjectableDef = defineInjectable({ token: TestabilityRegistry, factory: function TestabilityRegistry_Factory(t) { return new (t || TestabilityRegistry)(); }, providedIn: null });\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__POST_R3__;\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        return Promise.resolve(new NgModuleFactory$1(moduleType));\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef.ngInjectableDef = defineInjectable({ token: PlatformRef, factory: function PlatformRef_Factory(t) { return new (t || PlatformRef)(inject(Injector)); }, providedIn: null });\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef.ngInjectableDef = defineInjectable({ token: ApplicationRef, factory: function ApplicationRef_Factory(t) { return new (t || ApplicationRef)(inject(NgZone), inject(Console), inject(Injector), inject(ErrorHandler), inject(ComponentFactoryResolver), inject(ApplicationInitStatus)); }, providedIn: null });\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    var moduleFactories = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = moduleFactories.get(id);\n        if (existing) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n        }\n        moduleFactories.set(id, factory);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    function getModuleFactory(id) {\n        var factory = moduleFactories.get(id);\n        if (!factory)\n            throw new Error(\"No module with ID \" + id + \" loaded\");\n        return factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList$1 = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$2(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$2(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$2(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.ngInjectableDef = defineInjectable({ token: SystemJsNgModuleLoader, factory: function SystemJsNgModuleLoader_Factory(t) { return new (t || SystemJsNgModuleLoader)(inject(Compiler), inject(SystemJsNgModuleLoaderConfig, 8)); }, providedIn: null });\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /** @internal */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /** @internal */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    /**\n     * @publicApi\n     */\n    var DebugNode = /** @class */ (function () {\n        function DebugNode(nativeNode, parent, _debugContext) {\n            this.nativeNode = nativeNode;\n            this._debugContext = _debugContext;\n            this.listeners = [];\n            this.parent = null;\n            if (parent && parent instanceof DebugElement) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode;\n    }());\n    /**\n     * @publicApi\n     */\n    var DebugElement = /** @class */ (function (_super) {\n        __extends(DebugElement, _super);\n        function DebugElement(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    c.parent = _this;\n                });\n            }\n        };\n        DebugElement.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement.prototype, \"children\", {\n            get: function () {\n                return this.childNodes.filter(function (node) { return node instanceof DebugElement; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement;\n    }(DebugNode));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    /**\n     * @publicApi\n     */\n    function getDebugNode(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule.ngModuleDef = defineNgModule({ type: ApplicationModule, bootstrap: [], declarations: [], imports: [], exports: [] });\n        ApplicationModule.ngInjectorDef = defineInjector({ factory: function ApplicationModule_Factory(t) { return new (t || ApplicationModule)(inject(ApplicationRef)); }, providers: APPLICATION_MODULE_PROVIDERS, imports: [] });\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var ivyEnabled = SWITCH_IVY_ENABLED__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$4 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = 0 /* Default */; }\n            var flags = 0 /* None */;\n            if (injectFlags & 4 /* SkipSelf */) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & 2 /* Self */) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList$1();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext() || (this.createDebugContext(el));\n            if (debugCtx) {\n                indexDebugNode(new DebugElement(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adapts the DebugRendererFactory2 to create a DebugRenderer2 specific for IVY.\n     *\n     * The created DebugRenderer know how to create a Debug Context specific to IVY.\n     */\n    var Render3DebugRendererFactory2 = /** @class */ (function (_super) {\n        __extends(Render3DebugRendererFactory2, _super);\n        function Render3DebugRendererFactory2() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Render3DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            var renderer = _super.prototype.createRenderer.call(this, element, renderData);\n            renderer.debugContextFactory = function (nativeElement) { return new Render3DebugContext(nativeElement); };\n            return renderer;\n        };\n        return Render3DebugRendererFactory2;\n    }(DebugRendererFactory2));\n    /**\n     * Stores context information about view nodes.\n     *\n     * Used in tests to retrieve information those nodes.\n     */\n    var Render3DebugContext = /** @class */ (function () {\n        function Render3DebugContext(_nativeNode) {\n            this._nativeNode = _nativeNode;\n        }\n        Object.defineProperty(Render3DebugContext.prototype, \"nodeIndex\", {\n            get: function () { return loadContext(this._nativeNode).nodeIndex; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"view\", {\n            get: function () { return loadContext(this._nativeNode).lViewData; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"injector\", {\n            get: function () { return getInjector(this._nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"component\", {\n            get: function () { return getHostComponent(this._nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"providerTokens\", {\n            get: function () {\n                var lDebugCtx = loadContext(this._nativeNode);\n                var lViewData = lDebugCtx.lViewData;\n                var tNode = lViewData[TVIEW].data[lDebugCtx.nodeIndex];\n                var directivesCount = tNode.flags & 4095 /* DirectiveCountMask */;\n                if (directivesCount > 0) {\n                    var directiveIdxStart = tNode.flags >> 16 /* DirectiveStartingIndexShift */;\n                    var directiveIdxEnd = directiveIdxStart + directivesCount;\n                    var viewDirectiveDefs = this.view[TVIEW].data;\n                    var directiveDefs = viewDirectiveDefs.slice(directiveIdxStart, directiveIdxEnd);\n                    return directiveDefs.map(function (directiveDef) { return directiveDef.type; });\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"references\", {\n            get: function () { return getLocalRefs(this._nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"context\", {\n            // TODO(pk): check previous implementation and re-implement\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"componentRenderElement\", {\n            // TODO(pk): check previous implementation and re-implement\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"renderNode\", {\n            // TODO(pk): check previous implementation and re-implement\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        // TODO(pk): check previous implementation and re-implement\n        Render3DebugContext.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            console.error.apply(console, __spread(values));\n        };\n        return Render3DebugContext;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds a player to an element, directive or component instance that will later be\n     * animated once change detection has passed.\n     *\n     * When a player is added to a reference it will stay active until `player.destroy()`\n     * is called. Once called then the player will be removed from the active players\n     * present on the associated ref instance.\n     *\n     * To get a list of all the active players on an element see [getPlayers].\n     *\n     * @param ref The element, directive or component that the player will be placed on.\n     * @param player The player that will be triggered to play once change detection has run.\n     */\n    function addPlayer(ref, player) {\n        var context = getContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return;\n        }\n        var element$$1 = context.native;\n        var lViewData = context.lViewData;\n        var playerContext = getOrCreatePlayerContext(element$$1, context);\n        var rootContext = getRootContext$1(lViewData);\n        addPlayerInternal(playerContext, rootContext, element$$1, player, 0, ref);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n    /**\n     * Returns a list of all the active players present on the provided ref instance (which can\n     * be an instance of a directive, component or element).\n     *\n     * This function will only return players that have been added to the ref instance using\n     * `addPlayer` or any players that are active through any template styling bindings\n     * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n     */\n    function getPlayers(ref) {\n        var context = getContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return [];\n        }\n        var stylingContext = getStylingContext(context.nodeIndex - HEADER_OFFSET, context.lViewData);\n        var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n        return playerContext ? getPlayersInternal(playerContext) : [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.Injector = Injector;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ÉµNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList$1;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ÉµALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ÉµAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ÉµdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ÉµdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ÉµdevModeEqual = devModeEqual;\n    exports.ÉµisListLikeIterable = isListLikeIterable;\n    exports.ÉµisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ÉµConsole = Console;\n    exports.ÉµgetInjectableDef = getInjectableDef;\n    exports.Éµinject = inject;\n    exports.ÉµsetCurrentInjector = setCurrentInjector;\n    exports.ÉµAPP_ROOT = APP_ROOT;\n    exports.ÉµivyEnabled = ivyEnabled;\n    exports.ÉµComponentFactory = ComponentFactory;\n    exports.ÉµCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ÉµresolveComponentResources = resolveComponentResources;\n    exports.ÉµReflectionCapabilities = ReflectionCapabilities;\n    exports.ÉµRenderDebugInfo = RenderDebugInfo;\n    exports.Éµ_sanitizeHtml = _sanitizeHtml;\n    exports.Éµ_sanitizeStyle = _sanitizeStyle;\n    exports.Éµ_sanitizeUrl = _sanitizeUrl;\n    exports.Éµglobal = _global;\n    exports.ÉµlooseIdentical = looseIdentical;\n    exports.Éµstringify = stringify;\n    exports.ÉµmakeDecorator = makeDecorator;\n    exports.ÉµisObservable = isObservable;\n    exports.ÉµisPromise = isPromise;\n    exports.ÉµclearOverrides = clearOverrides;\n    exports.ÉµinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ÉµoverrideComponentView = overrideComponentView;\n    exports.ÉµoverrideProvider = overrideProvider;\n    exports.ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ÉµdefineBase = defineBase;\n    exports.ÉµdefineComponent = defineComponent;\n    exports.ÉµdefineDirective = defineDirective;\n    exports.ÉµdefinePipe = definePipe;\n    exports.ÉµdefineNgModule = defineNgModule;\n    exports.ÉµdetectChanges = detectChanges;\n    exports.ÉµrenderComponent = renderComponent;\n    exports.ÉµRender3ComponentFactory = ComponentFactory$1;\n    exports.ÉµRender3ComponentRef = ComponentRef$1;\n    exports.ÉµdirectiveInject = directiveInject;\n    exports.ÉµinjectAttribute = injectAttribute;\n    exports.ÉµgetFactoryOf = getFactoryOf;\n    exports.ÉµgetInheritedFactory = getInheritedFactory;\n    exports.ÉµtemplateRefExtractor = templateRefExtractor;\n    exports.ÉµProvidersResolver = ProvidersFeature;\n    exports.ÉµInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ÉµNgOnChangesFeature = NgOnChangesFeature;\n    exports.ÉµRender3NgModuleRef = NgModuleRef$1;\n    exports.ÉµmarkDirty = markDirty;\n    exports.ÉµNgModuleFactory = NgModuleFactory$1;\n    exports.ÉµNO_CHANGE = NO_CHANGE;\n    exports.Éµcontainer = container;\n    exports.ÉµnextContext = nextContext;\n    exports.ÉµelementStart = elementStart;\n    exports.ÉµnamespaceHTML = namespaceHTML;\n    exports.ÉµnamespaceMathML = namespaceMathML;\n    exports.ÉµnamespaceSVG = namespaceSVG;\n    exports.Éµelement = element;\n    exports.Éµlistener = listener;\n    exports.Éµtext = text;\n    exports.ÉµembeddedViewStart = embeddedViewStart;\n    exports.Éµquery = query;\n    exports.ÉµregisterContentQuery = registerContentQuery;\n    exports.Éµprojection = projection;\n    exports.Éµbind = bind;\n    exports.Éµinterpolation1 = interpolation1;\n    exports.Éµinterpolation2 = interpolation2;\n    exports.Éµinterpolation3 = interpolation3;\n    exports.Éµinterpolation4 = interpolation4;\n    exports.Éµinterpolation5 = interpolation5;\n    exports.Éµinterpolation6 = interpolation6;\n    exports.Éµinterpolation7 = interpolation7;\n    exports.Éµinterpolation8 = interpolation8;\n    exports.ÉµinterpolationV = interpolationV;\n    exports.ÉµpipeBind1 = pipeBind1;\n    exports.ÉµpipeBind2 = pipeBind2;\n    exports.ÉµpipeBind3 = pipeBind3;\n    exports.ÉµpipeBind4 = pipeBind4;\n    exports.ÉµpipeBindV = pipeBindV;\n    exports.ÉµpureFunction0 = pureFunction0;\n    exports.ÉµpureFunction1 = pureFunction1;\n    exports.ÉµpureFunction2 = pureFunction2;\n    exports.ÉµpureFunction3 = pureFunction3;\n    exports.ÉµpureFunction4 = pureFunction4;\n    exports.ÉµpureFunction5 = pureFunction5;\n    exports.ÉµpureFunction6 = pureFunction6;\n    exports.ÉµpureFunction7 = pureFunction7;\n    exports.ÉµpureFunction8 = pureFunction8;\n    exports.ÉµpureFunctionV = pureFunctionV;\n    exports.ÉµgetCurrentView = getCurrentView;\n    exports.ÉµrestoreView = restoreView;\n    exports.ÉµcontainerRefreshStart = containerRefreshStart;\n    exports.ÉµcontainerRefreshEnd = containerRefreshEnd;\n    exports.ÉµqueryRefresh = queryRefresh;\n    exports.ÉµloadQueryList = loadQueryList;\n    exports.ÉµelementEnd = elementEnd;\n    exports.ÉµelementProperty = elementProperty;\n    exports.ÉµprojectionDef = projectionDef;\n    exports.Éµreference = reference;\n    exports.ÉµenableBindings = enableBindings;\n    exports.ÉµdisableBindings = disableBindings;\n    exports.ÉµelementAttribute = elementAttribute;\n    exports.ÉµelementStyling = elementStyling;\n    exports.ÉµelementStylingMap = elementStylingMap;\n    exports.ÉµelementStyleProp = elementStyleProp;\n    exports.ÉµelementStylingApply = elementStylingApply;\n    exports.ÉµelementClassProp = elementClassProp;\n    exports.ÉµtextBinding = textBinding;\n    exports.Éµtemplate = template;\n    exports.ÉµembeddedViewEnd = embeddedViewEnd;\n    exports.Éµstore = store;\n    exports.Éµload = load;\n    exports.Éµpipe = pipe;\n    exports.ÉµwhenRendered = whenRendered;\n    exports.Éµi18nAttribute = i18nAttribute;\n    exports.Éµi18nExp = i18nExp;\n    exports.Éµi18nStart = i18nStart;\n    exports.Éµi18nEnd = i18nEnd;\n    exports.Éµi18nApply = i18nApply;\n    exports.Éµi18nExpMapping = i18nExpMapping;\n    exports.Éµi18nInterpolation1 = i18nInterpolation1;\n    exports.Éµi18nInterpolation2 = i18nInterpolation2;\n    exports.Éµi18nInterpolation3 = i18nInterpolation3;\n    exports.Éµi18nInterpolation4 = i18nInterpolation4;\n    exports.Éµi18nInterpolation5 = i18nInterpolation5;\n    exports.Éµi18nInterpolation6 = i18nInterpolation6;\n    exports.Éµi18nInterpolation7 = i18nInterpolation7;\n    exports.Éµi18nInterpolation8 = i18nInterpolation8;\n    exports.Éµi18nInterpolationV = i18nInterpolationV;\n    exports.Éµi18nMapping = i18nMapping;\n    exports.ÉµWRAP_RENDERER_FACTORY2 = WRAP_RENDERER_FACTORY2;\n    exports.ÉµRender3DebugRendererFactory2 = Render3DebugRendererFactory2;\n    exports.ÉµcompileComponent = compileComponent;\n    exports.ÉµcompileDirective = compileDirective;\n    exports.ÉµcompileNgModule = compileNgModule;\n    exports.ÉµcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ÉµpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ÉµcompilePipe = compilePipe;\n    exports.ÉµsanitizeHtml = sanitizeHtml;\n    exports.ÉµsanitizeStyle = sanitizeStyle;\n    exports.ÉµsanitizeUrl = sanitizeUrl;\n    exports.ÉµsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ÉµbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ÉµbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ÉµbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ÉµbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ÉµbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ÉµgetContext = getContext;\n    exports.ÉµbindPlayerFactory = bindPlayerFactory;\n    exports.ÉµaddPlayer = addPlayer;\n    exports.ÉµgetPlayers = getPlayers;\n    exports.ÉµcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ÉµSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ÉµSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ÉµSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ÉµSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ÉµSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ÉµSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ÉµSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ÉµSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ÉµSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ÉµSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ÉµSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ÉµpublishGlobalUtil = publishGlobalUtil;\n    exports.ÉµregisterModuleFactory = registerModuleFactory;\n    exports.ÉµEMPTY_ARRAY = EMPTY_ARRAY$4;\n    exports.ÉµEMPTY_MAP = EMPTY_MAP;\n    exports.Éµand = anchorDef;\n    exports.Éµccf = createComponentFactory;\n    exports.Éµcmf = createNgModuleFactory;\n    exports.Éµcrt = createRendererType2;\n    exports.Éµdid = directiveDef;\n    exports.Éµeld = elementDef;\n    exports.ÉµelementEventFullName = elementEventFullName;\n    exports.ÉµgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ÉµinlineInterpolate = inlineInterpolate;\n    exports.Éµinterpolate = interpolate;\n    exports.Éµmod = moduleDef;\n    exports.Éµmpd = moduleProvideDef;\n    exports.Éµncd = ngContentDef;\n    exports.Éµnov = nodeValue;\n    exports.Éµpid = pipeDef;\n    exports.Éµprd = providerDef;\n    exports.Éµpad = pureArrayDef;\n    exports.Éµpod = pureObjectDef;\n    exports.Éµppd = purePipeDef;\n    exports.Éµqud = queryDef;\n    exports.Éµted = textDef;\n    exports.Éµunv = unwrapValue;\n    exports.Éµvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}