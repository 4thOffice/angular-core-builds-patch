{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","compiler","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","getClosureSafeProperty","objWithPropertyToExtract","Error","fillProperties","source","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_INJECTABLE_DEF","ngInjectableDef","NG_INJECTOR_DEF","ngInjectorDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","__NG_ELEMENT_ID__","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","getInjectableDef","type","getInjectorDef","InjectionToken","_desc","ngMetadataName","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ÉµChangeDetectorStatus","ViewEncapsulation","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","styleUrls","unwrapResponse","response","text","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","Inject","Optional","Self","SkipSelf","Host","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","get","notFoundValue","Injector","parent","isArray","StaticInjector","NULL","inject","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","USE_VALUE","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","j","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","flags","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","forEach","v","obj","charAt","substr","context","parts","JSON","replace","_currentInjector","setCurrentInjector","injector","former","injectableDef","injectArgs","types","arg","EMPTY$1","EMPTY_ARRAY","_renderCompCount","defineComponent","componentDefinition","typePrototype","declaredInputs","def","diPublic","consts","vars","hostVars","template","hostBindings","contentQueries","contentQueriesRefresh","attributes","inputs","outputs","exportAs","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","viewProviders","id","styles","_","noSideEffects","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","getComponentDef","getDirectiveDef","getPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","secondary","newLookup","minifiedKey","publicName","declaredName","defineBase","baseDefinition","defineDirective","definePipe","pipeDef","pure","getNgModuleDef","MONKEY_PATCH_KEY_NAME","HEADER_OFFSET","TVIEW","FLAGS","PARENT","NEXT","QUERIES","HOST","HOST_NODE","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR$1","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","CONTENT_QUERIES","DECLARATION_VIEW","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","ACTIVE_INDEX","VIEWS","NATIVE","RENDER_PARENT","stringify$1","loadInternal","arr","readElementValue","getNativeByIndex","getNativeByTNode","tNode","hostView","getTNode","view","getComponentViewByIndex","nodeIndex","slotValue","isContentQueryHost","isComponent","isLContainer","getRootView","lViewData","readPatchedLViewData","getRootContext","viewOrComponent","readPatchedData","getContext","mpValue","isComponentInstance","instance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","firstChild","directiveIndexStart","getDirectiveStartIndex","directiveIndexEnd","getDirectiveEndIndex","traverseNextElement","discoverDirectives","includeComponents","directiveStartIndex","directiveEndIndex","findViaNativeElement","existingCtx","native","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","startIndex","count","queueInitHooks","tView","initHooks","checkHooks","queueLifecycleHooks","firstTemplatePass","start","end","queueContentHooks","queueViewHooks","queueDestroyHooks","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeInitHooks","currentView","creationMode","executeHooks","allHooks","hooksToCall","callHooks","throwMultipleComponentError","tagName","RendererStyleFlags3","TNODE","PARENT_INJECTOR","INJECTOR_SIZE","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","getParentNative","getHostNative","hostTNode","getLContainer","embeddedView","containerHostIndex","getContainerRenderParent","tViewNode","container","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","rootTNode","node","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","lContainer","componentView","findComponentView","head","projection","insertBefore","removeChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","lView","parentView","containerIndex","views","splice","detachView","removeIndex","detached","viewToDetach","removeView","containerHost","destroyLView","getLViewChild","viewData","childIndex","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","removeListeners","cleanup","removeEventListener","cleanupFn","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","destroy","getRenderParent","canInsertNativeNode","currentNode","getHighestElementContainer","canInsertNativeChildOfView","viewTNode","canInsertNativeChildOfElement","nativeInsertBefore","appendChild","childEl","childTNode","parentEl","parentTNode","getBeforeNodeForView","ngContainer","containerNative","parentNative","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","mode","nodeAttrs","attrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","BoundPlayerFactory","CorePlayerHandler","_players","flushPlayers","player","play","queuePlayer","createEmptyStylingContext","element","sanitizer","initialStylingValues","getStylingContext","storageIndex","wrapper","isStylingContext","stylingTemplate","allocStylingContext","templateStyleContext","addPlayerInternal","playerContext","rootContext","playerContextIndex","ref","addEventListener","playerHandler","getPlayerContext","stylingContext","allocPlayerContext","EMPTY_ARR","EMPTY_OBJ","updateStyleProp","input","singleIndex","currValue","getValue","currFlag","getPointers","hasValueChanged","isClassBased_5","playerBuilder","ClassAndStylePlayerBuilder","value_1","currPlayerIndex","getPlayerBuilderIndex","playerBuildersAreDirty","hasPlayerBuilderChanged","newIndex","setPlayerBuilder","setPlayerBuilderIndex","setValue","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","valueExists","setDirty","setContextDirty","setContextPlayersDirty","setStyle","prop","store","DashCase","setProperty","removeStyle","removeProperty","setClass","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBased","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","getStyleSanitizer","setProp","builder","insertionIndex","playerBuilderIndex","getPlayerBuilder","setFlag","getProp","findEntryPositionByProp","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","tmpPlayerBuilderIndex","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","playerIndex","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","prepareInitialFlag","rendererFactory","elementDepthCount","bindingsEnabled","previousOrParentTNode","isParent","currentQueries","_element","_type","_values","_dirty","_factory","buildPlayer","currentPlayer","_CLEAN_PROMISE","CIRCULAR$1","getRenderer","getRendererFactory","getCurrentSanitizer","getCurrentView","restoreView","viewToRestore","contextViewData","getPreviousOrParentTNode","_getViewData","getCleanup","getTViewCleanup","checkNoChangesMode","bindingRootIndex","getBindingRoot","enterView","newView","oldView","bindingStartIndex","leaveView","creationOnly","refreshDescendantViews","setHostBindings","parentFirstTemplatePass","refreshDynamicEmbeddedViews","container_1","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","directiveDefIdx","refreshChildComponents","componentRefresh","expandoInstructions","expandoStartIndex","currentDirectiveIndex","currentElementIndex","instruction","executeInitAndContentHooks","createLViewData","blueprint","createNodeAtIndex","createTNode","createViewNode","adjustBlueprintForNewNode","resetComponentState","viewToRender","rf","_isParent","_previousOrParentTNode","tickRootContext","namespaceHTML","nextContext","level","walkUpViews","nestingLevel","renderComponentOrTemplate","componentOrContext","templateFn","begin","getRenderFlags","_currentNamespace","namespaceSVG","namespaceMathML","elementStart","elementEnd","elementCreate","setUpAttributes","createDirectivesAndLocals","overriddenRenderer","rendererToUse","createElement","createElementNS","localRefExtractor","cacheMatchingDirectivesForNode","exportsMap","","matches","currentMatches","findDirectiveMatches","generateExpandoBlock","totalHostVars","valueIndex","resolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","prefillHostVars","instantiateDirectivesDirectly","clone","addComponentLogic","directiveCreate","saveResolvedLocalsInData","localIndex","directiveCount","elementIndex","NO_CHANGE","registry","directiveRegistry","throwCyclicDependencyError","queueComponentIndexForCheck","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","pipeRegistry","isProc","attrName","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","querySelector","listener","eventName","listenerFn","useCapture","listen","storeCleanupFn","wrappedListener","wrapListenerWithPreventDefault","wrapListenerIn_preventDefault","preventDefault","returnValue","cleanupInstances","generatePropertyAliases","outputData","createOutput","subscription","subscribe","storeCleanupWithContext","unsubscribe","addNode","elementAttribute","element_1","removeAttribute","strValue","elementProperty","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","enableBindings","disableBindings","tViews","tParent","injectorIndex","initialInputs","tNodeFlags","direction","propStore","isInput","defs","directiveDef","propertyAliasMap","internalName","elementClassProp","stylingIndex","val","updateClassProp","addOrRemove","elementStyling","classDeclarations","styleDeclarations","styleSanitizer","createStylingContextTemplate","initialClassDeclarations","initialStyleDeclarations","stylesLookup","classesLookup","totalStyleDeclarations","hasPassedDeclarations","styleProps","classNames","classNamesIndexStart","totalProps","maxLength","multiStart","isClassBased_1","indexForInitial","initialValue","indexForSingle","initialFlag","elementStylingApply","renderStyleAndClassBindings","rootOrView","classesStore","stylesStore","totalPlayersQueued","isContextDirty","flushPlayerBuilders","multiStartIndex","isClassBased_6","valueToApply","playersStartIndex","playerInsertionIndex","oldPlayer","scheduleTick","elementStyleProp","styleIndex","suffix","valueToAdd","elementStylingMap","classes","updateStylingMap","classesInput","stylesInput","classesPlayerBuilder","stylesPlayerBuilder","classesValue","stylesValue","ignoreAllClassUpdates","ignoreAllStyleUpdates","applyAllClasses","classesPlayerBuilderIndex","stylesPlayerBuilderIndex","split","classesStartIndex","dirty","ctxIndex","propIndex","propLimit","isClassBased_2","adjustedPropIndex","newProp","newValue","indexOfEntry","valueToCompare","flagToCompare","newFlag","isClassBased_3","isClassBased_4","textNative","textBinding","element_2","textContent","directive","baseDirectiveCreate","setInputsFromAttrs","directiveIndex","initialInputData","generateInitialInputs","minifiedInputName","attrValue","addToViewTree","queueHostBindingForCheck","dirIndex","createLContainer","hostNative","isForViewContainerRef","containerInternal","comment","createComment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerTNode","scanForView","tContainerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","viewHost","adjustedElementIndex","viewAttached","syncViewWithBlueprint","componentTView","detectChangesInternal","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","nextNode","projectionNodeStack$1","selectorIndex","nodeToProject","projectedView","currentComponentView","firstProjectedNode","adjustedHostIndex","markViewDirty","res_1","nothingScheduled","clean","scheduler","rootComponent","detectChanges","detectChangesInRootView","hostTView","createViewQuery","updateViewQuery","bindingUpdated","interpolationV","different","content","interpolation1","prefix","v0","interpolation2","i0","v1","bindingUpdated2","interpolation3","i1","v2","bindingUpdated3","interpolation4","i2","v3","bindingUpdated4","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","loadQueryList","queryListIdx","load","getBinding","bindingIndex","isDifferent","throwErrorIfNoChangesMode","oldValue","msg","updateBinding","exp1","exp2","exp3","exp4","getTView","registerContentQuery","queryList","savedContentQueriesLength","tViewContentQueries","CLEAN_PROMISE","ROOT_EXPANDO_INSTRUCTIONS","createRootComponentView","rNode","createRootComponent","hostRNode","componentDef","hostFeatures","createRootContext","LifecycleHooksFeature","rootTView","isComponentDef","definition","InheritDefinitionFeature","superType","getSuperType","getPrototypeOf","_loop_1","e_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","prevViewQuery_1","superViewQuery_1","ctx","prevContentQueries_1","superContentQueries_1","prevContentQueriesRefresh_1","superContentQueriesRefresh_1","queryIndex","features_1","features_1_1","e_1_1","return","superPrototype","PRIVATE_PREFIX","NgOnChangesFeature","declaredToMinifiedInputs","proto","privateMinKey_1","originalProperty","checkProto","setter_1","simpleChanges","writable","currentChange","configurable","onChangesWrapper","delegateHook","ngOnChanges","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","setUpBloom","parentLoc","getParentInjectorLocation","parentIndex","getParentInjectorView","parentData","bloomIndex","footer","viewOffset","location","startView","diPublicInInjector","bloomAdd","bloomBit","mask","b6","b5","tData","getOrCreateNodeInjector","directiveInject","getOrCreateInjectable","injectAttribute","attrNameToInject","bloomHash","bloomHashBitOrFactory","tokenId","startInjectorIndex","injectorView","parentLocation","shouldNotSearchParent","injectorHasToken","searchDirectivesOnInjector","searchMatchesQueuedForCreation","formerInjector","nodeFlags","NodeInjector","_tNode","_hostView","_injectorIndex","setEnvironment","getFactoryOf","typeAny","getInheritedFactory","PublicFeature","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","R3ElementRef","R3TemplateRef","R3ViewContainerRef","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","factories","_parent","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","ngModule","_this","ngContentSelectors","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","ViewRef","_view","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","_lookUpContext","enumerable","detach","callback","markForCheck","reattach","checkNoChanges","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_renderer","_queries","createEmbeddedView","container$$1","createEmbeddedViewAndNode","declarationView","queries","viewRef","hostContainer","RendererStyleFlags2","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","SWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Renderer2","SWITCH_RENDERER2_FACTORY","SWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","getOrCreateRenderer2","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","requestAnimationFrame","setTimeout","WRAP_RENDERER_FACTORY2","ComponentFactory$$1","isInternalRootView","rootFlags","tElementNode","projection$$1","nodeList","firstTNode","previousTNode","componentRef","ComponentRef$1","ComponentRef$$1","destroyCbs","changeDetectorRef","i18nTagRegex","appendI18nNode","i18nAttribute","i18nExp","expression","i18nStart","subTemplateIndex","i18nEnd","i18nApply","instructions","localParentTNode","localPreviousTNode","elementTNode","textRNode","removedElement","removedTNode","APP_ROOT","NOT_YET","CIRCULAR$2","EMPTY_ARRAY$1","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","destroyed","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","has","assertNotDestroyed","service","clear","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefRecord","hydrate","defOrWrappedDef","parents","imported","delete","isTypeProvider","providerToRecord","isValueProvider","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","existing","multiRecord_1","hasOnDestroy","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","ngModuleType","parentInjector","_bootstrapComponents","componentFactoryResolver","NgModuleFactory$1","NgModuleFactory$$1","moduleType","pureFunction0","slotOffset","pureFn","thisArg","getCreationMode","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef$1","pipeInstance","pipeBind1","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","err","completeFn","sink","Subscription","Subject","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","SWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","LQueries_","shallow","deep","track","predicate","descend","read","createQuery","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","isRootNodeOfQuery","removeView$1","query","result","containerValues","list","viewValuesIdx","getIdxOfMatchingSelector","queryRead","factoryFn","matchingIdx","getIdxOfMatchingDirective","queryReadByTNodeType","addMatch","directiveIdx","matchingValue","previous","createPredicate","_valuesTree","QueryList","QueryList_","changes","filter","find","reduce","init","some","toArray","reset","flatten","item","notifyOnChanges","memoryIndex","getOrCreateCurrentQueries","QueryType","queryRefresh","templateRefExtractor","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","console","warn","tagSet","tags","_b","_c","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","srcset","elAttr","lower","trim","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","sanitizeHtml","sanitize","HTML","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","angularCoreEnv","ÉµdefineBase","ÉµdefineComponent","ÉµdefineDirective","ÉµdefineNgModule","ÉµdefinePipe","ÉµdirectiveInject","ÉµgetFactoryOf","ÉµgetInheritedFactory","ÉµinjectAttribute","ÉµtemplateRefExtractor","ÉµNgOnChangesFeature","ÉµPublicFeature","ÉµInheritDefinitionFeature","ÉµelementAttribute","Éµbind","Éµcontainer","ÉµnextContext","ÉµcontainerRefreshStart","ÉµcontainerRefreshEnd","ÉµloadQueryList","ÉµnamespaceHTML","ÉµnamespaceMathML","ÉµnamespaceSVG","ÉµenableBindings","ÉµdisableBindings","ÉµelementStart","ÉµelementEnd","Éµelement","ÉµEC","elementContainerStart","ÉµeC","elementContainerEnd","ÉµpureFunction0","ÉµpureFunction1","ÉµpureFunction2","ÉµpureFunction3","ÉµpureFunction4","ÉµpureFunction5","ÉµpureFunction6","ÉµpureFunction7","ÉµpureFunction8","ÉµpureFunctionV","ÉµgetCurrentView","ÉµrestoreView","Éµinterpolation1","Éµinterpolation2","Éµinterpolation3","Éµinterpolation4","Éµinterpolation5","Éµinterpolation6","Éµinterpolation7","Éµinterpolation8","ÉµinterpolationV","ÉµelementClassProp","Éµlistener","Éµload","Éµprojection","ÉµelementProperty","ÉµpipeBind1","ÉµpipeBind2","ÉµpipeBind3","ÉµpipeBind4","ÉµpipeBindV","ÉµprojectionDef","Éµpipe","Éµquery","ÉµqueryRefresh","ÉµregisterContentQuery","Éµreference","ÉµelementStyling","ÉµelementStylingMap","ÉµelementStyleProp","ÉµelementStylingApply","Éµtemplate","Éµtext","ÉµtextBinding","ÉµembeddedViewStart","ÉµembeddedViewEnd","Éµi18nAttribute","Éµi18nExp","Éµi18nStart","Éµi18nEnd","Éµi18nApply","ÉµsanitizeHtml","ÉµsanitizeStyle","ÉµdefaultStyleSanitizer","ÉµsanitizeResourceUrl","ÉµsanitizeScript","sanitizeScript","unsafeScript","SCRIPT","ÉµsanitizeUrl","Type","Function","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","dep","reflectDependency","LiteralExpr","host","optional","resolved","R3ResolvedDependencyType","Token","skipSelf","setTokenAndResolvedType","WrappedNodeExpr","param","EMPTY_ARRAY$2","compileNgModule","compileNgModuleDefs","setScopeOnDeclaredComponents","flatten$1","transitiveScopes","transitiveScopesFor","declaration","patchComponentDefWithScope","ngSelectorScope","wrapReference","expandModuleWithProviders","emitInline","jitExpression","compileInjector","statements","from","compilation","dir","isNgModule","scopes","exported","declared","importedTyped","importedScope","entry","exportedTyped","exportedScope","out","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","constantPool","ConstantPool","parseTemplate","preserveWhitespaces","errors","compileComponentFromMetadata","directiveMetadata","viewQueries","wrapDirectivesInClosure","makeBindingParser","preStatements","hasSelectorScope","compileDirective","sourceMapUrl","compileDirectiveFromMetadata","extractHostBindings","parseHostBindings","listeners","properties","_loop_2","field","ann","isHostBinding","isHostListener","hostPropertyName","inputsFromMetadata","parseInputOutputs","outputsFromMetadata","inputsFromType","outputsFromType","isOutput","bindingPropertyName","typeArgumentCount","lifecycle","usesOnChanges","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","piece","compilePipe","compilePipeFromMetadata","Version","Directive","SWITCH_COMPILE_DIRECTIVE","Component","Default","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","Output","HostBinding","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","VERSION","full","major","minor","patch","isUseClassProvider","USE_VALUE$2","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","Injectable","SWITCH_COMPILE_INJECTABLE","SWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","srcMeta","hasAProvider","ctorDeps","userDeps","computeProvidedIn","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","isPromise","isObservable","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","Math","floor","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","scope","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","taskTrackingZone","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","pop","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","compileNgModuleFactory","compileNgModuleFactory__POST_R3__","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","marker","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","ApplicationRef","f","ngDoBootstrap","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","ApplicationRef_1","componentOrFactory","componentFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","NgModuleFactoryLoader","moduleFactories","QueryList$1","_results","flatten$2","flat","flatItem","last","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","ViewContainerRef_","_lContainer","_hostTNode","_viewRefs","templateRef","adjustedIdx","_adjustIndex","createComponent","ngModuleRef","contextInjector","insert","move","shift","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","injectChangeDetectorRef","createViewRef","componentIndex","hostComponentView","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode","nativeNode","_debugContext","DebugElement","addChild","references","providerTokens","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","MissingTranslationStrategy","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","APPLICATION_MODULE_PROVIDERS","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","locale","ApplicationModule","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","_addDebugContext","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","elDef","selectorOrNode","ns","ShadowDom","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","binding","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","_data","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyName","propertyValue","attributeValue","setBindingDebugInfo","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","attr","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","style","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","loadContext","Render3DebugRendererFactory2","Render3DebugContext","_nativeNode","getInjector","getHostComponent","lDebugCtx","directivesCount","directiveIdxStart","getLocalRefs","discoverLocalRefs","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ÉµNoopNgZone","getModuleFactory","ÉµALLOW_MULTIPLE_PLATFORMS","ÉµAPP_ID_RANDOM_PROVIDER","ÉµdefaultIterableDiffers","ÉµdefaultKeyValueDiffers","ÉµdevModeEqual","ÉµisListLikeIterable","ÉµisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ÉµConsole","ÉµgetInjectableDef","Éµinject","ÉµsetCurrentInjector","ÉµAPP_ROOT","ÉµivyEnabled","ÉµComponentFactory","ÉµCodegenComponentFactoryResolver","ÉµresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ÉµReflectionCapabilities","ÉµRenderDebugInfo","Éµ_sanitizeHtml","Éµ_sanitizeStyle","Éµ_sanitizeUrl","Éµglobal","ÉµlooseIdentical","Éµstringify","ÉµmakeDecorator","ÉµisObservable","ÉµisPromise","ÉµclearOverrides","ÉµinitServicesIfNeeded","ÉµoverrideComponentView","ÉµoverrideProvider","ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ÉµdetectChanges","ÉµrenderComponent","renderComponent","ÉµRender3ComponentFactory","ÉµRender3ComponentRef","ÉµRender3NgModuleRef","ÉµmarkDirty","markDirty","ÉµNgModuleFactory","ÉµNO_CHANGE","Éµstore","ÉµwhenRendered","whenRendered","getRootContext$1","Éµi18nExpMapping","i18nExpMapping","translation","placeholders","staticText","Éµi18nInterpolation1","i18nInterpolation1","Éµi18nInterpolation2","i18nInterpolation2","Éµi18nInterpolation3","i18nInterpolation3","idx","Éµi18nInterpolation4","i18nInterpolation4","b1","Éµi18nInterpolation5","i18nInterpolation5","Éµi18nInterpolation6","i18nInterpolation6","Éµi18nInterpolation7","i18nInterpolation7","b2","Éµi18nInterpolation8","i18nInterpolation8","Éµi18nInterpolationV","i18nInterpolationV","Éµi18nMapping","i18nMapping","elements","expressions","templateRoots","lastChildIndex","translationParts","generateMappingInstructions","tmplIndex","partIndex","tmplInstructions","phVisited","openedTagCount","maxIndex","currentElements","currentExpressions","phIndex","templateRootIndex","newTmplIndex","tmplElements","phKeys","ph","tmplExpressions","ÉµWRAP_RENDERER_FACTORY2","ÉµRender3DebugRendererFactory2","ÉµcompileComponent","ÉµcompileDirective","ÉµcompileNgModule","ÉµcompileNgModuleDefs","ÉµpatchComponentDefWithScope","ÉµcompilePipe","ÉµbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ÉµbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ÉµbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ÉµbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ÉµbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ÉµgetContext","ÉµbindPlayerFactory","bindPlayerFactory","ÉµaddPlayer","addPlayer","element$$1","getOrCreatePlayerContext","getRootContext$2","getRootView$1","componentOrView","ÉµgetPlayers","getPlayers","getPlayersInternal","players","nonFactoryPlayersStart","ÉµcompileNgModuleFactory__POST_R3__","ÉµSWITCH_COMPILE_COMPONENT__POST_R3__","ÉµSWITCH_COMPILE_DIRECTIVE__POST_R3__","ÉµSWITCH_COMPILE_PIPE__POST_R3__","ÉµSWITCH_COMPILE_NGMODULE__POST_R3__","ÉµSWITCH_COMPILE_INJECTABLE__POST_R3__","ÉµSWITCH_IVY_ENABLED__POST_R3__","ÉµSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","ÉµSWITCH_ELEMENT_REF_FACTORY__POST_R3__","ÉµSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","ÉµSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","ÉµSWITCH_RENDERER2_FACTORY__POST_R3__","ÉµregisterModuleFactory","registerModuleFactory","ÉµEMPTY_ARRAY","ÉµEMPTY_MAP","Éµand","templateFactory","Éµccf","createComponentFactory","Éµcmf","createNgModuleFactory","defFactory","Éµcrt","createRendererType2","Éµdid","outputDefs","Éµeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","name_1","_e","resolveRendererType2","isFilled","None","ÉµelementEventFullName","ÉµgetComponentViewDefinitionFactory","ÉµinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","Éµinterpolate","interpolate","constAndInterp","Éµmod","moduleDef","Éµmpd","moduleProvideDef","Éµncd","ngContentDef","Éµnov","Éµpid","Éµprd","Éµpad","pureArrayDef","argCount","Éµpod","pureObjectDef","propToIndex","nbKeys","Éµppd","purePipeDef","Éµqud","Éµted","textDef","Éµunv","unwrapValue","nodeIdx","globalBindingIdx","Éµvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v7.0.0-rc.1+108.sha-aa55d88\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('@angular/compiler'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', '@angular/compiler', 'rxjs/operators'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.ng.compiler,global.rxjs.operators));\n}(this, (function (exports,rxjs,compiler,operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @experimental\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @experimental\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @experimental\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     *  @Annotation\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explictly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explictly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ÉµChangeDetectorStatus || (exports.ÉµChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        componentResourceResolutionQueue.clear();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return component.templateUrl || component.styleUrls && component.styleUrls.length;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @experimental\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @experimental\n     */\n    function resolveForwardRef(type) {\n        if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n            type.__forward_ref__ === forwardRef) {\n            return type();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @experimental\n     */\n    var INJECTOR = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     *\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR); },\n        });\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'Éµ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = 0 /* Default */; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & 4 /* SkipSelf */)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, 0 /* Default */));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & 2 /* Self */)) {\n            value = parent.get(token, notFoundValue, 0 /* Default */);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            var injectableDef = getInjectableDef(token);\n            if (injectableDef && injectableDef.providedIn == 'root') {\n                return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                    injectableDef.value;\n            }\n            if (flags & 8 /* Optional */)\n                return null;\n            throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n        }\n        else {\n            return _currentInjector.get(token, flags & 8 /* Optional */ ? null : undefined, flags);\n        }\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = 0 /* Default */;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= 8 /* Optional */;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= 4 /* SkipSelf */;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= 2 /* Self */;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n        // NOTE: Under Ivy we may have both window & global defined in the Node\n        //    environment since ensureDocument() in render3.ts sets global.window.\n        if (typeof window != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            window['ngDevMode'] = newCounters;\n        }\n        if (typeof global != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            global['ngDevMode'] = newCounters;\n        }\n        if (typeof self != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            self['ngDevMode'] = newCounters;\n        }\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY$1 = {};\n    var EMPTY_ARRAY = [];\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY$1);\n        Object.freeze(EMPTY_ARRAY);\n    }\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            diPublic: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            hostVars: componentDefinition.hostVars || 0,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            attributes: componentDefinition.attributes || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            providers: EMPTY_ARRAY,\n            viewProviders: EMPTY_ARRAY,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName')\n     *   propName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   a0: 'propName1',\n     *   b1: ['publicName', 'propName2'],\n     * }\n     * ```\n     *\n     * becomes\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'publicName': 'b1'\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in:\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'propName2': 'b1'\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY$1;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[declaredName] = minifiedKey);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type) {\n        return type[NG_MODULE_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Size of LViewData's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 17;\n    // Below are constants for LViewData indices to help us look up LViewData members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var FLAGS = 1;\n    var PARENT = 2;\n    var NEXT = 3;\n    var QUERIES = 4;\n    var HOST = 5;\n    var HOST_NODE = 6;\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER = 11;\n    var SANITIZER = 12;\n    var TAIL = 13;\n    var CONTAINER_INDEX = 14;\n    var CONTENT_QUERIES = 15;\n    var DECLARATION_VIEW = 16;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    var VIEWS = 1;\n    // PARENT, NEXT, QUERIES, and HOST are indices 2, 3, 4, and 5.\n    // As we already have these constants in LViewData, we don't need to re-create them.\n    var NATIVE = 6;\n    var RENDER_PARENT = 7;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b, checkNoChangesMode) {\n        if (ngDevMode && checkNoChangesMode) {\n            return !devModeEqual(a, b);\n        }\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n    /** Retrieves a value from any `LViewData` or `TData`. */\n    function loadInternal(index, arr) {\n        ngDevMode && assertDataInRangeInternal(index + HEADER_OFFSET, arr);\n        return arr[index + HEADER_OFFSET];\n    }\n    function assertDataInRangeInternal(index, arr) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n    /**\n     * Takes the value of a slot in `LViewData` and returns the element node.\n     *\n     * Normally, element nodes are stored flat, but if the node has styles/classes on it,\n     * it might be wrapped in a styling context. Or if that node has a directive that injects\n     * ViewContainerRef, it may be wrapped in an LContainer. Or if that node is a component,\n     * it will be wrapped in LViewData. It could even have all three, so we keep looping\n     * until we find something that isn't an array.\n     *\n     * @param value The initial value in `LViewData`\n     */\n    function readElementValue(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, arr) {\n        return readElementValue(arr[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return readElementValue(hostView[tNode.index]);\n    }\n    function getTNode(index, view) {\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LViewData or an LContainer. If LContainer, unwrap to find LViewData.\n        var slotValue = hostView[nodeIndex];\n        return slotValue.length >= HEADER_OFFSET ? slotValue : slotValue[HOST];\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 16384 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n    }\n    function isLContainer(value) {\n        // Styling contexts are also arrays, but their first index contains an element node\n        return Array.isArray(value) && typeof value[ACTIVE_INDEX] === 'number';\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LViewData` until\n     * reaching the root `LViewData`.\n     *\n     * @param component any component\n     */\n    function getRootView(target) {\n        ngDevMode && assertDefined(target, 'component');\n        var lViewData = Array.isArray(target) ? target : readPatchedLViewData(target);\n        while (lViewData && !(lViewData[FLAGS] & 64 /* IsRoot */)) {\n            lViewData = lViewData[PARENT];\n        }\n        return lViewData;\n    }\n    function getRootContext(viewOrComponent) {\n        return getRootView(viewOrComponent)[CONTEXT];\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLViewData(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lViewData;\n        }\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LViewData` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     */\n    function getContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LViewData instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lViewData = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lViewData, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lViewData, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = discoverDirectives(nodeIndex, lViewData, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lViewData, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, compontent or\n                // directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = readElementValue(lViewData[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lViewData, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomElement(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lViewData = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lViewData = parentContext;\n                    }\n                    else {\n                        lViewData = parentContext.lViewData;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lViewData) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lViewData, rElement);\n                    if (index >= 0) {\n                        var native = readElementValue(lViewData[index]);\n                        var context = createLContext(lViewData, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lViewData, nodeIndex, native) {\n        return {\n            lViewData: lViewData,\n            nodeIndex: nodeIndex, native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lViewData = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lViewData)) {\n            var nodeIndex = findViaComponent(lViewData, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lViewData);\n            var context = createLContext(lViewData, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lViewData;\n            view = getComponentViewByIndex(context.nodeIndex, context.lViewData);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LViewData and returns the matching index\n     */\n    function findViaNativeElement(lViewData, target) {\n        var tNode = lViewData[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lViewData);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else if (tNode.parent) {\n            return tNode.parent.next || null;\n        }\n        return null;\n    }\n    /**\n     * Locates the component within the given LViewData and returns the matching index\n     */\n    function findViaComponent(lViewData, componentInstance) {\n        var componentIndices = lViewData[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lViewData);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lViewData);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LViewData and returns the matching index\n     */\n    function findViaDirective(lViewData, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LViewData of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lViewData[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = getDirectiveStartIndex(tNode);\n            var directiveIndexEnd = getDirectiveEndIndex(tNode, directiveIndexStart);\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lViewData[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    function assertDomElement(element) {\n        assertEqual(element.nodeType, 1, 'The provided value must be an instance of an HTMLElement');\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lViewData The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function discoverDirectives(nodeIndex, lViewData, includeComponents) {\n        var tNode = lViewData[TVIEW].data[nodeIndex];\n        var directiveStartIndex = getDirectiveStartIndex(tNode);\n        var directiveEndIndex = getDirectiveEndIndex(tNode, directiveStartIndex);\n        if (!includeComponents && tNode.flags & 4096 /* isComponent */)\n            directiveStartIndex++;\n        return lViewData.slice(directiveStartIndex, directiveEndIndex);\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lViewData, nodeIndex) {\n        var tNode = lViewData[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                var localRefName = tNode.localNames[i];\n                var directiveIndex = tNode.localNames[i + 1];\n                result[localRefName] =\n                    directiveIndex === -1 ? getNativeByTNode(tNode, lViewData) : lViewData[directiveIndex];\n            }\n            return result;\n        }\n        return null;\n    }\n    function getDirectiveStartIndex(tNode) {\n        // the tNode instances store a flag value which then has a\n        // pointer which tells the starting index of where all the\n        // active directives are in the master directive array\n        return tNode.flags >> 15 /* DirectiveStartingIndexShift */;\n    }\n    function getDirectiveEndIndex(tNode, startIndex) {\n        // The end value is also a part of the same flag\n        // (see `TNodeFlags` to see how the flag bit shifting\n        // values are used).\n        var count = tNode.flags & 4095 /* DirectiveCountMask */;\n        return count ? (startIndex + count) : -1;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LViewData\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(flags, tView) {\n        if (tView.firstTemplatePass) {\n            var start = flags >> 15 /* DirectiveStartingIndexShift */;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var end = start + count;\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, creationMode) {\n        if (currentView[FLAGS] & 16 /* RunInit */) {\n            executeHooks(currentView, tView.initHooks, tView.checkHooks, creationMode);\n            currentView[FLAGS] &= ~16 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(data, allHooks, checkHooks, creationMode) {\n        var hooksToCall = creationMode ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(data, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * creation mode.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(currentView, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(currentView[arr[i]]);\n        }\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, oldValue, currValue) {\n        if (checkNoChangesMode) {\n            var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n            if (creationMode) {\n                msg +=\n                    \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                        \" Has it been created in a change detection hook ?\";\n            }\n            // TODO: include debug context\n            throw new Error(msg);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_SIZE = 9;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Retrieves the parent element of a given node. */\n    function getParentNative(tNode, currentView) {\n        return tNode.parent == null ? getHostNative(currentView) :\n            getNativeByTNode(tNode.parent, currentView);\n    }\n    /**\n     * Gets the host element given a view. Will return null if the current view is an embedded view,\n     * which does not have a host element.\n     */\n    function getHostNative(currentView) {\n        var hostTNode = currentView[HOST_NODE];\n        return hostTNode && hostTNode.type !== 2 /* View */ ?\n            getNativeByTNode(hostTNode, currentView[PARENT]) :\n            null;\n    }\n    function getLContainer(tNode, embeddedView) {\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = embeddedView[CONTAINER_INDEX];\n            return containerHostIndex > -1 ? embeddedView[PARENT][containerHostIndex] : null;\n        }\n        else {\n            // This is a inline view node (e.g. embeddedViewStart)\n            return embeddedView[PARENT][tNode.parent.index];\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? container[RENDER_PARENT] : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], beforeNode);\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], beforeNode);\n                if (renderParent)\n                    lContainer[RENDER_PARENT] = renderParent;\n                if (lContainer[VIEWS].length) {\n                    currentView = lContainer[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[HOST_NODE];\n                var head = componentHost.projection[tNode.projection];\n                // Must store both the TNode and the view because this projection node could be nested\n                // deeply inside embedded views, and we need to get back down to this particular nested view.\n                projectionNodeStack[++projectionNodeIndex] = tNode;\n                projectionNodeStack[++projectionNodeIndex] = currentView;\n                if (head) {\n                    currentView = componentView[PARENT];\n                    nextTNode = currentView[TVIEW].data[head.index];\n                }\n            }\n            else {\n                // Otherwise, this is a View or an ElementContainer\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.next === null && (tNode.flags & 8192 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                nextTNode = tNode.next;\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[TVIEW].node;\n                    if (tNode === null || tNode === rootTNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = currentView[PARENT];\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */ && currentView[NEXT]) {\n                        currentView = currentView[NEXT];\n                        nextTNode = currentView[TVIEW].node;\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lViewData LViewData for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lViewData) {\n        var rootTNode = lViewData[HOST_NODE];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lViewData[PARENT], 'viewData.parent');\n            lViewData = lViewData[PARENT];\n            rootTNode = lViewData[HOST_NODE];\n        }\n        return lViewData;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            isProceduralRenderer(renderer) ?\n                renderer.insertBefore(parent, node, beforeNode) :\n                parent.insertBefore(node, beforeNode, true);\n        }\n        else if (action === 1 /* Detach */) {\n            isProceduralRenderer(renderer) ?\n                renderer.removeChild(parent, node) :\n                parent.removeChild(node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LViewData, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LViewData.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0];\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param parentView The new parent of the inserted view\n     * @param index The index at which to insert the view\n     * @param containerIndex The index of the container node, if dynamic\n     */\n    function insertView(lView, lContainer, parentView, index, containerIndex) {\n        var views = lContainer[VIEWS];\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container's host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (containerIndex > -1) {\n            lView[CONTAINER_INDEX] = containerIndex;\n            lView[PARENT] = parentView;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 8 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @param detached Whether or not this view is already detached.\n     */\n    function detachView(lContainer, removeIndex, detached) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!detached) {\n            addRemoveViewFromContainer(viewToDetach, false);\n        }\n        if (viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[CONTAINER_INDEX] = -1;\n        viewToDetach[PARENT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~8 /* Attached */;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param tContainer The TContainer node associated with the LContainer\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, containerHost, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        detachView(lContainer, removeIndex, !!containerHost.detached);\n        destroyLView(view);\n    }\n    /** Gets the child of the given LViewData */\n    function getLViewChild(viewData) {\n        var childIndex = viewData[TVIEW].childIndex;\n        return childIndex === -1 ? null : viewData[childIndex];\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 32 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var tNode;\n        if (state.length >= HEADER_OFFSET && (tNode = state[HOST_NODE]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, state);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Removes all listeners and call all onDestroys in a given view.\n     *\n     * @param view The LViewData to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer.length >= HEADER_OFFSET) {\n            var view = viewOrContainer;\n            removeListeners(view);\n            executeOnDestroys(view);\n            executePipeOnDestroys(view);\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(viewData) {\n        var cleanup = viewData[TVIEW].cleanup;\n        if (cleanup != null) {\n            for (var i = 0; i < cleanup.length - 1; i += 2) {\n                if (typeof cleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var native = readElementValue(viewData[cleanup[i + 1]]);\n                    var listener = viewData[CLEANUP][cleanup[i + 2]];\n                    native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n                    i += 2;\n                }\n                else if (typeof cleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = viewData[CLEANUP][cleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = viewData[CLEANUP][cleanup[i + 1]];\n                    cleanup[i].call(context);\n                }\n            }\n            viewData[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view, destroyHooks);\n        }\n    }\n    /** Calls pipe destroy hooks for this view */\n    function executePipeOnDestroys(viewData) {\n        var pipeDestroyHooks = viewData[TVIEW] && viewData[TVIEW].pipeDestroyHooks;\n        if (pipeDestroyHooks) {\n            callHooks(viewData, pipeDestroyHooks);\n        }\n    }\n    function getRenderParent(tNode, currentView) {\n        if (canInsertNativeNode(tNode, currentView)) {\n            var hostTNode = currentView[HOST_NODE];\n            return tNode.parent == null && hostTNode.type === 2 /* View */ ?\n                getContainerRenderParent(hostTNode, currentView) :\n                getParentNative(tNode, currentView);\n        }\n        return null;\n    }\n    function canInsertNativeChildOfElement(tNode) {\n        // If the parent is null, then we are inserting across views. This happens when we\n        // insert a root element of the component view into the component host element and it\n        // should always be eager.\n        if (tNode.parent == null ||\n            // We should also eagerly insert if the parent is a regular, non-component element\n            // since we know that this relationship will never be broken.\n            tNode.parent.type === 3 /* Element */ && !(tNode.parent.flags & 4096 /* isComponent */)) {\n            return true;\n        }\n        // Parent is a Component. Component's content nodes are not inserted immediately\n        // because they will be projected, and so doing insert at this point would be wasteful.\n        // Since the projection would than move it to its final destination.\n        return false;\n    }\n    /**\n     * We might delay insertion of children for a given view if it is disconnected.\n     * This might happen for 2 main reasons:\n     * - view is not inserted into any container (view was created but not inserted yet)\n     * - view is inserted into a container but the container itself is not inserted into the DOM\n     * (container might be part of projection or child of a view that is not inserted yet).\n     *\n     * In other words we can insert children of a given view if this view was inserted into a container\n     * and\n     * the container itself has its render parent determined.\n     */\n    function canInsertNativeChildOfView(viewTNode, view) {\n        // Because we are inserting into a `View` the `View` may be disconnected.\n        var container = getLContainer(viewTNode, view);\n        if (container == null || container[RENDER_PARENT] == null) {\n            // The `View` is not inserted into a `Container` or the parent `Container`\n            // itself is disconnected. So we have to delay.\n            return false;\n        }\n        // The parent `Container` is in inserted state, so we can eagerly insert into\n        // this location.\n        return true;\n    }\n    /**\n     * Returns whether a native element can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     *\n\n     *\n     * @param parent The parent where the child will be inserted into.\n     * @param currentView Current LView being processed.\n     * @return boolean Whether the child should be inserted now (or delayed until later).\n     */\n    function canInsertNativeNode(tNode, currentView) {\n        var currentNode = tNode;\n        var parent = tNode.parent;\n        if (tNode.parent && tNode.parent.type === 4 /* ElementContainer */) {\n            currentNode = getHighestElementContainer(tNode);\n            parent = currentNode.parent;\n        }\n        if (parent === null)\n            parent = currentView[HOST_NODE];\n        if (parent && parent.type === 2 /* View */) {\n            return canInsertNativeChildOfView(parent, currentView);\n        }\n        else {\n            // Parent is a regular element or a component\n            return canInsertNativeChildOfElement(currentNode);\n        }\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The child that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var renderer = currentView[RENDERER];\n            var parentEl = getParentNative(childTNode, currentView);\n            var parentTNode = childTNode.parent || currentView[HOST_NODE];\n            if (parentTNode.type === 2 /* View */) {\n                var lContainer = getLContainer(parentTNode, currentView);\n                var views = lContainer[VIEWS];\n                var index = views.indexOf(currentView);\n                nativeInsertBefore(renderer, lContainer[RENDER_PARENT], childEl, getBeforeNodeForView(index, views, lContainer[NATIVE]));\n            }\n            else if (parentTNode.type === 4 /* ElementContainer */) {\n                var elementContainer = getHighestElementContainer(childTNode);\n                var renderParent = getRenderParent(elementContainer, currentView);\n                nativeInsertBefore(renderer, renderParent, childEl, parentEl);\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.appendChild(parentEl, childEl) :\n                    parentEl.appendChild(childEl);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Gets the top-level ng-container if ng-containers are nested.\n     *\n     * @param ngContainer The TNode of the starting ng-container\n     * @returns tNode The TNode of the highest level ng-container\n     */\n    function getHighestElementContainer(ngContainer) {\n        while (ngContainer.parent != null && ngContainer.parent.type === 4 /* ElementContainer */) {\n            ngContainer = ngContainer.parent;\n        }\n        return ngContainer;\n    }\n    function getBeforeNodeForView(index, views, containerNative) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[HOST_NODE];\n            return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes the `child` element from the DOM if not in view and not projected.\n     *\n     * @param childTNode The TNode of the child to remove\n     * @param childEl The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(childTNode, childEl, currentView) {\n        // We only remove the element if not in View or not projected.\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var parentNative = getParentNative(childTNode, currentView);\n            var renderer = currentView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.removeChild(parentNative, childEl) :\n                parentNative.removeChild(childEl);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var renderParent = getRenderParent(tProjectionNode, currentView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            nodeOrContainer[RENDER_PARENT] = renderParent;\n            var views = nodeOrContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                nodeOrContainer[RENDER_PARENT] = renderParent;\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && current !== tNode.tagName) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 1 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector) {\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * Combines the binding value and a factory for an animation player.\n     *\n     * Used to bind a player to an element template binding (currently only\n     * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n     * supported). The provided `factoryFn` function will be run once all\n     * the associated bindings have been evaluated on the element and is\n     * designed to return a player which will then be placed on the element.\n     *\n     * @param factoryFn The function that is used to create a player\n     *   once all the rendering-related (styling values) have been\n     *   processed for the element binding.\n     * @param value The raw value that will be exposed to the binding\n     *   so that the binding can update its internal values when\n     *   any changes are evaluated.\n     */\n    function bindPlayerFactory(factoryFn, value) {\n        return new BoundPlayerFactory(factoryFn, value);\n    }\n    var BoundPlayerFactory = /** @class */ (function () {\n        function BoundPlayerFactory(fn, value) {\n            this.fn = fn;\n            this.value = value;\n        }\n        return BoundPlayerFactory;\n    }());\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent && player.state === 0 /* Pending */) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function createEmptyStylingContext(element, sanitizer, initialStylingValues) {\n        return [\n            null,\n            sanitizer || null,\n            initialStylingValues || [null],\n            0,\n            0,\n            element || null,\n            null,\n            null // PreviousMultiStyleValue\n        ];\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[5 /* ElementPosition */] = element;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContext(index, viewData) {\n        var storageIndex = index + HEADER_OFFSET;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LViewData or an LContainer\n            var stylingTemplate = getTNode(index, viewData).stylingTemplate;\n            if (wrapper !== viewData) {\n                storageIndex = HOST;\n            }\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isStylingContext(value) {\n        // Not an LViewData or an LContainer\n        return typeof value[FLAGS] !== 'number' && typeof value[ACTIVE_INDEX] !== 'number';\n    }\n    function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n        ref = ref || element;\n        if (playerContextIndex) {\n            playerContext[playerContextIndex] = player;\n        }\n        else {\n            playerContext.push(player);\n        }\n        if (player) {\n            player.addEventListener(200 /* Destroyed */, function () {\n                var index = playerContext.indexOf(player);\n                var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                // if the player is being removed from the factory side of the context\n                // (which is where the [style] and [class] bindings do their thing) then\n                // that side of the array cannot be resized since the respective bindings\n                // have pointer index values that point to the associated factory instance\n                if (index) {\n                    if (index < nonFactoryPlayerIndex) {\n                        playerContext[index] = null;\n                    }\n                    else {\n                        playerContext.splice(index, 1);\n                    }\n                }\n                player.destroy();\n            });\n            var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n            playerHandler.queuePlayer(player, ref);\n            return true;\n        }\n        return false;\n    }\n    function getPlayersInternal(playerContext) {\n        var players = [];\n        var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n        // add all factory-based players (which are apart of [style] and [class] bindings)\n        for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n            var player = playerContext[i];\n            if (player) {\n                players.push(player);\n            }\n        }\n        // add all custom players (not apart of [style] and [class] bindings)\n        for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n            players.push(playerContext[i]);\n        }\n        return players;\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getContext(target);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return null;\n        }\n        var lViewData = context.lViewData, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContext(nodeIndex - HEADER_OFFSET, lViewData);\n        return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n    }\n    function getPlayerContext(stylingContext) {\n        return stylingContext[0 /* PlayerContext */];\n    }\n    function allocPlayerContext(data) {\n        return data[0 /* PlayerContext */] =\n            [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n    }\n    function throwInvalidRefError() {\n        throw new Error('Only elements that exist in an Angular application can be used for animations');\n    }\n\n    var EMPTY_ARR = [];\n    var EMPTY_OBJ = {};\n    /**\n     * Creates a styling context template where styling information is stored.\n     * Any styles that are later referenced using `updateStyleProp` must be\n     * passed in within this function. Initial values for those styles are to\n     * be declared after all initial style properties are declared (this change in\n     * mode between declarations and initial styles is made possible using a special\n     * enum value found in `definition.ts`).\n     *\n     * @param initialStyleDeclarations a list of style declarations and initial style values\n     *    that are used later within the styling context.\n     *\n     *    -> ['width', 'height', SPECIAL_ENUM_VAL, 'width', '100px']\n     *       This implies that `width` and `height` will be later styled and that the `width`\n     *       property has an initial value of `100px`.\n     *\n     * @param initialClassDeclarations a list of class declarations and initial class values\n     *    that are used later within the styling context.\n     *\n     *    -> ['foo', 'bar', SPECIAL_ENUM_VAL, 'foo', true]\n     *       This implies that `foo` and `bar` will be later styled and that the `foo`\n     *       class will be applied to the element as an initial class since it's true\n     */\n    function createStylingContextTemplate(initialClassDeclarations, initialStyleDeclarations, styleSanitizer) {\n        var initialStylingValues = [null];\n        var context = createEmptyStylingContext(null, styleSanitizer, initialStylingValues);\n        // we use two maps since a class name might collide with a CSS style prop\n        var stylesLookup = {};\n        var classesLookup = {};\n        var totalStyleDeclarations = 0;\n        if (initialStyleDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialStyleDeclarations.length; i++) {\n                var v = initialStyleDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var prop = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialStyleDeclarations[++i];\n                        initialStylingValues.push(value);\n                        stylesLookup[prop] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        totalStyleDeclarations++;\n                        stylesLookup[prop] = 0;\n                    }\n                }\n            }\n        }\n        // make where the class offsets begin\n        context[4 /* ClassOffsetPosition */] = totalStyleDeclarations;\n        if (initialClassDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialClassDeclarations.length; i++) {\n                var v = initialClassDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var className = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialClassDeclarations[++i];\n                        initialStylingValues.push(value);\n                        classesLookup[className] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        classesLookup[className] = 0;\n                    }\n                }\n            }\n        }\n        var styleProps = Object.keys(stylesLookup);\n        var classNames = Object.keys(classesLookup);\n        var classNamesIndexStart = styleProps.length;\n        var totalProps = styleProps.length + classNames.length;\n        // *2 because we are filling for both single and multi style spaces\n        var maxLength = totalProps * 4 /* Size */ * 2 + 8 /* SingleStylesStartPosition */;\n        // we need to fill the array from the start so that we can access\n        // both the multi and the single array positions in the same loop block\n        for (var i = 8 /* SingleStylesStartPosition */; i < maxLength; i++) {\n            context.push(null);\n        }\n        var singleStart = 8 /* SingleStylesStartPosition */;\n        var multiStart = totalProps * 4 /* Size */ + 8 /* SingleStylesStartPosition */;\n        // fill single and multi-level styles\n        for (var i = 0; i < totalProps; i++) {\n            var isClassBased_1 = i >= classNamesIndexStart;\n            var prop = isClassBased_1 ? classNames[i - classNamesIndexStart] : styleProps[i];\n            var indexForInitial = isClassBased_1 ? classesLookup[prop] : stylesLookup[prop];\n            var initialValue = initialStylingValues[indexForInitial];\n            var indexForMulti = i * 4 /* Size */ + multiStart;\n            var indexForSingle = i * 4 /* Size */ + singleStart;\n            var initialFlag = prepareInitialFlag(prop, isClassBased_1, styleSanitizer || null);\n            setFlag(context, indexForSingle, pointers(initialFlag, indexForInitial, indexForMulti));\n            setProp(context, indexForSingle, prop);\n            setValue(context, indexForSingle, null);\n            setPlayerBuilderIndex(context, indexForSingle, 0);\n            var flagForMulti = initialFlag | (initialValue !== null ? 1 /* Dirty */ : 0 /* None */);\n            setFlag(context, indexForMulti, pointers(flagForMulti, indexForInitial, indexForSingle));\n            setProp(context, indexForMulti, prop);\n            setValue(context, indexForMulti, null);\n            setPlayerBuilderIndex(context, indexForMulti, 0);\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        setFlag(context, 3 /* MasterFlagPosition */, pointers(0, 0, multiStart));\n        setContextDirty(context, initialStylingValues.length > 1);\n        return context;\n    }\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyleAndClassBindings` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classesInput The key/value map of CSS class names that will be used for the update.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classesInput, stylesInput) {\n        stylesInput = stylesInput || null;\n        var element = context[5 /* ElementPosition */];\n        var classesPlayerBuilder = classesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(classesInput, element, 2 /* Class */) :\n            null;\n        var stylesPlayerBuilder = stylesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(stylesInput, element, 3 /* Style */) :\n            null;\n        var classesValue = classesPlayerBuilder ?\n            classesInput.value :\n            classesInput;\n        var stylesValue = stylesPlayerBuilder ? stylesInput.value : stylesInput;\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        var ignoreAllClassUpdates = classesValue === context[6 /* PreviousMultiClassValue */];\n        var ignoreAllStyleUpdates = stylesValue === context[7 /* PreviousMultiStyleValue */];\n        if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n            return;\n        context[6 /* PreviousMultiClassValue */] = classesValue;\n        context[7 /* PreviousMultiStyleValue */] = stylesValue;\n        var classNames = EMPTY_ARR;\n        var applyAllClasses = false;\n        var playerBuildersAreDirty = false;\n        var classesPlayerBuilderIndex = classesPlayerBuilder ? 1 /* ClassMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        var stylesPlayerBuilderIndex = stylesPlayerBuilder ? 3 /* StyleMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (!ignoreAllClassUpdates) {\n            if (typeof classesValue == 'string') {\n                classNames = classesValue.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n            else {\n                classNames = classesValue ? Object.keys(classesValue) : EMPTY_ARR;\n            }\n        }\n        var classes = (classesValue || EMPTY_OBJ);\n        var styleProps = stylesValue ? Object.keys(stylesValue) : EMPTY_ARR;\n        var styles = stylesValue || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased_2 = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased_2 && !ignoreAllStyleUpdates) || (isClassBased_2 && !ignoreAllClassUpdates);\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (processValue) {\n                var adjustedPropIndex = isClassBased_2 ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased_2 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased_2 ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var playerBuilderIndex = isClassBased_2 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    var flag = getPointers(context, ctxIndex);\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex);\n                    if (hasValueChanged(flag, value, newValue)) {\n                        setValue(context, ctxIndex, newValue);\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        var initialValue = getInitialValue(context, flag);\n                        // there is no point in setting this to dirty if the previously\n                        // rendered value was being referenced by the initial style (or null)\n                        if (hasValueChanged(flag, initialValue, newValue)) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (hasValueChanged(flagToCompare, valueToCompare, newValue)) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            if (hasValueChanged(flagToCompare, initialValue, newValue)) {\n                                setDirty(context, ctxIndex, true);\n                                playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        var newFlag = prepareInitialFlag(newProp, isClassBased_2, getStyleSanitizer(context));\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        insertNewMultiProperty(context, ctxIndex, isClassBased_2, newProp, newFlag, newValue, playerBuilderIndex);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 4 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased_3 = (flag & 2 /* Class */) === 2 /* Class */;\n            var processValue = (!isClassBased_3 && !ignoreAllStyleUpdates) || (isClassBased_3 && !ignoreAllClassUpdates);\n            if (processValue) {\n                var value = getValue(context, ctxIndex);\n                var doRemoveValue = valueExists(value, isClassBased_3);\n                if (doRemoveValue) {\n                    setDirty(context, ctxIndex, true);\n                    setValue(context, ctxIndex, null);\n                    // we keep the player factory the same so that the `nulled` value can\n                    // be instructed into the player because removing a style and/or a class\n                    // is a valid animation player instruction.\n                    var playerBuilderIndex = isClassBased_3 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex);\n                    dirty = true;\n                }\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        var sanitizer = getStyleSanitizer(context);\n        while (propIndex < propLimit) {\n            var isClassBased_4 = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased_4 && !ignoreAllStyleUpdates) || (isClassBased_4 && !ignoreAllClassUpdates);\n            if (processValue) {\n                var adjustedPropIndex = isClassBased_4 ? propIndex - classesStartIndex : propIndex;\n                var prop = isClassBased_4 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var value = isClassBased_4 ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n                var flag = prepareInitialFlag(prop, isClassBased_4, sanitizer) | 1 /* Dirty */;\n                var playerBuilderIndex = isClassBased_4 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                context.push(flag, prop, value, playerBuilderIndex);\n                dirty = true;\n            }\n            propIndex++;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n    }\n    /**\n     * Sets and resolves a single styling property/value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyleAndClassBindings` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param index The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     */\n    function updateStyleProp(context, index, input) {\n        var singleIndex = 8 /* SingleStylesStartPosition */ + index * 4 /* Size */;\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n        // didn't change ... nothing to make a note of\n        if (hasValueChanged(currFlag, currValue, value)) {\n            var isClassBased_5 = (currFlag & 2 /* Class */) === 2 /* Class */;\n            var element = context[5 /* ElementPosition */];\n            var playerBuilder = input instanceof BoundPlayerFactory ?\n                new ClassAndStylePlayerBuilder(input, element, isClassBased_5 ? 2 /* Class */ : 3 /* Style */) :\n                null;\n            var value_1 = (playerBuilder ? input.value : input);\n            var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n            var playerBuildersAreDirty = false;\n            var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n            if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n                var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n                playerBuilderIndex = playerBuilder ? newIndex : 0;\n                setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex);\n                playerBuildersAreDirty = true;\n            }\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value_1);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value_1, isClassBased_5) && valueExists(valueForMulti, isClassBased_5)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n            if (playerBuildersAreDirty) {\n                setContextPlayersDirty(context, true);\n            }\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param index The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, index, addOrRemove) {\n        var adjustedIndex = index + context[4 /* ClassOffsetPosition */];\n        updateStyleProp(context, adjustedIndex, addOrRemove);\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param classesStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param stylesStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @returns number the total amount of players that got queued for animation (if any)\n     */\n    function renderStyleAndClassBindings(context, renderer, rootOrView, classesStore, stylesStore) {\n        var totalPlayersQueued = 0;\n        if (isContextDirty(context)) {\n            var flushPlayerBuilders = context[3 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n            var native = context[5 /* ElementPosition */];\n            var multiStartIndex = getMultiStartIndex(context);\n            var styleSanitizer = getStyleSanitizer(context);\n            for (var i = 8 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var flag = getPointers(context, i);\n                    var playerBuilder = getPlayerBuilder(context, i);\n                    var isClassBased_6 = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased_6)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    if (!valueExists(valueToApply, isClassBased_6)) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    if (isClassBased_6) {\n                        setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                    }\n                    else {\n                        var sanitizer = (flag & 4 /* Sanitize */) ? styleSanitizer : null;\n                        setStyle(native, prop, valueToApply, renderer, sanitizer, stylesStore, playerBuilder);\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            if (flushPlayerBuilders) {\n                var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n                var playerContext = getPlayerContext(context);\n                var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                    var builder = playerContext[i];\n                    var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                    var oldPlayer = playerContext[playerInsertionIndex];\n                    if (builder) {\n                        var player = builder.buildPlayer(oldPlayer);\n                        if (player !== undefined) {\n                            if (player != null) {\n                                var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                                wasQueued && totalPlayersQueued++;\n                            }\n                            if (oldPlayer) {\n                                oldPlayer.destroy();\n                            }\n                        }\n                    }\n                    else if (oldPlayer) {\n                        // the player builder has been removed ... therefore we should delete the associated\n                        // player\n                        oldPlayer.destroy();\n                    }\n                }\n                setContextPlayersDirty(context, false);\n            }\n            setContextDirty(context, false);\n        }\n        return totalPlayersQueued;\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(prop, value);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(prop, value);\n            }\n        }\n        else if (value) {\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native['style'].setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native['style'].removeProperty(prop);\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store, playerBuilder) {\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(className, add);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(className, add);\n            }\n        }\n        else if (add) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                native['classList'].add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                native['classList'].remove(className);\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBased(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 15 /* BitMask */) | (staticIndex << 4 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 4 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        return context[2 /* InitialStylesPosition */][index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 4 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 4 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 8 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[3 /* MasterFlagPosition */]);\n    }\n    function getStyleSanitizer(context) {\n        return context[1 /* StyleSanitizerPosition */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function hasPlayerBuilderChanged(context, builder, index) {\n        var playerContext = context[0 /* PlayerContext */];\n        if (builder) {\n            if (!playerContext || index === 0) {\n                return true;\n            }\n        }\n        else if (!playerContext) {\n            return false;\n        }\n        return playerContext[index] !== builder;\n    }\n    function setPlayerBuilder(context, builder, insertionIndex) {\n        var playerContext = context[0 /* PlayerContext */] || allocPlayerContext(context);\n        if (insertionIndex > 0) {\n            playerContext[insertionIndex] = builder;\n        }\n        else {\n            insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            playerContext.splice(insertionIndex, 0, builder, null);\n            playerContext[0 /* NonBuilderPlayersStart */] +=\n                2 /* PlayerAndPlayerBuildersTupleSize */;\n        }\n        return insertionIndex;\n    }\n    function setPlayerBuilderIndex(context, index, playerBuilderIndex) {\n        context[index + 3 /* PlayerBuilderIndexOffset */] = playerBuilderIndex;\n    }\n    function getPlayerBuilderIndex(context, index) {\n        return context[index + 3 /* PlayerBuilderIndexOffset */] || 0;\n    }\n    function getPlayerBuilder(context, index) {\n        var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n        if (playerBuilderIndex) {\n            var playerContext = context[0 /* PlayerContext */];\n            if (playerContext) {\n                return playerContext[playerBuilderIndex];\n            }\n        }\n        return null;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 3 /* MasterFlagPosition */);\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 3 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function setContextPlayersDirty(context, isDirtyYes) {\n        if (isDirtyYes) {\n            context[3 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n        }\n        else {\n            context[3 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n        }\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 4 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        setPlayerBuilderIndex(context, indexA, getPlayerBuilderIndex(context, indexB));\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n        setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBased(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value, playerIndex) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, playerIndex);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 4 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n    function prepareInitialFlag(name, isClassBased, sanitizer) {\n        if (isClassBased) {\n            return 2 /* Class */;\n        }\n        else if (sanitizer && sanitizer(name)) {\n            return 4 /* Sanitize */;\n        }\n        return 0 /* None */;\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n    var ClassAndStylePlayerBuilder = /** @class */ (function () {\n        function ClassAndStylePlayerBuilder(factory, _element, _type) {\n            this._element = _element;\n            this._type = _type;\n            this._values = {};\n            this._dirty = false;\n            this._factory = factory;\n        }\n        ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n            if (this._values[prop] !== value) {\n                this._values[prop] = value;\n                this._dirty = true;\n            }\n        };\n        ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer) {\n            // if no values have been set here then this means the binding didn't\n            // change and therefore the binding values were not updated through\n            // `setValue` which means no new player will be provided.\n            if (this._dirty) {\n                var player = this._factory.fn(this._element, this._type, this._values, currentPlayer || null);\n                this._values = {};\n                this._dirty = false;\n                return player;\n            }\n            return undefined;\n        };\n        return ClassAndStylePlayerBuilder;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Token set in currentMatches while dependencies are being resolved.\n     *\n     * If we visit a directive that has a value set to CIRCULAR, we know we've\n     * already seen it, and thus have a circular dependency.\n     */\n    var CIRCULAR$1 = '__CIRCULAR__';\n    /**\n     * This property gets set before entering a template.\n     *\n     * This renderer can be one of two varieties of Renderer3:\n     *\n     * - ObjectedOrientedRenderer3\n     *\n     * This is the native browser API style, e.g. operations are methods on individual objects\n     * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n     * size).\n     *\n     * - ProceduralRenderer3\n     *\n     * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n     * that enables element manipulation. This also facilitates backwards compatibility with\n     * Renderer2.\n     */\n    var renderer;\n    function getRenderer() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return renderer;\n    }\n    var rendererFactory;\n    function getRendererFactory() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return rendererFactory;\n    }\n    function getCurrentSanitizer() {\n        return viewData && viewData[SANITIZER];\n    }\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LViewData` to only those elements.\n     */\n    var elementDepthCount;\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return viewData;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextViewData = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setEnvironment(tNode, view) {\n        previousOrParentTNode = tNode;\n        viewData = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    var tView;\n    var currentQueries;\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (i.e. this previousOrParentTNode points to a node on which we\n     * create content queries).\n     */\n    function getOrCreateCurrentQueries(QueryType) {\n        // if this is the first content query on a node, any existing LQueries needs to be cloned\n        // in subsequent template passes, the cloning occurs before directive instantiation.\n        if (previousOrParentTNode && previousOrParentTNode !== viewData[HOST_NODE] &&\n            !isContentQueryHost(previousOrParentTNode)) {\n            currentQueries && (currentQueries = currentQueries.clone());\n            previousOrParentTNode.flags |= 16384 /* hasContentQuery */;\n        }\n        return currentQueries || (currentQueries = new QueryType(null, null, null));\n    }\n    /**\n     * This property gets set before entering a template.\n     */\n    var creationMode;\n    function getCreationMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return creationMode;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var viewData;\n    /**\n     * Internal function that returns the current LViewData instance.\n     *\n     * The getCurrentView() instruction should be used for anything public.\n     */\n    function _getViewData() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return viewData;\n    }\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextViewData = null;\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        var oldView = viewData;\n        tView = newView && newView[TVIEW];\n        creationMode = newView && (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n        firstTemplatePass = newView && tView.firstTemplatePass;\n        bindingRootIndex = newView && tView.bindingStartIndex;\n        renderer = newView && newView[RENDERER];\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        viewData = contextViewData = newView;\n        oldView && (oldView[QUERIES] = currentQueries);\n        currentQueries = newView && newView[QUERIES];\n        return oldView;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n     * only, i.e. the first update will be done later. Only possible for dynamically created views.\n     */\n    function leaveView(newView, creationOnly) {\n        if (!creationOnly) {\n            if (!checkNoChangesMode) {\n                executeHooks(viewData, tView.viewHooks, tView.viewCheckHooks, creationMode);\n            }\n            // Views are clean and in update mode after being checked, so these bits are cleared\n            viewData[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n        }\n        viewData[FLAGS] |= 16 /* RunInit */;\n        viewData[BINDING_INDEX] = tView.bindingStartIndex;\n        enterView(newView, null);\n    }\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews() {\n        setHostBindings();\n        var parentFirstTemplatePass = firstTemplatePass;\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = firstTemplatePass = false;\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n        }\n        refreshDynamicEmbeddedViews(viewData);\n        // Content query results must be refreshed before content hooks are called.\n        refreshContentQueries(tView);\n        if (!checkNoChangesMode) {\n            executeHooks(viewData, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n        refreshChildComponents(tView.components, parentFirstTemplatePass);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings() {\n        if (tView.expandoInstructions) {\n            bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n            var currentDirectiveIndex = -1;\n            var currentElementIndex = -1;\n            for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                var instruction = tView.expandoInstructions[i];\n                if (typeof instruction === 'number') {\n                    if (instruction <= 0) {\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\n                        // the current element and directive index.\n                        currentElementIndex = -instruction;\n                        if (typeof viewData[bindingRootIndex] === 'number') {\n                            // We've hit an injector. It may or may not exist depending on whether\n                            // there is a public directive on this node.\n                            bindingRootIndex += INJECTOR_SIZE;\n                        }\n                        currentDirectiveIndex = bindingRootIndex;\n                    }\n                    else {\n                        // This is either the injector size (so the binding root can skip over directives\n                        // and get to the first set of host bindings on this node) or the host var count\n                        // (to get to the next set of host bindings on this node).\n                        bindingRootIndex += instruction;\n                    }\n                }\n                else {\n                    // If it's not a number, it's a host binding function that needs to be executed.\n                    viewData[BINDING_INDEX] = bindingRootIndex;\n                    // We must subtract the header offset because the load() instruction\n                    // expects a raw, unadjusted index.\n                    instruction(currentDirectiveIndex - HEADER_OFFSET, currentElementIndex);\n                    currentDirectiveIndex++;\n                }\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx - HEADER_OFFSET, tView.contentQueries[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components, parentFirstTemplatePass) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i], parentFirstTemplatePass);\n            }\n        }\n    }\n    function executeInitAndContentHooks() {\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n            executeHooks(viewData, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n    }\n    function createLViewData(renderer, tView, context, flags, sanitizer) {\n        var instance = tView.blueprint.slice();\n        instance[FLAGS] = flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */;\n        instance[PARENT] = instance[DECLARATION_VIEW] = viewData;\n        instance[CONTEXT] = context;\n        instance[INJECTOR$1] = viewData ? viewData[INJECTOR$1] : null;\n        instance[RENDERER] = renderer;\n        instance[SANITIZER] = sanitizer || null;\n        return instance;\n    }\n    function createNodeAtIndex(index, type, native, name, attrs) {\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertLessThan(adjustedIndex, viewData.length, \"Slot should have been initialized with null\");\n        viewData[adjustedIndex] = native;\n        var tNode = tView.data[adjustedIndex];\n        if (tNode == null) {\n            tNode = tView.data[adjustedIndex] = createTNode(type, adjustedIndex, name, attrs, null);\n            // Now link ourselves into the tree.\n            if (previousOrParentTNode) {\n                if (isParent && previousOrParentTNode.child == null &&\n                    (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                    // We are in the same view, which means we are adding content node to the parent view.\n                    previousOrParentTNode.child = tNode;\n                }\n                else if (!isParent) {\n                    previousOrParentTNode.next = tNode;\n                }\n            }\n        }\n        if (tView.firstChild == null && type === 3 /* Element */) {\n            tView.firstChild = tNode;\n        }\n        previousOrParentTNode = tNode;\n        isParent = true;\n        return tNode;\n    }\n    function createViewNode(index, view) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        if (view[TVIEW].node == null) {\n            view[TVIEW].node = createTNode(2 /* View */, index, null, null, null);\n        }\n        isParent = true;\n        return previousOrParentTNode = view[HOST_NODE] = view[TVIEW].node;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function adjustBlueprintForNewNode(view) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n            tView.blueprint.push(null);\n            view.push(null);\n        }\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, renderer, queries, injectorIndex) {\n        var _isParent = isParent;\n        var _previousOrParentTNode = previousOrParentTNode;\n        isParent = true;\n        previousOrParentTNode = null;\n        var lView = createLViewData(renderer, tView, context, 2 /* CheckAlways */, getCurrentSanitizer());\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        createViewNode(-1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        isParent = _isParent;\n        previousOrParentTNode = _previousOrParentTNode;\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context, rf) {\n        var _isParent = isParent;\n        var _previousOrParentTNode = previousOrParentTNode;\n        var oldView;\n        if (viewToRender[FLAGS] & 64 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(viewToRender[CONTEXT]);\n        }\n        else {\n            try {\n                isParent = true;\n                previousOrParentTNode = null;\n                oldView = enterView(viewToRender, viewToRender[HOST_NODE]);\n                namespaceHTML();\n                tView.template(rf, context);\n                if (rf & 2 /* Update */) {\n                    refreshDescendantViews();\n                }\n                else {\n                    // This must be set to false immediately after the first creation run because in an\n                    // ngFor loop, all the views will be created together before update mode runs and turns\n                    // off firstTemplatePass. If we don't set it here, instances will perform directive\n                    // matching, etc again and again.\n                    viewToRender[TVIEW].firstTemplatePass = firstTemplatePass = false;\n                }\n            }\n            finally {\n                // renderEmbeddedTemplate() is called twice, once for creation only and then once for\n                // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n                var isCreationOnly = (rf & 1 /* Create */) === 1 /* Create */;\n                leaveView(oldView, isCreationOnly);\n                isParent = _isParent;\n                previousOrParentTNode = _previousOrParentTNode;\n            }\n        }\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        contextViewData = walkUpViews(level, contextViewData);\n        return contextViewData[CONTEXT];\n    }\n    function renderComponentOrTemplate(hostView, componentOrContext, templateFn) {\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        try {\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (templateFn) {\n                namespaceHTML();\n                templateFn(getRenderFlags(hostView), componentOrContext);\n                refreshDescendantViews();\n            }\n            else {\n                executeInitAndContentHooks();\n                // Element was stored at 0 in data and directive was stored at 0 in directives\n                // in renderComponent()\n                setHostBindings();\n                componentRefresh(HEADER_OFFSET, false);\n            }\n        }\n        finally {\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. By default, the update block is run with the\n     * creation block when the view is in creation mode. Otherwise, the update block is run\n     * alone.\n     *\n     * Dynamically created views do NOT use this configuration (update block and create block are\n     * always run separately).\n     */\n    function getRenderFlags(view) {\n        return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg/';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? 'ng-container' : '');\n        ngDevMode && assertDataInRange(index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, null, attrs || null);\n        appendChild(native, tNode, viewData);\n        createDirectivesAndLocals(localRefs);\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        currentQueries &&\n            (currentQueries = currentQueries.addNode(previousOrParentTNode));\n        queueLifecycleHooks(previousOrParentTNode.flags, tView);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n        if (attrs) {\n            setUpAttributes(native, attrs);\n        }\n        appendChild(native, tNode, viewData);\n        createDirectivesAndLocals(localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (elementDepthCount === 0) {\n            attachPatchData(native, viewData);\n        }\n        elementDepthCount++;\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || renderer;\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!bindingsEnabled)\n            return;\n        if (firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            cacheMatchingDirectivesForNode(previousOrParentTNode, tView, localRefs || null);\n        }\n        else {\n            instantiateDirectivesDirectly();\n        }\n        saveResolvedLocalsInData(localRefExtractor);\n    }\n    /**\n     * On first template pass, we match each node against available directive selectors and save\n     * the resulting defs in the correct instantiation order for subsequent change detection runs\n     * (so dependencies are always created before the directives that inject them).\n     */\n    function cacheMatchingDirectivesForNode(tNode, tView, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        var exportsMap = localRefs ? { '': -1 } : null;\n        var matches = tView.currentMatches = findDirectiveMatches(tNode);\n        generateExpandoBlock(tNode, matches);\n        var totalHostVars = 0;\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                var valueIndex = i + 1;\n                resolveDirective(def, valueIndex, matches);\n                totalHostVars += def.hostVars;\n                saveNameToExportMap(matches[valueIndex], def, exportsMap);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n        prefillHostVars(totalHostVars);\n    }\n    /**\n     * Generates a new block in TView.expandoInstructions for this node.\n     *\n     * Each expando block starts with the element index (turned negative so we can distinguish\n     * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n     */\n    function generateExpandoBlock(tNode, matches) {\n        var directiveCount = matches ? matches.length / 2 : 0;\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        if (directiveCount > 0) {\n            (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, directiveCount);\n        }\n    }\n    /**\n     * On the first template pass, we need to reserve space for host binding values\n     * after directives are matched (so all directives are saved, then bindings).\n     * Because we are updating the blueprint, we only need to do this once.\n     */\n    function prefillHostVars(totalHostVars) {\n        for (var i = 0; i < totalHostVars; i++) {\n            viewData.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n    /** Matches the current node against all available selectors. */\n    function findDirectiveMatches(tNode) {\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors)) {\n                    matches || (matches = []);\n                    if (def.diPublic)\n                        def.diPublic(def);\n                    if (def.template) {\n                        if (tNode.flags & 4096 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        addComponentLogic(def);\n                        // The component is always stored first with directives after.\n                        matches.unshift(def, null);\n                    }\n                    else {\n                        matches.push(def, null);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    function resolveDirective(def, valueIndex, matches) {\n        if (matches[valueIndex] === null) {\n            matches[valueIndex] = CIRCULAR$1;\n            var instance = def.factory();\n            return directiveCreate(matches[valueIndex] = viewData.length, instance, def);\n        }\n        else if (matches[valueIndex] === CIRCULAR$1) {\n            // If we revisit this directive before it's resolved, we know it's circular\n            throwCyclicDependencyError(def.type);\n        }\n        return null;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck() {\n        if (firstTemplatePass) {\n            (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n        }\n    }\n    /** Stores index of directive and host element so it will be queued for binding refresh during CD.\n     */\n    function queueHostBindingForCheck(dirIndex, def) {\n        ngDevMode &&\n            assertEqual(firstTemplatePass, true, 'Should only be called in first template pass.');\n        tView.expandoInstructions.push(def.hostBindings, def.hostVars);\n    }\n    /**\n     * This function instantiates the given directives.\n     */\n    function instantiateDirectivesDirectly() {\n        ngDevMode && assertEqual(firstTemplatePass, false, \"Directives should only be instantiated directly after first template pass\");\n        var count = previousOrParentTNode.flags & 4095 /* DirectiveCountMask */;\n        if (isContentQueryHost(previousOrParentTNode) && currentQueries) {\n            currentQueries = currentQueries.clone();\n        }\n        if (count > 0) {\n            var start = previousOrParentTNode.flags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                // Component view must be set on node before the factory is created so\n                // ChangeDetectorRefs have a way to store component view on creation.\n                if (def.template) {\n                    addComponentLogic(def);\n                }\n                directiveCreate(i, def.factory(), def);\n            }\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n     * Builds up an export map as directives are created, so local refs can be quickly mapped\n     * to their directive instances.\n     */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LViewData in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(localRefExtractor) {\n        var localNames = previousOrParentTNode.localNames;\n        var tNode = previousOrParentTNode;\n        if (localNames) {\n            var localIndex = previousOrParentTNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ? localRefExtractor(tNode, viewData) : viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData =\n                createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice(),\n            childIndex: -1,\n            bindingStartIndex: bindingStartIndex,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            pipeDestroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            currentMatches: null,\n            firstChild: null,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[CONTAINER_INDEX] = -1;\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function setUpAttributes(native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n                i += 2;\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (attrName === 0 /* NamespaceURI */) {\n                    // Namespaced attributes\n                    var namespaceURI = attrs[i + 1];\n                    var attrName_1 = attrs[i + 2];\n                    var attrVal = attrs[i + 3];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                    i += 4;\n                }\n                else {\n                    // Standard attributes\n                    var attrVal = attrs[i + 1];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                    i += 2;\n                }\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        ngDevMode && assertDataInRange(-1);\n        rendererFactory = factory;\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener.\n     */\n    function listener(eventName, listenerFn, useCapture) {\n        if (useCapture === void 0) { useCapture = false; }\n        var tNode = previousOrParentTNode;\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(previousOrParentTNode, viewData);\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                var cleanupFn = renderer.listen(native, eventName, listenerFn);\n                storeCleanupFn(viewData, cleanupFn);\n            }\n            else {\n                var wrappedListener = wrapListenerWithPreventDefault(listenerFn);\n                native.addEventListener(eventName, wrappedListener, useCapture);\n                var cleanupInstances = getCleanup(viewData);\n                cleanupInstances.push(wrappedListener);\n                if (firstTemplatePass) {\n                    getTViewCleanup(viewData).push(eventName, tNode.index, cleanupInstances.length - 1, useCapture);\n                }\n            }\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode.flags, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var outputData;\n        if (outputs && (outputData = outputs[eventName])) {\n            createOutput(outputData, listenerFn);\n        }\n    }\n    /**\n     * Iterates through the outputs associated with a particular event name and subscribes to\n     * each output.\n     */\n    function createOutput(outputs, listener) {\n        for (var i = 0; i < outputs.length; i += 2) {\n            ngDevMode && assertDataInRange(outputs[i], viewData);\n            var subscription = viewData[outputs[i]][outputs[i + 1]].subscribe(listener);\n            storeCleanupWithContext(viewData, subscription, subscription.unsubscribe);\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(view, context, cleanupFn) {\n        if (!view)\n            view = viewData;\n        getCleanup(view).push(context);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(cleanupFn, view[CLEANUP].length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        currentQueries &&\n            (currentQueries = currentQueries.addNode(previousOrParentTNode));\n        queueLifecycleHooks(previousOrParentTNode.flags, tView);\n        elementDepthCount--;\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var element_1 = getNativeByIndex(index, viewData);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1, name) :\n                    element_1.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1, name, strValue) :\n                    element_1.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an Element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementProperty(index, propName, value, sanitizer) {\n        if (value === NO_CHANGE)\n            return;\n        var element = getNativeByIndex(index, viewData);\n        var tNode = getTNode(index, viewData);\n        // if tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked\n        if (tNode && tNode.inputs === undefined) {\n            // mark inputs as checked\n            tNode.inputs = generatePropertyAliases(tNode.flags, 0 /* Input */);\n        }\n        var inputData = tNode && tNode.inputs;\n        var dataValue;\n        if (inputData && (dataValue = inputData[propName])) {\n            setInputsForProperty(dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(index + HEADER_OFFSET);\n        }\n        else if (tNode.type === 3 /* Element */) {\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value) : value;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            isProceduralRenderer(renderer) ?\n                renderer.setProperty(element, propName, value) :\n                (element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value);\n        }\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function enableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function disableBindings() {\n        bindingsEnabled = false;\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(type, adjustedIndex, tagName, attrs, tViews) {\n        ngDevMode && ngDevMode.tNode++;\n        var parent = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && viewData && parent !== viewData[HOST_NODE];\n        var tParent = parentInSameView ? parent : null;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            flags: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: tParent,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(inputs[i], viewData);\n            viewData[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param number tNodeFlags node flags\n     * @param Direction direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNodeFlags, direction) {\n        var count = tNodeFlags & 4095 /* DirectiveCountMask */;\n        var propStore = null;\n        if (count > 0) {\n            var start = tNodeFlags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Add or remove a class in a `classList` on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case\n     *\n     * @param index The index of the element to update in the data array\n     * @param className Name of class to toggle. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value A value indicating if a given class should be added or removed.\n     */\n    function elementClassProp(index, stylingIndex, value) {\n        var val = (value instanceof BoundPlayerFactory) ? value : (!!value);\n        updateClassProp(getStylingContext(index, viewData), stylingIndex, val);\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to apply all styling\n     * (e.g. `style=\"...\"`) values to the element. This is also where the provided index\n     * value is allocated for the styling details for its corresponding element (the element\n     * index is the previous index value from this one).\n     *\n     * (Note this function calls `elementStylingApply` immediately when called.)\n     *\n     *\n     * @param index Index value which will be allocated to store styling data for the element.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classDeclarations A key/value array of CSS classes that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any classes placed on the element by multiple (`[class]`) or singular (`[class.named]`)\n     *   bindings. If a class binding changes its value to a falsy value then the matching initial\n     *   class value that are passed in here will be applied to the element (if matched).\n     * @param styleDeclarations A key/value array of CSS styles that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any styles placed on the element by multiple (`[style]`) or singular (`[style.prop]`)\n     *   bindings. If a style binding changes its value to null then the initial styling\n     *   values that are passed in here will be applied to the element (if matched).\n     * @param styleSanitizer An optional sanitizer function that will be used (if provided)\n     *   to sanitize the any CSS property values that are applied to the element (during rendering).\n     */\n    function elementStyling(classDeclarations, styleDeclarations, styleSanitizer) {\n        var tNode = previousOrParentTNode;\n        if (!tNode.stylingTemplate) {\n            // initialize the styling template.\n            tNode.stylingTemplate =\n                createStylingContextTemplate(classDeclarations, styleDeclarations, styleSanitizer);\n        }\n        if (styleDeclarations && styleDeclarations.length ||\n            classDeclarations && classDeclarations.length) {\n            elementStylingApply(tNode.index - HEADER_OFFSET);\n        }\n    }\n    /**\n     * Apply all styling values to the element which have been queued by any styling instructions.\n     *\n     * This instruction is meant to be run once one or more `elementStyle` and/or `elementStyleProp`\n     * have been issued against the element. This function will also determine if any styles have\n     * changed and will then skip the operation if there is nothing new to render.\n     *\n     * Once called then all queued styles will be flushed.\n     *\n     * @param index Index of the element's styling storage that will be rendered.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     */\n    function elementStylingApply(index) {\n        var totalPlayersQueued = renderStyleAndClassBindings(getStylingContext(index, viewData), renderer, viewData);\n        if (totalPlayersQueued > 0) {\n            var rootContext = getRootContext(viewData);\n            scheduleTick(rootContext, 2 /* FlushPlayers */);\n        }\n    }\n    /**\n     * Queue a given style to be rendered on an Element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param styleIndex Index of the style property on this element. (Monotonically increasing.)\n     * @param value New value to write (null to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     */\n    function elementStyleProp(index, styleIndex, value, suffix) {\n        var valueToAdd = null;\n        if (value) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = stringify$1(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index, viewData), styleIndex, valueToAdd);\n    }\n    /**\n     * Queue a key/value map of styles to be rendered on an Element.\n     *\n     * This instruction is meant to handle the `[style]=\"exp\"` usage. When styles are applied to\n     * the Element they will then be placed with respect to any styles set with `elementStyleProp`.\n     * If any styles are set to `null` then they will be removed from the element (unless the same\n     * style properties have been assigned to the element during creation using `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     */\n    function elementStylingMap(index, classes, styles) {\n        updateStylingMap(getStylingContext(index, viewData), classes, styles);\n    }\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, renderer);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        isParent = false;\n        appendChild(textNative, tNode, viewData);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && assertDataInRange(index + HEADER_OFFSET);\n            var element_2 = getNativeByIndex(index, viewData);\n            ngDevMode && assertDefined(element_2, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            isProceduralRenderer(renderer) ? renderer.setValue(element_2, stringify$1(value)) :\n                element_2.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Create a directive and their associated content queries.\n     *\n     * NOTE: directives can be created in order other than the index order. They can also\n     *       be retrieved before they are created in which case the value will be null.\n     *\n     * @param directive The directive instance.\n     * @param directiveDef DirectiveDef object which contains information about the template.\n     */\n    function directiveCreate(directiveDefIdx, directive, directiveDef) {\n        var native = getNativeByTNode(previousOrParentTNode, viewData);\n        var instance = baseDirectiveCreate(directiveDefIdx, directive, directiveDef, native);\n        if (directiveDef.template) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n        if (firstTemplatePass) {\n            // Init hooks are queued now so ngOnInit is called in host components before\n            // any projected components.\n            queueInitHooks(directiveDefIdx, directiveDef.onInit, directiveDef.doCheck, tView);\n        }\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, instance, directiveDef.inputs, previousOrParentTNode);\n        }\n        if (directiveDef.contentQueries) {\n            directiveDef.contentQueries();\n        }\n        return instance;\n    }\n    function addComponentLogic(def) {\n        var native = getNativeByTNode(previousOrParentTNode, viewData);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var componentView = addToViewTree(viewData, previousOrParentTNode.index, createLViewData(rendererFactory.createRenderer(native, def), tView, null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, getCurrentSanitizer()));\n        componentView[HOST_NODE] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        componentView[HOST] = viewData[previousOrParentTNode.index];\n        viewData[previousOrParentTNode.index] = componentView;\n        if (firstTemplatePass) {\n            queueComponentIndexForCheck();\n            previousOrParentTNode.flags =\n                viewData.length << 15 /* DirectiveStartingIndexShift */ | 4096 /* isComponent */;\n        }\n    }\n    /**\n     * A lighter version of directiveCreate() that is used for the root component\n     *\n     * This version does not contain features that we don't already support at root in\n     * current Angular. Example: local refs and inputs on root component.\n     */\n    function baseDirectiveCreate(index, directive, directiveDef, native) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent();\n        attachPatchData(directive, viewData);\n        if (native) {\n            attachPatchData(native, viewData);\n        }\n        viewData[index] = directive;\n        if (firstTemplatePass) {\n            var flags = previousOrParentTNode.flags;\n            if (flags === 0) {\n                // When the first directive is created:\n                // - save the index,\n                // - set the number of directives to 1\n                previousOrParentTNode.flags =\n                    index << 15 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ | 1;\n            }\n            else {\n                // Only need to bump the size when subsequent directives are created\n                ngDevMode && assertNotEqual(flags & 4095 /* DirectiveCountMask */, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n                previousOrParentTNode.flags++;\n            }\n            tView.data.push(directiveDef);\n            tView.blueprint.push(null);\n            if (directiveDef.hostBindings)\n                queueHostBindingForCheck(index, directiveDef);\n        }\n        else {\n            var diPublic = directiveDef.diPublic;\n            if (diPublic)\n                diPublic(directiveDef);\n        }\n        if (directiveDef.attributes != null && previousOrParentTNode.type == 3 /* Element */) {\n            setUpAttributes(native, directiveDef.attributes);\n        }\n        return directive;\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, hostTNode, currentView, native, isForViewContainerRef) {\n        return [\n            isForViewContainerRef ? -1 : 0,\n            [],\n            currentView,\n            null,\n            null,\n            hostNative,\n            native,\n            getRenderParent(hostTNode, currentView) // renderParent\n        ];\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        // TODO: consider a separate node type for templates\n        var tNode = containerInternal(index, tagName || null, attrs || null);\n        if (firstTemplatePass) {\n            tNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        createDirectivesAndLocals(localRefs, localRefExtractor);\n        currentQueries &&\n            (currentQueries = currentQueries.addNode(previousOrParentTNode));\n        queueLifecycleHooks(tNode.flags, tView);\n        isParent = false;\n    }\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var tNode = containerInternal(index, null, null);\n        firstTemplatePass && (tNode.tViews = []);\n        isParent = false;\n    }\n    function containerInternal(index, tagName, attrs) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = renderer.createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n        var lContainer = viewData[adjustedIndex] =\n            createLContainer(viewData[adjustedIndex], tNode, viewData, comment);\n        appendChild(comment, tNode, viewData);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(viewData, index + HEADER_OFFSET, lContainer);\n        if (currentQueries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = currentQueries.container();\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        return tNode;\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        previousOrParentTNode = loadInternal(index, tView.data);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        isParent = true;\n        viewData[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        if (!checkNoChangesMode) {\n            // We need to execute init hooks here so ngOnInit hooks are called in top level views\n            // before they are called in embedded views (for backwards compatibility).\n            executeInitHooks(viewData, tView, creationMode);\n        }\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = viewData[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, previousOrParentTNode, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lViewData) {\n        for (var current = getLViewChild(lViewData); current !== null; current = current[NEXT]) {\n            // Note: current can be an LViewData or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LViewData\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var dynamicViewData = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT], 2 /* Update */);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param tContainerNode to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, tContainerNode, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, tContainerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the search here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = viewData[containerTNode.index];\n        var currentView = viewData;\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, containerTNode, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            isParent = true;\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLViewData(renderer, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 2 /* CheckAlways */, getCurrentSanitizer());\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            createViewNode(viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (creationMode) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, currentView, lContainer[ACTIVE_INDEX], -1);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return getRenderFlags(viewToRender);\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        var viewHost = viewData[HOST_NODE];\n        refreshDescendantViews();\n        leaveView(viewData[PARENT]);\n        previousOrParentTNode = viewHost;\n        isParent = false;\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LViewData[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex, parentFirstTemplatePass) {\n        ngDevMode && assertDataInRange(adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, viewData);\n        ngDevMode && assertNodeType(tView.data[adjustedElementIndex], 3 /* Element */);\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n            parentFirstTemplatePass && syncViewWithBlueprint(hostView);\n            detectChangesInternal(hostView, hostView[CONTEXT]);\n        }\n    }\n    /**\n     * Syncs an LViewData instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LViewData is created.\n     * 3. Second <comp> is matched as a component and its LViewData is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LViewData was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentView(viewData)[HOST_NODE];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                    componentChild.next = null;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        isParent = false;\n        // re-distribution of projectable nodes is stored on a component's view level\n        var componentView = findComponentView(viewData);\n        var componentNode = componentView[HOST_NODE];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        var projectedView = componentView[PARENT];\n        var projectionNodeIndex = -1;\n        while (nodeToProject) {\n            if (nodeToProject.type === 1 /* Projection */) {\n                // This node is re-projected, so we must go up the tree to get its projected nodes.\n                var currentComponentView = findComponentView(projectedView);\n                var currentComponentHost = currentComponentView[HOST_NODE];\n                var firstProjectedNode = currentComponentHost.projection[nodeToProject.projection];\n                if (firstProjectedNode) {\n                    projectionNodeStack$1[++projectionNodeIndex] = nodeToProject;\n                    projectionNodeStack$1[++projectionNodeIndex] = projectedView;\n                    nodeToProject = firstProjectedNode;\n                    projectedView = currentComponentView[PARENT];\n                    continue;\n                }\n            }\n            else {\n                // This flag must be set now or we won't know that this node is projected\n                // if the nodes are inserted into a container later.\n                nodeToProject.flags |= 8192 /* isProjected */;\n                appendProjectedNode(nodeToProject, tProjectionNode, viewData, projectedView);\n            }\n            // If we are finished with a list of re-projected nodes, we need to get\n            // back to the root projection node that was re-projected.\n            if (nodeToProject.next === null && projectedView !== componentView[PARENT]) {\n                projectedView = projectionNodeStack$1[projectionNodeIndex--];\n                nodeToProject = projectionNodeStack$1[projectionNodeIndex--];\n            }\n            nodeToProject = nodeToProject.next;\n        }\n    }\n    /**\n     * Adds LViewData or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param currentView The view where LViewData or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LViewData[], adjusted for header\n     * @param state The LViewData or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(currentView, adjustedHostIndex, state) {\n        if (currentView[TAIL]) {\n            currentView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        currentView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LViewData dirty. */\n    function markDirtyIfOnPush(viewIndex) {\n        var view = getComponentViewByIndex(viewIndex, viewData);\n        if (!(view[FLAGS] & 2 /* CheckAlways */)) {\n            view[FLAGS] |= 4 /* Dirty */;\n        }\n    }\n    /** Wraps an event listener with preventDefault behavior. */\n    function wrapListenerWithPreventDefault(listenerFn) {\n        return function wrapListenerIn_preventDefault(e) {\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /** Marks current view and all ancestors dirty */\n    function markViewDirty(view) {\n        var currentView = view;\n        while (currentView && !(currentView[FLAGS] & 64 /* IsRoot */)) {\n            currentView[FLAGS] |= 4 /* Dirty */;\n            currentView = currentView[PARENT];\n        }\n        currentView[FLAGS] |= 4 /* Dirty */;\n        ngDevMode && assertDefined(currentView[CONTEXT], 'rootContext should be defined');\n        var rootContext = currentView[CONTEXT];\n        scheduleTick(rootContext, 1 /* DetectChanges */);\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLViewData(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        detectChangesInternal(getComponentViewByInstance(component), component);\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lViewData The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lViewData) {\n        tickRootContext(lViewData[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        checkNoChangesMode = true;\n        try {\n            detectChanges(component);\n        }\n        finally {\n            checkNoChangesMode = false;\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lViewData The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lViewData) {\n        checkNoChangesMode = true;\n        try {\n            detectChangesInRootView(lViewData);\n        }\n        finally {\n            checkNoChangesMode = false;\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function detectChangesInternal(hostView, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        var templateFn = hostTView.template;\n        var viewQuery = hostTView.viewQuery;\n        try {\n            namespaceHTML();\n            createViewQuery(viewQuery, hostView[FLAGS], component);\n            templateFn(getRenderFlags(hostView), component);\n            refreshDescendantViews();\n            updateViewQuery(viewQuery, component);\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function createViewQuery(viewQuery, flags, component) {\n        if (viewQuery && (flags & 1 /* CreationMode */)) {\n            viewQuery(1 /* Create */, component);\n        }\n    }\n    function updateViewQuery(viewQuery, component) {\n        if (viewQuery) {\n            viewQuery(2 /* Update */, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        markViewDirty(getComponentViewByInstance(component));\n    }\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        return bindingUpdated(viewData[BINDING_INDEX]++, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(viewData[BINDING_INDEX]++, values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var different = bindingUpdated(viewData[BINDING_INDEX]++, v0);\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var different = bindingUpdated2(viewData[BINDING_INDEX], v0, v1);\n        viewData[BINDING_INDEX] += 2;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var different = bindingUpdated3(viewData[BINDING_INDEX], v0, v1, v2);\n        viewData[BINDING_INDEX] += 3;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        viewData[BINDING_INDEX] += 4;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated(viewData[BINDING_INDEX] + 4, v4) || different;\n        viewData[BINDING_INDEX] += 5;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated2(viewData[BINDING_INDEX] + 4, v4, v5) || different;\n        viewData[BINDING_INDEX] += 6;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated3(viewData[BINDING_INDEX] + 4, v4, v5, v6) || different;\n        viewData[BINDING_INDEX] += 7;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated4(viewData[BINDING_INDEX] + 4, v4, v5, v6, v7) || different;\n        viewData[BINDING_INDEX] += 8;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        viewData[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        return loadInternal(index, contextViewData);\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    function loadQueryList(queryListIdx) {\n        ngDevMode && assertDefined(viewData[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        ngDevMode && assertDataInRange(queryListIdx, viewData[CONTENT_QUERIES]);\n        return viewData[CONTENT_QUERIES][queryListIdx];\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(index, viewData);\n    }\n    /** Gets the current binding value. */\n    function getBinding(bindingIndex) {\n        ngDevMode && assertDataInRange(viewData[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(viewData[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return viewData[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(bindingIndex, value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && assertLessThan(bindingIndex, viewData.length, \"Slot should have been initialized to NO_CHANGE\");\n        if (viewData[bindingIndex] === NO_CHANGE) {\n            viewData[bindingIndex] = value;\n        }\n        else if (isDifferent(viewData[bindingIndex], value, checkNoChangesMode)) {\n            throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, viewData[bindingIndex], value);\n            viewData[bindingIndex] = value;\n        }\n        else {\n            return false;\n        }\n        return true;\n    }\n    /** Updates binding and returns the value. */\n    function updateBinding(bindingIndex, value) {\n        return viewData[bindingIndex] = value;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(bindingIndex, exp1);\n        return bindingUpdated(bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated(bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated2(bindingIndex + 2, exp3, exp4) || different;\n    }\n    function getTView() {\n        return tView;\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     */\n    function registerContentQuery(queryList) {\n        var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n        if (firstTemplatePass) {\n            var currentDirectiveIndex = viewData.length - 1;\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n            if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n            }\n        }\n    }\n    function assertPreviousIsParent() {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent() {\n        assertDefined(previousOrParentTNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataInRange(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertDataInRangeInternal(index, arr || viewData);\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Root component will always have an element index of 0 and an injector size of 1\n    var ROOT_EXPANDO_INSTRUCTIONS = [0, 1];\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n            2 /* CheckAlways */ | 64 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler || requestAnimationFrame.bind(window), opts.playerHandler || null);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLViewData(renderer, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags);\n        rootView[INJECTOR$1] = opts.injector || null;\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, renderer, sanitizer);\n            component = createRootComponent(hostRNode, componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            executeInitAndContentHooks();\n            detectChangesInternal(componentView, component);\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        var componentView = createLViewData(renderer, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, sanitizer);\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n        if (tView.firstTemplatePass) {\n            tView.expandoInstructions = ROOT_EXPANDO_INSTRUCTIONS.slice();\n            if (def.diPublic)\n                def.diPublic(def);\n            tNode.flags =\n                rootView.length << 15 /* DirectiveStartingIndexShift */ | 4096 /* isComponent */;\n        }\n        // Store component view at node index, with node as the HOST\n        componentView[HOST] = rootView[HEADER_OFFSET];\n        componentView[HOST_NODE] = tNode;\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(hostRNode, componentView, componentDef, rootView, rootContext, hostFeatures) {\n        // Create directive instance with factory() and store at next index in viewData\n        var component = baseDirectiveCreate(rootView.length, componentDef.factory(), componentDef, hostRNode);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        if (rootView[TVIEW].firstTemplatePass)\n            prefillHostVars(componentDef.hostVars);\n        setHostBindings();\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLViewData(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        queueInitHooks(dirIndex, def.onInit, def.doCheck, rootTView);\n        queueLifecycleHooks(dirIndex << 15 /* DirectiveStartingIndexShift */ | 1, rootTView);\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext$1(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext$1(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determines if a definition is a {@link ComponentDef} or a {@link DirectiveDef}\n     * @param definition The definition to examine\n     */\n    function isComponentDef(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (directiveIndex, elementIndex) {\n                            superHostBindings_1(directiveIndex, elementIndex);\n                            prevHostBindings_1(directiveIndex, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                if (isComponentDef(definition) && isComponentDef(superDef)) {\n                    var prevViewQuery_1 = definition.viewQuery;\n                    var superViewQuery_1 = superDef.viewQuery;\n                    if (superViewQuery_1) {\n                        if (prevViewQuery_1) {\n                            definition.viewQuery = function (rf, ctx) {\n                                superViewQuery_1(rf, ctx);\n                                prevViewQuery_1(rf, ctx);\n                            };\n                        }\n                        else {\n                            definition.viewQuery = superViewQuery_1;\n                        }\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function () {\n                            superContentQueries_1();\n                            prevContentQueries_1();\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge Content Queries Refresh\n                var prevContentQueriesRefresh_1 = definition.contentQueriesRefresh;\n                var superContentQueriesRefresh_1 = superDef.contentQueriesRefresh;\n                if (superContentQueriesRefresh_1) {\n                    if (prevContentQueriesRefresh_1) {\n                        definition.contentQueriesRefresh = function (directiveIndex, queryIndex) {\n                            superContentQueriesRefresh_1(directiveIndex, queryIndex);\n                            prevContentQueriesRefresh_1(directiveIndex, queryIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueriesRefresh = superContentQueriesRefresh_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature !== InheritDefinitionFeature) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                return \"break\";\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.afterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.afterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.afterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                    definition.onInit = definition.onInit || superPrototype.onInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY$1) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature(definition) {\n        var declaredToMinifiedInputs = definition.declaredInputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (declaredName) {\n            if (declaredToMinifiedInputs.hasOwnProperty(declaredName)) {\n                var minifiedKey = declaredToMinifiedInputs[declaredName];\n                var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n                // Walk the prototype chain to see if we find a property descriptor\n                // That way we can honor setters and getters that were inherited.\n                var originalProperty = undefined;\n                var checkProto = proto;\n                while (!originalProperty && checkProto &&\n                    Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                    originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                    checkProto = Object.getPrototypeOf(checkProto);\n                }\n                var getter = originalProperty && originalProperty.get;\n                var setter_1 = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minifiedKey, {\n                    get: getter ||\n                        (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            simpleChanges = {};\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                        var currentChange = simpleChanges[declaredName];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[declaredName] =\n                                new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey_1] = value;\n                        }\n                        if (setter_1)\n                            setter_1.call(this, value);\n                    },\n                    // Make the property configurable in dev mode to allow overriding in tests\n                    configurable: !!ngDevMode\n                });\n            }\n        };\n        for (var declaredName in declaredToMinifiedInputs) {\n            _loop_1(declaredName);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    }\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            if (delegateHook)\n                delegateHook.apply(this);\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        if (tView.firstTemplatePass) {\n            var id = type[NG_ELEMENT_ID];\n            // Set a unique ID on the directive type, so if something tries to inject the directive,\n            // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n            if (id == null) {\n                id = type[NG_ELEMENT_ID] = nextNgElementId++;\n            }\n            // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n            // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n            var bloomBit = id & BLOOM_MASK;\n            // Create a mask that targets the specific bit associated with the directive.\n            // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n            // to bit positions 0 - 31 in a 32 bit integer.\n            var mask = 1 << bloomBit;\n            // Use the raw bloomBit number to determine which bloom filter bucket we should check\n            // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n            var b7 = bloomBit & 0x80;\n            var b6 = bloomBit & 0x40;\n            var b5 = bloomBit & 0x20;\n            var tData = tView.data;\n            if (b7) {\n                b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                    (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n            }\n            else {\n                b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                    (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n            }\n        }\n    }\n    function getOrCreateNodeInjector() {\n        return getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), _getViewData());\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            setUpBloom(tView.data, tNode); // foundation for node bloom\n            setUpBloom(hostView, null); // foundation for cumulative bloom\n            setUpBloom(tView.blueprint, null);\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = parentLoc & 32767 /* InjectorIndexMask */;\n        var parentView = getParentInjectorView(parentLoc, hostView);\n        var parentData = parentView[TVIEW].data;\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (parentLoc !== -1) {\n            for (var i = 0; i < PARENT_INJECTOR; i++) {\n                var bloomIndex = parentIndex + i;\n                // Creates a cumulative bloom filter that merges the parent's bloom filter\n                // and its own cumulative bloom (which contains tokens for all ancestors)\n                hostView[injectorIndex + i] = parentView[bloomIndex] | parentData[bloomIndex];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function setUpBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // view offset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[HOST_NODE];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view[HOST_NODE];\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 15 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LViewData instance from which to start walking up the view tree\n     * @returns The LViewData instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = location >> 15 /* ViewOffsetShift */;\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param def The definition of the directive to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, def) {\n        bloomAdd(injectorIndex, view[TVIEW], def.type);\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param def The definition of the directive to be made public\n     */\n    function diPublic(def) {\n        diPublicInInjector(getOrCreateNodeInjector(), _getViewData(), def);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var hostTNode = getPreviousOrParentTNode();\n        return getOrCreateInjectable(hostTNode, _getViewData(), token, flags);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @experimental\n     */\n    function injectAttribute(attrNameToInject) {\n        var tNode = getPreviousOrParentTNode();\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 1 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Returns the value associated to the given token from the injectors.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * @param nodeInjector Node injector where the search should start\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @returns the value from the injector or `null` when not found\n     */\n    function getOrCreateInjectable(hostTNode, hostView, token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var bloomHash = bloomHashBitOrFactory(token);\n        // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n        // so just call the factory function to create it.\n        if (typeof bloomHash === 'function')\n            return bloomHash();\n        // If the token has a bloom hash, then it is a directive that is public to the injection system\n        // (diPublic) otherwise fall back to the module injector.\n        if (bloomHash != null) {\n            var startInjectorIndex = getInjectorIndex(hostTNode, hostView);\n            var injectorIndex = startInjectorIndex;\n            var injectorView = hostView;\n            var parentLocation = -1;\n            // If we should skip this injector or if an injector doesn't exist on this node (e.g. all\n            // directives on this node are private), start by searching the parent injector.\n            if (flags & 4 /* SkipSelf */ || injectorIndex === -1) {\n                parentLocation = injectorIndex === -1 ? getParentInjectorLocation(hostTNode, hostView) :\n                    injectorView[injectorIndex + PARENT_INJECTOR];\n                if (shouldNotSearchParent(flags, parentLocation)) {\n                    injectorIndex = -1;\n                }\n                else {\n                    injectorIndex = parentLocation & 32767 /* InjectorIndexMask */;\n                    injectorView = getParentInjectorView(parentLocation, injectorView);\n                }\n            }\n            while (injectorIndex !== -1) {\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match. Outer loop is necessary in case we get a false positive injector.\n                while (injectorIndex !== -1) {\n                    // Check the current injector. If it matches, stop searching for an injector.\n                    if (injectorHasToken(bloomHash, injectorIndex, injectorView[TVIEW].data)) {\n                        break;\n                    }\n                    parentLocation = injectorView[injectorIndex + PARENT_INJECTOR];\n                    if (shouldNotSearchParent(flags, parentLocation)) {\n                        injectorIndex = -1;\n                        break;\n                    }\n                    // If the ancestor bloom filter value has the bit corresponding to the directive, traverse\n                    // up to find the specific injector. If the ancestor bloom filter does not have the bit, we\n                    // can abort.\n                    if (injectorHasToken(bloomHash, injectorIndex, injectorView)) {\n                        injectorIndex = parentLocation & 32767 /* InjectorIndexMask */;\n                        injectorView = getParentInjectorView(parentLocation, injectorView);\n                    }\n                    else {\n                        injectorIndex = -1;\n                        break;\n                    }\n                }\n                // If no injector is found, we *know* that there is no ancestor injector that contains the\n                // token, so we abort.\n                if (injectorIndex === -1) {\n                    break;\n                }\n                // At this point, we have an injector which *may* contain the token, so we step through the\n                // directives associated with the injector's corresponding node to get the directive instance.\n                var instance = void 0;\n                if (instance = searchDirectivesOnInjector(injectorIndex, injectorView, token)) {\n                    return instance;\n                }\n                // If we *didn't* find the directive for the token and we are searching the current node's\n                // injector, it's possible the directive is on this node and hasn't been created yet.\n                if (injectorIndex === startInjectorIndex && hostView === injectorView &&\n                    (instance = searchMatchesQueuedForCreation(token, injectorView[TVIEW]))) {\n                    return instance;\n                }\n                // The def wasn't found anywhere on this node, so it was a false positive.\n                // Traverse up the tree and continue searching.\n                injectorIndex = parentLocation & 32767 /* InjectorIndexMask */;\n                injectorView = getParentInjectorView(parentLocation, injectorView);\n            }\n        }\n        var moduleInjector = hostView[INJECTOR$1];\n        var formerInjector = setCurrentInjector(moduleInjector);\n        try {\n            return inject(token, flags);\n        }\n        finally {\n            setCurrentInjector(formerInjector);\n        }\n    }\n    function searchMatchesQueuedForCreation(token, hostTView) {\n        var matches = hostTView.currentMatches;\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                if (def.type === token) {\n                    return resolveDirective(def, i + 1, matches);\n                }\n            }\n        }\n        return null;\n    }\n    function searchDirectivesOnInjector(injectorIndex, injectorView, token) {\n        var tNode = injectorView[TVIEW].data[injectorIndex + TNODE];\n        var nodeFlags = tNode.flags;\n        var count = nodeFlags & 4095 /* DirectiveCountMask */;\n        if (count !== 0) {\n            var start = nodeFlags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var defs = injectorView[TVIEW].data;\n            for (var i = start; i < end; i++) {\n                // Get the definition for the directive at this index and, if it is injectable (diPublic),\n                // and matches the given token, return the directive instance.\n                var directiveDef = defs[i];\n                if (directiveDef.type === token && directiveDef.diPublic) {\n                    return injectorView[i];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     */\n    function bloomHashBitOrFactory(token) {\n        var tokenId = token[NG_ELEMENT_ID];\n        return typeof tokenId === 'number' ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function injectorHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldNotSearchParent(flags, parentLocation) {\n        return flags & 2 /* Self */ ||\n            (flags & 1 /* Host */ && (parentLocation >> 15 /* ViewOffsetShift */) > 0);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _hostView) {\n            this._tNode = _tNode;\n            this._hostView = _hostView;\n            this._injectorIndex = getOrCreateNodeInjectorForNode(_tNode, _hostView);\n        }\n        NodeInjector.prototype.get = function (token) {\n            setEnvironment(this._tNode, this._hostView);\n            return getOrCreateInjectable(this._tNode, this._hostView, token);\n        };\n        return NodeInjector;\n    }());\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This feature publishes the directive (or component) into the DI system, making it visible to\n     * others for injection.\n     *\n     * @param definition\n     */\n    function PublicFeature(definition) {\n        definition.diPublic = diPublic;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     *\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @experimental\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_view, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._view = _view;\n        }\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._view[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._viewContainerRef && viewAttached(this._view)) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._view);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._view, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._view); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._view[FLAGS] &= ~8 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._view[FLAGS] |= 8 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () {\n            var rendererFactory = getRendererFactory();\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            detectChanges(this.context);\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n        };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) { this._viewContainerRef = vcRef; };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) { this._appRef = appRef; };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = this._view[PARENT][this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        return RootViewRef;\n    }(ViewRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), _getViewData());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), _getViewData());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _renderer, _queries, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._renderer = _renderer;\n                    _this._queries = _queries;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container$$1, hostTNode, hostView, index) {\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._renderer, this._queries, this._injectorIndex);\n                    if (container$$1) {\n                        insertView(lView, container$$1, hostView, index, hostTNode.index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context, 1 /* Create */);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[HOST_NODE];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        var hostContainer = hostView[hostTNode.index];\n        ngDevMode && assertNodeType(hostTNode, 0 /* Container */);\n        ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n        return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, getRenderer(), hostContainer[QUERIES], hostTNode.injectorIndex);\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, _getViewData());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentIndex = parentLocation & 32767 /* InjectorIndexMask */;\n                        var parentTNode = parentView[TVIEW].data[parentIndex];\n                        return parentLocation === -1 ? new NullInjector() :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this._lContainer[VIEWS].length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer[VIEWS].length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, this._hostTNode, this._hostView, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._view;\n                    var adjustedIdx = this._adjustIndex(index);\n                    insertView(lView, this._lContainer, this._hostView, adjustedIdx, this._hostTNode.index);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    var index = this.indexOf(viewRef);\n                    this.detach(index);\n                    this.insert(viewRef, this._adjustIndex(newIndex));\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, this._hostTNode, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    detachView(this._lContainer, adjustedIdx, !!this._hostTNode.detached);\n                    return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this._lContainer[VIEWS].length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var comment = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostTNode, hostView, comment, true);\n            appendChild(comment, hostTNode, hostView);\n            addToViewTree(hostView, hostTNode.index, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), _getViewData(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.flags >> 15 /* DirectiveStartingIndexShift */;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(_getViewData());\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     *\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /** @internal */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @experimental\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @experimental\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /** @internal */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        function ComponentFactoryResolver$$1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () {\n            var useRaf = typeof requestAnimationFrame !== 'undefined' && typeof window !== 'undefined';\n            return useRaf ? requestAnimationFrame.bind(window) : setTimeout;\n        },\n    });\n    /**\n     * A function used to wrap the `RendererFactory2`.\n     * Used in tests to change the `RendererFactory2` into a `DebugRendererFactory2`.\n     */\n    var WRAP_RENDERER_FACTORY2 = new InjectionToken('WRAP_RENDERER_FACTORY2');\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        function ComponentFactory$$1(componentDef) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors = [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            var rendererFactory;\n            if (ngModule) {\n                var wrapper = ngModule.injector.get(WRAP_RENDERER_FACTORY2, function (v) { return v; });\n                rendererFactory = wrapper(ngModule.injector.get(RendererFactory2));\n            }\n            else {\n                rendererFactory = domRendererFactory3;\n            }\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            // The first index of the first selector is the tag name.\n            var componentTag = this.componentDef.selectors[0][0];\n            var rootFlags = this.componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n                2 /* CheckAlways */ | 64 /* IsRoot */;\n            var rootContext = ngModule && !isInternalRootView ?\n                ngModule.injector.get(ROOT_CONTEXT) :\n                createRootContext(requestAnimationFrame.bind(window));\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootView = createLViewData(renderer, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags);\n            rootView[INJECTOR$1] = ngModule && ngModule.injector || null;\n            // rootView is the parent when bootstrapping\n            var oldView = enterView(rootView, null);\n            var component;\n            var tElementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootView, renderer);\n                tElementNode = getTNode(0, rootView);\n                // Transform the arrays of native nodes into a structure that can be consumed by the\n                // projection instruction. This is needed to support the reprojection of these nodes.\n                if (projectableNodes) {\n                    var index = 0;\n                    var projection$$1 = tElementNode.projection = [];\n                    for (var i = 0; i < projectableNodes.length; i++) {\n                        var nodeList = projectableNodes[i];\n                        var firstTNode = null;\n                        var previousTNode = null;\n                        for (var j = 0; j < nodeList.length; j++) {\n                            adjustBlueprintForNewNode(rootView);\n                            var tNode = createNodeAtIndex(++index, 3 /* Element */, nodeList[j], null, null);\n                            previousTNode ? (previousTNode.next = tNode) : (firstTNode = tNode);\n                            previousTNode = tNode;\n                        }\n                        projection$$1.push(firstTNode);\n                    }\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(hostRNode, componentView, this.componentDef, rootView, rootContext, [LifecycleHooksFeature]);\n                // Execute the template in creation mode only, and then turn off the CreationMode flag\n                renderEmbeddedTemplate(componentView, componentView[TVIEW], component, 1 /* Create */);\n                componentView[FLAGS] &= ~1 /* CreationMode */;\n            }\n            finally {\n                enterView(oldView, null);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, rootView, injector, createElementRef(ElementRef, tElementNode, rootView));\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, rootView, injector, location) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(rootView);\n            _this.hostView._tViewNode = createViewNode(-1, rootView);\n            _this.injector = injector;\n            _this.componentType = componentType;\n            return _this;\n        }\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var i18nTagRegex = /{\\$([^}]+)}/g;\n    /**\n     * Takes a translation string, the initial list of placeholders (elements and expressions) and the\n     * indexes of their corresponding expression nodes to return a list of instructions for each\n     * template function.\n     *\n     * Because embedded templates have different indexes for each placeholder, each parameter (except\n     * the translation) is an array, where each value corresponds to a different template, by order of\n     * appearance.\n     *\n     * @param translation A translation string where placeholders are represented by `{$name}`\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns A list of instructions used to translate each template.\n     */\n    function i18nMapping(translation, elements, expressions, templateRoots, lastChildIndex) {\n        var translationParts = translation.split(i18nTagRegex);\n        var nbTemplates = templateRoots ? templateRoots.length + 1 : 1;\n        var instructions = (new Array(nbTemplates)).fill(undefined);\n        generateMappingInstructions(0, 0, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n        return instructions;\n    }\n    /**\n     * Internal function that reads the translation parts and generates a set of instructions for each\n     * template.\n     *\n     * See `i18nMapping()` for more details.\n     *\n     * @param tmplIndex The order of appearance of the template.\n     * 0 for the root template, following indexes match the order in `templateRoots`.\n     * @param partIndex The current index in `translationParts`.\n     * @param translationParts The translation string split into an array of placeholders and text\n     * elements.\n     * @param instructions The current list of instructions to update.\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns the current index in `translationParts`\n     */\n    function generateMappingInstructions(tmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex) {\n        var tmplInstructions = [];\n        var phVisited = [];\n        var openedTagCount = 0;\n        var maxIndex = 0;\n        var currentElements = elements && elements[tmplIndex] ? elements[tmplIndex] : null;\n        var currentExpressions = expressions && expressions[tmplIndex] ? expressions[tmplIndex] : null;\n        instructions[tmplIndex] = tmplInstructions;\n        for (; partIndex < translationParts.length; partIndex++) {\n            // The value can either be text or the name of a placeholder (element/template root/expression)\n            var value = translationParts[partIndex];\n            // Odd indexes are placeholders\n            if (partIndex & 1) {\n                var phIndex = void 0;\n                if (currentElements && currentElements[value] !== undefined) {\n                    phIndex = currentElements[value];\n                    // The placeholder represents a DOM element, add an instruction to move it\n                    var templateRootIndex = templateRoots ? templateRoots.indexOf(value) : -1;\n                    if (templateRootIndex !== -1 && (templateRootIndex + 1) !== tmplIndex) {\n                        // This is a template root, it has no closing tag, not treating it as an element\n                        tmplInstructions.push(phIndex | -2147483648 /* TemplateRoot */);\n                    }\n                    else {\n                        tmplInstructions.push(phIndex | 1073741824 /* Element */);\n                        openedTagCount++;\n                    }\n                    phVisited.push(value);\n                }\n                else if (currentExpressions && currentExpressions[value] !== undefined) {\n                    phIndex = currentExpressions[value];\n                    // The placeholder represents an expression, add an instruction to move it\n                    tmplInstructions.push(phIndex | 1610612736 /* Expression */);\n                    phVisited.push(value);\n                }\n                else {\n                    // It is a closing tag\n                    tmplInstructions.push(-1073741824 /* CloseNode */);\n                    if (tmplIndex > 0) {\n                        openedTagCount--;\n                        // If we have reached the closing tag for this template, exit the loop\n                        if (openedTagCount === 0) {\n                            break;\n                        }\n                    }\n                }\n                if (phIndex !== undefined && phIndex > maxIndex) {\n                    maxIndex = phIndex;\n                }\n                if (templateRoots) {\n                    var newTmplIndex = templateRoots.indexOf(value) + 1;\n                    if (newTmplIndex !== 0 && newTmplIndex !== tmplIndex) {\n                        partIndex = generateMappingInstructions(newTmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n                    }\n                }\n            }\n            else if (value) {\n                // It's a non-empty string, create a text node\n                tmplInstructions.push(536870912 /* Text */, value);\n            }\n        }\n        // Add instructions to remove elements that are not used in the translation\n        if (elements) {\n            var tmplElements = elements[tmplIndex];\n            if (tmplElements) {\n                var phKeys = Object.keys(tmplElements);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplElements[ph];\n                        // Add an instruction to remove the element\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        // Add instructions to remove expressions that are not used in the translation\n        if (expressions) {\n            var tmplExpressions = expressions[tmplIndex];\n            if (tmplExpressions) {\n                var phKeys = Object.keys(tmplExpressions);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplExpressions[ph];\n                        if (ngDevMode) {\n                            assertLessThan(index.toString(2).length, 28, \"Index \" + index + \" is too big and will overflow\");\n                        }\n                        // Add an instruction to remove the expression\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        if (tmplIndex === 0 && typeof lastChildIndex === 'number') {\n            // The current parent is an ng-container and it has more children after the translation that we\n            // need to append to keep the order of the DOM nodes correct\n            for (var i = maxIndex + 1; i <= lastChildIndex; i++) {\n                if (ngDevMode) {\n                    assertLessThan(i.toString(2).length, 28, \"Index \" + i + \" is too big and will overflow\");\n                }\n                tmplInstructions.push(i | -1610612736 /* Any */);\n            }\n        }\n        return partIndex;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        if (ngDevMode) {\n            ngDevMode.rendererMoveNode++;\n        }\n        var viewData = _getViewData();\n        // On first pass, re-organize node tree to put this node in the correct position.\n        var firstTemplatePass = viewData[TVIEW].firstTemplatePass;\n        if (firstTemplatePass) {\n            if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n                tNode.next = parentTNode.child;\n                parentTNode.child = tNode;\n            }\n            else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n                tNode.next = previousTNode.next;\n                previousTNode.next = tNode;\n            }\n            else {\n                tNode.next = null;\n            }\n            if (parentTNode !== viewData[HOST_NODE]) {\n                tNode.parent = parentTNode;\n            }\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    function i18nAttribute(index, attrs) {\n        // placeholder for i18nAttribute function\n    }\n    function i18nExp(expression) {\n        // placeholder for i18nExp function\n    }\n    function i18nStart(index, message, subTemplateIndex) {\n        if (subTemplateIndex === void 0) { subTemplateIndex = 0; }\n        // placeholder for i18nExp function\n    }\n    function i18nEnd() {\n        // placeholder for i18nEnd function\n    }\n    /**\n     * Takes a list of instructions generated by `i18nMapping()` to transform the template accordingly.\n     *\n     * @param startIndex Index of the first element to translate (for instance the first child of the\n     * element with the i18n attribute).\n     * @param instructions The list of instructions to apply on the current view.\n     */\n    function i18nApply(startIndex, instructions) {\n        var viewData = _getViewData();\n        if (ngDevMode) {\n            assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nApply should be called before any binding');\n        }\n        if (!instructions) {\n            return;\n        }\n        var renderer = getRenderer();\n        var startTNode = getTNode(startIndex, viewData);\n        var localParentTNode = startTNode.parent || viewData[HOST_NODE];\n        var localPreviousTNode = localParentTNode;\n        resetComponentState(); // We don't want to add to the tree with the wrong previous node\n        for (var i = 0; i < instructions.length; i++) {\n            var instruction = instructions[i];\n            switch (instruction & -536870912 /* InstructionMask */) {\n                case 1073741824 /* Element */:\n                    var elementTNode = getTNode(instruction & 536870911 /* IndexMask */, viewData);\n                    localPreviousTNode = appendI18nNode(elementTNode, localParentTNode, localPreviousTNode);\n                    localParentTNode = elementTNode;\n                    break;\n                case 1610612736 /* Expression */:\n                case -2147483648 /* TemplateRoot */:\n                case -1610612736 /* Any */:\n                    var nodeIndex = instruction & 536870911 /* IndexMask */;\n                    localPreviousTNode =\n                        appendI18nNode(getTNode(nodeIndex, viewData), localParentTNode, localPreviousTNode);\n                    break;\n                case 536870912 /* Text */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererCreateTextNode++;\n                    }\n                    var value = instructions[++i];\n                    var textRNode = createTextNode(value, renderer);\n                    // If we were to only create a `RNode` then projections won't move the text.\n                    // Create text node at the current end of viewData. Must subtract header offset because\n                    // createNodeAtIndex takes a raw index (not adjusted by header offset).\n                    adjustBlueprintForNewNode(viewData);\n                    var textTNode = createNodeAtIndex(viewData.length - 1 - HEADER_OFFSET, 3 /* Element */, textRNode, null, null);\n                    localPreviousTNode = appendI18nNode(textTNode, localParentTNode, localPreviousTNode);\n                    resetComponentState();\n                    break;\n                case -1073741824 /* CloseNode */:\n                    localPreviousTNode = localParentTNode;\n                    localParentTNode = localParentTNode.parent || viewData[HOST_NODE];\n                    break;\n                case -536870912 /* RemoveNode */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererRemoveNode++;\n                    }\n                    var removeIndex = instruction & 536870911 /* IndexMask */;\n                    var removedElement = getNativeByIndex(removeIndex, viewData);\n                    var removedTNode = getTNode(removeIndex, viewData);\n                    removeChild(removedTNode, removedElement || null, viewData);\n                    var slotValue = load(removeIndex);\n                    if (isLContainer(slotValue)) {\n                        var lContainer = slotValue;\n                        if (removedTNode.type !== 0 /* Container */) {\n                            removeChild(removedTNode, lContainer[NATIVE] || null, viewData);\n                        }\n                        removedTNode.detached = true;\n                        lContainer[RENDER_PARENT] = null;\n                    }\n                    break;\n            }\n        }\n    }\n    /**\n     * Takes a translation string and the initial list of expressions and returns a list of instructions\n     * that will be used to translate an attribute.\n     * Even indexes contain static strings, while odd indexes contain the index of the expression whose\n     * value will be concatenated into the final translation.\n     */\n    function i18nExpMapping(translation, placeholders) {\n        var staticText = translation.split(i18nTagRegex);\n        // odd indexes are placeholders\n        for (var i = 1; i < staticText.length; i += 2) {\n            staticText[i] = placeholders[staticText[i]];\n        }\n        return staticText;\n    }\n    /**\n     * Checks if the value of an expression has changed and replaces it by its value in a translation,\n     * or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation1(instructions, v0) {\n        var different = bindingUpdated(_getViewData()[BINDING_INDEX]++, v0);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                res += stringify$1(v0);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 2 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation2(instructions, v0, v1) {\n        var viewData = _getViewData();\n        var different = bindingUpdated2(viewData[BINDING_INDEX], v0, v1);\n        viewData[BINDING_INDEX] += 2;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b1 ? v1 : v0;\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 3 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation3(instructions, v0, v1, v2) {\n        var viewData = _getViewData();\n        var different = bindingUpdated3(viewData[BINDING_INDEX], v0, v1, v2);\n        viewData[BINDING_INDEX] += 3;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? v2 : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 4 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation4(instructions, v0, v1, v2, v3) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        viewData[BINDING_INDEX] += 4;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 5 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation5(instructions, v0, v1, v2, v3, v4) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated(viewData[BINDING_INDEX] + 4, v4) || different;\n        viewData[BINDING_INDEX] += 5;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? v4 : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 6 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */ function i18nInterpolation6(instructions, v0, v1, v2, v3, v4, v5) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated2(viewData[BINDING_INDEX] + 4, v4, v5) || different;\n        viewData[BINDING_INDEX] += 6;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b1 ? v5 : v4) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 7 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation7(instructions, v0, v1, v2, v3, v4, v5, v6) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated3(viewData[BINDING_INDEX] + 4, v4, v5, v6) || different;\n        viewData[BINDING_INDEX] += 7;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? v6 : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 8 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     * @param v7 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation8(instructions, v0, v1, v2, v3, v4, v5, v6, v7) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated4(viewData[BINDING_INDEX] + 4, v4, v5, v6, v7) || different;\n        viewData[BINDING_INDEX] += 8;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? (b1 ? v7 : v6) : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Create a translated interpolation binding with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions then `i18nInterpolation()` should be used instead. It is faster\n     * because there is no need to create an array of expressions and iterate over it.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolationV(instructions, values) {\n        var viewData = _getViewData();\n        var different = false;\n        for (var i = 0; i < values.length; i++) {\n            // Check if bindings have changed\n            bindingUpdated(viewData[BINDING_INDEX]++, values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are placeholders\n            if (i & 1) {\n                res += stringify$1(values[instructions[i]]);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$2 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @experimental\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, new Set()); });\n            additionalProviders &&\n                deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = 0 /* Default */; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & 4 /* SkipSelf */)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = injectableDefRecord(token);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var next = !(flags & 2 /* Self */) ? this.parent : getNullInjector();\n                return this.parent.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Check for circular dependencies.\n            if (parents.has(defType)) {\n                throw new Error(\"Circular dependency: type \" + stringify(defType) + \" ends up importing itself.\");\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                parents.add(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    parents.delete(defType);\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            if (def.providers != null) {\n                deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$2) {\n                throw new Error(\"Circular dep for \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$2;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefRecord(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            // TODO(alxhub): there should probably be a strict mode which throws here instead of assuming a\n            // no-args constructor.\n            return makeRecord(function () { return new token(); });\n        }\n        return makeRecord(injectableDef.factory);\n    }\n    function providerToRecord(provider) {\n        var token = resolveForwardRef(provider);\n        var value = NOT_YET;\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefRecord(provider);\n        }\n        else {\n            token = resolveForwardRef(provider.provide);\n            if (isValueProvider(provider)) {\n                value = provider.useValue;\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(provider.useExisting); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = provider.useClass || token;\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefRecord(classRef_1);\n                }\n            }\n        }\n        return makeRecord(factory, value);\n    }\n    function makeRecord(factory, value, multi) {\n        if (value === void 0) { value = NOT_YET; }\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!value.useExisting;\n    }\n    function isFactoryProvider(value) {\n        return !!value.useFactory;\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useFactory: function () { return new ComponentFactoryResolver$1(); },\n        deps: [],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, parentInjector) {\n            var _this = _super.call(this) || this;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                COMPONENT_FACTORY_RESOLVER, {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                }\n            ];\n            _this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n            _this.instance = _this.injector.get(ngModuleType);\n            _this.componentFactoryResolver = new ComponentFactoryResolver$1();\n            return _this;\n        }\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return getCreationMode() ?\n            updateBinding(bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(bindingIndex, exp) ?\n            updateBinding(bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated2(bindingIndex, exp1, exp2) ?\n            updateBinding(bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated3(bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(bindingIndex + 4, exp5) || different ?\n            updateBinding(bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(bindingIndex + 6, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getTView();\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1);\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2);\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3);\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4);\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values);\n    }\n    function isPure(index) {\n        return getTView().data[index + HEADER_OFFSET].pure;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /** @internal */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            if (isContentQueryHost(tNode)) {\n                add(this.shallow, tNode);\n                if (tNode.parent && isContentQueryHost(tNode.parent)) {\n                    // if node has a content query and parent also has a content query\n                    // both queries need to check this node for shallow matches\n                    add(this.parent.shallow, tNode);\n                }\n                return this.parent;\n            }\n            isRootNodeOfQuery(tNode) && add(this.shallow, tNode);\n            return this;\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function isRootNodeOfQuery(tNode) {\n        return tNode.parent === null || isContentQueryHost(tNode.parent);\n    }\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Iterates over all the directives for a node and returns index of a directive for a given type.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param currentView The view we are currently processing\n     * @param type Type of a directive to look for.\n     * @returns Index of a found directive or null when none found.\n     */\n    function getIdxOfMatchingDirective(tNode, currentView, type) {\n        var defs = currentView[TVIEW].data;\n        if (defs) {\n            var flags = tNode.flags;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var start = flags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            for (var i = start; i < end; i++) {\n                var def = defs[i];\n                if (def.type === type && def.diPublic) {\n                    return i;\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryRead(tNode, currentView, read) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = getIdxOfMatchingDirective(tNode, currentView, read);\n            if (matchingIdx !== null) {\n                return currentView[matchingIdx];\n            }\n        }\n        return null;\n    }\n    function queryReadByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function add(query, tNode) {\n        var currentView = _getViewData();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                // if read token and / or strategy is not specified, use type as read token\n                var result = queryRead(tNode, currentView, predicate.read || type);\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var directiveIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (directiveIdx !== null) {\n                        var result = null;\n                        if (predicate.read) {\n                            result = queryRead(tNode, currentView, predicate.read);\n                        }\n                        else {\n                            if (directiveIdx > -1) {\n                                result = currentView[directiveIdx];\n                            }\n                            else {\n                                // if read token and / or strategy is not specified,\n                                // detect it using appropriate tNode type\n                                result = queryReadByTNodeType(tNode, currentView);\n                            }\n                        }\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    var QueryList_ = /** @class */ (function () {\n        function QueryList_() {\n            this.dirty = true;\n            this.changes = new EventEmitter();\n            this._values = [];\n            /** @internal */\n            this._valuesTree = [];\n        }\n        Object.defineProperty(QueryList_.prototype, \"length\", {\n            get: function () { return this._values.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"first\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[0] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"last\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[values.length - 1] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList_.prototype.filter = function (fn) {\n            return this._values.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList_.prototype.find = function (fn) {\n            return this._values.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList_.prototype.reduce = function (fn, init) {\n            return this._values.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList_.prototype.some = function (fn) {\n            return this._values.some(fn);\n        };\n        QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n        QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n        QueryList_.prototype.toString = function () { return this._values.toString(); };\n        QueryList_.prototype.reset = function (res) {\n            this._values = flatten(res);\n            this.dirty = false;\n        };\n        QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        QueryList_.prototype.setDirty = function () { this.dirty = true; };\n        QueryList_.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList_;\n    }());\n    var QueryList = QueryList_;\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, \n    // TODO: \"read\" should be an AbstractType (FW-486)\n    read) {\n        ngDevMode && assertPreviousIsParent();\n        var queryList = new QueryList();\n        var queries = getOrCreateCurrentQueries(LQueries_);\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(null, queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type) ? true : false;\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (e) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (e) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     *\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts`s have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ÉµdefineBase': defineBase,\n        'ÉµdefineComponent': defineComponent,\n        'ÉµdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ÉµdefineNgModule': defineNgModule,\n        'ÉµdefinePipe': definePipe,\n        'ÉµdirectiveInject': directiveInject,\n        'ÉµgetFactoryOf': getFactoryOf,\n        'ÉµgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ÉµinjectAttribute': injectAttribute,\n        'ÉµtemplateRefExtractor': templateRefExtractor,\n        'ÉµNgOnChangesFeature': NgOnChangesFeature,\n        'ÉµPublicFeature': PublicFeature,\n        'ÉµInheritDefinitionFeature': InheritDefinitionFeature,\n        'ÉµelementAttribute': elementAttribute,\n        'Éµbind': bind,\n        'Éµcontainer': container,\n        'ÉµnextContext': nextContext,\n        'ÉµcontainerRefreshStart': containerRefreshStart,\n        'ÉµcontainerRefreshEnd': containerRefreshEnd,\n        'ÉµloadQueryList': loadQueryList,\n        'ÉµnamespaceHTML': namespaceHTML,\n        'ÉµnamespaceMathML': namespaceMathML,\n        'ÉµnamespaceSVG': namespaceSVG,\n        'ÉµenableBindings': enableBindings,\n        'ÉµdisableBindings': disableBindings,\n        'ÉµelementStart': elementStart,\n        'ÉµelementEnd': elementEnd,\n        'Éµelement': element,\n        'ÉµEC': elementContainerStart,\n        'ÉµeC': elementContainerEnd,\n        'ÉµpureFunction0': pureFunction0,\n        'ÉµpureFunction1': pureFunction1,\n        'ÉµpureFunction2': pureFunction2,\n        'ÉµpureFunction3': pureFunction3,\n        'ÉµpureFunction4': pureFunction4,\n        'ÉµpureFunction5': pureFunction5,\n        'ÉµpureFunction6': pureFunction6,\n        'ÉµpureFunction7': pureFunction7,\n        'ÉµpureFunction8': pureFunction8,\n        'ÉµpureFunctionV': pureFunctionV,\n        'ÉµgetCurrentView': getCurrentView,\n        'ÉµrestoreView': restoreView,\n        'Éµinterpolation1': interpolation1,\n        'Éµinterpolation2': interpolation2,\n        'Éµinterpolation3': interpolation3,\n        'Éµinterpolation4': interpolation4,\n        'Éµinterpolation5': interpolation5,\n        'Éµinterpolation6': interpolation6,\n        'Éµinterpolation7': interpolation7,\n        'Éµinterpolation8': interpolation8,\n        'ÉµinterpolationV': interpolationV,\n        'ÉµelementClassProp': elementClassProp,\n        'Éµlistener': listener,\n        'Éµload': load,\n        'Éµprojection': projection,\n        'ÉµelementProperty': elementProperty,\n        'ÉµpipeBind1': pipeBind1,\n        'ÉµpipeBind2': pipeBind2,\n        'ÉµpipeBind3': pipeBind3,\n        'ÉµpipeBind4': pipeBind4,\n        'ÉµpipeBindV': pipeBindV,\n        'ÉµprojectionDef': projectionDef,\n        'Éµpipe': pipe,\n        'Éµquery': query,\n        'ÉµqueryRefresh': queryRefresh,\n        'ÉµregisterContentQuery': registerContentQuery,\n        'Éµreference': reference,\n        'ÉµelementStyling': elementStyling,\n        'ÉµelementStylingMap': elementStylingMap,\n        'ÉµelementStyleProp': elementStyleProp,\n        'ÉµelementStylingApply': elementStylingApply,\n        'Éµtemplate': template,\n        'Éµtext': text,\n        'ÉµtextBinding': textBinding,\n        'ÉµembeddedViewStart': embeddedViewStart,\n        'ÉµembeddedViewEnd': embeddedViewEnd,\n        'Éµi18nAttribute': i18nAttribute,\n        'Éµi18nExp': i18nExp,\n        'Éµi18nStart': i18nStart,\n        'Éµi18nEnd': i18nEnd,\n        'Éµi18nApply': i18nApply,\n        'ÉµsanitizeHtml': sanitizeHtml,\n        'ÉµsanitizeStyle': sanitizeStyle,\n        'ÉµdefaultStyleSanitizer': defaultStyleSanitizer,\n        'ÉµsanitizeResourceUrl': sanitizeResourceUrl,\n        'ÉµsanitizeScript': sanitizeScript,\n        'ÉµsanitizeUrl': sanitizeUrl\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     *\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        return deps.map(function (dep) { return reflectDependency(dep); });\n    }\n    function reflectDependency(dep) {\n        var meta = {\n            token: new compiler.LiteralExpr(null),\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            if (token === Injector) {\n                meta.resolved = compiler.R3ResolvedDependencyType.Injector;\n            }\n            else {\n                meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            }\n            meta.token = new compiler.WrappedNodeExpr(token);\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = new compiler.WrappedNodeExpr(param.token);\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = new compiler.LiteralExpr(param.attributeName);\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        compileNgModuleDefs(moduleType, ngModule);\n        setScopeOnDeclaredComponents(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            get: function () {\n                if (ngModuleDef === null) {\n                    var meta = {\n                        type: wrap(moduleType),\n                        bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$2).map(wrapReference),\n                        declarations: declarations.map(wrapReference),\n                        imports: flatten$1(ngModule.imports || EMPTY_ARRAY$2)\n                            .map(expandModuleWithProviders)\n                            .map(wrapReference),\n                        exports: flatten$1(ngModule.exports || EMPTY_ARRAY$2)\n                            .map(expandModuleWithProviders)\n                            .map(wrapReference),\n                        emitInline: true,\n                    };\n                    var res = compiler.compileNgModule(meta);\n                    ngModuleDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", []);\n                }\n                return ngModuleDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    var meta = {\n                        name: moduleType.name,\n                        type: wrap(moduleType),\n                        deps: reflectDependencies(moduleType),\n                        providers: new compiler.WrappedNodeExpr(ngModule.providers || EMPTY_ARRAY$2),\n                        imports: new compiler.WrappedNodeExpr([\n                            ngModule.imports || EMPTY_ARRAY$2,\n                            ngModule.exports || EMPTY_ARRAY$2,\n                        ]),\n                    };\n                    var res = compiler.compileInjector(meta);\n                    ngInjectorDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", res.statements);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopes.compilation.directives)\n            .map(function (dir) { return getDirectiveDef(dir) || getComponentDef(dir); })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedTyped = imported;\n            if (!isNgModule(importedTyped)) {\n                throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedTyped);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedTyped = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedTyped)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedTyped);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getNgModuleDef(exportedTyped)) {\n                scopes.exported.pipes.add(exportedTyped);\n            }\n            else {\n                scopes.exported.directives.add(exportedTyped);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$1(values) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$1(value)));\n            }\n            else {\n                out.push(value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function wrap(value) {\n        return new compiler.WrappedNodeExpr(value);\n    }\n    function wrapReference(value) {\n        var wrapped = wrap(value);\n        return { value: wrapped, type: wrapped };\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + stringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + stringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    // The ConstantPool is a requirement of the JIT'er.\n                    var constantPool = new compiler.ConstantPool();\n                    // Parse the template and check for errors.\n                    var template = compiler.parseTemplate(metadata.template, \"ng://\" + stringify(type) + \"/template.html\", {\n                        preserveWhitespaces: metadata.preserveWhitespaces || false,\n                    }, '');\n                    if (template.errors !== undefined) {\n                        var errors = template.errors.map(function (err) { return err.toString(); }).join(', ');\n                        throw new Error(\"Errors during JIT compilation of template for \" + stringify(type) + \": \" + errors);\n                    }\n                    var animations = metadata.animations !== null ? new compiler.WrappedNodeExpr(metadata.animations) : null;\n                    // Compile the component metadata, including template, into an expression.\n                    // TODO(alxhub): implement inputs, outputs, queries, etc.\n                    var res = compiler.compileComponentFromMetadata(__assign({}, directiveMetadata(type, metadata), { template: template, directives: new Map(), pipes: new Map(), viewQueries: [], wrapDirectivesInClosure: false, styles: metadata.styles || [], encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, animations: animations }), constantPool, compiler.makeBindingParser());\n                    var preStatements = __spread(constantPool.statements, res.statements);\n                    ngComponentDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngComponentDef.js\", preStatements);\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var constantPool = new compiler.ConstantPool();\n                    var sourceMapUrl = \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\";\n                    var res = compiler.compileDirectiveFromMetadata(directiveMetadata(type, directive), constantPool, compiler.makeBindingParser());\n                    var preStatements = __spread(constantPool.statements, res.statements);\n                    ngDirectiveDef = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, preStatements);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        var host = extractHostBindings(metadata, propMetadata);\n        var inputsFromMetadata = parseInputOutputs(metadata.inputs || []);\n        var outputsFromMetadata = parseInputOutputs(metadata.outputs || []);\n        var inputsFromType = {};\n        var outputsFromType = {};\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isInput(ann)) {\n                        inputsFromType[field] = ann.bindingPropertyName || field;\n                    }\n                    else if (isOutput(ann)) {\n                        outputsFromType[field] = ann.bindingPropertyName || field;\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return {\n            name: type.name,\n            type: new compiler.WrappedNodeExpr(type),\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type), host: host,\n            inputs: __assign({}, inputsFromMetadata, inputsFromType),\n            outputs: __assign({}, outputsFromMetadata, outputsFromType),\n            queries: [],\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: metadata.exportAs || null,\n        };\n    }\n    function extractHostBindings(metadata, propMetadata) {\n        // First parse the declarations from the metadata.\n        var _a = compiler.parseHostBindings(metadata.host || {}), attributes = _a.attributes, listeners = _a.listeners, properties = _a.properties, animations = _a.animations;\n        if (Object.keys(animations).length > 0) {\n            throw new Error(\"Animation bindings are as-of-yet unsupported in Ivy\");\n        }\n        var _loop_2 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isHostBinding(ann)) {\n                        properties[ann.hostPropertyName || field] = field;\n                    }\n                    else if (isHostListener(ann)) {\n                        listeners[ann.eventName || field] = field + \"(\" + (ann.args || []).join(',') + \")\";\n                    }\n                });\n            }\n        };\n        // Next, loop over the properties of the object, looking for @HostBinding and @HostListener.\n        for (var field in propMetadata) {\n            _loop_2(field);\n        }\n        return { attributes: attributes, listeners: listeners, properties: properties };\n    }\n    function isInput(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function isOutput(value) {\n        return value.ngMetadataName === 'Output';\n    }\n    function isHostBinding(value) {\n        return value.ngMetadataName === 'HostBinding';\n    }\n    function isHostListener(value) {\n        return value.ngMetadataName === 'HostListener';\n    }\n    function parseInputOutputs(values) {\n        return values.reduce(function (map, value) {\n            var _a = __read(value.split(',').map(function (piece) { return piece.trim(); }), 2), field = _a[0], property = _a[1];\n            map[field] = property || field;\n            return map;\n        }, {});\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var sourceMapUrl = \"ng://\" + stringify$1(type) + \"/ngPipeDef.js\";\n                    var name_1 = type.name;\n                    var res = compiler.compilePipeFromMetadata({\n                        name: name_1,\n                        type: new compiler.WrappedNodeExpr(type),\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true,\n                    });\n                    ngPipeDef = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, res.statements);\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * Type of the Directive metadata.\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @usageNotes\n     *\n     * ### Using animations\n     *\n     * The following snippet shows an animation trigger in a component's\n     * metadata. The trigger is attached to an element in the component's\n     * template, using \"@_trigger_name_\", and a state expression that is evaluated\n     * at run time to determine whether the animation should start.\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'animation-cmp',\n     *   templateUrl: 'animation-cmp.html',\n     *   animations: [\n     *     trigger('myTriggerName', [\n     *       state('on', style({ opacity: 1 }),\n     *       state('off', style({ opacity: 0 }),\n     *       transition('on => off', [\n     *         animate(\"1s\")\n     *       ])\n     *     ])\n     *   ]\n     * })\n     * ```\n     *\n     * ```html\n     * <!-- animation-cmp.html -->\n     * <div @myTriggerName=\"expression\">...</div>\n     * ```\n     *\n     * ### Preserving whitespace\n     *\n     * Removing whitespace can greatly reduce AOT-generated code size, and speed up view creation.\n     * As of Angular 6, default for `preserveWhitespaces` is false (whitespace is removed).\n     * To change the default setting for all components in your application, set\n     * the `preserveWhitespaces` option of the AOT compiler.\n     *\n     * Current implementation removes whitespace characters as follows:\n     * - Trims all whitespaces at the beginning and the end of a template.\n     * - Removes whitespace-only text nodes. For example,\n     * `<button>Action 1</button>  <button>Action 2</button>` becomes\n     * `<button>Action 1</button><button>Action 2</button>`.\n     * - Replaces a series of whitespace characters in text nodes with a single space.\n     * For example, `<span>\\n some text\\n</span>` becomes `<span> some text </span>`.\n     * - Does NOT alter text nodes inside HTML tags such as `<pre>` or `<textarea>`,\n     * where whitespace characters are significant.\n     *\n     * Note that these transformations can influence DOM nodes layout, although impact\n     * should be minimal.\n     *\n     * You can override the default behavior to preserve whitespace characters\n     * in certain fragments of a template. For example, you can exclude an entire\n     * DOM sub-tree by using the `ngPreserveWhitespaces` attribute:\n     *\n     * ```html\n     * <div ngPreserveWhitespaces>\n     *     whitespaces are preserved here\n     *     <span>    and here </span>\n     * </div>\n     * ```\n     *\n     * You can force a single space to be preserved in a text node by using `&ngsp;`,\n     * which is replaced with a space character by Angular's template\n     * compiler:\n     *\n     * ```html\n     * <a>Spaces</a>&ngsp;<a>between</a>&ngsp;<a>links.</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * Note that sequences of `&ngsp;` are still collapsed to just one space character when\n     * the `preserveWhitespaces` option is set to `false`.\n     *\n     * ```html\n     * <a>before</a>&ngsp;&ngsp;&ngsp;<a>after</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * To preserve sequences of whitespace characters, use the\n     * `ngPreserveWhitespaces` attribute.\n     *\n     * @Annotation\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     *\n     *\n     * @Annotation\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0];\n        };\n    };\n    /**\n     *\n     * @Annotation\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     *\n     * @Annotation\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     *\n     * @Annotation\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     *\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @experimental\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * @Annotation\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     *\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    var VERSION = new Version('7.0.0-rc.1+108.sha-aa55d88');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n        var meta = srcMeta || { providedIn: null };\n        var def = null;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Check whether the injectable metadata includes a provider specification.\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var ctorDeps = reflectDependencies(type);\n                    var userDeps = undefined;\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        userDeps = convertDependencies(meta.deps);\n                    }\n                    // Decide which flavor of factory to generate, based on the provider specified.\n                    // Only one of the use* fields should be set.\n                    var useClass = undefined;\n                    var useFactory = undefined;\n                    var useValue = undefined;\n                    var useExisting = undefined;\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        useClass = new compiler.WrappedNodeExpr(type);\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        useClass = new compiler.WrappedNodeExpr(meta.useClass);\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        useValue = new compiler.WrappedNodeExpr(meta.useValue);\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        useFactory = new compiler.WrappedNodeExpr(meta.useFactory);\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        useExisting = new compiler.WrappedNodeExpr(meta.useExisting);\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    var _a = compiler.compileInjectable({\n                        name: type.name,\n                        type: new compiler.WrappedNodeExpr(type),\n                        providedIn: computeProvidedIn(meta.providedIn),\n                        useClass: useClass,\n                        useFactory: useFactory,\n                        useValue: useValue,\n                        useExisting: useExisting,\n                        ctorDeps: ctorDeps,\n                        userDeps: userDeps,\n                    }), expression = _a.expression, statements = _a.statements;\n                    def = compiler.jitExpression(expression, angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", statements);\n                }\n                return def;\n            },\n        });\n    }\n    function computeProvidedIn(providedIn) {\n        if (providedIn == null || typeof providedIn === 'string') {\n            return new compiler.LiteralExpr(providedIn);\n        }\n        else {\n            return new compiler.WrappedNodeExpr(providedIn);\n        }\n    }\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    function isUseValueProvider(meta) {\n        return USE_VALUE$2 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Injectable decorator and metadata.\n    *\n    * @Annotation\n    */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     * @deprecated No replacement\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @experimental\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         * @experimental\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @experimental\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @experimental\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @experimental\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @experimental\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @experimental\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @experimental\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @experimental\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n        }\n        /**\n         * Compiles the given NgModule and all of its components. All templates of the components listed\n         * in `entryComponents` have to be inlined.\n         */\n        Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n        /**\n         * Compiles the given NgModule and all of its components\n         */\n        Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n        /**\n         * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @experimental\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @experimental\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @experimental\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @experimental\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @experimental\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @experimental\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @experimental\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @experimental\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this._watchAngularEvents();\n            _ngZone.run(function () { _this.taskTrackingZone = Zone.current.get('TaskTrackingZone'); });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @experimental\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @experimental\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__POST_R3__;\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        return Promise.resolve(new NgModuleFactory$1(moduleType));\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @experimental\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         *\n         * @experimental APIs related to application bootstrap are currently under review.\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        var ApplicationRef_1;\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    var moduleFactories = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @experimental\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = moduleFactories.get(id);\n        if (existing) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n        }\n        moduleFactories.set(id, factory);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @experimental\n     */\n    function getModuleFactory(id) {\n        var factory = moduleFactories.get(id);\n        if (!factory)\n            throw new Error(\"No module with ID \" + id + \" loaded\");\n        return factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     */\n    var QueryList$1 = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$2(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$2(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$2(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @experimental\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @experimental\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /** @internal */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /** @internal */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @experimental\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugNode = /** @class */ (function () {\n        function DebugNode(nativeNode, parent, _debugContext) {\n            this.nativeNode = nativeNode;\n            this._debugContext = _debugContext;\n            this.listeners = [];\n            this.parent = null;\n            if (parent && parent instanceof DebugElement) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugElement = /** @class */ (function (_super) {\n        __extends(DebugElement, _super);\n        function DebugElement(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    c.parent = _this;\n                });\n            }\n        };\n        DebugElement.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement.prototype, \"children\", {\n            get: function () {\n                return this.childNodes.filter(function (node) { return node instanceof DebugElement; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement;\n    }(DebugNode));\n    /**\n     * @experimental\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    /**\n     * @experimental\n     */\n    function getDebugNode(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @experimental\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @experimental\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var ivyEnabled = SWITCH_IVY_ENABLED__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$4 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = 0 /* Default */; }\n            var flags = 0 /* None */;\n            if (injectFlags & 4 /* SkipSelf */) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & 2 /* Self */) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList$1();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext() || (this.createDebugContext(el));\n            if (debugCtx) {\n                indexDebugNode(new DebugElement(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Returns the host component instance associated with the target.\n     *\n     * This will only return a component instance of the DOM node\n     * contains an instance of a component on it.\n     */\n    function getHostComponent(target) {\n        var context = loadContext(target);\n        var tNode = context.lViewData[TVIEW].data[context.nodeIndex];\n        if (tNode.flags & 4096 /* isComponent */) {\n            var componentView = getComponentViewByIndex(context.nodeIndex, context.lViewData);\n            return componentView[CONTEXT];\n        }\n        return null;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated.\n     */\n    function getRootContext$2(target) {\n        var lViewData = Array.isArray(target) ? target : loadContext(target).lViewData;\n        var rootLViewData = getRootView$1(lViewData);\n        return rootLViewData[CONTEXT];\n    }\n    /**\n     * Returns the injector instance that is associated with\n     * the element, component or directive.\n     */\n    function getInjector(target) {\n        var context = loadContext(target);\n        var tNode = context.lViewData[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lViewData);\n    }\n    /**\n     * Returns LContext associated with a target passed as an argument.\n     * Throws if a given target doesn't have associated LContext.\n     */\n    function loadContext(target) {\n        var context = getContext(target);\n        if (!context) {\n            throw new Error(ngDevMode ? 'Unable to find the given context data for the given target' :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LViewData` until\n     * reaching the root `LViewData`.\n     *\n     * @param componentOrView any component or view\n     */\n    function getRootView$1(componentOrView) {\n        var lViewData;\n        if (Array.isArray(componentOrView)) {\n            ngDevMode && assertDefined(componentOrView, 'lViewData');\n            lViewData = componentOrView;\n        }\n        else {\n            ngDevMode && assertDefined(componentOrView, 'component');\n            lViewData = readPatchedLViewData(componentOrView);\n        }\n        while (lViewData && !(lViewData[FLAGS] & 64 /* IsRoot */)) {\n            lViewData = lViewData[PARENT];\n        }\n        return lViewData;\n    }\n    /**\n     *  Retrieve map of local references (local reference name => element or directive instance).\n     */\n    function getLocalRefs(target) {\n        var context = loadContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lViewData, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adapts the DebugRendererFactory2 to create a DebugRenderer2 specific for IVY.\n     *\n     * The created DebugRenderer know how to create a Debug Context specific to IVY.\n     */\n    var Render3DebugRendererFactory2 = /** @class */ (function (_super) {\n        __extends(Render3DebugRendererFactory2, _super);\n        function Render3DebugRendererFactory2() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Render3DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            var renderer = _super.prototype.createRenderer.call(this, element, renderData);\n            renderer.debugContextFactory = function (nativeElement) { return new Render3DebugContext(nativeElement); };\n            return renderer;\n        };\n        return Render3DebugRendererFactory2;\n    }(DebugRendererFactory2));\n    /**\n     * Stores context information about view nodes.\n     *\n     * Used in tests to retrieve information those nodes.\n     */\n    var Render3DebugContext = /** @class */ (function () {\n        function Render3DebugContext(_nativeNode) {\n            this._nativeNode = _nativeNode;\n        }\n        Object.defineProperty(Render3DebugContext.prototype, \"nodeIndex\", {\n            get: function () { return loadContext(this._nativeNode).nodeIndex; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"view\", {\n            get: function () { return loadContext(this._nativeNode).lViewData; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"injector\", {\n            get: function () { return getInjector(this._nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"component\", {\n            get: function () { return getHostComponent(this._nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"providerTokens\", {\n            get: function () {\n                var lDebugCtx = loadContext(this._nativeNode);\n                var lViewData = lDebugCtx.lViewData;\n                var tNode = lViewData[TVIEW].data[lDebugCtx.nodeIndex];\n                var directivesCount = tNode.flags & 4095 /* DirectiveCountMask */;\n                if (directivesCount > 0) {\n                    var directiveIdxStart = tNode.flags >> 15 /* DirectiveStartingIndexShift */;\n                    var directiveIdxEnd = directiveIdxStart + directivesCount;\n                    var viewDirectiveDefs = this.view[TVIEW].data;\n                    var directiveDefs = viewDirectiveDefs.slice(directiveIdxStart, directiveIdxEnd);\n                    return directiveDefs.map(function (directiveDef) { return directiveDef.type; });\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"references\", {\n            get: function () { return getLocalRefs(this._nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"context\", {\n            // TODO(pk): check previous implementation and re-implement\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"componentRenderElement\", {\n            // TODO(pk): check previous implementation and re-implement\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"renderNode\", {\n            // TODO(pk): check previous implementation and re-implement\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        // TODO(pk): check previous implementation and re-implement\n        Render3DebugContext.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            console.error.apply(console, __spread(values));\n        };\n        return Render3DebugContext;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds a player to an element, directive or component instance that will later be\n     * animated once change detection has passed.\n     *\n     * When a player is added to a reference it will stay active until `player.destroy()`\n     * is called. Once called then the player will be removed from the active players\n     * present on the associated ref instance.\n     *\n     * To get a list of all the active players on an element see [getPlayers].\n     *\n     * @param ref The element, directive or component that the player will be placed on.\n     * @param player The player that will be triggered to play once change detection has run.\n     */\n    function addPlayer(ref, player) {\n        var context = getContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return;\n        }\n        var element$$1 = context.native;\n        var lViewData = context.lViewData;\n        var playerContext = getOrCreatePlayerContext(element$$1, context);\n        var rootContext = getRootContext$2(lViewData);\n        addPlayerInternal(playerContext, rootContext, element$$1, player, 0, ref);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n    /**\n     * Returns a list of all the active players present on the provided ref instance (which can\n     * be an instance of a directive, component or element).\n     *\n     * This function will only return players that have been added to the ref instance using\n     * `addPlayer` or any players that are active through any template styling bindings\n     * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n     */\n    function getPlayers(ref) {\n        var context = getContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return [];\n        }\n        var stylingContext = getStylingContext(context.nodeIndex - HEADER_OFFSET, context.lViewData);\n        var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n        return playerContext ? getPlayersInternal(playerContext) : [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.Injector = Injector;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ÉµNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList$1;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ÉµALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ÉµAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ÉµdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ÉµdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ÉµdevModeEqual = devModeEqual;\n    exports.ÉµisListLikeIterable = isListLikeIterable;\n    exports.ÉµisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ÉµConsole = Console;\n    exports.ÉµgetInjectableDef = getInjectableDef;\n    exports.Éµinject = inject;\n    exports.ÉµsetCurrentInjector = setCurrentInjector;\n    exports.ÉµAPP_ROOT = APP_ROOT;\n    exports.ÉµivyEnabled = ivyEnabled;\n    exports.ÉµComponentFactory = ComponentFactory;\n    exports.ÉµCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ÉµresolveComponentResources = resolveComponentResources;\n    exports.ÉµReflectionCapabilities = ReflectionCapabilities;\n    exports.ÉµRenderDebugInfo = RenderDebugInfo;\n    exports.Éµ_sanitizeHtml = _sanitizeHtml;\n    exports.Éµ_sanitizeStyle = _sanitizeStyle;\n    exports.Éµ_sanitizeUrl = _sanitizeUrl;\n    exports.Éµglobal = _global;\n    exports.ÉµlooseIdentical = looseIdentical;\n    exports.Éµstringify = stringify;\n    exports.ÉµmakeDecorator = makeDecorator;\n    exports.ÉµisObservable = isObservable;\n    exports.ÉµisPromise = isPromise;\n    exports.ÉµclearOverrides = clearOverrides;\n    exports.ÉµinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ÉµoverrideComponentView = overrideComponentView;\n    exports.ÉµoverrideProvider = overrideProvider;\n    exports.ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ÉµdefineBase = defineBase;\n    exports.ÉµdefineComponent = defineComponent;\n    exports.ÉµdefineDirective = defineDirective;\n    exports.ÉµdefinePipe = definePipe;\n    exports.ÉµdefineNgModule = defineNgModule;\n    exports.ÉµdetectChanges = detectChanges;\n    exports.ÉµrenderComponent = renderComponent;\n    exports.ÉµRender3ComponentFactory = ComponentFactory$1;\n    exports.ÉµRender3ComponentRef = ComponentRef$1;\n    exports.ÉµdirectiveInject = directiveInject;\n    exports.ÉµinjectAttribute = injectAttribute;\n    exports.ÉµgetFactoryOf = getFactoryOf;\n    exports.ÉµgetInheritedFactory = getInheritedFactory;\n    exports.ÉµtemplateRefExtractor = templateRefExtractor;\n    exports.ÉµPublicFeature = PublicFeature;\n    exports.ÉµInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ÉµNgOnChangesFeature = NgOnChangesFeature;\n    exports.ÉµRender3NgModuleRef = NgModuleRef$1;\n    exports.ÉµmarkDirty = markDirty;\n    exports.ÉµNgModuleFactory = NgModuleFactory$1;\n    exports.ÉµNO_CHANGE = NO_CHANGE;\n    exports.Éµcontainer = container;\n    exports.ÉµnextContext = nextContext;\n    exports.ÉµelementStart = elementStart;\n    exports.ÉµnamespaceHTML = namespaceHTML;\n    exports.ÉµnamespaceMathML = namespaceMathML;\n    exports.ÉµnamespaceSVG = namespaceSVG;\n    exports.Éµelement = element;\n    exports.Éµlistener = listener;\n    exports.Éµtext = text;\n    exports.ÉµembeddedViewStart = embeddedViewStart;\n    exports.Éµquery = query;\n    exports.ÉµregisterContentQuery = registerContentQuery;\n    exports.Éµprojection = projection;\n    exports.Éµbind = bind;\n    exports.Éµinterpolation1 = interpolation1;\n    exports.Éµinterpolation2 = interpolation2;\n    exports.Éµinterpolation3 = interpolation3;\n    exports.Éµinterpolation4 = interpolation4;\n    exports.Éµinterpolation5 = interpolation5;\n    exports.Éµinterpolation6 = interpolation6;\n    exports.Éµinterpolation7 = interpolation7;\n    exports.Éµinterpolation8 = interpolation8;\n    exports.ÉµinterpolationV = interpolationV;\n    exports.ÉµpipeBind1 = pipeBind1;\n    exports.ÉµpipeBind2 = pipeBind2;\n    exports.ÉµpipeBind3 = pipeBind3;\n    exports.ÉµpipeBind4 = pipeBind4;\n    exports.ÉµpipeBindV = pipeBindV;\n    exports.ÉµpureFunction0 = pureFunction0;\n    exports.ÉµpureFunction1 = pureFunction1;\n    exports.ÉµpureFunction2 = pureFunction2;\n    exports.ÉµpureFunction3 = pureFunction3;\n    exports.ÉµpureFunction4 = pureFunction4;\n    exports.ÉµpureFunction5 = pureFunction5;\n    exports.ÉµpureFunction6 = pureFunction6;\n    exports.ÉµpureFunction7 = pureFunction7;\n    exports.ÉµpureFunction8 = pureFunction8;\n    exports.ÉµpureFunctionV = pureFunctionV;\n    exports.ÉµgetCurrentView = getCurrentView;\n    exports.ÉµrestoreView = restoreView;\n    exports.ÉµcontainerRefreshStart = containerRefreshStart;\n    exports.ÉµcontainerRefreshEnd = containerRefreshEnd;\n    exports.ÉµqueryRefresh = queryRefresh;\n    exports.ÉµloadQueryList = loadQueryList;\n    exports.ÉµelementEnd = elementEnd;\n    exports.ÉµelementProperty = elementProperty;\n    exports.ÉµprojectionDef = projectionDef;\n    exports.Éµreference = reference;\n    exports.ÉµenableBindings = enableBindings;\n    exports.ÉµdisableBindings = disableBindings;\n    exports.ÉµelementAttribute = elementAttribute;\n    exports.ÉµelementStyling = elementStyling;\n    exports.ÉµelementStylingMap = elementStylingMap;\n    exports.ÉµelementStyleProp = elementStyleProp;\n    exports.ÉµelementStylingApply = elementStylingApply;\n    exports.ÉµelementClassProp = elementClassProp;\n    exports.ÉµtextBinding = textBinding;\n    exports.Éµtemplate = template;\n    exports.ÉµembeddedViewEnd = embeddedViewEnd;\n    exports.Éµstore = store;\n    exports.Éµload = load;\n    exports.Éµpipe = pipe;\n    exports.ÉµwhenRendered = whenRendered;\n    exports.Éµi18nAttribute = i18nAttribute;\n    exports.Éµi18nExp = i18nExp;\n    exports.Éµi18nStart = i18nStart;\n    exports.Éµi18nEnd = i18nEnd;\n    exports.Éµi18nApply = i18nApply;\n    exports.Éµi18nExpMapping = i18nExpMapping;\n    exports.Éµi18nInterpolation1 = i18nInterpolation1;\n    exports.Éµi18nInterpolation2 = i18nInterpolation2;\n    exports.Éµi18nInterpolation3 = i18nInterpolation3;\n    exports.Éµi18nInterpolation4 = i18nInterpolation4;\n    exports.Éµi18nInterpolation5 = i18nInterpolation5;\n    exports.Éµi18nInterpolation6 = i18nInterpolation6;\n    exports.Éµi18nInterpolation7 = i18nInterpolation7;\n    exports.Éµi18nInterpolation8 = i18nInterpolation8;\n    exports.Éµi18nInterpolationV = i18nInterpolationV;\n    exports.Éµi18nMapping = i18nMapping;\n    exports.ÉµWRAP_RENDERER_FACTORY2 = WRAP_RENDERER_FACTORY2;\n    exports.ÉµRender3DebugRendererFactory2 = Render3DebugRendererFactory2;\n    exports.ÉµcompileComponent = compileComponent;\n    exports.ÉµcompileDirective = compileDirective;\n    exports.ÉµcompileNgModule = compileNgModule;\n    exports.ÉµcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ÉµpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ÉµcompilePipe = compilePipe;\n    exports.ÉµsanitizeHtml = sanitizeHtml;\n    exports.ÉµsanitizeStyle = sanitizeStyle;\n    exports.ÉµsanitizeUrl = sanitizeUrl;\n    exports.ÉµsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ÉµbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ÉµbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ÉµbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ÉµbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ÉµbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ÉµgetContext = getContext;\n    exports.ÉµbindPlayerFactory = bindPlayerFactory;\n    exports.ÉµaddPlayer = addPlayer;\n    exports.ÉµgetPlayers = getPlayers;\n    exports.ÉµcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ÉµSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ÉµSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ÉµSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ÉµSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ÉµSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ÉµSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ÉµSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ÉµSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ÉµSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ÉµSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ÉµSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ÉµregisterModuleFactory = registerModuleFactory;\n    exports.ÉµEMPTY_ARRAY = EMPTY_ARRAY$4;\n    exports.ÉµEMPTY_MAP = EMPTY_MAP;\n    exports.Éµand = anchorDef;\n    exports.Éµccf = createComponentFactory;\n    exports.Éµcmf = createNgModuleFactory;\n    exports.Éµcrt = createRendererType2;\n    exports.Éµdid = directiveDef;\n    exports.Éµeld = elementDef;\n    exports.ÉµelementEventFullName = elementEventFullName;\n    exports.ÉµgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ÉµinlineInterpolate = inlineInterpolate;\n    exports.Éµinterpolate = interpolate;\n    exports.Éµmod = moduleDef;\n    exports.Éµmpd = moduleProvideDef;\n    exports.Éµncd = ngContentDef;\n    exports.Éµnov = nodeValue;\n    exports.Éµpid = pipeDef;\n    exports.Éµprd = providerDef;\n    exports.Éµpad = pureArrayDef;\n    exports.Éµpod = pureObjectDef;\n    exports.Éµppd = purePipeDef;\n    exports.Éµqud = queryDef;\n    exports.Éµted = textDef;\n    exports.Éµunv = unwrapValue;\n    exports.Éµvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}