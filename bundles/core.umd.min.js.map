{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","getClosureSafeProperty","objWithPropertyToExtract","Error","fillProperties","source","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_INJECTABLE_DEF","ngInjectableDef","NG_INJECTOR_DEF","ngInjectorDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","__NG_ELEMENT_ID__","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","getInjectableDef","type","getInjectorDef","InjectionToken","_desc","ngMetadataName","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ɵChangeDetectorStatus","ViewEncapsulation","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","styleUrls","unwrapResponse","response","text","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","EMPTY","EMPTY_ARRAY","_renderCompCount","defineComponent","componentDefinition","typePrototype","declaredInputs","def","providersResolver","consts","vars","template","hostBindings","contentQueries","contentQueriesRefresh","attributes","inputs","outputs","exportAs","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","id","styles","_","noSideEffects","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","forEach","extractDirectiveDef","extractPipeDef","getComponentDef","getDirectiveDef","getPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","obj","secondary","newLookup","minifiedKey","publicName","declaredName","isArray","defineBase","baseDefinition","R3ResolvedDependencyType","defineDirective","definePipe","pipeDef","pure","getNgModuleDef","throwNotFound","getCompilerFacade","globalNg","ɵcompilerFacade","InjectFlags","Inject","Optional","Self","SkipSelf","Host","_injectImplementation","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","injectInjectorOnly","flags","Default","injectRootLimpMode","get","inject","notFoundValue","injectableDef","injectArgs","types","arg","j","NodeInjectorFactory","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","FactoryPrototype","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","TVIEW","FLAGS","PARENT","NEXT","QUERIES","HOST","HOST_NODE","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR","RENDERER_FACTORY","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","CONTENT_QUERIES","DECLARATION_VIEW","HEADER_OFFSET","queueInitHooks","tView","initHooks","checkHooks","queueLifecycleHooks","tNode","firstTemplatePass","directiveStart","end","directiveEnd","queueContentHooks","queueViewHooks","queueDestroyHooks","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeInitHooks","currentView","creationMode","executeHooks","allHooks","hooksToCall","callHooks","arr","ACTIVE_INDEX","VIEWS","NATIVE","RENDER_PARENT","MONKEY_PATCH_KEY_NAME","stringify$1","loadInternal","view","readElementValue","getNativeByIndex","lView","getNativeByTNode","hostView","getTNode","getComponentViewByIndex","nodeIndex","slotValue","isContentQueryHost","isComponent","isComponentDef","isLContainer","isRootView","getRootView","readPatchedLView","getRootContext","viewOrComponent","readPatchedData","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","elementDepthCount","defaultScheduler","requestAnimationFrame","setTimeout","addAllToArray","items","bindingsEnabled","previousOrParentTNode","isParent","currentDirectiveDef","setCurrentDirectiveDef","enableBindings","disableBindings","getLView","restoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","setTNodeAndViewData","getIsParent","setIsParent","getCreationMode","checkNoChangesMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","getFirstTemplatePass","setFirstTemplatePass","bindingRootIndex","getBindingRoot","setBindingRoot","enterView","newView","hostTNode","oldView","bindingStartIndex","nextContextImpl","level","walkUpViews","nestingLevel","leaveView","creationOnly","includeViewProviders","setIncludeViewProviders","v","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","parent","diPublicInInjector","bloomAdd","charCodeAt","bloomBit","mask","b6","b5","tData","injectAttributeImpl","attrNameToInject","attrs","attrName","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","previousTView","shouldSearchParent","bloomHasToken","instance","searchTokensOnInjector","NOT_FOUND","moduleInjector","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","providerTokenOrDef","lData","isFactory","getPrototypeOf","previousIncludeViewProviders","previousInjectImplementation","injectorView","NodeInjector","_tNode","_lView","getFactoryOf","typeAny","getInheritedFactory","getLContext","mpValue","isComponentInstance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","firstChild","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","native","context","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","slice","getComponent","element","loadLContextFromNode","getComponentAtNodeIndex","getContext","getViewComponent","loadLContext","getRootContext$1","getRootView$1","componentOrView","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","directive","node","Node","isBrowserEvents","listener","useCapture","getListeners","lCleanup","tCleanup","cleanup","listeners","firstParam","secondParam","callback","useCaptureOrIndx","sort","sortListeners","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","throwMultipleComponentError","tagName","NO_CHANGE","updateBinding","bindingIndex","getBinding","bindingUpdated","isDifferent","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","RendererStyleFlags3","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","getParentNative","getHostNative","getFirstParentNative","getLContainer","embeddedView","containerHostIndex","getContainerRenderParent","tViewNode","container","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","rootTNode","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","lContainer","componentView","findComponentView","head","projection","insertBefore","removeChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","containerIndex","views","splice","detachView","removeIndex","detached","viewToDetach","removeView","containerHost","destroyLView","getLViewChild","childIndex","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","removeListeners","useCaptureOrSubIdx","removeEventListener","unsubscribe","cleanupFn","destroy","getRenderParent","canInsertNativeNode","nativeParentNode","tNodeParent","getHighestElementContainer","currentNode","canInsertNativeChildOfView","viewTNode","canInsertNativeChildOfElement","nativeInsertBefore","appendChild","childEl","childTNode","parentEl","parentTNode","getBeforeNodeForView","ngContainer","containerNative","parentNative","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","NG_TEMPLATE_SELECTOR","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","nodeAttrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","BoundPlayerFactory","CorePlayerHandler","_players","flushPlayers","player","play","queuePlayer","ANIMATION_PROP_PREFIX","createEmptyStylingContext","sanitizer","initialStylingValues","getStylingContext","viewData","storageIndex","wrapper","isStylingContext","stylingTemplate","allocStylingContext","templateStyleContext","isAnimationProp","addPlayerInternal","playerContext","rootContext","playerContextIndex","ref","addEventListener","playerHandler","getPlayerContext","stylingContext","allocPlayerContext","EMPTY_ARR","EMPTY_OBJ","updateStyleProp","input","singleIndex","currValue","getValue","currFlag","getPointers","hasValueChanged","isClassBased_5","playerBuilder","ClassAndStylePlayerBuilder","value_1","currPlayerIndex","getPlayerBuilderIndex","playerBuildersAreDirty","hasPlayerBuilderChanged","newIndex","setPlayerBuilder","setPlayerBuilderIndex","setValue","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","valueExists","setDirty","setContextDirty","setContextPlayersDirty","setStyle","prop","store","DashCase","setProperty","removeStyle","removeProperty","setClass","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBased","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","getStyleSanitizer","setProp","builder","insertionIndex","playerBuilderIndex","getPlayerBuilder","setFlag","getProp","limitToSingleClasses","findEntryPositionByProp","startIndex","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","tmpPlayerBuilderIndex","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","playerIndex","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","prepareInitialFlag","_element","_type","_values","_dirty","_factory","buildPlayer","currentPlayer","isFirstRender","_CLEAN_PROMISE","refreshDescendantViews","rf","refreshDynamicEmbeddedViews","container_1","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","directiveDefIdx","setHostBindings","expandoInstructions","expandoStartIndex","currentDirectiveIndex","currentElementIndex","instruction","providerCount","refreshChildComponents","componentRefresh","createLView","rendererFactory","createNodeAtIndex","createTNode","createViewNode","allocExpando","viewToRender","_isParent","_previousOrParentTNode","tickRootContext","namespaceHTML","nextContext","renderComponentOrTemplate","componentOrContext","templateFn","begin","getRenderFlags","_currentNamespace","namespaceSVG","namespaceMathML","elementStart","elementEnd","elementContainerStart","createComment","createDirectivesAndLocals","elementContainerEnd","currentQueries","addNode","elementCreate","setUpAttributes","getElementDepthCount","increaseElementDepthCount","overriddenRenderer","rendererToUse","createElement","createElementNS","localRefExtractor","getBindingsEnabled","resolveDirectives","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","findDirectiveMatches","registry","directiveRegistry","matches","instantiateAllDirectives","start","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","previousExpandoLength","saveResolvedLocalsInData","localIndex","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","pipeRegistry","isProc","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","querySelector","eventName","listenerFn","lCleanupIndex","getCleanup","listen","wrappedListener","wrapListenerWithPreventDefault","wrapListenerIn_preventDefault","preventDefault","returnValue","generatePropertyAliases","propsLength","subscription","subscribe","idx","decreaseElementDepthCount","elementAttribute","element_1","removeAttribute","strValue","elementProperty","nativeOnly","inputData","dataValue","initializeTNodeInputs","setInputsForProperty","markDirtyIfOnPush","childComponentLView","tViews","tParent","initialInputs","direction","propStore","isInput","defs","directiveDef","propertyAliasMap","internalName","elementClassProp","classIndex","hackImplementationOfElementClassProp","hostStylingHack","classDeclarations","classList","val","updateClassProp","addOrRemove","elementStyling","styleDeclarations","styleSanitizer","hasClassInput","createStylingContextTemplate","initialClassDeclarations","initialStyleDeclarations","onlyProcessSingleClasses","stylesLookup","classesLookup","totalStyleDeclarations","hasPassedDeclarations","initialStaticClasses","styleProps","classNames","classNamesIndexStart","totalProps","maxLength","multiStart","isClassBased_1","indexForInitial","initialValue","indexForSingle","initialFlag","delegateToClassInput","elementStylingApply","hackImplementationOfElementStyling","hostStylingHackMap","squashedClassDeclarations","hackSquashDeclaration","set","hackSetStaticClasses","staticClassStartIndex","renderStyleAndClassBindings","rootOrView","classesStore","stylesStore","totalPlayersQueued","isContextDirty","flushPlayerBuilders","multiStartIndex","onlySingleClasses","isClassBased_6","readInitialValue","valueToApply","playersStartIndex","playerInsertionIndex","oldPlayer","scheduleTick","elementStyleProp","styleIndex","suffix","valueToAdd","hackImplementationOfElementStyleProp","elementStylingMap","classes","hackImplementationOfElementStylingMap","initialClasses","updateStylingMap","classesInput","stylesInput","classesPlayerBuilder","stylesPlayerBuilder","classesValue","stylesValue","ignoreAllClassUpdates","ignoreAllStyleUpdates","applyAllClasses","classesPlayerBuilderIndex","stylesPlayerBuilderIndex","split","classesStartIndex","dirty","ctxIndex","propIndex","propLimit","isClassBased_2","adjustedPropIndex","newProp","newValue","indexOfEntry","valueToCompare","flagToCompare","newFlag","isClassBased_3","isClassBased_4","textNative","textBinding","element_2","textContent","directiveCount","elementIndex","postProcessBaseDirective","setInputsFromAttrs","directiveIndex","initialInputData","generateInitialInputs","minifiedInputName","attrValue","queueComponentIndexForCheck","numberOfDirectives","directiveFactory","nodeInjectorFactory","addToViewTree","createLContainer","hostNative","isForViewContainerRef","containerInternal","comment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerTNode","scanForView","tContainerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","viewHost","adjustedElementIndex","viewAttached","syncViewWithBlueprint","componentTView","detectChangesInternal","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","nextNode","projectionNodeStack$1","selectorIndex","nodeToProject","projectedView","currentComponentView","firstProjectedNode","adjustedHostIndex","markViewDirty","res_1","nothingScheduled","clean","scheduler","rootComponent","detectChanges","detectChangesInRootView","hostTView","createViewQuery","renderFlags","viewFlags","updateViewQuery","markDirty","allocHostVars","count","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","interpolationV","content","interpolation1","prefix","v0","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","getContextLView","loadQueryList","queryListIdx","load","directiveInject","injectAttribute","registerContentQuery","queryList","savedContentQueriesLength","tViewContentQueries","CLEAN_PROMISE","getCurrentView","getTViewCleanup","getPlayers","getPlayersInternal","players","nonFactoryPlayersStart","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","rNode","resetComponentState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","isComponentDef$1","definition","InheritDefinitionFeature","superType","getSuperType","_loop_1","e_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","ctx","prevViewQuery_1","superViewQuery_1","prevContentQueries_1","superContentQueries_1","prevContentQueriesRefresh_1","superContentQueriesRefresh_1","queryIndex","features_1","features_1_1","ngInherit","e_1_1","return","superPrototype","PRIVATE_PREFIX","NgOnChangesFeature","publicToDeclaredInputs","publicToMinifiedInputs","proto","declaredKey_1","privateMinKey_1","originalProperty","checkProto","setter_1","simpleChanges","writable","currentChange","configurable","onChangesWrapper","delegateHook","ngOnChanges","noop","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR$1","NullInjector","Injector","StaticInjector","NULL","SWITCH_INJECTOR_FACTORY","IDENT","EMPTY$1","CIRCULAR","MULTI_PROVIDER_FN","USE_VALUE","provide","String","useValue","NULL_INJECTOR$1","NEW_LINE","NO_NEW_LINE","records","_records","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","charAt","substr","parts","JSON","replace","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$1","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","_this","injectorDefTypes","destroyed","dedupStack","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","has","assertNotDestroyed","service","clear","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","defOrWrappedDef","parents","ngModule","isDuplicate","imported","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","existing","multiRecord_1","hasOnDestroy","Function","paramLength","isExistingProvider","isFactoryProvider","classRef_1","ngModuleDetail","hasDeps","resolveProvider$1","lInjectablesBlueprint","isComponent$$1","providerFactory","beginIndex","endIndex","cptViewProvidersCount","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","factoryFn","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","item","multiResolve","result","factories","componentCount","multiProviders","ProvidersFeature","viewProviders","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","R3ElementRef","R3TemplateRef","R3ViewContainerRef","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_parent","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","ngContentSelectors","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","tNodeChild","enumerable","_lookUpContext","detach","storeCleanupFn","markForCheck","reattach","checkNoChanges","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","_view","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_renderer","_queries","_injectorIndex","createEmbeddedView","container$$1","createEmbeddedViewAndNode","declarationView","queries","viewRef","hostContainer","createViewRef","componentIndex","hostComponentView","RendererStyleFlags2","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","SecurityContext","Renderer2","SWITCH_RENDERER2_FACTORY","Version","Sanitizer","VERSION","full","major","minor","patch","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ComponentFactory$$1","isInternalRootView","rootViewInjector","createChainedInjector","hostRNode","rootFlags","tElementNode","rootLView","oldLView","projection$$1","nodeList","firstTNode","previousTNode","componentRef","ComponentRef$1","ComponentRef$$1","_rootLView","destroyCbs","changeDetectorRef","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","childNode","nodeType","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","console","warn","sanitizeSrcset","srcset","trim","tagSet","tags","_b","_c","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","elementValid","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","elAttr","lower","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","ELEMENT_MARKER","marker","COMMENT_MARKER","MARKER","ICU_BLOCK_REGEX","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","PP_PLACEHOLDERS","PP_ICU_VARS","PP_ICUS","extractParts","pattern","prevPos","braceStack","results","braces","lastIndex","exec","pos","pop","block","test","parseICUBlock","substring_1","cases","icuType","mainBinding","str","binding","parseInt","blocks","assertGreaterThan","actual","expected","msg","throwError","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","sanitizeFn","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","Math","min","parentIndexStack","i18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","getTranslationForTemplate","search","RegExp","phIndex","icuNodeIndex","icuStart","tIcuIndex","hasBinding","update","icus","appendI18nNode","i18nPostprocess","replacements","_match","shift","some","_idx","list","i18nEnd","i18nEndFirstPass","rootIndex","tI18n","visitedPlaceholders","readCreateOpCodes","removeNode","currentTNode","opCode","destinationNodeIndex","destinationTNode","commentValue","commentRNode","activeCaseIndex","tagNameValue","removedPhTNode","i18n","i18nAttributes","i18nAttributesFirstPass","previousElementIndex","Plural","changeMask","shiftsCounter","i18nExp","expression","i18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","checkBit","skipCodes","tIcu","icuTNode","removeCodes","k","removeOpCode","activeIndex","caseIndex","getCaseIndex","bindingValue","resolvedCase","getPluralCategory","locale","getPluralCase","nLike","nDecimal","floor","abs","One","Other","Zero","Two","Few","Many","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","worstCaseSize","max","opCodes","parseNodes","nestedIcusToCreate","element$$1","attr","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","_bootstrapComponents","_r3Injector","injectFlags","NgModuleFactory$1","NgModuleFactory$$1","moduleType","parentInjector","pureFunction0","slotOffset","pureFn","thisArg","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef$1","pipeInstance","pipeBind1","unwrapValue","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","err","completeFn","sink","Subscription","Subject","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","LQueries_","shallow","deep","track","predicate","descend","read","createQuery","clone","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","isRootNodeOfQuery","removeView$1","query","containerValues","viewValuesIdx","getIdxOfMatchingSelector","queryByReadToken","matchingIdx","queryByTemplateRef","templateRefToken","templateRefResult","queryRead","queryByTNodeType","addMatch","matchingValue","createPredicate","_valuesTree","QueryList","QueryList_","changes","filter","find","reduce","init","toArray","reset","flatten","notifyOnChanges","memoryIndex","getOrCreateCurrentQueries","QueryType","storeCleanupWithContext","queryRefresh","templateRefExtractor","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","SAFE_STYLE_VALUE","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","sanitizeHtml","getSanitizer","sanitize","HTML","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","angularCoreEnv","ɵdefineBase","ɵdefineComponent","ɵdefineDirective","ɵdefineNgModule","ɵdefinePipe","ɵdirectiveInject","ɵgetFactoryOf","ɵgetInheritedFactory","ɵinjectAttribute","ɵtemplateRefExtractor","ɵNgOnChangesFeature","ɵProvidersFeature","ɵInheritDefinitionFeature","ɵelementAttribute","ɵbind","ɵcontainer","ɵnextContext","ɵcontainerRefreshStart","ɵcontainerRefreshEnd","ɵloadQueryList","ɵnamespaceHTML","ɵnamespaceMathML","ɵnamespaceSVG","ɵenableBindings","ɵdisableBindings","ɵallocHostVars","ɵelementStart","ɵelementEnd","ɵelement","ɵelementContainerStart","ɵelementContainerEnd","ɵpureFunction0","ɵpureFunction1","ɵpureFunction2","ɵpureFunction3","ɵpureFunction4","ɵpureFunction5","ɵpureFunction6","ɵpureFunction7","ɵpureFunction8","ɵpureFunctionV","ɵgetCurrentView","ɵrestoreView","ɵinterpolation1","ɵinterpolation2","ɵinterpolation3","ɵinterpolation4","ɵinterpolation5","ɵinterpolation6","ɵinterpolation7","ɵinterpolation8","ɵinterpolationV","ɵelementClassProp","ɵlistener","ɵload","ɵprojection","ɵelementProperty","ɵpipeBind1","ɵpipeBind2","ɵpipeBind3","ɵpipeBind4","ɵpipeBindV","ɵprojectionDef","ɵpipe","ɵquery","ɵqueryRefresh","ɵregisterContentQuery","ɵreference","ɵelementStyling","ɵelementStylingMap","ɵelementStyleProp","ɵelementStylingApply","ɵtemplate","ɵtext","ɵtextBinding","ɵembeddedViewStart","ɵembeddedViewEnd","ɵi18n","ɵi18nAttributes","ɵi18nExp","ɵi18nStart","ɵi18nEnd","ɵi18nApply","ɵi18nPostprocess","ɵsanitizeHtml","ɵsanitizeStyle","ɵdefaultStyleSanitizer","ɵsanitizeResourceUrl","ɵsanitizeScript","sanitizeScript","unsafeScript","SCRIPT","ɵsanitizeUrl","NgModuleFactoryLoader","modules","assertNotExisting","getModuleFactory__PRE_R3__","noModuleError","getModuleFactory","Type","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","typeStr","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","compiler","dep","reflectDependency","host","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","EMPTY_ARRAY$2","moduleQueue","flushingModuleQueue","isResolvedDeclaration","declaration","every","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","flatten$1","expandModuleWithProviders","emitInline","registerNgModuleType","compileInjector","setScopeOnDeclaredComponents","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","from","compilation","dir","isNgModule","scopes","exported","declared","importedTyped","importedScope","entry","exportedTyped","exportedScope","mapFn","out","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","directiveMetadata","preserveWhitespaces","viewQueries","extractQueriesMetadata","interpolation","flushModuleScopingQueueAsMuchAsPossible","hasSelectorScope","compileDirective","facade","typeArgumentCount","EMPTY_OBJ$1","isContentQuery","lifecycle","usesOnChanges","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","isQueryAnn","queriesMeta","field","ann","convertToR3QueryMetadata","propertyName","convertToR3QueryPredicate","splitByComma","piece","compilePipe","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","USE_VALUE$1","EMPTY_ARRAY$3","convertInjectableProviderToFactory","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","preR3NgModuleCompile","USE_VALUE$2","isUseClassProvider","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","Injectable","SWITCH_COMPILE_INJECTABLE","render2CompileInjectable","injectableType","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","isPromise","isObservable","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","detectWTF","wtf","createScope","leave","scope","leaveScope","startTimeRange","rangeType","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","wtfStartTimeRange","wtfEndTimeRange","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","delete","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_R3__","createCompiler","compileNgModuleFactory","ApplicationRef","ngDoBootstrap","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","ApplicationRef_1","componentOrFactory","componentFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","QueryList$1","_results","flatten$2","flat","flatItem","last","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode__PRE_R3__","nativeNode","_debugContext","DebugElement__PRE_R3__","addChild","references","providerTokens","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","eAttrs","lContext","lNode","eClasses","styleName","eStyles","style","name_1","getPropertyValue","children","getDebugNode__POST_R3__","_queryNodeChildrenR3","elementsOnly","_nativeNodeToDebugNode","getDebugNode","getDebugNode__PRE_R3__","indexDebugNode","DebugNode","DebugElement","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","MissingTranslationStrategy","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","APPLICATION_MODULE_PROVIDERS","ApplicationModule","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","_addDebugContext","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","elDef","selectorOrNode","ns","ShadowDom","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","ViewContainerRef_","_data","templateRef","insert","createComponent","ngModuleRef","contextInjector","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","move","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyValue","attributeValue","setBindingDebugInfo","isAdd","styleValue","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","ɵangular_packages_core_core_s","ɵangular_packages_core_core_p","ɵangular_packages_core_core_q","ɵangular_packages_core_core_r","ɵangular_packages_core_core_g","ɵangular_packages_core_core_n","ɵangular_packages_core_core_o","ɵangular_packages_core_core_m","ɵangular_packages_core_core_l","ɵangular_packages_core_core_c","ɵangular_packages_core_core_d","ɵangular_packages_core_core_e","ɵangular_packages_core_core_f","ɵangular_packages_core_core_k","ɵangular_packages_core_core_t","ɵangular_packages_core_core_v","ɵangular_packages_core_core_u","ɵangular_packages_core_core_y","ɵangular_packages_core_core_w","ɵangular_packages_core_core_x","ɵangular_packages_core_core_bb","ɵangular_packages_core_core_bi","ɵangular_packages_core_core_bc","ɵangular_packages_core_core_bd","ɵangular_packages_core_core_be","ɵangular_packages_core_core_bh","ɵangular_packages_core_core_bl","ɵangular_packages_core_core_h","ɵangular_packages_core_core_i","ɵangular_packages_core_core_j","ɵangular_packages_core_core_a","ɵangular_packages_core_core_b","ɵangular_packages_core_core_bj","ɵangular_packages_core_core_z","ɵangular_packages_core_core_ba","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵNoopNgZone","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵgetInjectableDef","ɵinject","ɵsetCurrentInjector","ɵAPP_ROOT","ɵivyEnabled","ɵComponentFactory","ɵCodegenComponentFactoryResolver","ɵresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵdetectChanges","ɵrenderComponent","renderComponent","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","getRootContext$2","ɵsetClassMetadata","setClassMetadata","clazz","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵresetCompiledComponents","resetCompiledComponents","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵbindPlayerFactory","bindPlayerFactory","ɵaddPlayer","addPlayer","getOrCreatePlayerContext","ɵgetPlayers","ɵcompileNgModuleFactory__POST_R3__","compileNgModuleFactory__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵgetDebugNode__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","srcMeta","hasAProvider","compilerMeta","ctorDeps","userDeps","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","injectChangeDetectorRef","ɵCompiler_compileModuleSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","_lContainer","_hostTNode","_hostView","_viewRefs","getParentInjectorTNode","startTNode","parentTNode_1","adjustedIdx","_adjustIndex","commentNode","nativeNextSibling","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","getOrCreateRenderer2","ɵgetModuleFactory__POST_R3__","getModuleFactory__POST_R3__","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵSWITCH_INJECTOR_FACTORY__POST_R3__","injectInjector","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","_e","resolveRendererType2","isFilled","None","ɵelementEventFullName","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue$1","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v7.2.0-rc.0+29.sha-6cc864a\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.rxjs.operators));\n}(this, (function (exports,rxjs,operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @publicApi\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        componentResourceResolutionQueue.clear();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return component.templateUrl || component.styleUrls && component.styleUrls.length;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n        // NOTE: Under Ivy we may have both window & global defined in the Node\n        //    environment since ensureDocument() in render3.ts sets global.window.\n        if (typeof window != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            window['ngDevMode'] = newCounters;\n        }\n        if (typeof global != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            global['ngDevMode'] = newCounters;\n        }\n        if (typeof self != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            self['ngDevMode'] = newCounters;\n        }\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY = {};\n    var EMPTY_ARRAY = [];\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY);\n        Object.freeze(EMPTY_ARRAY);\n    }\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            attributes: componentDefinition.attributes || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MODULE_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have 'ngModuleDef' property.\");\n        }\n        return ngModuleDef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global.ng;\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't descend into ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        assertEqual(node instanceof Node, true, 'The provided value must be an instance of a DOM Node');\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataInRange(arr, index) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    var FactoryPrototype = NodeInjectorFactory.prototype;\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj != null && typeof obj == 'object' && Object.getPrototypeOf(obj) == FactoryPrototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var FLAGS = 1;\n    var PARENT = 2;\n    var NEXT = 3;\n    var QUERIES = 4;\n    var HOST = 5;\n    var HOST_NODE = 6; // Rename to `T_HOST`?\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var TAIL = 14;\n    var CONTAINER_INDEX = 15;\n    var CONTENT_QUERIES = 16;\n    var DECLARATION_VIEW = 17;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 18;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LView\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(tView, tNode) {\n        if (tView.firstTemplatePass) {\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n                var def = tView.data[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, creationMode) {\n        if (currentView[FLAGS] & 16 /* RunInit */) {\n            executeHooks(currentView, tView.initHooks, tView.checkHooks, creationMode);\n            currentView[FLAGS] &= ~16 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(data, allHooks, checkHooks, creationMode) {\n        var hooksToCall = creationMode ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(data, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * creation mode.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(currentView, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(currentView[arr[i]]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    var VIEWS = 1;\n    // PARENT, NEXT, QUERIES, and HOST are indices 2, 3, 4, and 5.\n    // As we already have these constants in LView, we don't need to re-create them.\n    var NATIVE = 6;\n    var RENDER_PARENT = 7;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        if (typeof value == 'object' && typeof value.type == 'function')\n            return value.type.name || value.type;\n        return '' + value;\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function loadInternal(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    /**\n     * Takes the value of a slot in `LView` and returns the element node.\n     *\n     * Normally, element nodes are stored flat, but if the node has styles/classes on it,\n     * it might be wrapped in a styling context. Or if that node has a directive that injects\n     * ViewContainerRef, it may be wrapped in an LContainer. Or if that node is a component,\n     * it will be wrapped in LView. It could even have all three, so we keep looping\n     * until we find something that isn't an array.\n     *\n     * @param value The initial value in `LView`\n     */\n    function readElementValue(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return readElementValue(lView[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return readElementValue(hostView[tNode.index]);\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        var slotValue = hostView[nodeIndex];\n        return slotValue.length >= HEADER_OFFSET ? slotValue : slotValue[HOST];\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 4 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 1 /* isComponent */) === 1 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isLContainer(value) {\n        // Styling contexts are also arrays, but their first index contains an element node\n        return Array.isArray(value) && typeof value[ACTIVE_INDEX] === 'number';\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 64 /* IsRoot */) !== 0;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootView(target) {\n        ngDevMode && assertDefined(target, 'component');\n        var lView = Array.isArray(target) ? target : readPatchedLView(target);\n        while (lView && !(lView[FLAGS] & 64 /* IsRoot */)) {\n            lView = lView[PARENT];\n        }\n        return lView;\n    }\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[HOST_NODE];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[HOST_NODE];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n    var defaultScheduler = (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n        setTimeout // everything else\n    ).bind(_global);\n    /**\n     * Equivalent to ES6 spread, add each item to an array.\n     *\n     * @param items The items to add\n     * @param arr The array to which you want to add the items\n     */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    var currentDirectiveDef = null;\n    function getCurrentDirectiveDef() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        currentDirectiveDef = def;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function enableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function disableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode) {\n        previousOrParentTNode = tNode;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsParent(value) {\n        isParent = value;\n    }\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (i.e. this previousOrParentTNode points to a node on which we\n     * create content queries).\n     */\n    function getOrCreateCurrentQueries(QueryType) {\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        // if this is the first content query on a node, any existing LQueries needs to be cloned\n        // in subsequent template passes, the cloning occurs before directive instantiation.\n        if (previousOrParentTNode && previousOrParentTNode !== lView[HOST_NODE] &&\n            !isContentQueryHost(previousOrParentTNode)) {\n            currentQueries && (currentQueries = lView[QUERIES] = currentQueries.clone());\n            previousOrParentTNode.flags |= 4 /* hasContentQuery */;\n        }\n        return currentQueries || (lView[QUERIES] = new QueryType(null, null, null));\n    }\n    /**\n     * This property gets set before entering a template.\n     */\n    var creationMode;\n    function getCreationMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return creationMode;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    function getFirstTemplatePass() {\n        return firstTemplatePass;\n    }\n    function setFirstTemplatePass(value) {\n        firstTemplatePass = value;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        var oldView = lView;\n        if (newView) {\n            var tView = newView[TVIEW];\n            creationMode = (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n            firstTemplatePass = tView.firstTemplatePass;\n            bindingRootIndex = tView.bindingStartIndex;\n        }\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n     * only, i.e. the first update will be done later. Only possible for dynamically created views.\n     */\n    function leaveView(newView, creationOnly) {\n        var tView = lView[TVIEW];\n        if (!creationOnly) {\n            if (!checkNoChangesMode) {\n                executeHooks(lView, tView.viewHooks, tView.viewCheckHooks, creationMode);\n            }\n            // Views are clean and in update mode after being checked, so these bits are cleared\n            lView[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n        }\n        lView[FLAGS] |= 16 /* RunInit */;\n        lView[BINDING_INDEX] = tView.bindingStartIndex;\n        enterView(newView, null);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = false;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 1 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentLView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0, AcrossHostBoundary is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[HOST_NODE];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view[HOST_NODE];\n            viewOffset++;\n        }\n        var acrossHostBoundary = hostTNode && hostTNode.type === 3 /* Element */ ?\n            32768 /* AcrossHostBoundary */ :\n            0;\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) |\n                acrossHostBoundary :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, token) {\n        bloomAdd(injectorIndex, view[TVIEW], token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 1 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        var bloomHash = bloomHashBitOrFactory(token);\n        // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n        // so just call the factory function to create it.\n        if (typeof bloomHash === 'function') {\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lView);\n            try {\n                var value = bloomHash();\n                if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                    throw new Error(\"No provider for \" + stringify$1(token) + \"!\");\n                }\n                else {\n                    return value;\n                }\n            }\n            finally {\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        else if (typeof bloomHash == 'number') {\n            // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n            // A reference to the previous injector TView that was found while climbing the element injector\n            // tree. This is used to know if viewProviders can be accessed on the current injector.\n            var previousTView = null;\n            var injectorIndex = getInjectorIndex(tNode, lView);\n            var parentLocation = NO_PARENT_INJECTOR;\n            // If we should skip this injector, or if there is no injector on this node, start by searching\n            // the parent injector.\n            if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                    lView[injectorIndex + PARENT_INJECTOR];\n                if (!shouldSearchParent(flags, parentLocation)) {\n                    injectorIndex = -1;\n                }\n                else {\n                    previousTView = lView[TVIEW];\n                    injectorIndex = getParentInjectorIndex(parentLocation);\n                    lView = getParentInjectorView(parentLocation, lView);\n                }\n            }\n            // Traverse up the injector tree until we find a potential match or until we know there\n            // *isn't* a match.\n            while (injectorIndex !== -1) {\n                parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                // Check the current injector. If it matches, see if it contains token.\n                var tView = lView[TVIEW];\n                if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                    // At this point, we have an injector which *may* contain the token, so we step through\n                    // the providers and directives associated with the injector's corresponding node to get\n                    // the instance.\n                    var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView);\n                    if (instance !== NOT_FOUND) {\n                        return instance;\n                    }\n                }\n                if (shouldSearchParent(flags, parentLocation) &&\n                    bloomHasToken(bloomHash, injectorIndex, lView)) {\n                    // The def wasn't found anywhere on this node, so it was a false positive.\n                    // Traverse up the tree and continue searching.\n                    previousTView = tView;\n                    injectorIndex = getParentInjectorIndex(parentLocation);\n                    lView = getParentInjectorView(parentLocation, lView);\n                }\n                else {\n                    // If we should not search parent OR If the ancestor bloom filter value does not have the\n                    // bit corresponding to the directive we can give up on traversing up to find the specific\n                    // injector.\n                    injectorIndex = -1;\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR];\n            if (moduleInjector) {\n                return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n            }\n            else {\n                return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringify$1(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponent(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        var injectableIdx = locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param lView The view we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders) {\n        var tView = lView[TVIEW];\n        var nodeFlags = tNode.flags;\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        for (var i = startingIndex; i < directiveEnd; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringify$1(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(null, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        return typeof tokenId === 'number' ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, parentLocation) {\n        return !(flags & exports.InjectFlags.Self ||\n            (flags & exports.InjectFlags.Host &&\n                (parentLocation & 32768 /* AcrossHostBoundary */)));\n    }\n    function injectInjector() {\n        var tNode = getPreviousOrParentTNode();\n        return new NodeInjector(tNode, getLView());\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = readElementValue(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = readElementValue(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 1 /* isComponent */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 1 /* isComponent */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                var localRefName = tNode.localNames[i];\n                var directiveIndex = tNode.localNames[i + 1];\n                result[localRefName] =\n                    directiveIndex === -1 ? getNativeByTNode(tNode, lView) : lView[directiveIndex];\n            }\n            return result;\n        }\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        var context = loadLContextFromNode(element);\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext(element) {\n        var context = loadLContextFromNode(element);\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element);\n        var lView = context.lView;\n        while (lView[PARENT] && lView[HOST] === null) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = lView[PARENT];\n        }\n        return lView[FLAGS] & 64 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated.\n     *\n     */\n    function getRootContext$1(target) {\n        var lViewData = Array.isArray(target) ? target : loadLContext(target).lView;\n        var rootLView = getRootView$1(lViewData);\n        return rootLView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext$1(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target);\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (!context)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringify$1(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrView any component or view\n     *\n     */\n    function getRootView$1(componentOrView) {\n        var lView;\n        if (Array.isArray(componentOrView)) {\n            ngDevMode && assertDefined(componentOrView, 'lView');\n            lView = componentOrView;\n        }\n        else {\n            ngDevMode && assertDefined(componentOrView, 'component');\n            lView = readPatchedLView(componentOrView);\n        }\n        while (lView && !(lView[FLAGS] & 64 /* IsRoot */)) {\n            lView = lView[PARENT];\n        }\n        return lView;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = lView[secondParam];\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        var fn = type;\n        if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef) {\n            return fn();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, lView[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        if (lView[bindingIndex] === NO_CHANGE) {\n            // initial pass\n            lView[bindingIndex] = value;\n        }\n        else if (isDifferent(lView[bindingIndex], value)) {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                if (!devModeEqual(lView[bindingIndex], value)) {\n                    throwErrorIfNoChangesMode(getCreationMode(), lView[bindingIndex], value);\n                }\n            }\n            lView[bindingIndex] = value;\n        }\n        else {\n            return false;\n        }\n        return true;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Retrieves the parent element of a given node. */\n    function getParentNative(tNode, currentView) {\n        if (tNode.parent == null) {\n            return getHostNative(currentView);\n        }\n        else {\n            var parentTNode = getFirstParentNative(tNode);\n            return getNativeByTNode(parentTNode, currentView);\n        }\n    }\n    /**\n     * Get the first parent of a node that isn't an IcuContainer TNode\n     */\n    function getFirstParentNative(tNode) {\n        var parent = tNode.parent;\n        while (parent && parent.type === 5 /* IcuContainer */) {\n            parent = parent.parent;\n        }\n        return parent;\n    }\n    /**\n     * Gets the host element given a view. Will return null if the current view is an embedded view,\n     * which does not have a host element.\n     */\n    function getHostNative(currentView) {\n        var hostTNode = currentView[HOST_NODE];\n        return hostTNode && hostTNode.type !== 2 /* View */ ?\n            getNativeByTNode(hostTNode, currentView[PARENT]) :\n            null;\n    }\n    function getLContainer(tNode, embeddedView) {\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = embeddedView[CONTAINER_INDEX];\n            return containerHostIndex > -1 ? embeddedView[PARENT][containerHostIndex] : null;\n        }\n        else {\n            // This is a inline view node (e.g. embeddedViewStart)\n            return embeddedView[PARENT][tNode.parent.index];\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? container[RENDER_PARENT] : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], beforeNode);\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], beforeNode);\n                if (renderParent)\n                    lContainer[RENDER_PARENT] = renderParent;\n                if (lContainer[VIEWS].length) {\n                    currentView = lContainer[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[HOST_NODE];\n                var head = componentHost.projection[tNode.projection];\n                // Must store both the TNode and the view because this projection node could be nested\n                // deeply inside embedded views, and we need to get back down to this particular nested view.\n                projectionNodeStack[++projectionNodeIndex] = tNode;\n                projectionNodeStack[++projectionNodeIndex] = currentView;\n                if (head) {\n                    currentView = componentView[PARENT];\n                    nextTNode = currentView[TVIEW].data[head.index];\n                }\n            }\n            else {\n                // Otherwise, this is a View or an ElementContainer\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.next === null && (tNode.flags & 2 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                nextTNode = tNode.next;\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[TVIEW].node;\n                    if (tNode === null || tNode === rootTNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = currentView[PARENT];\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */ && currentView[NEXT]) {\n                        currentView = currentView[NEXT];\n                        nextTNode = currentView[TVIEW].node;\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[HOST_NODE];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[PARENT], 'lView.parent');\n            lView = lView[PARENT];\n            rootTNode = lView[HOST_NODE];\n        }\n        return lView;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            isProceduralRenderer(renderer) ?\n                renderer.insertBefore(parent, node, beforeNode) :\n                parent.insertBefore(node, beforeNode, true);\n        }\n        else if (action === 1 /* Detach */) {\n            isProceduralRenderer(renderer) ?\n                renderer.removeChild(parent, node) :\n                parent.removeChild(node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LView, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LView.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0];\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param parentView The new parent of the inserted view\n     * @param index The index at which to insert the view\n     * @param containerIndex The index of the container node, if dynamic\n     */\n    function insertView(lView, lContainer, parentView, index, containerIndex) {\n        var views = lContainer[VIEWS];\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container's host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (containerIndex > -1) {\n            lView[CONTAINER_INDEX] = containerIndex;\n            lView[PARENT] = parentView;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 8 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @param detached Whether or not this view is already detached.\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex, detached) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!detached) {\n            addRemoveViewFromContainer(viewToDetach, false);\n        }\n        if (viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[CONTAINER_INDEX] = -1;\n        viewToDetach[PARENT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~8 /* Attached */;\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param tContainer The TContainer node associated with the LContainer\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, containerHost, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        detachView(lContainer, removeIndex, !!containerHost.detached);\n        destroyLView(view);\n    }\n    /** Gets the child of the given LView */\n    function getLViewChild(lView) {\n        var childIndex = lView[TVIEW].childIndex;\n        return childIndex === -1 ? null : lView[childIndex];\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 32 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var tNode;\n        if (state.length >= HEADER_OFFSET && (tNode = state[HOST_NODE]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, state);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer.length >= HEADER_OFFSET) {\n            var view = viewOrContainer;\n            executeOnDestroys(view);\n            executePipeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[HOST_NODE];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup != null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var idx = tCleanup[i + 1];\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var native = readElementValue(lView[idx]);\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // DOM listener\n                        native.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else if (typeof tCleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = lCleanup[tCleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view, destroyHooks);\n        }\n    }\n    /** Calls pipe destroy hooks for this view */\n    function executePipeOnDestroys(lView) {\n        var pipeDestroyHooks = lView[TVIEW] && lView[TVIEW].pipeDestroyHooks;\n        if (pipeDestroyHooks) {\n            callHooks(lView, pipeDestroyHooks);\n        }\n    }\n    function getRenderParent(tNode, currentView) {\n        if (canInsertNativeNode(tNode, currentView)) {\n            // If we are asked for a render parent of the root component we need to do low-level DOM\n            // operation as LTree doesn't exist above the topmost host node. We might need to find a render\n            // parent of the topmost host node if the root component injects ViewContainerRef.\n            if (isRootView(currentView)) {\n                return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n            }\n            var hostTNode = currentView[HOST_NODE];\n            var tNodeParent = tNode.parent;\n            if (tNodeParent != null && tNodeParent.type === 4 /* ElementContainer */) {\n                tNode = getHighestElementContainer(tNodeParent);\n            }\n            return tNode.parent == null && hostTNode.type === 2 /* View */ ?\n                getContainerRenderParent(hostTNode, currentView) :\n                getParentNative(tNode, currentView);\n        }\n        return null;\n    }\n    function canInsertNativeChildOfElement(tNode) {\n        // If the parent is null, then we are inserting across views. This happens when we\n        // insert a root element of the component view into the component host element and it\n        // should always be eager.\n        if (tNode.parent == null ||\n            // We should also eagerly insert if the parent is a regular, non-component element\n            // since we know that this relationship will never be broken.\n            tNode.parent.type === 3 /* Element */ && !(tNode.parent.flags & 1 /* isComponent */)) {\n            return true;\n        }\n        // Parent is a Component. Component's content nodes are not inserted immediately\n        // because they will be projected, and so doing insert at this point would be wasteful.\n        // Since the projection would than move it to its final destination.\n        return false;\n    }\n    /**\n     * We might delay insertion of children for a given view if it is disconnected.\n     * This might happen for 2 main reasons:\n     * - view is not inserted into any container (view was created but not inserted yet)\n     * - view is inserted into a container but the container itself is not inserted into the DOM\n     * (container might be part of projection or child of a view that is not inserted yet).\n     *\n     * In other words we can insert children of a given view if this view was inserted into a container\n     * and\n     * the container itself has its render parent determined.\n     */\n    function canInsertNativeChildOfView(viewTNode, view) {\n        // Because we are inserting into a `View` the `View` may be disconnected.\n        var container = getLContainer(viewTNode, view);\n        if (container == null || container[RENDER_PARENT] == null) {\n            // The `View` is not inserted into a `Container` or the parent `Container`\n            // itself is disconnected. So we have to delay.\n            return false;\n        }\n        // The parent `Container` is in inserted state, so we can eagerly insert into\n        // this location.\n        return true;\n    }\n    /**\n     * Returns whether a native element can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     *\n\n     *\n     * @param tNode The tNode of the node that we want to insert.\n     * @param currentView Current LView being processed.\n     * @return boolean Whether the node should be inserted now (or delayed until later).\n     */\n    function canInsertNativeNode(tNode, currentView) {\n        var currentNode = tNode;\n        var parent = tNode.parent;\n        if (tNode.parent) {\n            if (tNode.parent.type === 4 /* ElementContainer */) {\n                currentNode = getHighestElementContainer(tNode);\n                parent = currentNode.parent;\n            }\n            else if (tNode.parent.type === 5 /* IcuContainer */) {\n                currentNode = getFirstParentNative(currentNode);\n                parent = currentNode.parent;\n            }\n        }\n        if (parent === null)\n            parent = currentView[HOST_NODE];\n        if (parent && parent.type === 2 /* View */) {\n            return canInsertNativeChildOfView(parent, currentView);\n        }\n        else {\n            // Parent is a regular element or a component\n            return canInsertNativeChildOfElement(currentNode);\n        }\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The child that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        if (childEl === void 0) { childEl = null; }\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var renderer = currentView[RENDERER];\n            var parentEl = getParentNative(childTNode, currentView);\n            var parentTNode = childTNode.parent || currentView[HOST_NODE];\n            if (parentTNode.type === 2 /* View */) {\n                var lContainer = getLContainer(parentTNode, currentView);\n                var views = lContainer[VIEWS];\n                var index = views.indexOf(currentView);\n                nativeInsertBefore(renderer, lContainer[RENDER_PARENT], childEl, getBeforeNodeForView(index, views, lContainer[NATIVE]));\n            }\n            else if (parentTNode.type === 4 /* ElementContainer */) {\n                var renderParent = getRenderParent(childTNode, currentView);\n                nativeInsertBefore(renderer, renderParent, childEl, parentEl);\n            }\n            else if (parentTNode.type === 5 /* IcuContainer */) {\n                var icuAnchorNode = getNativeByTNode(childTNode.parent, currentView);\n                nativeInsertBefore(renderer, parentEl, childEl, icuAnchorNode);\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.appendChild(parentEl, childEl) :\n                    parentEl.appendChild(childEl);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Gets the top-level ng-container if ng-containers are nested.\n     *\n     * @param ngContainer The TNode of the starting ng-container\n     * @returns tNode The TNode of the highest level ng-container\n     */\n    function getHighestElementContainer(ngContainer) {\n        while (ngContainer.parent != null && ngContainer.parent.type === 4 /* ElementContainer */) {\n            ngContainer = ngContainer.parent;\n        }\n        return ngContainer;\n    }\n    function getBeforeNodeForView(index, views, containerNative) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[HOST_NODE];\n            return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes the `child` element from the DOM if not in view and not projected.\n     *\n     * @param childTNode The TNode of the child to remove\n     * @param childEl The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(childTNode, childEl, currentView) {\n        // We only remove the element if not in View or not projected.\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var parentNative = getParentNative(childTNode, currentView);\n            var renderer = currentView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.removeChild(parentNative, childEl) :\n                parentNative.removeChild(childEl);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var renderParent = getRenderParent(tProjectionNode, currentView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            nodeOrContainer[RENDER_PARENT] = renderParent;\n            var views = nodeOrContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                nodeOrContainer[RENDER_PARENT] = renderParent;\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be perfomed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode. In \"projection\" mode, we do not need to check types, so if tag name\n     * matches selector, we declare a match. In \"directive matching\" mode, we also check whether tNode\n     * is of expected type:\n     * - whether tNode has either Element or ElementContainer type\n     * - or if we want to match \"ng-template\" tag, we check for Container type\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        return currentSelector === tNode.tagName &&\n            (isProjectionMode ||\n                (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) ||\n                (tNode.type === 0 /* Container */ && currentSelector === NG_TEMPLATE_SELECTOR));\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 1 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null &&\n                    isNodeMatchingSelectorList(tNode, selectors[i], /* isProjectionMode */ true)) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * Combines the binding value and a factory for an animation player.\n     *\n     * Used to bind a player to an element template binding (currently only\n     * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n     * supported). The provided `factoryFn` function will be run once all\n     * the associated bindings have been evaluated on the element and is\n     * designed to return a player which will then be placed on the element.\n     *\n     * @param factoryFn The function that is used to create a player\n     *   once all the rendering-related (styling values) have been\n     *   processed for the element binding.\n     * @param value The raw value that will be exposed to the binding\n     *   so that the binding can update its internal values when\n     *   any changes are evaluated.\n     */\n    function bindPlayerFactory(factoryFn, value) {\n        return new BoundPlayerFactory(factoryFn, value);\n    }\n    var BoundPlayerFactory = /** @class */ (function () {\n        function BoundPlayerFactory(fn, value) {\n            this.fn = fn;\n            this.value = value;\n        }\n        return BoundPlayerFactory;\n    }());\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent && player.state === 0 /* Pending */) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANIMATION_PROP_PREFIX = '@';\n    function createEmptyStylingContext(element, sanitizer, initialStylingValues) {\n        return [\n            null,\n            sanitizer || null,\n            initialStylingValues || [null],\n            0,\n            0,\n            element || null,\n            null,\n            null // PreviousMultiStyleValue\n        ];\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[5 /* ElementPosition */] = element;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContext(index, viewData) {\n        var storageIndex = index;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LView or an LContainer\n            var stylingTemplate = getTNode(index - HEADER_OFFSET, viewData).stylingTemplate;\n            if (wrapper !== viewData) {\n                storageIndex = HOST;\n            }\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isStylingContext(value) {\n        // Not an LView or an LContainer\n        return Array.isArray(value) && typeof value[FLAGS] !== 'number' &&\n            typeof value[ACTIVE_INDEX] !== 'number';\n    }\n    function isAnimationProp(name) {\n        return name[0] === ANIMATION_PROP_PREFIX;\n    }\n    function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n        ref = ref || element;\n        if (playerContextIndex) {\n            playerContext[playerContextIndex] = player;\n        }\n        else {\n            playerContext.push(player);\n        }\n        if (player) {\n            player.addEventListener(200 /* Destroyed */, function () {\n                var index = playerContext.indexOf(player);\n                var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                // if the player is being removed from the factory side of the context\n                // (which is where the [style] and [class] bindings do their thing) then\n                // that side of the array cannot be resized since the respective bindings\n                // have pointer index values that point to the associated factory instance\n                if (index) {\n                    if (index < nonFactoryPlayerIndex) {\n                        playerContext[index] = null;\n                    }\n                    else {\n                        playerContext.splice(index, 1);\n                    }\n                }\n                player.destroy();\n            });\n            var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n            playerHandler.queuePlayer(player, ref);\n            return true;\n        }\n        return false;\n    }\n    function getPlayersInternal(playerContext) {\n        var players = [];\n        var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n        // add all factory-based players (which are apart of [style] and [class] bindings)\n        for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n            var player = playerContext[i];\n            if (player) {\n                players.push(player);\n            }\n        }\n        // add all custom players (not apart of [style] and [class] bindings)\n        for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n            players.push(playerContext[i]);\n        }\n        return players;\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getLContext(target);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return null;\n        }\n        var lView = context.lView, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContext(nodeIndex, lView);\n        return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n    }\n    function getPlayerContext(stylingContext) {\n        return stylingContext[0 /* PlayerContext */];\n    }\n    function allocPlayerContext(data) {\n        return data[0 /* PlayerContext */] =\n            [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n    }\n    function throwInvalidRefError() {\n        throw new Error('Only elements that exist in an Angular application can be used for animations');\n    }\n\n    var EMPTY_ARR = [];\n    var EMPTY_OBJ = {};\n    /**\n     * Creates a styling context template where styling information is stored.\n     * Any styles that are later referenced using `updateStyleProp` must be\n     * passed in within this function. Initial values for those styles are to\n     * be declared after all initial style properties are declared (this change in\n     * mode between declarations and initial styles is made possible using a special\n     * enum value found in `definition.ts`).\n     *\n     * @param initialStyleDeclarations a list of style declarations and initial style values\n     *    that are used later within the styling context.\n     *\n     *    -> ['width', 'height', SPECIAL_ENUM_VAL, 'width', '100px']\n     *       This implies that `width` and `height` will be later styled and that the `width`\n     *       property has an initial value of `100px`.\n     *\n     * @param initialClassDeclarations a list of class declarations and initial class values\n     *    that are used later within the styling context.\n     *\n     *    -> ['foo', 'bar', SPECIAL_ENUM_VAL, 'foo', true]\n     *       This implies that `foo` and `bar` will be later styled and that the `foo`\n     *       class will be applied to the element as an initial class since it's true\n     */\n    function createStylingContextTemplate(initialClassDeclarations, initialStyleDeclarations, styleSanitizer, onlyProcessSingleClasses) {\n        var initialStylingValues = [null];\n        var context = createEmptyStylingContext(null, styleSanitizer, initialStylingValues);\n        // we use two maps since a class name might collide with a CSS style prop\n        var stylesLookup = {};\n        var classesLookup = {};\n        var totalStyleDeclarations = 0;\n        if (initialStyleDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialStyleDeclarations.length; i++) {\n                var v = initialStyleDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var prop = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialStyleDeclarations[++i];\n                        initialStylingValues.push(value);\n                        stylesLookup[prop] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        totalStyleDeclarations++;\n                        stylesLookup[prop] = 0;\n                    }\n                }\n            }\n        }\n        // make where the class offsets begin\n        context[4 /* ClassOffsetPosition */] = totalStyleDeclarations;\n        var initialStaticClasses = onlyProcessSingleClasses ? [] : null;\n        if (initialClassDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialClassDeclarations.length; i++) {\n                var v = initialClassDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var className = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialClassDeclarations[++i];\n                        initialStylingValues.push(value);\n                        classesLookup[className] = initialStylingValues.length - 1;\n                        initialStaticClasses && initialStaticClasses.push(className);\n                    }\n                    else {\n                        classesLookup[className] = 0;\n                    }\n                }\n            }\n        }\n        var styleProps = Object.keys(stylesLookup);\n        var classNames = Object.keys(classesLookup);\n        var classNamesIndexStart = styleProps.length;\n        var totalProps = styleProps.length + classNames.length;\n        // *2 because we are filling for both single and multi style spaces\n        var maxLength = totalProps * 4 /* Size */ * 2 + 8 /* SingleStylesStartPosition */;\n        // we need to fill the array from the start so that we can access\n        // both the multi and the single array positions in the same loop block\n        for (var i = 8 /* SingleStylesStartPosition */; i < maxLength; i++) {\n            context.push(null);\n        }\n        var singleStart = 8 /* SingleStylesStartPosition */;\n        var multiStart = totalProps * 4 /* Size */ + 8 /* SingleStylesStartPosition */;\n        // fill single and multi-level styles\n        for (var i = 0; i < totalProps; i++) {\n            var isClassBased_1 = i >= classNamesIndexStart;\n            var prop = isClassBased_1 ? classNames[i - classNamesIndexStart] : styleProps[i];\n            var indexForInitial = isClassBased_1 ? classesLookup[prop] : stylesLookup[prop];\n            var initialValue = initialStylingValues[indexForInitial];\n            var indexForMulti = i * 4 /* Size */ + multiStart;\n            var indexForSingle = i * 4 /* Size */ + singleStart;\n            var initialFlag = prepareInitialFlag(prop, isClassBased_1, styleSanitizer || null);\n            setFlag(context, indexForSingle, pointers(initialFlag, indexForInitial, indexForMulti));\n            setProp(context, indexForSingle, prop);\n            setValue(context, indexForSingle, null);\n            setPlayerBuilderIndex(context, indexForSingle, 0);\n            var flagForMulti = initialFlag | (initialValue !== null ? 1 /* Dirty */ : 0 /* None */);\n            setFlag(context, indexForMulti, pointers(flagForMulti, indexForInitial, indexForSingle));\n            setProp(context, indexForMulti, prop);\n            setValue(context, indexForMulti, null);\n            setPlayerBuilderIndex(context, indexForMulti, 0);\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        var masterFlag = pointers(0, 0, multiStart) |\n            (onlyProcessSingleClasses ? 16 /* OnlyProcessSingleClasses */ : 0);\n        setFlag(context, 3 /* MasterFlagPosition */, masterFlag);\n        setContextDirty(context, initialStylingValues.length > 1);\n        if (initialStaticClasses) {\n            context[6 /* PreviousOrCachedMultiClassValue */] = initialStaticClasses.join(' ');\n        }\n        return context;\n    }\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyleAndClassBindings` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classesInput The key/value map of CSS class names that will be used for the update.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classesInput, stylesInput) {\n        stylesInput = stylesInput || null;\n        var element = context[5 /* ElementPosition */];\n        var classesPlayerBuilder = classesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(classesInput, element, 1 /* Class */) :\n            null;\n        var stylesPlayerBuilder = stylesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(stylesInput, element, 2 /* Style */) :\n            null;\n        var classesValue = classesPlayerBuilder ?\n            classesInput.value :\n            classesInput;\n        var stylesValue = stylesPlayerBuilder ? stylesInput.value : stylesInput;\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        var ignoreAllClassUpdates = limitToSingleClasses(context) || classesValue === NO_CHANGE ||\n            classesValue === context[6 /* PreviousOrCachedMultiClassValue */];\n        var ignoreAllStyleUpdates = stylesValue === NO_CHANGE || stylesValue === context[7 /* PreviousMultiStyleValue */];\n        if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n            return;\n        context[6 /* PreviousOrCachedMultiClassValue */] = classesValue;\n        context[7 /* PreviousMultiStyleValue */] = stylesValue;\n        var classNames = EMPTY_ARR;\n        var applyAllClasses = false;\n        var playerBuildersAreDirty = false;\n        var classesPlayerBuilderIndex = classesPlayerBuilder ? 1 /* ClassMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        var stylesPlayerBuilderIndex = stylesPlayerBuilder ? 3 /* StyleMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (!ignoreAllClassUpdates) {\n            if (typeof classesValue == 'string') {\n                classNames = classesValue.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n            else {\n                classNames = classesValue ? Object.keys(classesValue) : EMPTY_ARR;\n            }\n        }\n        var classes = (classesValue || EMPTY_OBJ);\n        var styleProps = stylesValue ? Object.keys(stylesValue) : EMPTY_ARR;\n        var styles = stylesValue || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased_2 = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased_2 && !ignoreAllStyleUpdates) || (isClassBased_2 && !ignoreAllClassUpdates);\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (processValue) {\n                var adjustedPropIndex = isClassBased_2 ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased_2 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased_2 ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var playerBuilderIndex = isClassBased_2 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    var flag = getPointers(context, ctxIndex);\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex);\n                    if (hasValueChanged(flag, value, newValue)) {\n                        setValue(context, ctxIndex, newValue);\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        var initialValue = getInitialValue(context, flag);\n                        // there is no point in setting this to dirty if the previously\n                        // rendered value was being referenced by the initial style (or null)\n                        if (hasValueChanged(flag, initialValue, newValue)) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (hasValueChanged(flagToCompare, valueToCompare, newValue)) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            if (hasValueChanged(flagToCompare, initialValue, newValue)) {\n                                setDirty(context, ctxIndex, true);\n                                playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        var newFlag = prepareInitialFlag(newProp, isClassBased_2, getStyleSanitizer(context));\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        insertNewMultiProperty(context, ctxIndex, isClassBased_2, newProp, newFlag, newValue, playerBuilderIndex);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 4 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased_3 = (flag & 2 /* Class */) === 2 /* Class */;\n            var processValue = (!isClassBased_3 && !ignoreAllStyleUpdates) || (isClassBased_3 && !ignoreAllClassUpdates);\n            if (processValue) {\n                var value = getValue(context, ctxIndex);\n                var doRemoveValue = valueExists(value, isClassBased_3);\n                if (doRemoveValue) {\n                    setDirty(context, ctxIndex, true);\n                    setValue(context, ctxIndex, null);\n                    // we keep the player factory the same so that the `nulled` value can\n                    // be instructed into the player because removing a style and/or a class\n                    // is a valid animation player instruction.\n                    var playerBuilderIndex = isClassBased_3 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex);\n                    dirty = true;\n                }\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        var sanitizer = getStyleSanitizer(context);\n        while (propIndex < propLimit) {\n            var isClassBased_4 = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased_4 && !ignoreAllStyleUpdates) || (isClassBased_4 && !ignoreAllClassUpdates);\n            if (processValue) {\n                var adjustedPropIndex = isClassBased_4 ? propIndex - classesStartIndex : propIndex;\n                var prop = isClassBased_4 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var value = isClassBased_4 ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n                var flag = prepareInitialFlag(prop, isClassBased_4, sanitizer) | 1 /* Dirty */;\n                var playerBuilderIndex = isClassBased_4 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                context.push(flag, prop, value, playerBuilderIndex);\n                dirty = true;\n            }\n            propIndex++;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n    }\n    /**\n     * Sets and resolves a single styling property/value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyleAndClassBindings` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param index The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     */\n    function updateStyleProp(context, index, input) {\n        var singleIndex = 8 /* SingleStylesStartPosition */ + index * 4 /* Size */;\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n        // didn't change ... nothing to make a note of\n        if (hasValueChanged(currFlag, currValue, value)) {\n            var isClassBased_5 = (currFlag & 2 /* Class */) === 2 /* Class */;\n            var element = context[5 /* ElementPosition */];\n            var playerBuilder = input instanceof BoundPlayerFactory ?\n                new ClassAndStylePlayerBuilder(input, element, isClassBased_5 ? 1 /* Class */ : 2 /* Style */) :\n                null;\n            var value_1 = (playerBuilder ? input.value : input);\n            var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n            var playerBuildersAreDirty = false;\n            var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n            if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n                var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n                playerBuilderIndex = playerBuilder ? newIndex : 0;\n                setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex);\n                playerBuildersAreDirty = true;\n            }\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value_1);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value_1, isClassBased_5) && valueExists(valueForMulti, isClassBased_5)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n            if (playerBuildersAreDirty) {\n                setContextPlayersDirty(context, true);\n            }\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param index The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, index, addOrRemove) {\n        var adjustedIndex = index + context[4 /* ClassOffsetPosition */];\n        updateStyleProp(context, adjustedIndex, addOrRemove);\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param classesStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param stylesStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @returns number the total amount of players that got queued for animation (if any)\n     */\n    function renderStyleAndClassBindings(context, renderer, rootOrView, isFirstRender, classesStore, stylesStore) {\n        var totalPlayersQueued = 0;\n        if (isContextDirty(context)) {\n            var flushPlayerBuilders = context[3 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n            var native = context[5 /* ElementPosition */];\n            var multiStartIndex = getMultiStartIndex(context);\n            var styleSanitizer = getStyleSanitizer(context);\n            var onlySingleClasses = limitToSingleClasses(context);\n            for (var i = 8 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var flag = getPointers(context, i);\n                    var playerBuilder = getPlayerBuilder(context, i);\n                    var isClassBased_6 = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var readInitialValue = !isClassBased_6 || !onlySingleClasses;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased_6)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    if (!valueExists(valueToApply, isClassBased_6) && readInitialValue) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    // if the first render is true then we do not want to start applying falsy\n                    // values to the DOM element's styling. Otherwise then we know there has\n                    // been a change and even if it's falsy then it's removing something that\n                    // was truthy before.\n                    var doApplyValue = isFirstRender ? valueToApply : true;\n                    if (doApplyValue) {\n                        if (isClassBased_6) {\n                            setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                        }\n                        else {\n                            var sanitizer = (flag & 4 /* Sanitize */) ? styleSanitizer : null;\n                            setStyle(native, prop, valueToApply, renderer, sanitizer, stylesStore, playerBuilder);\n                        }\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            if (flushPlayerBuilders) {\n                var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n                var playerContext = getPlayerContext(context);\n                var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                    var builder = playerContext[i];\n                    var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                    var oldPlayer = playerContext[playerInsertionIndex];\n                    if (builder) {\n                        var player = builder.buildPlayer(oldPlayer, isFirstRender);\n                        if (player !== undefined) {\n                            if (player != null) {\n                                var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                                wasQueued && totalPlayersQueued++;\n                            }\n                            if (oldPlayer) {\n                                oldPlayer.destroy();\n                            }\n                        }\n                    }\n                    else if (oldPlayer) {\n                        // the player builder has been removed ... therefore we should delete the associated\n                        // player\n                        oldPlayer.destroy();\n                    }\n                }\n                setContextPlayersDirty(context, false);\n            }\n            setContextDirty(context, false);\n        }\n        return totalPlayersQueued;\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(prop, value);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(prop, value);\n            }\n        }\n        else if (value) {\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native['style'].setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native['style'].removeProperty(prop);\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store, playerBuilder) {\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(className, add);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(className, add);\n            }\n        }\n        else if (add) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                native['classList'].add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                native['classList'].remove(className);\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBased(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 31 /* BitMask */) | (staticIndex << 5 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 5 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        return context[2 /* InitialStylesPosition */][index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 5 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 5 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 8 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[3 /* MasterFlagPosition */]);\n    }\n    function getStyleSanitizer(context) {\n        return context[1 /* StyleSanitizerPosition */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function hasPlayerBuilderChanged(context, builder, index) {\n        var playerContext = context[0 /* PlayerContext */];\n        if (builder) {\n            if (!playerContext || index === 0) {\n                return true;\n            }\n        }\n        else if (!playerContext) {\n            return false;\n        }\n        return playerContext[index] !== builder;\n    }\n    function setPlayerBuilder(context, builder, insertionIndex) {\n        var playerContext = context[0 /* PlayerContext */] || allocPlayerContext(context);\n        if (insertionIndex > 0) {\n            playerContext[insertionIndex] = builder;\n        }\n        else {\n            insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            playerContext.splice(insertionIndex, 0, builder, null);\n            playerContext[0 /* NonBuilderPlayersStart */] +=\n                2 /* PlayerAndPlayerBuildersTupleSize */;\n        }\n        return insertionIndex;\n    }\n    function setPlayerBuilderIndex(context, index, playerBuilderIndex) {\n        context[index + 3 /* PlayerBuilderIndexOffset */] = playerBuilderIndex;\n    }\n    function getPlayerBuilderIndex(context, index) {\n        return context[index + 3 /* PlayerBuilderIndexOffset */] || 0;\n    }\n    function getPlayerBuilder(context, index) {\n        var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n        if (playerBuilderIndex) {\n            var playerContext = context[0 /* PlayerContext */];\n            if (playerContext) {\n                return playerContext[playerBuilderIndex];\n            }\n        }\n        return null;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 3 /* MasterFlagPosition */);\n    }\n    function limitToSingleClasses(context) {\n        return context[3 /* MasterFlagPosition */] & 16 /* OnlyProcessSingleClasses */;\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 3 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function setContextPlayersDirty(context, isDirtyYes) {\n        if (isDirtyYes) {\n            context[3 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n        }\n        else {\n            context[3 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n        }\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 4 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        setPlayerBuilderIndex(context, indexA, getPlayerBuilderIndex(context, indexB));\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n        setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBased(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value, playerIndex) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, playerIndex);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 4 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n    function prepareInitialFlag(name, isClassBased, sanitizer) {\n        if (isClassBased) {\n            return 2 /* Class */;\n        }\n        else if (sanitizer && sanitizer(name)) {\n            return 4 /* Sanitize */;\n        }\n        return 0 /* None */;\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n    var ClassAndStylePlayerBuilder = /** @class */ (function () {\n        function ClassAndStylePlayerBuilder(factory, _element, _type) {\n            this._element = _element;\n            this._type = _type;\n            this._values = {};\n            this._dirty = false;\n            this._factory = factory;\n        }\n        ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n            if (this._values[prop] !== value) {\n                this._values[prop] = value;\n                this._dirty = true;\n            }\n        };\n        ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer, isFirstRender) {\n            // if no values have been set here then this means the binding didn't\n            // change and therefore the binding values were not updated through\n            // `setValue` which means no new player will be provided.\n            if (this._dirty) {\n                var player = this._factory.fn(this._element, this._type, this._values, isFirstRender, currentPlayer || null);\n                this._values = {};\n                this._dirty = false;\n                return player;\n            }\n            return undefined;\n        };\n        return ClassAndStylePlayerBuilder;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(lView, rf) {\n        var tView = lView[TVIEW];\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = false;\n        setFirstTemplatePass(false);\n        // Dynamically created views must run first only in creation mode. If this is a\n        // creation-only pass, we should not call lifecycle hooks or evaluate bindings.\n        // This will be done in the update-only pass.\n        if (rf !== 1 /* Create */) {\n            var creationMode = getCreationMode();\n            var checkNoChangesMode = getCheckNoChangesMode();\n            if (!checkNoChangesMode) {\n                executeInitHooks(lView, tView, creationMode);\n            }\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            refreshContentQueries(tView);\n            if (!checkNoChangesMode) {\n                executeHooks(lView, tView.contentHooks, tView.contentCheckHooks, creationMode);\n            }\n            setHostBindings(tView, lView);\n        }\n        refreshChildComponents(tView.components, rf);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        if (tView.expandoInstructions) {\n            var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n            setBindingRoot(bindingRootIndex);\n            var currentDirectiveIndex = -1;\n            var currentElementIndex = -1;\n            for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                var instruction = tView.expandoInstructions[i];\n                if (typeof instruction === 'number') {\n                    if (instruction <= 0) {\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\n                        // the current element and directive index.\n                        currentElementIndex = -instruction;\n                        // Injector block and providers are taken into account.\n                        var providerCount = tView.expandoInstructions[++i];\n                        bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                        currentDirectiveIndex = bindingRootIndex;\n                    }\n                    else {\n                        // This is either the injector size (so the binding root can skip over directives\n                        // and get to the first set of host bindings on this node) or the host var count\n                        // (to get to the next set of host bindings on this node).\n                        bindingRootIndex += instruction;\n                    }\n                    setBindingRoot(bindingRootIndex);\n                }\n                else {\n                    // If it's not a number, it's a host binding function that needs to be executed.\n                    if (instruction !== null) {\n                        viewData[BINDING_INDEX] = bindingRootIndex;\n                        instruction(2 /* Update */, readElementValue(viewData[currentDirectiveIndex]), currentElementIndex);\n                    }\n                    currentDirectiveIndex++;\n                }\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx - HEADER_OFFSET, tView.contentQueries[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components, rf) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i], rf);\n            }\n        }\n    }\n    function createLView(parentLView, tView, context, flags, rendererFactory, renderer, sanitizer, injector) {\n        var lView = tView.blueprint.slice();\n        lView[FLAGS] = flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */;\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR] = injector || parentLView && parentLView[INJECTOR] || null;\n        return lView;\n    }\n    function createNodeAtIndex(index, type, native, name, attrs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertLessThan(adjustedIndex, lView.length, \"Slot should have been initialized with null\");\n        lView[adjustedIndex] = native;\n        var tNode = tView.data[adjustedIndex];\n        if (tNode == null) {\n            // TODO(misko): Refactor createTNode so that it does not depend on LView.\n            tNode = tView.data[adjustedIndex] = createTNode(lView, type, adjustedIndex, name, attrs, null);\n        }\n        // Now link ourselves into the tree.\n        // We need this even if tNode exists, otherwise we might end up pointing to unexisting tNodes when\n        // we use i18n (especially with ICU expressions that update the DOM during the update phase).\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        if (tView.firstChild == null) {\n            tView.firstChild = tNode;\n        }\n        setPreviousOrParentTNode(tNode);\n        setIsParent(true);\n        return tNode;\n    }\n    function createViewNode(index, view) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        if (view[TVIEW].node == null) {\n            view[TVIEW].node = createTNode(view, 2 /* View */, index, null, null, null);\n        }\n        return view[HOST_NODE] = view[TVIEW].node;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function allocExpando(view) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n            tView.blueprint.push(null);\n            tView.data.push(null);\n            view.push(null);\n        }\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, renderer, queries, injectorIndex) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var lView = createLView(declarationView, tView, context, 2 /* CheckAlways */);\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        createViewNode(-1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        setIsParent(_isParent);\n        setPreviousOrParentTNode(_previousOrParentTNode);\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context, rf) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var oldView;\n        if (viewToRender[FLAGS] & 64 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(getRootContext(viewToRender));\n        }\n        else {\n            try {\n                setIsParent(true);\n                setPreviousOrParentTNode(null);\n                oldView = enterView(viewToRender, viewToRender[HOST_NODE]);\n                namespaceHTML();\n                tView.template(rf, context);\n                if (rf & 2 /* Update */) {\n                    refreshDescendantViews(viewToRender, null);\n                }\n                else {\n                    // This must be set to false immediately after the first creation run because in an\n                    // ngFor loop, all the views will be created together before update mode runs and turns\n                    // off firstTemplatePass. If we don't set it here, instances will perform directive\n                    // matching, etc again and again.\n                    viewToRender[TVIEW].firstTemplatePass = false;\n                    setFirstTemplatePass(false);\n                }\n            }\n            finally {\n                // renderEmbeddedTemplate() is called twice, once for creation only and then once for\n                // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n                var isCreationOnly = (rf & 1 /* Create */) === 1 /* Create */;\n                leaveView(oldView, isCreationOnly);\n                setIsParent(_isParent);\n                setPreviousOrParentTNode(_previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n    function renderComponentOrTemplate(hostView, componentOrContext, rf, templateFn) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        try {\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (templateFn) {\n                namespaceHTML();\n                templateFn(rf || getRenderFlags(hostView), componentOrContext);\n            }\n            refreshDescendantViews(hostView, rf);\n        }\n        finally {\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. By default, the update block is run with the\n     * creation block when the view is in creation mode. Otherwise, the update block is run\n     * alone.\n     *\n     * Dynamically created views do NOT use this configuration (update block and create block are\n     * always run separately).\n     */\n    function getRenderFlags(view) {\n        return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, tagName, attrs || null);\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        attachPatchData(native, lView);\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n        }\n        queueLifecycleHooks(tView, previousOrParentTNode);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n        if (attrs) {\n            setUpAttributes(native, attrs);\n        }\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || getLView()[RENDERER];\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, viewData, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getFirstTemplatePass()) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, viewData, findDirectiveMatches(tView, viewData, previousOrParentTNode), previousOrParentTNode, localRefs || null);\n        }\n        instantiateAllDirectives(tView, viewData, previousOrParentTNode);\n        invokeDirectivesHostBindings(tView, viewData, previousOrParentTNode);\n        saveResolvedLocalsInData(viewData, previousOrParentTNode, localRefExtractor);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData =\n                createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice(),\n            childIndex: -1,\n            bindingStartIndex: bindingStartIndex,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            pipeDestroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            firstChild: null,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[CONTAINER_INDEX] = -1;\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function setUpAttributes(native, attrs) {\n        var renderer = getLView()[RENDERER];\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n                i += 2;\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (attrName === 0 /* NamespaceURI */) {\n                    // Namespaced attributes\n                    var namespaceURI = attrs[i + 1];\n                    var attrName_1 = attrs[i + 2];\n                    var attrVal = attrs[i + 3];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                    i += 4;\n                }\n                else {\n                    // Standard attributes\n                    var attrVal = attrs[i + 1];\n                    if (isAnimationProp(attrName)) {\n                        if (isProc) {\n                            renderer.setProperty(native, attrName, attrVal);\n                        }\n                    }\n                    else {\n                        isProc ?\n                            renderer\n                                .setAttribute(native, attrName, attrVal) :\n                            native.setAttribute(attrName, attrVal);\n                    }\n                    i += 2;\n                }\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener.\n     */\n    function listener(eventName, listenerFn, useCapture) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var tView = lView[TVIEW];\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            var renderer = lView[RENDERER];\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var useCaptureOrSubIdx = useCapture;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                var cleanupFn = renderer.listen(native, eventName, listenerFn);\n                lCleanup.push(listenerFn, cleanupFn);\n                useCaptureOrSubIdx = lCleanupIndex + 1;\n            }\n            else {\n                var wrappedListener = wrapListenerWithPreventDefault(listenerFn);\n                native.addEventListener(eventName, wrappedListener, useCapture);\n                lCleanup.push(wrappedListener);\n            }\n            tCleanup && tCleanup.push(eventName, tNode.index, lCleanupIndex, useCaptureOrSubIdx);\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var props;\n        if (outputs && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 2) {\n                    ngDevMode && assertDataInRange(lView, props[i]);\n                    var subscription = lView[props[i]][props[i + 1]].subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n        }\n        queueLifecycleHooks(getLView()[TVIEW], previousOrParentTNode);\n        decreaseElementDepthCount();\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            var renderer = lView[RENDERER];\n            var element_1 = getNativeByIndex(index, lView);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1, name) :\n                    element_1.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1, name, strValue) :\n                    element_1.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     */\n    function elementProperty(index, propName, value, sanitizer, nativeOnly) {\n        if (value === NO_CHANGE)\n            return;\n        var lView = getLView();\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData;\n        var dataValue;\n        if (!nativeOnly && (inputData = initializeTNodeInputs(tNode)) &&\n            (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */) {\n                    setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n                }\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            var renderer = lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value) : value;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(lView, type, adjustedIndex, tagName, attrs, tViews) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && ngDevMode.tNode++;\n        var parent = getIsParent() ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && lView && parent !== lView[HOST_NODE];\n        var tParent = parentInSameView ? parent : null;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            directiveStart: -1,\n            directiveEnd: -1,\n            flags: 0,\n            providerIndexes: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: tParent,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(lView, inputs[i]);\n            lView[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    function setNgReflectProperties(lView, element, type, inputs, value) {\n        var _a;\n        for (var i = 0; i < inputs.length; i += 2) {\n            var renderer = lView[RENDERER];\n            var attrName = normalizeDebugBindingName(inputs[i + 1]);\n            var debugValue = normalizeDebugBindingValue(value);\n            if (type === 3 /* Element */) {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n            else if (value !== undefined) {\n                var value_1 = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setValue(element, value_1);\n                }\n                else {\n                    element.textContent = value_1;\n                }\n            }\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param tNodeFlags node flags\n     * @param direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNode, direction) {\n        var tView = getLView()[TVIEW];\n        var propStore = null;\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (end > start) {\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Add or remove a class in a `classList` on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case\n     *\n     * @param index The index of the element to update in the data array\n     * @param classIndex Index of class to toggle. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value A value indicating if a given class should be added or removed.\n     * @param directive the ref to the directive that is attempting to change styling.\n     */\n    function elementClassProp(index, classIndex, value, directive) {\n        if (directive != undefined) {\n            return hackImplementationOfElementClassProp(index, classIndex, value, directive); // proper supported in next PR\n        }\n        var val = (value instanceof BoundPlayerFactory) ? value : (!!value);\n        updateClassProp(getStylingContext(index + HEADER_OFFSET, getLView()), classIndex, val);\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to apply all styling\n     * (e.g. `style=\"...\"`) values to the element. This is also where the provided index\n     * value is allocated for the styling details for its corresponding element (the element\n     * index is the previous index value from this one).\n     *\n     * (Note this function calls `elementStylingApply` immediately when called.)\n     *\n     *\n     * @param index Index value which will be allocated to store styling data for the element.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classDeclarations A key/value array of CSS classes that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any classes placed on the element by multiple (`[class]`) or singular (`[class.named]`)\n     *   bindings. If a class binding changes its value to a falsy value then the matching initial\n     *   class value that are passed in here will be applied to the element (if matched).\n     * @param styleDeclarations A key/value array of CSS styles that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any styles placed on the element by multiple (`[style]`) or singular (`[style.prop]`)\n     *   bindings. If a style binding changes its value to null then the initial styling\n     *   values that are passed in here will be applied to the element (if matched).\n     * @param styleSanitizer An optional sanitizer function that will be used (if provided)\n     *   to sanitize the any CSS property values that are applied to the element (during rendering).\n     * @param directive the ref to the directive that is attempting to change styling.\n     */\n    function elementStyling(classDeclarations, styleDeclarations, styleSanitizer, directive) {\n        if (directive != undefined) {\n            getCreationMode() &&\n                hackImplementationOfElementStyling(classDeclarations || null, styleDeclarations || null, styleSanitizer || null, directive); // supported in next PR\n            return;\n        }\n        var tNode = getPreviousOrParentTNode();\n        var inputData = initializeTNodeInputs(tNode);\n        if (!tNode.stylingTemplate) {\n            var hasClassInput = inputData && inputData.hasOwnProperty('class') ? true : false;\n            if (hasClassInput) {\n                tNode.flags |= 8 /* hasClassInput */;\n            }\n            // initialize the styling template.\n            tNode.stylingTemplate = createStylingContextTemplate(classDeclarations, styleDeclarations, styleSanitizer, hasClassInput);\n        }\n        if (styleDeclarations && styleDeclarations.length ||\n            classDeclarations && classDeclarations.length) {\n            var index = tNode.index;\n            if (delegateToClassInput(tNode)) {\n                var lView = getLView();\n                var stylingContext = getStylingContext(index, lView);\n                var initialClasses = stylingContext[6 /* PreviousOrCachedMultiClassValue */];\n                setInputsForProperty(lView, tNode.inputs['class'], initialClasses);\n            }\n            elementStylingApply(index - HEADER_OFFSET);\n        }\n    }\n    /**\n     * Apply all styling values to the element which have been queued by any styling instructions.\n     *\n     * This instruction is meant to be run once one or more `elementStyle` and/or `elementStyleProp`\n     * have been issued against the element. This function will also determine if any styles have\n     * changed and will then skip the operation if there is nothing new to render.\n     *\n     * Once called then all queued styles will be flushed.\n     *\n     * @param index Index of the element's styling storage that will be rendered.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param directive the ref to the directive that is attempting to change styling.\n     */\n    function elementStylingApply(index, directive) {\n        if (directive != undefined) {\n            return hackImplementationOfElementStylingApply(index, directive); // supported in next PR\n        }\n        var lView = getLView();\n        var isFirstRender = (lView[FLAGS] & 1 /* CreationMode */) !== 0;\n        var totalPlayersQueued = renderStyleAndClassBindings(getStylingContext(index + HEADER_OFFSET, lView), lView[RENDERER], lView, isFirstRender);\n        if (totalPlayersQueued > 0) {\n            var rootContext = getRootContext(lView);\n            scheduleTick(rootContext, 2 /* FlushPlayers */);\n        }\n    }\n    /**\n     * Queue a given style to be rendered on an Element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param styleIndex Index of the style property on this element. (Monotonically increasing.)\n     * @param value New value to write (null to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     * @param directive the ref to the directive that is attempting to change styling.\n     */\n    function elementStyleProp(index, styleIndex, value, suffix, directive) {\n        var valueToAdd = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = stringify$1(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        if (directive != undefined) {\n            hackImplementationOfElementStyleProp(index, styleIndex, valueToAdd, suffix, directive);\n        }\n        else {\n            updateStyleProp(getStylingContext(index + HEADER_OFFSET, getLView()), styleIndex, valueToAdd);\n        }\n    }\n    /**\n     * Queue a key/value map of styles to be rendered on an Element.\n     *\n     * This instruction is meant to handle the `[style]=\"exp\"` usage. When styles are applied to\n     * the Element they will then be placed with respect to any styles set with `elementStyleProp`.\n     * If any styles are set to `null` then they will be removed from the element (unless the same\n     * style properties have been assigned to the element during creation using `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     * @param directive the ref to the directive that is attempting to change styling.\n     */\n    function elementStylingMap(index, classes, styles, directive) {\n        if (directive != undefined)\n            return hackImplementationOfElementStylingMap(index, classes, styles, directive); // supported in next PR\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var stylingContext = getStylingContext(index + HEADER_OFFSET, lView);\n        if (delegateToClassInput(tNode) && classes !== NO_CHANGE) {\n            var initialClasses = stylingContext[6 /* PreviousOrCachedMultiClassValue */];\n            var classInputVal = (initialClasses.length ? (initialClasses + ' ') : '') + classes;\n            setInputsForProperty(lView, tNode.inputs['class'], classInputVal);\n        }\n        updateStylingMap(stylingContext, classes, styles);\n    }\n    function hackImplementationOfElementStyling(classDeclarations, styleDeclarations, styleSanitizer, directive) {\n        var node = getNativeByTNode(getPreviousOrParentTNode(), getLView());\n        ngDevMode && assertDefined(node, 'expecting parent DOM node');\n        var hostStylingHackMap = (node.hostStylingHack || (node.hostStylingHack = new Map()));\n        var squashedClassDeclarations = hackSquashDeclaration(classDeclarations);\n        hostStylingHackMap.set(directive, {\n            classDeclarations: squashedClassDeclarations,\n            styleDeclarations: hackSquashDeclaration(styleDeclarations), styleSanitizer: styleSanitizer\n        });\n        hackSetStaticClasses(node, squashedClassDeclarations);\n    }\n    function hackSetStaticClasses(node, classDeclarations) {\n        // Static classes need to be set here because static classes don't generate\n        // elementClassProp instructions.\n        var lView = getLView();\n        var staticClassStartIndex = classDeclarations.indexOf(1 /* VALUES_MODE */) + 1;\n        var renderer = lView[RENDERER];\n        for (var i = staticClassStartIndex; i < classDeclarations.length; i += 2) {\n            var className = classDeclarations[i];\n            var value = classDeclarations[i + 1];\n            // if value is true, then this is a static class and we should set it now.\n            // class bindings are set separately in elementClassProp.\n            if (value === true) {\n                if (isProceduralRenderer(renderer)) {\n                    renderer.addClass(node, className);\n                }\n                else {\n                    var classList = node.classList;\n                    classList.add(className);\n                }\n            }\n        }\n    }\n    function hackSquashDeclaration(declarations) {\n        // assume the array is correct. This should be fine for View Engine compatibility.\n        return declarations || [];\n    }\n    function hackImplementationOfElementClassProp(index, classIndex, value, directive) {\n        var lView = getLView();\n        var node = getNativeByIndex(index, lView);\n        ngDevMode && assertDefined(node, 'could not locate node');\n        var hostStylingHack = node.hostStylingHack.get(directive);\n        var className = hostStylingHack.classDeclarations[classIndex];\n        var renderer = lView[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            value ? renderer.addClass(node, className) : renderer.removeClass(node, className);\n        }\n        else {\n            var classList = node.classList;\n            value ? classList.add(className) : classList.remove(className);\n        }\n    }\n    function hackImplementationOfElementStylingApply(index, directive) {\n        // Do nothing because the hack implementation is eager.\n    }\n    function hackImplementationOfElementStyleProp(index, styleIndex, value, suffix, directive) {\n        var lView = getLView();\n        var node = getNativeByIndex(index, lView);\n        ngDevMode && assertDefined(node, 'could not locate node');\n        var hostStylingHack = node.hostStylingHack.get(directive);\n        var styleName = hostStylingHack.styleDeclarations[styleIndex];\n        var renderer = lView[RENDERER];\n        setStyle(node, styleName, value, renderer, null);\n    }\n    function hackImplementationOfElementStylingMap(index, classes, styles, directive) {\n        throw new Error('unimplemented. Should not be needed by ViewEngine compatibility');\n    }\n    /* END OF HACK BLOCK */\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, lView[RENDERER]);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        setIsParent(false);\n        appendChild(textNative, tNode, lView);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n            var element_2 = getNativeByIndex(index, lView);\n            ngDevMode && assertDefined(element_2, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            var renderer = lView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.setValue(element_2, stringify$1(value)) :\n                element_2.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive, def);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, viewData, def, def.factory);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                queueInitHooks(directiveDefIdx, def.onInit, def.doCheck, tView);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!getFirstTemplatePass() && start < end) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, directive, def, i);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = getFirstTemplatePass();\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            var directive = viewData[i];\n            if (def.hostBindings) {\n                var previousExpandoLength = expando.length;\n                setCurrentDirectiveDef(def);\n                def.hostBindings(1 /* Create */, directive, tNode.index - HEADER_OFFSET);\n                setCurrentDirectiveDef(null);\n                // `hostBindings` function may or may not contain `allocHostVars` call\n                // (e.g. it may not if it only contains host listeners), so we need to check whether\n                // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n                // expando block, to make sure we execute it for DI cycle\n                if (previousExpandoLength === expando.length && firstTemplatePass) {\n                    expando.push(def.hostBindings);\n                }\n            }\n            else if (firstTemplatePass) {\n                expando.push(null);\n            }\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n    * On the first template pass, we need to reserve space for host binding values\n    * after directives are matched (so all directives are saved, then bindings).\n    * Because we are updating the blueprint, we only need to do this once.\n    */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(viewData, directive, def, directiveDefIdx) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        postProcessBaseDirective(viewData, previousOrParentTNode, directive, def);\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, directive, def.inputs, previousOrParentTNode);\n        }\n        if (def.contentQueries) {\n            def.contentQueries(directiveDefIdx);\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, previousOrParentTNode, directive, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        attachPatchData(directive, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n        // TODO(misko): setUpAttributes should be a feature for better treeshakability.\n        if (def.attributes != null && previousOrParentTNode.type == 3 /* Element */) {\n            setUpAttributes(native, def.attributes);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), viewData), viewData, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 1 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 1 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(previousOrParentTNode) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        var tView = getLView()[TVIEW];\n        (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n    */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'expected firstTemplatePass to be true');\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 1 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = flags & 1 /* isComponent */;\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, previousOrParentTNode, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, previousOrParentTNode.index, createLView(lView, tView, null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, rendererFactory, lView[RENDERER_FACTORY].createRenderer(native, def)));\n        componentView[HOST_NODE] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        componentView[HOST] = lView[previousOrParentTNode.index];\n        lView[previousOrParentTNode.index] = componentView;\n        if (getFirstTemplatePass()) {\n            queueComponentIndexForCheck(previousOrParentTNode);\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, hostTNode, currentView, native, isForViewContainerRef) {\n        return [\n            isForViewContainerRef ? -1 : 0,\n            [],\n            currentView,\n            null,\n            null,\n            hostNative,\n            native,\n            getRenderParent(hostTNode, currentView) // renderParent\n        ];\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // TODO: consider a separate node type for templates\n        var tNode = containerInternal(index, tagName || null, attrs || null);\n        if (getFirstTemplatePass()) {\n            tNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor);\n        var currentQueries = lView[QUERIES];\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        attachPatchData(native, lView);\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n        }\n        queueLifecycleHooks(tView, tNode);\n        setIsParent(false);\n    }\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var tNode = containerInternal(index, null, null);\n        getFirstTemplatePass() && (tNode.tViews = []);\n        setIsParent(false);\n    }\n    function containerInternal(index, tagName, attrs) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n        var lContainer = lView[adjustedIndex] =\n            createLContainer(lView[adjustedIndex], tNode, lView, comment);\n        appendChild(comment, tNode, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, index + HEADER_OFFSET, lContainer);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = currentQueries.container();\n        }\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = loadInternal(tView.data, index);\n        setPreviousOrParentTNode(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setIsParent(true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        if (!getCheckNoChangesMode()) {\n            // We need to execute init hooks here so ngOnInit hooks are called in top level views\n            // before they are called in embedded views (for backwards compatibility).\n            executeInitHooks(lView, tView, getCreationMode());\n        }\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, previousOrParentTNode, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        for (var current = getLViewChild(lView); current !== null; current = current[NEXT]) {\n            // Note: current can be an LView or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LView\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var dynamicViewData = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT], 2 /* Update */);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param tContainerNode to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, tContainerNode, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, tContainerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, containerTNode, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent(true);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 2 /* CheckAlways */);\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            createViewNode(viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (getCreationMode()) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lView, lContainer[ACTIVE_INDEX], -1);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return getRenderFlags(viewToRender);\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        var lView = getLView();\n        var viewHost = lView[HOST_NODE];\n        refreshDescendantViews(lView, null);\n        leaveView(lView[PARENT]);\n        setPreviousOrParentTNode(viewHost);\n        setIsParent(false);\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LView[] (adjusted for HEADER_OFFSET)\n     * @param rf  The render flags that should be used to process this template\n     */\n    function componentRefresh(adjustedElementIndex, rf) {\n        var lView = getLView();\n        ngDevMode && assertDataInRange(lView, adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].data[adjustedElementIndex], 3 /* Element */);\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n            syncViewWithBlueprint(hostView);\n            detectChangesInternal(hostView, hostView[CONTEXT], rf);\n        }\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentView(getLView())[HOST_NODE];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                    componentChild.next = null;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsParent(false);\n        // re-distribution of projectable nodes is stored on a component's view level\n        var componentView = findComponentView(lView);\n        var componentNode = componentView[HOST_NODE];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        var projectedView = componentView[PARENT];\n        var projectionNodeIndex = -1;\n        while (nodeToProject) {\n            if (nodeToProject.type === 1 /* Projection */) {\n                // This node is re-projected, so we must go up the tree to get its projected nodes.\n                var currentComponentView = findComponentView(projectedView);\n                var currentComponentHost = currentComponentView[HOST_NODE];\n                var firstProjectedNode = currentComponentHost.projection[nodeToProject.projection];\n                if (firstProjectedNode) {\n                    projectionNodeStack$1[++projectionNodeIndex] = nodeToProject;\n                    projectionNodeStack$1[++projectionNodeIndex] = projectedView;\n                    nodeToProject = firstProjectedNode;\n                    projectedView = currentComponentView[PARENT];\n                    continue;\n                }\n            }\n            else {\n                // This flag must be set now or we won't know that this node is projected\n                // if the nodes are inserted into a container later.\n                nodeToProject.flags |= 2 /* isProjected */;\n                appendProjectedNode(nodeToProject, tProjectionNode, lView, projectedView);\n            }\n            // If we are finished with a list of re-projected nodes, we need to get\n            // back to the root projection node that was re-projected.\n            if (nodeToProject.next === null && projectedView !== componentView[PARENT]) {\n                projectedView = projectionNodeStack$1[projectionNodeIndex--];\n                nodeToProject = projectionNodeStack$1[projectionNodeIndex--];\n            }\n            nodeToProject = nodeToProject.next;\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param state The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, adjustedHostIndex, state) {\n        var tView = lView[TVIEW];\n        var firstTemplatePass = getFirstTemplatePass();\n        if (lView[TAIL]) {\n            lView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        lView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 2 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 4 /* Dirty */;\n        }\n    }\n    /** Wraps an event listener with preventDefault behavior. */\n    function wrapListenerWithPreventDefault(listenerFn) {\n        return function wrapListenerIn_preventDefault(e) {\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /** Marks current view and all ancestors dirty */\n    function markViewDirty(lView) {\n        while (lView && !(lView[FLAGS] & 64 /* IsRoot */)) {\n            lView[FLAGS] |= 4 /* Dirty */;\n            lView = lView[PARENT];\n        }\n        lView[FLAGS] |= 4 /* Dirty */;\n        ngDevMode && assertDefined(lView[CONTEXT], 'rootContext should be defined');\n        var rootContext = lView[CONTEXT];\n        scheduleTick(rootContext, 1 /* DetectChanges */);\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLView(rootComponent), rootComponent, 2 /* Update */);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        detectChangesInternal(getComponentViewByInstance(component), component, null);\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChanges(component);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function detectChangesInternal(hostView, component, rf) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        var templateFn = hostTView.template;\n        var viewQuery = hostTView.viewQuery;\n        try {\n            namespaceHTML();\n            createViewQuery(viewQuery, rf, hostView[FLAGS], component);\n            templateFn(rf || getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView, rf);\n            updateViewQuery(viewQuery, hostView[FLAGS], component);\n        }\n        finally {\n            leaveView(oldView, rf === 1 /* Create */);\n        }\n    }\n    function createViewQuery(viewQuery, renderFlags, viewFlags, component) {\n        if (viewQuery && (renderFlags === 1 /* Create */ ||\n            (renderFlags === null && (viewFlags & 1 /* CreationMode */)))) {\n            viewQuery(1 /* Create */, component);\n        }\n    }\n    function updateViewQuery(viewQuery, flags, component) {\n        if (viewQuery && flags & 2 /* Update */) {\n            viewQuery(2 /* Update */, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        markViewDirty(getComponentViewByInstance(component));\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        var lView = getLView();\n        return bindingUpdated(lView, lView[BINDING_INDEX]++, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     */\n    function allocHostVars(count) {\n        if (!getFirstTemplatePass())\n            return;\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(lView, bindingIndex++, values[i]) && (different = true);\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated(lView, lView[BINDING_INDEX], v0);\n        lView[BINDING_INDEX] += 1;\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated2(lView, lView[BINDING_INDEX], v0, v1);\n        lView[BINDING_INDEX] += 2;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated3(lView, lView[BINDING_INDEX], v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated4(lView, lView[BINDING_INDEX], v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        var contextLView = getContextLView();\n        return loadInternal(contextLView, index);\n    }\n    function loadQueryList(queryListIdx) {\n        var lView = getLView();\n        ngDevMode &&\n            assertDefined(lView[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        ngDevMode && assertDataInRange(lView[CONTENT_QUERIES], queryListIdx);\n        return lView[CONTENT_QUERIES][queryListIdx];\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(getLView(), index);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), getLView(), token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     */\n    function injectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     */\n    function registerContentQuery(queryList, currentDirectiveIndex) {\n        var viewData = getLView();\n        var tView = viewData[TVIEW];\n        var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n        if (getFirstTemplatePass()) {\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n            if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n            }\n        }\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode) {\n            if (tNode.inputs === undefined) {\n                // mark inputs as checked\n                tNode.inputs = generatePropertyAliases(tNode, 0 /* Input */);\n            }\n            return tNode.inputs;\n        }\n        return null;\n    }\n    function delegateToClassInput(tNode) {\n        return tNode.flags & 8 /* hasClassInput */;\n    }\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return getLView();\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds a player to an element, directive or component instance that will later be\n     * animated once change detection has passed.\n     *\n     * When a player is added to a reference it will stay active until `player.destroy()`\n     * is called. Once called then the player will be removed from the active players\n     * present on the associated ref instance.\n     *\n     * To get a list of all the active players on an element see [getPlayers].\n     *\n     * @param ref The element, directive or component that the player will be placed on.\n     * @param player The player that will be triggered to play once change detection has run.\n     */\n    function addPlayer(ref, player) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return;\n        }\n        var element$$1 = context.native;\n        var lView = context.lView;\n        var playerContext = getOrCreatePlayerContext(element$$1, context);\n        var rootContext = getRootContext$1(lView);\n        addPlayerInternal(playerContext, rootContext, element$$1, player, 0, ref);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n    /**\n     * Returns a list of all the active players present on the provided ref instance (which can\n     * be an instance of a directive, component or element).\n     *\n     * This function will only return players that have been added to the ref instance using\n     * `addPlayer` or any players that are active through any template styling bindings\n     * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n     *\n     * @publicApi\n     */\n    function getPlayers(ref) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return [];\n        }\n        var stylingContext = getStylingContext(context.nodeIndex, context.lView);\n        var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n        return playerContext ? getPlayersInternal(playerContext) : [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    /*\n     * Publishes a collection of default debug tools onto `window._ng_`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    var _published = false;\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getPlayers', getPlayers);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ngDevMode` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n            2 /* CheckAlways */ | 64 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLView(null, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            refreshDescendantViews(rootView, null);\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        var componentView = createLView(rootView, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, rendererFactory, renderer, sanitizer);\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n            tNode.flags = 1 /* isComponent */;\n            initNodeFlags(tNode, rootView.length, 1);\n            queueComponentIndexForCheck(tNode);\n        }\n        // Store component view at node index, with node as the HOST\n        componentView[HOST] = rootView[HEADER_OFFSET];\n        componentView[HOST_NODE] = tNode;\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var rootTNode = getPreviousOrParentTNode();\n            setCurrentDirectiveDef(componentDef);\n            componentDef.hostBindings(1 /* Create */, component, rootTNode.index - HEADER_OFFSET);\n            setCurrentDirectiveDef(null);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        queueInitHooks(dirIndex, def.onInit, def.doCheck, rootTView);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        queueLifecycleHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext$2(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext$2(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determines if a definition is a {@link ComponentDef} or a {@link DirectiveDef}\n     * @param definition The definition to examine\n     */\n    function isComponentDef$1(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef$1(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (rf, ctx, elementIndex) {\n                            superHostBindings_1(rf, ctx, elementIndex);\n                            prevHostBindings_1(rf, ctx, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                if (isComponentDef$1(definition) && isComponentDef$1(superDef)) {\n                    var prevViewQuery_1 = definition.viewQuery;\n                    var superViewQuery_1 = superDef.viewQuery;\n                    if (superViewQuery_1) {\n                        if (prevViewQuery_1) {\n                            definition.viewQuery = function (rf, ctx) {\n                                superViewQuery_1(rf, ctx);\n                                prevViewQuery_1(rf, ctx);\n                            };\n                        }\n                        else {\n                            definition.viewQuery = superViewQuery_1;\n                        }\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function (dirIndex) {\n                            superContentQueries_1(dirIndex);\n                            prevContentQueries_1(dirIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge Content Queries Refresh\n                var prevContentQueriesRefresh_1 = definition.contentQueriesRefresh;\n                var superContentQueriesRefresh_1 = superDef.contentQueriesRefresh;\n                if (superContentQueriesRefresh_1) {\n                    if (prevContentQueriesRefresh_1) {\n                        definition.contentQueriesRefresh = function (directiveIndex, queryIndex) {\n                            superContentQueriesRefresh_1(directiveIndex, queryIndex);\n                            prevContentQueriesRefresh_1(directiveIndex, queryIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueriesRefresh = superContentQueriesRefresh_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature.ngInherit) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                return \"break\";\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.afterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.afterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.afterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                    definition.onInit = definition.onInit || superPrototype.onInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature(definition) {\n        var publicToDeclaredInputs = definition.declaredInputs;\n        var publicToMinifiedInputs = definition.inputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (publicName) {\n            if (publicToDeclaredInputs.hasOwnProperty(publicName)) {\n                var minifiedKey = publicToMinifiedInputs[publicName];\n                var declaredKey_1 = publicToDeclaredInputs[publicName];\n                var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n                // Walk the prototype chain to see if we find a property descriptor\n                // That way we can honor setters and getters that were inherited.\n                var originalProperty = undefined;\n                var checkProto = proto;\n                while (!originalProperty && checkProto &&\n                    Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                    originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                    checkProto = Object.getPrototypeOf(checkProto);\n                }\n                var getter = originalProperty && originalProperty.get;\n                var setter_1 = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minifiedKey, {\n                    get: getter ||\n                        (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            simpleChanges = {};\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                        var currentChange = simpleChanges[declaredKey_1];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[declaredKey_1] =\n                                new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey_1] = value;\n                        }\n                        if (setter_1)\n                            setter_1.call(this, value);\n                    },\n                    // Make the property configurable in dev mode to allow overriding in tests\n                    configurable: !!ngDevMode\n                });\n            }\n        };\n        for (var publicName in publicToDeclaredInputs) {\n            _loop_1(publicName);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    }\n    // This option ensures that the ngOnChanges lifecycle hook will be inherited\n    // from superclasses (in InheritDefinitionFeature).\n    NgOnChangesFeature.ngInherit = true;\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            if (delegateHook)\n                delegateHook.apply(this);\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR$1 = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR$1); },\n        });\n        /** @internal */\n        Injector.__NG_ELEMENT_ID__ = function () { return SWITCH_INJECTOR_FACTORY(); };\n        return Injector;\n    }());\n    var SWITCH_INJECTOR_FACTORY__POST_R3__ = function () {\n        return injectInjector();\n    };\n    var SWITCH_INJECTOR_FACTORY__PRE_R3__ = noop;\n    var SWITCH_INJECTOR_FACTORY = SWITCH_INJECTOR_FACTORY__PRE_R3__;\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY$1 = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR$1 = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR$1; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY$1, value: this, useNew: false });\n            records.set(INJECTOR$1, { token: INJECTOR$1, fn: IDENT, deps: EMPTY$1, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY$1;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY$1\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY$1;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY$1) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY$1;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR$1 : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY$1;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$1 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            var dedupStack = [];\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR$1, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                return nextInjector.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents, dedupStack); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            var ngModuleType = defOrWrappedDef.ngModule;\n            deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModuleType, providers); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$1) {\n                throw new Error(\"Cannot instantiate cyclic dependency! \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$1;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            var injectorDef = getInjectorDef(token);\n            if (injectorDef !== null) {\n                return injectorDef.factory;\n            }\n            else if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            else if (token instanceof Function) {\n                var paramLength = token.length;\n                if (paramLength > 0) {\n                    var args = new Array(paramLength).fill('?');\n                    throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n                }\n                return function () { return new token(); };\n            }\n            throw new Error('unreachable');\n        }\n        return injectableDef.factory;\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    var ngModuleDetail = '';\n                    if (ngModuleType && providers) {\n                        var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n                        ngModuleDetail =\n                            \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n                    }\n                    throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return value && typeof value == 'object' && USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent$$1 = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent$$1, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent$$1, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, directiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent$$1, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent$$1);\n                }\n                if (!isViewProvider && isComponent$$1 && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent$$1, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, directiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent$$1 && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        text(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        textBinding(0, bind(ctx.greeter.greet()));\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     *\n     * @param definition\n     */\n    function ProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver = function (def) {\n                return providersResolver(def, providers, viewProviders);\n            };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[HOST_NODE];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~8 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 8 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () {\n            var rendererFactory = this._lView[RENDERER_FACTORY];\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            detectChangesInternal(this._lView, this.context, null);\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n        };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = this._lView[PARENT][this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            result.push(getNativeByTNode(tNodeChild, lView));\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _renderer, _queries, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._renderer = _renderer;\n                    _this._queries = _queries;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container$$1, hostTNode, hostView, index) {\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._renderer, this._queries, this._injectorIndex);\n                    if (container$$1) {\n                        insertView(lView, container$$1, hostView, index, hostTNode.index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context, 1 /* Create */);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[HOST_NODE];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            var hostContainer = hostView[hostTNode.index];\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, getLView()[RENDERER], hostContainer[QUERIES], hostTNode.injectorIndex);\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NullInjector() :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this._lContainer[VIEWS].length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer[VIEWS].length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, this._hostTNode, this._hostView, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    insertView(lView, this._lContainer, this._hostView, adjustedIdx, this._hostTNode.index);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    this.detach(index);\n                    this.insert(viewRef, this._adjustIndex(newIndex));\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, this._hostTNode, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx, !!this._hostTNode.detached);\n                    var wasDetached = this._viewRefs.splice(adjustedIdx, 1)[0] != null;\n                    return wasDetached ? new ViewRef(view, view[CONTEXT], view[CONTAINER_INDEX]) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this._lContainer[VIEWS].length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostTNode, hostView, commentNode, true);\n            addToViewTree(hostView, hostTNode.index, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), getLView(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.directiveStart;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getLView());\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /** @internal */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /** @internal */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('7.2.0-rc.0+29.sha-6cc864a');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver$$1(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory$$1(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors = [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            var rootFlags = this.componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n                2 /* CheckAlways */ | 64 /* IsRoot */;\n            var rootContext = !isInternalRootView ? rootViewInjector.get(ROOT_CONTEXT) : createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootLView = createLView(null, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                // Transform the arrays of native nodes into a structure that can be consumed by the\n                // projection instruction. This is needed to support the reprojection of these nodes.\n                if (projectableNodes) {\n                    var index = 0;\n                    var tView = rootLView[TVIEW];\n                    var projection$$1 = tElementNode.projection = [];\n                    for (var i = 0; i < projectableNodes.length; i++) {\n                        var nodeList = projectableNodes[i];\n                        var firstTNode = null;\n                        var previousTNode = null;\n                        for (var j = 0; j < nodeList.length; j++) {\n                            if (tView.firstTemplatePass) {\n                                // For dynamically created components such as ComponentRef, we create a new TView for\n                                // each insert. This is not ideal since we should be sharing the TViews.\n                                // Also the logic here should be shared with `component.ts`'s `renderComponent`\n                                // method.\n                                tView.expandoStartIndex++;\n                                tView.blueprint.splice(++index + HEADER_OFFSET, 0, null);\n                                tView.data.splice(index + HEADER_OFFSET, 0, null);\n                                rootLView.splice(index + HEADER_OFFSET, 0, null);\n                            }\n                            var tNode = createNodeAtIndex(index, 3 /* Element */, nodeList[j], null, null);\n                            previousTNode ? (previousTNode.next = tNode) : (firstTNode = tNode);\n                            previousTNode = tNode;\n                        }\n                        projection$$1.push(firstTNode);\n                    }\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                addToViewTree(rootLView, HEADER_OFFSET, componentView);\n                refreshDescendantViews(rootLView, 1 /* Create */);\n            }\n            finally {\n                leaveView(oldLView, true);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = createViewNode(-1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef$$1.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n            this.hostView.destroy();\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (e) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (e) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var elementValid = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    elementValid = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (elementValid && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Outputs only valid Elements.\n         *\n         * Invalid elements are skipped.\n         *\n         * @param element element to sanitize\n         * Returns true if the element is valid.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return false;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEX = /^\\s*(�\\d+�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostproocess regexps\n    var PP_PLACEHOLDERS = /\\[(�.+?�?)\\]/g;\n    var PP_ICU_VARS = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICUS = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEX.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else if (block) { // Don't push empty strings\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        if (substring != '') {\n            results.push(substring);\n        }\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEX, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (blocks.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18nStart(index, message, subTemplateIndex) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        var viewData = getLView();\n        var expandoStartIndex = tView.blueprint.length - HEADER_OFFSET;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[HOST_NODE] ?\n            parentTNode.index - HEADER_OFFSET :\n            index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = templateTranslation.split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === '#') {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === '#') {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = value.split(ICU_REGEXP);\n                for (var j = 0; j < parts.length; j++) {\n                    value = parts[j];\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        allocExpando(viewData);\n                        var icuNodeIndex = tView.blueprint.length - 1 - HEADER_OFFSET;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parseICUBlock(value.substr(1, value.length - 2));\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (value !== '') {\n                        // Even indexes are text (including bindings)\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        // Create text nodes\n                        allocExpando(viewData);\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : value, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, tView.blueprint.length - 1 - HEADER_OFFSET), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: tView.blueprint.length - HEADER_OFFSET - expandoStartIndex,\n            expandoStartIndex: expandoStartIndex,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var viewData = getLView();\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== viewData[HOST_NODE]) {\n            tNode.parent = parentTNode;\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @publicAPI\n     */\n    function i18nPostprocess(message, replacements) {\n        //\n        // Step 1: resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n        //\n        var matches = {};\n        var result = message.replace(PP_PLACEHOLDERS, function (_match, content) {\n            if (!matches[content]) {\n                matches[content] = content.split('|');\n            }\n            if (!matches[content].length) {\n                throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n            }\n            return matches[content].shift();\n        });\n        // verify that we injected all values\n        var hasUnmatchedValues = Object.keys(matches).some(function (key) { return !!matches[key].length; });\n        if (hasUnmatchedValues) {\n            throw new Error(\"i18n postprocess: unmatched values - \" + JSON.stringify(matches));\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        //\n        // Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n        //\n        result = result.replace(PP_ICU_VARS, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        //\n        // Step 3: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n        // in case multiple ICUs have the same placeholder name\n        //\n        result = result.replace(PP_ICUS, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     */\n    function i18nEnd() {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(tView);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = getLView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // The last placeholder that was added before `i18nEnd`\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var visitedPlaceholders = readCreateOpCodes(rootIndex, tI18n.create, tI18n.expandoStartIndex, viewData);\n        // Remove deleted placeholders\n        // The last placeholder that was added before `i18nEnd` is `previousOrParentTNode`\n        for (var i = rootIndex + 1; i <= previousOrParentTNode.index - HEADER_OFFSET; i++) {\n            if (visitedPlaceholders.indexOf(i) === -1) {\n                removeNode(i, viewData);\n            }\n        }\n    }\n    function readCreateOpCodes(index, createOpCodes, expandoStartIndex, viewData) {\n        var renderer = getLView()[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedPlaceholders = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode =\n                    createNodeAtIndex(expandoStartIndex++, 3 /* Element */, textRNode, null, null);\n                setIsParent(false);\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[HOST_NODE];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode);\n                        destinationTNode.next = null;\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedPlaceholders.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode);\n                            if (currentTNode.type === 3 /* Element */) {\n                                setIsParent(true);\n                            }\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode);\n                        setIsParent(false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        elementAttribute(elementNodeIndex, attrName, attrValue);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createNodeAtIndex(expandoStartIndex++, 5 /* IcuContainer */, commentRNode, null, null);\n                        attachPatchData(commentRNode, viewData);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsParent(false);\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createNodeAtIndex(expandoStartIndex++, 3 /* Element */, elementRNode, tagNameValue, null);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsParent(false);\n        return visitedPlaceholders;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += stringify$1(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var attrName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementAttribute(nodeIndex, attrName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBinding(nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    var tIcuIndex = updateOpCodes[++j];\n                                    var tIcu = icus[tIcuIndex];\n                                    var icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    removeNode(nodeIndex_1, viewData);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], tIcu.expandoStartIndex, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        removeChild(removedPhTNode, removedPhRNode || null, viewData);\n        removedPhTNode.detached = true;\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n        var slotValue = load(index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                removeChild(removedPhTNode, lContainer[NATIVE] || null, viewData);\n            }\n            lContainer[RENDER_PARENT] = null;\n        }\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18n(index, message, subTemplateIndex) {\n        i18nStart(index, message, subTemplateIndex);\n        i18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     */\n    function i18nAttributes(index, values) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, \"You should only call i18nEnd on first template pass\");\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nAttributesFirstPass(tView, index, values);\n        }\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) ;\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                    }\n                    else {\n                        elementAttribute(previousElementIndex, attrName, value);\n                    }\n                }\n            }\n        }\n        tView.data[index + HEADER_OFFSET] = updateOpCodes;\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param expression The binding's new value or NO_CHANGE\n     */\n    function i18nExp(expression) {\n        if (expression !== NO_CHANGE) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     */\n    function i18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    var Plural;\n    (function (Plural) {\n        Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n        Plural[Plural[\"One\"] = 1] = \"One\";\n        Plural[Plural[\"Two\"] = 2] = \"Two\";\n        Plural[Plural[\"Few\"] = 3] = \"Few\";\n        Plural[Plural[\"Many\"] = 4] = \"Many\";\n        Plural[Plural[\"Other\"] = 5] = \"Other\";\n    })(Plural || (Plural = {}));\n    /**\n     * Returns the plural case based on the locale.\n     * This is a copy of the deprecated function that we used in Angular v4.\n     * // TODO(ocombe): remove this once we can the real getPluralCase function\n     *\n     * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n     */\n    function getPluralCase(locale, nLike) {\n        if (typeof nLike === 'string') {\n            nLike = parseInt(nLike, 10);\n        }\n        var n = nLike;\n        var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n        var i = Math.floor(Math.abs(n));\n        var v = nDecimal.length;\n        var f = parseInt(nDecimal, 10);\n        var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n        var lang = locale.split('-')[0].toLowerCase();\n        switch (lang) {\n            case 'af':\n            case 'asa':\n            case 'az':\n            case 'bem':\n            case 'bez':\n            case 'bg':\n            case 'brx':\n            case 'ce':\n            case 'cgg':\n            case 'chr':\n            case 'ckb':\n            case 'ee':\n            case 'el':\n            case 'eo':\n            case 'es':\n            case 'eu':\n            case 'fo':\n            case 'fur':\n            case 'gsw':\n            case 'ha':\n            case 'haw':\n            case 'hu':\n            case 'jgo':\n            case 'jmc':\n            case 'ka':\n            case 'kk':\n            case 'kkj':\n            case 'kl':\n            case 'ks':\n            case 'ksb':\n            case 'ky':\n            case 'lb':\n            case 'lg':\n            case 'mas':\n            case 'mgo':\n            case 'ml':\n            case 'mn':\n            case 'nb':\n            case 'nd':\n            case 'ne':\n            case 'nn':\n            case 'nnh':\n            case 'nyn':\n            case 'om':\n            case 'or':\n            case 'os':\n            case 'ps':\n            case 'rm':\n            case 'rof':\n            case 'rwk':\n            case 'saq':\n            case 'seh':\n            case 'sn':\n            case 'so':\n            case 'sq':\n            case 'ta':\n            case 'te':\n            case 'teo':\n            case 'tk':\n            case 'tr':\n            case 'ug':\n            case 'uz':\n            case 'vo':\n            case 'vun':\n            case 'wae':\n            case 'xog':\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ak':\n            case 'ln':\n            case 'mg':\n            case 'pa':\n            case 'ti':\n                if (n === Math.floor(n) && n >= 0 && n <= 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'am':\n            case 'as':\n            case 'bn':\n            case 'fa':\n            case 'gu':\n            case 'hi':\n            case 'kn':\n            case 'mr':\n            case 'zu':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ar':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'ast':\n            case 'ca':\n            case 'de':\n            case 'en':\n            case 'et':\n            case 'fi':\n            case 'fy':\n            case 'gl':\n            case 'it':\n            case 'nl':\n            case 'sv':\n            case 'sw':\n            case 'ur':\n            case 'yi':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                return Plural.Other;\n            case 'be':\n                if (n % 10 === 1 && !(n % 100 === 11))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                    !(n % 100 >= 12 && n % 100 <= 14))\n                    return Plural.Few;\n                if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                    n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'br':\n                if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                    return Plural.One;\n                if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                    return Plural.Two;\n                if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                    !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                        n % 100 >= 90 && n % 100 <= 99))\n                    return Plural.Few;\n                if (!(n === 0) && n % 1e6 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'bs':\n            case 'hr':\n            case 'sr':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14) ||\n                    f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                        !(f % 100 >= 12 && f % 100 <= 14))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'cs':\n            case 'sk':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'cy':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === 3)\n                    return Plural.Few;\n                if (n === 6)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'da':\n                if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                    return Plural.One;\n                return Plural.Other;\n            case 'dsb':\n            case 'hsb':\n                if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                    f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ff':\n            case 'fr':\n            case 'hy':\n            case 'kab':\n                if (i === 0 || i === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'fil':\n                if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                    v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                    !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ga':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === Math.floor(n) && n >= 3 && n <= 6)\n                    return Plural.Few;\n                if (n === Math.floor(n) && n >= 7 && n <= 10)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'gd':\n                if (n === 1 || n === 11)\n                    return Plural.One;\n                if (n === 2 || n === 12)\n                    return Plural.Two;\n                if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'gv':\n                if (v === 0 && i % 10 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 10 === 2)\n                    return Plural.Two;\n                if (v === 0 &&\n                    (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'he':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === 2 && v === 0)\n                    return Plural.Two;\n                if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'is':\n                if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ksh':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'kw':\n            case 'naq':\n            case 'se':\n            case 'smn':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                return Plural.Other;\n            case 'lag':\n                if (n === 0)\n                    return Plural.Zero;\n                if ((i === 0 || i === 1) && !(n === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'lt':\n                if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                    !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.Few;\n                if (!(f === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'lv':\n            case 'prg':\n                if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                    v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                    return Plural.Zero;\n                if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                    !(v === 2) && f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mk':\n                if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mt':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pl':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pt':\n                if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ro':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (!(v === 0) || n === 0 ||\n                    !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ru':\n            case 'uk':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && i % 10 === 0 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'shi':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                if (n === Math.floor(n) && n >= 2 && n <= 10)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'si':\n                if (n === 0 || n === 1 || i === 0 && f === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'sl':\n                if (v === 0 && i % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'tzm':\n                if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                    return Plural.One;\n                return Plural.Other;\n            // When there is no specification, the default is always \"other\"\n            // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n            // > other (required—general plural form — also used if the language only has a single form)\n            default:\n                return Plural.Other;\n        }\n    }\n    function getPluralCategory(value, locale) {\n        var plural = getPluralCase(locale, value);\n        switch (plural) {\n            case Plural.Zero:\n                return 'zero';\n            case Plural.One:\n                return 'one';\n            case Plural.Two:\n                return 'two';\n            case Plural.Few:\n                return 'few';\n            case Plural.Many:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    // TODO(ocombe): replace this hard-coded value by the real LOCALE_ID value\n                    var locale = 'en-US';\n                    var resolvedCase = getPluralCategory(bindingValue, locale);\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            expandoStartIndex: expandoStartIndex + 1, childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        var lView = getLView();\n        var worstCaseSize = Math.max.apply(Math, __spread(vars));\n        for (var i = 0; i < worstCaseSize; i++) {\n            allocExpando(lView);\n        }\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element$$1 = currentNode;\n                        var tagName = element$$1.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element$$1.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders);\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR$1) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        var _a;\n        var clazz = type;\n        if (decorators !== null) {\n            if (clazz.decorators !== undefined) {\n                (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n            }\n            else {\n                clazz.decorators = decorators;\n            }\n        }\n        if (ctorParameters !== null) {\n            // Rather than merging, clobber the existing parameters. If other projects exist which use\n            // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n            // but that is vanishingly unlikely.\n            clazz.ctorParameters = ctorParameters;\n        }\n        if (propDecorators !== null) {\n            // The property decorator objects are merged as it is possible different fields have different\n            // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n            // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n            // decorator that's also been downleveled.\n            if (clazz.propDecorators !== undefined) {\n                clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n            }\n            else {\n                clazz.propDecorators = propDecorators;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return getCreationMode() ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory(null);\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(index) {\n        return getLView()[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue(newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            getLView()[getBindingRoot()] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /** @internal */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            if (isContentQueryHost(tNode)) {\n                add(this.shallow, tNode);\n                if (tNode.parent && isContentQueryHost(tNode.parent)) {\n                    // if node has a content query and parent also has a content query\n                    // both queries need to check this node for shallow matches\n                    add(this.parent.shallow, tNode);\n                }\n                return this.parent;\n            }\n            isRootNodeOfQuery(tNode) && add(this.shallow, tNode);\n            return this;\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function isRootNodeOfQuery(tNode) {\n        return tNode.parent === null || isContentQueryHost(tNode.parent);\n    }\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryByReadToken(read, tNode, currentView) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = locateDirectiveOrProvider(tNode, currentView, read, false);\n            if (matchingIdx !== null) {\n                return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n            }\n        }\n        return null;\n    }\n    function queryByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function queryByTemplateRef(templateRefToken, tNode, currentView, read) {\n        var templateRefResult = templateRefToken[NG_ELEMENT_ID]();\n        if (read) {\n            return templateRefResult ? queryByReadToken(read, tNode, currentView) : null;\n        }\n        return templateRefResult;\n    }\n    function queryRead(tNode, currentView, read, matchingIdx) {\n        if (read) {\n            return queryByReadToken(read, tNode, currentView);\n        }\n        if (matchingIdx > -1) {\n            return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n        }\n        // if read token and / or strategy is not specified,\n        // detect it using appropriate tNode type\n        return queryByTNodeType(tNode, currentView);\n    }\n    function add(query, tNode) {\n        var currentView = getLView();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var result = null;\n                if (type === TemplateRef) {\n                    result = queryByTemplateRef(type, tNode, currentView, predicate.read);\n                }\n                else {\n                    var matchingIdx = locateDirectiveOrProvider(tNode, currentView, type, false);\n                    if (matchingIdx !== null) {\n                        result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                    }\n                }\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var matchingIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (matchingIdx !== null) {\n                        var result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    var QueryList_ = /** @class */ (function () {\n        function QueryList_() {\n            this.dirty = true;\n            this.changes = new EventEmitter();\n            this._values = [];\n            /** @internal */\n            this._valuesTree = [];\n        }\n        Object.defineProperty(QueryList_.prototype, \"length\", {\n            get: function () { return this._values.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"first\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[0] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"last\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[values.length - 1] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList_.prototype.filter = function (fn) {\n            return this._values.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList_.prototype.find = function (fn) {\n            return this._values.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList_.prototype.reduce = function (fn, init) {\n            return this._values.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList_.prototype.some = function (fn) {\n            return this._values.some(fn);\n        };\n        QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n        QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n        QueryList_.prototype.toString = function () { return this._values.toString(); };\n        QueryList_.prototype.reset = function (res) {\n            this._values = flatten(res);\n            this.dirty = false;\n        };\n        QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        QueryList_.prototype.setDirty = function () { this.dirty = true; };\n        QueryList_.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList_;\n    }());\n    var QueryList = QueryList_;\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, \n    // TODO: \"read\" should be an AbstractType (FW-486)\n    read) {\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        var queryList = new QueryList();\n        var queries = getOrCreateCurrentQueries(LQueries_);\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(getLView(), queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type);\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ɵdefineBase': defineBase,\n        'ɵdefineComponent': defineComponent,\n        'ɵdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ɵdefineNgModule': defineNgModule,\n        'ɵdefinePipe': definePipe,\n        'ɵdirectiveInject': directiveInject,\n        'ɵgetFactoryOf': getFactoryOf,\n        'ɵgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ɵinjectAttribute': injectAttribute,\n        'ɵtemplateRefExtractor': templateRefExtractor,\n        'ɵNgOnChangesFeature': NgOnChangesFeature,\n        'ɵProvidersFeature': ProvidersFeature,\n        'ɵInheritDefinitionFeature': InheritDefinitionFeature,\n        'ɵelementAttribute': elementAttribute,\n        'ɵbind': bind,\n        'ɵcontainer': container,\n        'ɵnextContext': nextContext,\n        'ɵcontainerRefreshStart': containerRefreshStart,\n        'ɵcontainerRefreshEnd': containerRefreshEnd,\n        'ɵloadQueryList': loadQueryList,\n        'ɵnamespaceHTML': namespaceHTML,\n        'ɵnamespaceMathML': namespaceMathML,\n        'ɵnamespaceSVG': namespaceSVG,\n        'ɵenableBindings': enableBindings,\n        'ɵdisableBindings': disableBindings,\n        'ɵallocHostVars': allocHostVars,\n        'ɵelementStart': elementStart,\n        'ɵelementEnd': elementEnd,\n        'ɵelement': element,\n        'ɵelementContainerStart': elementContainerStart,\n        'ɵelementContainerEnd': elementContainerEnd,\n        'ɵpureFunction0': pureFunction0,\n        'ɵpureFunction1': pureFunction1,\n        'ɵpureFunction2': pureFunction2,\n        'ɵpureFunction3': pureFunction3,\n        'ɵpureFunction4': pureFunction4,\n        'ɵpureFunction5': pureFunction5,\n        'ɵpureFunction6': pureFunction6,\n        'ɵpureFunction7': pureFunction7,\n        'ɵpureFunction8': pureFunction8,\n        'ɵpureFunctionV': pureFunctionV,\n        'ɵgetCurrentView': getCurrentView,\n        'ɵrestoreView': restoreView,\n        'ɵinterpolation1': interpolation1,\n        'ɵinterpolation2': interpolation2,\n        'ɵinterpolation3': interpolation3,\n        'ɵinterpolation4': interpolation4,\n        'ɵinterpolation5': interpolation5,\n        'ɵinterpolation6': interpolation6,\n        'ɵinterpolation7': interpolation7,\n        'ɵinterpolation8': interpolation8,\n        'ɵinterpolationV': interpolationV,\n        'ɵelementClassProp': elementClassProp,\n        'ɵlistener': listener,\n        'ɵload': load,\n        'ɵprojection': projection,\n        'ɵelementProperty': elementProperty,\n        'ɵpipeBind1': pipeBind1,\n        'ɵpipeBind2': pipeBind2,\n        'ɵpipeBind3': pipeBind3,\n        'ɵpipeBind4': pipeBind4,\n        'ɵpipeBindV': pipeBindV,\n        'ɵprojectionDef': projectionDef,\n        'ɵpipe': pipe,\n        'ɵquery': query,\n        'ɵqueryRefresh': queryRefresh,\n        'ɵregisterContentQuery': registerContentQuery,\n        'ɵreference': reference,\n        'ɵelementStyling': elementStyling,\n        'ɵelementStylingMap': elementStylingMap,\n        'ɵelementStyleProp': elementStyleProp,\n        'ɵelementStylingApply': elementStylingApply,\n        'ɵtemplate': template,\n        'ɵtext': text,\n        'ɵtextBinding': textBinding,\n        'ɵembeddedViewStart': embeddedViewStart,\n        'ɵembeddedViewEnd': embeddedViewEnd,\n        'ɵi18n': i18n,\n        'ɵi18nAttributes': i18nAttributes,\n        'ɵi18nExp': i18nExp,\n        'ɵi18nStart': i18nStart,\n        'ɵi18nEnd': i18nEnd,\n        'ɵi18nApply': i18nApply,\n        'ɵi18nPostprocess': i18nPostprocess,\n        'ɵsanitizeHtml': sanitizeHtml,\n        'ɵsanitizeStyle': sanitizeStyle,\n        'ɵdefaultStyleSanitizer': defaultStyleSanitizer,\n        'ɵsanitizeResourceUrl': sanitizeResourceUrl,\n        'ɵsanitizeScript': sanitizeScript,\n        'ɵsanitizeUrl': sanitizeUrl\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertNotExisting(id, existing && existing.moduleType);\n        modules.set(id, factory);\n    }\n    function assertNotExisting(id, type) {\n        if (type) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(id, ngModuleType) {\n        var existing = modules.get(id);\n        assertNotExisting(id, existing);\n        modules.set(id, ngModuleType);\n    }\n    function getModuleFactory__PRE_R3__(id) {\n        var factory = modules.get(id);\n        if (!factory)\n            throw noModuleError(id);\n        return factory;\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = modules.get(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__PRE_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$2 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$2),\n                        declarations: declarations,\n                        imports: flatten$1(ngModule.imports || EMPTY_ARRAY$2).map(expandModuleWithProviders),\n                        exports: flatten$1(ngModule.exports || EMPTY_ARRAY$2).map(expandModuleWithProviders),\n                        emitInline: true,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        if (ngModule.id) {\n            registerNgModuleType(ngModule.id, moduleType);\n        }\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$2,\n                        imports: [\n                            ngModule.imports || EMPTY_ARRAY$2,\n                            ngModule.exports || EMPTY_ARRAY$2,\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef = getNgModuleDef(moduleType, true);\n        var errors = [];\n        ngModuleDef.declarations.forEach(verifyDeclarationsHaveDefinitions);\n        var combinedDeclarations = __spread(ngModuleDef.declarations, flatten$1(ngModuleDef.imports.map(computeCombinedExports)));\n        ngModuleDef.exports.forEach(verifyExportsAreDeclaredOrReExported);\n        ngModuleDef.declarations.forEach(verifyDeclarationIsUnique);\n        ngModuleDef.declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten$1(ngModule.imports, unwrapModuleWithProvidersImports)\n                    .forEach(verifySemanticsOfNgModuleDef);\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents && ngModule.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + stringify$1(type) + \"' declared by the module '\" + stringify$1(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + stringify$1(type) + \" from \" + stringify$1(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                var modules = [existingModule, moduleType].map(stringify$1).sort();\n                errors.push(\"Type \" + stringify$1(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                    (\"Please consider moving \" + stringify$1(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                    (\"You can also create a new NgModule that exports and includes \" + stringify$1(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + stringify$1(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    component.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited\n     * by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten$1(ngModuleDef.exports.map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopes.compilation.directives)\n            .map(function (dir) { return getDirectiveDef(dir) || getComponentDef(dir); })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedTyped = imported;\n            if (!isNgModule(importedTyped)) {\n                throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedTyped);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedTyped = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedTyped)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedTyped);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedTyped)) {\n                scopes.exported.pipes.add(exportedTyped);\n            }\n            else {\n                scopes.exported.directives.add(exportedTyped);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$1(values, mapFn) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$1(value, mapFn)));\n            }\n            else {\n                out.push(mapFn ? mapFn(value) : value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + stringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + stringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var meta = __assign({}, directiveMetadata(type, metadata), { template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, viewQueries: extractQueriesMetadata(type, getReflect().propMetadata(type), isViewQuery), directives: [], pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, \"ng://\" + stringify(type) + \"/template.html\", meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var facade = directiveMetadata(type, directive);\n                    ngDirectiveDef = getCompilerFacade().compileDirective(angularCoreEnv, \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\", facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ$1,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY,\n            outputs: metadata.outputs || EMPTY_ARRAY,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: metadata.exportAs || null,\n            providers: metadata.providers || null,\n        };\n    }\n    var EMPTY_OBJ$1 = {};\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : selector;\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + stringify(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return queriesMeta;\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng://\" + stringify$1(type) + \"/ngPipeDef.js\", {\n                        type: type,\n                        name: type.name,\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true\n                    });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0];\n        };\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\n    var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__PRE_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__PRE_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$2 = getClosureSafeProperty;\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: ɵ0$2 });\n    var EMPTY_ARRAY$3 = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$1 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return inject(existingProvider_1.useExisting); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY$3))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = defineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n            return;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n                    var meta = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        typeArgumentCount: 0,\n                        providedIn: meta.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined\n                    };\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta.useClass;\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var ɵ0$3 = getClosureSafeProperty;\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: ɵ0$3 });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$2 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function render2CompileInjectable(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    var Compiler_compileModuleSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__PRE_R3__;\n    var Compiler_compileModuleAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        return new ModuleWithComponentFactories(Compiler_compileModuleSync__POST_R3__(moduleType), []);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__PRE_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_R3__;\n    function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        return Promise.resolve(new NgModuleFactory$1(moduleType));\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        var ApplicationRef_1;\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList$1 = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$2(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$2(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$2(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /** @internal */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /** @internal */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement && getComponent(nativeElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () { return getContext(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () { return this.nativeElement.nodeName; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            get: function () {\n                var context = loadLContext(this.nativeNode);\n                var lView = context.lView;\n                var tView = lView[TVIEW];\n                var tNode = tView.data[context.nodeIndex];\n                var properties = {};\n                // TODO: https://angular-team.atlassian.net/browse/FW-681\n                // Missing implementation here...\n                return properties;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var eAttrs = element.attributes;\n                    for (var i = 0; i < eAttrs.length; i++) {\n                        var attr = eAttrs[i];\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                var classes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var lNode = lContext.lView[lContext.nodeIndex];\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 8 /* SingleStylesStartPosition */; i < lNode.length; i += 4 /* Size */) {\n                            if (isClassBased(lNode, i)) {\n                                var className = getProp(lNode, i);\n                                var value = getValue(lNode, i);\n                                if (typeof value == 'boolean') {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    classes[className] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eClasses = element.classList;\n                        for (var i = 0; i < eClasses.length; i++) {\n                            classes[eClasses[i]] = true;\n                        }\n                    }\n                }\n                return classes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                var styles = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var lNode = lContext.lView[lContext.nodeIndex];\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 8 /* SingleStylesStartPosition */; i < lNode.length; i += 4 /* Size */) {\n                            if (!isClassBased(lNode, i)) {\n                                var styleName = getProp(lNode, i);\n                                var value = getValue(lNode, i);\n                                if (value !== null) {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    styles[styleName] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eStyles = element.style;\n                        for (var i = 0; i < eStyles.length; i++) {\n                            var name_1 = eStyles.item(i);\n                            styles[name_1] = eStyles.getPropertyValue(name_1);\n                        }\n                    }\n                }\n                return styles;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    function _queryNodeChildrenR3(parentNode, predicate, matches, elementsOnly) {\n        if (parentNode instanceof DebugElement__POST_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__POST_R3__) {\n                    if (elementsOnly ? node.nativeElement : true) {\n                        _queryNodeChildrenR3(node, predicate, matches, elementsOnly);\n                    }\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__PRE_R3__(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            return nativeNode.nodeType == Node.ELEMENT_NODE ?\n                new DebugElement__POST_R3__(nativeNode) :\n                new DebugNode__POST_R3__(nativeNode);\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode = getDebugNode__PRE_R3__;\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__PRE_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var SWITCH_IVY_ENABLED__PRE_R3__ = false;\n    var ivyEnabled = SWITCH_IVY_ENABLED__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue$1(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$4 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR$1);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR$1);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1 = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1 ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList$1();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵangular_packages_core_core_s = APPLICATION_MODULE_PROVIDERS;\n    exports.ɵangular_packages_core_core_p = _iterableDiffersFactory;\n    exports.ɵangular_packages_core_core_q = _keyValueDiffersFactory;\n    exports.ɵangular_packages_core_core_r = _localeFactory;\n    exports.ɵangular_packages_core_core_g = _appIdRandomProviderFactory;\n    exports.ɵangular_packages_core_core_n = DefaultIterableDifferFactory;\n    exports.ɵangular_packages_core_core_o = DefaultKeyValueDifferFactory;\n    exports.ɵangular_packages_core_core_m = DebugElement__PRE_R3__;\n    exports.ɵangular_packages_core_core_l = DebugNode__PRE_R3__;\n    exports.ɵangular_packages_core_core_c = injectInjectorOnly;\n    exports.ɵangular_packages_core_core_d = ReflectiveInjector_;\n    exports.ɵangular_packages_core_core_e = ReflectiveDependency;\n    exports.ɵangular_packages_core_core_f = resolveReflectiveProviders;\n    exports.ɵangular_packages_core_core_k = getModuleFactory__PRE_R3__;\n    exports.ɵangular_packages_core_core_t = wtfEnabled;\n    exports.ɵangular_packages_core_core_v = createScope;\n    exports.ɵangular_packages_core_core_u = detectWTF;\n    exports.ɵangular_packages_core_core_y = endTimeRange;\n    exports.ɵangular_packages_core_core_w = leave;\n    exports.ɵangular_packages_core_core_x = startTimeRange;\n    exports.ɵangular_packages_core_core_bb = injectAttributeImpl;\n    exports.ɵangular_packages_core_core_bi = NG_INJECTABLE_DEF;\n    exports.ɵangular_packages_core_core_bc = getLView;\n    exports.ɵangular_packages_core_core_bd = getPreviousOrParentTNode;\n    exports.ɵangular_packages_core_core_be = nextContextImpl;\n    exports.ɵangular_packages_core_core_bh = BoundPlayerFactory;\n    exports.ɵangular_packages_core_core_bl = loadInternal;\n    exports.ɵangular_packages_core_core_h = createElementRef;\n    exports.ɵangular_packages_core_core_i = createTemplateRef;\n    exports.ɵangular_packages_core_core_j = createViewRef;\n    exports.ɵangular_packages_core_core_a = makeParamDecorator;\n    exports.ɵangular_packages_core_core_b = makePropDecorator;\n    exports.ɵangular_packages_core_core_bj = getClosureSafeProperty;\n    exports.ɵangular_packages_core_core_z = _def;\n    exports.ɵangular_packages_core_core_ba = DebugContext;\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.INJECTOR = INJECTOR$1;\n    exports.Injector = Injector;\n    exports.inject = inject;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList$1;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual;\n    exports.ɵisListLikeIterable = isListLikeIterable;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵinject = inject;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1;\n    exports.ɵdefineBase = defineBase;\n    exports.ɵdefineComponent = defineComponent;\n    exports.ɵdefineDirective = defineDirective;\n    exports.ɵdefinePipe = definePipe;\n    exports.ɵdefineNgModule = defineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵdirectiveInject = directiveInject;\n    exports.ɵinjectAttribute = injectAttribute;\n    exports.ɵgetFactoryOf = getFactoryOf;\n    exports.ɵgetInheritedFactory = getInheritedFactory;\n    exports.ɵtemplateRefExtractor = templateRefExtractor;\n    exports.ɵProvidersFeature = ProvidersFeature;\n    exports.ɵInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ɵNgOnChangesFeature = NgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵcontainer = container;\n    exports.ɵnextContext = nextContext;\n    exports.ɵelementStart = elementStart;\n    exports.ɵnamespaceHTML = namespaceHTML;\n    exports.ɵnamespaceMathML = namespaceMathML;\n    exports.ɵnamespaceSVG = namespaceSVG;\n    exports.ɵelement = element;\n    exports.ɵlistener = listener;\n    exports.ɵtext = text;\n    exports.ɵembeddedViewStart = embeddedViewStart;\n    exports.ɵquery = query;\n    exports.ɵregisterContentQuery = registerContentQuery;\n    exports.ɵprojection = projection;\n    exports.ɵbind = bind;\n    exports.ɵinterpolation1 = interpolation1;\n    exports.ɵinterpolation2 = interpolation2;\n    exports.ɵinterpolation3 = interpolation3;\n    exports.ɵinterpolation4 = interpolation4;\n    exports.ɵinterpolation5 = interpolation5;\n    exports.ɵinterpolation6 = interpolation6;\n    exports.ɵinterpolation7 = interpolation7;\n    exports.ɵinterpolation8 = interpolation8;\n    exports.ɵinterpolationV = interpolationV;\n    exports.ɵpipeBind1 = pipeBind1;\n    exports.ɵpipeBind2 = pipeBind2;\n    exports.ɵpipeBind3 = pipeBind3;\n    exports.ɵpipeBind4 = pipeBind4;\n    exports.ɵpipeBindV = pipeBindV;\n    exports.ɵpureFunction0 = pureFunction0;\n    exports.ɵpureFunction1 = pureFunction1;\n    exports.ɵpureFunction2 = pureFunction2;\n    exports.ɵpureFunction3 = pureFunction3;\n    exports.ɵpureFunction4 = pureFunction4;\n    exports.ɵpureFunction5 = pureFunction5;\n    exports.ɵpureFunction6 = pureFunction6;\n    exports.ɵpureFunction7 = pureFunction7;\n    exports.ɵpureFunction8 = pureFunction8;\n    exports.ɵpureFunctionV = pureFunctionV;\n    exports.ɵgetCurrentView = getCurrentView;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵrestoreView = restoreView;\n    exports.ɵcontainerRefreshStart = containerRefreshStart;\n    exports.ɵcontainerRefreshEnd = containerRefreshEnd;\n    exports.ɵqueryRefresh = queryRefresh;\n    exports.ɵloadQueryList = loadQueryList;\n    exports.ɵelementEnd = elementEnd;\n    exports.ɵelementProperty = elementProperty;\n    exports.ɵprojectionDef = projectionDef;\n    exports.ɵreference = reference;\n    exports.ɵenableBindings = enableBindings;\n    exports.ɵdisableBindings = disableBindings;\n    exports.ɵallocHostVars = allocHostVars;\n    exports.ɵelementAttribute = elementAttribute;\n    exports.ɵelementContainerStart = elementContainerStart;\n    exports.ɵelementContainerEnd = elementContainerEnd;\n    exports.ɵelementStyling = elementStyling;\n    exports.ɵelementStylingMap = elementStylingMap;\n    exports.ɵelementStyleProp = elementStyleProp;\n    exports.ɵelementStylingApply = elementStylingApply;\n    exports.ɵelementClassProp = elementClassProp;\n    exports.ɵtextBinding = textBinding;\n    exports.ɵtemplate = template;\n    exports.ɵembeddedViewEnd = embeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵload = load;\n    exports.ɵpipe = pipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵi18n = i18n;\n    exports.ɵi18nAttributes = i18nAttributes;\n    exports.ɵi18nExp = i18nExp;\n    exports.ɵi18nStart = i18nStart;\n    exports.ɵi18nEnd = i18nEnd;\n    exports.ɵi18nApply = i18nApply;\n    exports.ɵi18nPostprocess = i18nPostprocess;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵsanitizeHtml = sanitizeHtml;\n    exports.ɵsanitizeStyle = sanitizeStyle;\n    exports.ɵsanitizeUrl = sanitizeUrl;\n    exports.ɵsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵbindPlayerFactory = bindPlayerFactory;\n    exports.ɵaddPlayer = addPlayer;\n    exports.ɵgetPlayers = getPlayers;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵSWITCH_INJECTOR_FACTORY__POST_R3__ = SWITCH_INJECTOR_FACTORY__POST_R3__;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$4;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵelementEventFullName = elementEventFullName;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue$1;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}