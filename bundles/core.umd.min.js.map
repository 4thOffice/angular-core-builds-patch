{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","defineProperty","ngMetadataName","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","target","meta","unshift","InjectFlags","Inject","token","Optional","Self","SkipSelf","Host","Attribute","attributeName","getClosureSafeProperty","objWithPropertyToExtract","key","Error","fillProperties","source","ɵɵdefineInjectable","opts","providedIn","undefined","defineInjectable","ɵɵdefineInjector","options","providers","imports","getInjectableDef","type","def","NG_INJECTABLE_DEF","getInjectorDef","NG_INJECTOR_DEF","ngInjectableDef","ngInjectorDef","stringify","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","isForwardRef","fn","R3ResolvedDependencyType","__globalThis","globalThis","__window","window","__self","WorkerGlobalScope","__global","_global","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","InjectionToken","_desc","__NG_ELEMENT_ID__","INJECTOR","THROW_IF_NOT_FOUND","NEW_LINE","SOURCE","USE_VALUE","provide","String","useValue","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","ɵɵinject","flags","Default","injectInjectorOnly","injectRootLimpMode","get","inject","notFoundValue","injectableDef","injectArgs","types","arg","isArray","j","ChangeDetectionStrategy","ChangeDetectorStatus","ViewEncapsulation","NullInjector","angularCoreDiEnv","ɵɵgetFactoryOf","getFactoryOf","typeAny","NgModuleRef","NgModuleFactory","addAllToArray","items","arr","flatten","list","dst","item","slice","deepForEach","input","forEach","addToArray","splice","removeFromArray","pop","assertDefined","actual","msg","throwError","noSideEffects","ɵChangeDetectorStatus","EMPTY_OBJ","EMPTY_ARRAY","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_LOCALE_ID_DEF","ngLocaleIdDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","_renderCompCount","ɵɵdefineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","consts","vars","template","ngContentSelectors","hostBindings","contentQueries","inputs","outputs","exportAs","onChanges","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","data","encapsulation","Emulated","id","styles","_","setInput","schemas","tView","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","ɵɵsetComponentScope","getComponentDef","getDirectiveDef","getPipeDef","ɵɵdefineNgModule","bootstrap","declarations","transitiveCompileScopes","ɵɵsetNgModuleScope","scope","getNgModuleDef","obj","secondary","newLookup","minifiedKey","publicName","declaredName","ɵɵdefineBase","baseDefinition","ɵɵdefineDirective","ɵɵdefinePipe","pipeDef","pure","getBaseDef","throwNotFound","HOST","TVIEW","FLAGS","PARENT","NEXT","QUERIES","T_HOST","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR$1","RENDERER_FACTORY","RENDERER","SANITIZER","CHILD_HEAD","CHILD_TAIL","DECLARATION_VIEW","DECLARATION_LCONTAINER","PREORDER_HOOK_FLAGS","HEADER_OFFSET","TYPE","ACTIVE_INDEX","MOVED_VIEWS","NATIVE","VIEW_REFS","CONTAINER_HEADER_OFFSET","isLView","isLContainer","isContentQueryHost","tNode","isComponent","isComponentDef","isRootView","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","NodeInjectorFactory","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","registerPreOrderHooks","directiveIndex","directiveDef","nodeIndex","initialPreOrderHooksLength","initialPreOrderCheckHooksLength","preOrderHooks","preOrderCheckHooks","registerPostOrderHooks","firstTemplatePass","directiveStart","end","directiveEnd","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executePreOrderHooks","currentView","checkNoChangesMode","currentNodeIndex","executeHooks","firstPassHooks","checkHooks","initPhaseState","hooksToCall","callHooks","initPhase","nodeIndexLimit","lastNodeIndexFound","callHook","isInitHook","hook","directive","_stylingState","_stateStorage","Map","_stylingElement","STYLING_INDEX_START_VALUE","BIT_MASK_START_VALUE","getStylingState","element","readFromMap","classesBitMask","classesIndex","stylesBitMask","stylesIndex","resetStylingState","elementDepthCount","MONKEY_PATCH_KEY_NAME","unwrapRNode","getNativeByIndex","lView","getNativeByTNode","getNativeByTNodeOrNull","getTNode","view","loadInternal","getComponentViewByIndex","hostView","slotValue","readPatchedData","readPatchedLView","isCreationMode","resetPreOrderHookFlags","bindingsEnabled","currentDirectiveDef","setCurrentDirectiveDef","getBindingsEnabled","ɵɵenableBindings","ɵɵdisableBindings","getLView","previousOrParentTNode","isParent","MIN_DIRECTIVE_ID","activeDirectiveId","activeDirectiveSuperClassDepthPosition","activeDirectiveSuperClassHeight","setActiveHostElement","elementIndex","_selectedIndex","setSelectedIndex","incrementActiveDirectiveId","adjustActiveDirectiveSuperClassDepthPosition","delta","Math","max","ɵɵrestoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","_isParent","setTNodeAndViewData","getIsParent","setIsNotParent","getCheckNoChangesMode","setCheckNoChangesMode","mode","bindingRootIndex","getBindingRoot","setBindingRoot","currentQueryIndex","getCurrentQueryIndex","setCurrentQueryIndex","enterView","newView","hostTNode","oldView","bindingStartIndex","leaveView","safeToRunHooks","getSelectedIndex","_currentSanitizer","_currentNamespace","ɵɵnamespaceSVG","ɵɵnamespaceMathML","ɵɵnamespaceHTML","namespaceHTMLInternal","setCurrentStyleSanitizer","sanitizer","getCurrentStyleSanitizer","isDifferent","a","renderStringify","stringifyForError","defaultScheduler","requestAnimationFrame","setTimeout","ɵɵresolveWindow","ownerDocument","defaultView","ɵɵresolveDocument","ɵɵresolveBody","body","INTERPOLATION_DELIMITER","isPropMetadataString","str","maybeUnwrapFn","Function","RendererStyleFlags3","MAP_BASED_ENTRY_PROP_NAME","TEMPLATE_DIRECTIVE_INDEX","updateLastDirectiveIndex","context","lastDirectiveIndex","markContextToPersistState","setConfig","getConfig","getProp","getPropConfig","isSanitizationRequired","getGuardMask","setGuardMask","maskValue","config","getValuesCount","getBindingValue","offset","getDefaultValue","allowStylingFlush","isContextLocked","stateIsPersisted","getPropValuesStartPosition","hasValueChanged","compareValueA","compareValueB","isStylingValueDefined","concatString","separator","hyphenate","replace","v","charAt","toLowerCase","getStylingMapArray","isStylingContext","getInitialStylingValue","hasClassInput","hasStyleInput","getMapProp","setMapValue","getMapValue","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","setUpAttributes","native","attrs","isProc","namespaceURI","attrName","attrVal","setAttribute","setAttributeNS","isAnimationProp","setProperty","isNameOnlyAttributeMarker","marker","ANIMATION_PROP_PREFIX","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","getLViewParent","parent","findComponentView","rootTNode","getRootContext","viewOrComponent","getRootView","componentOrLView","includeViewProviders","setIncludeViewProviders","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","diPublicInInjector","bloomAdd","charCodeAt","bloomBit","mask","b6","b5","tData","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","NodeInjector","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","instance","searchTokensOnInjector","NOT_FOUND","moduleInjector","previousInjectImplementation","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","cptViewProvidersCount","endIndex","providerTokenOrDef","dirDef","lData","isFactory","getPrototypeOf","previousIncludeViewProviders","injectorView","isFirstHostTNode","_tNode","_lView","ɵɵgetInheritedFactory","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","response","removeChild","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","warn","sanitizeSrcset","srcset","split","trim","tagSet","tags","e_1","_b","_c","e_1_1","return","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","ARIA_ATTRS","VALID_ATTRS","SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","current","traverseContent","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","parentNode","tagName","nodeName","elAttr","lower","encodeEntities","node","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","parent_1","isTemplateElement","content","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","c","ɵɵsanitizeHtml","getSanitizer","sanitize","HTML","ɵɵsanitizeStyle","unsafeStyle","STYLE","ɵɵsanitizeUrl","unsafeUrl","URL","ɵɵsanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ɵɵsanitizeScript","unsafeScript","SCRIPT","ɵɵsanitizeUrlOrResourceUrl","tag","prop","getUrlSanitizer","ɵɵdefaultStyleSanitizer","doSanitizeValue","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","getLContext","mpValue","component","isComponentInstance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","createLContext","attachPatchData","rElement","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","throwMultipleComponentError","throwMixedMultiProviderError","NG_TEMPLATE_SELECTOR","isCssClassMatching","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","selector","nodeAttrs","nameOnlyMarkerIdx","getNameOnlyMarkerIndex","skipToNextSelector","isPositive","selectorAttrValue","classes","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","isInlineTemplate","bindingsMode","maybeAttrName","matchTemplateAttribute","isNodeMatchingSelectorList","isSelectorInSelectorList","selectorListLoop","currentSelectorInList","DEFAULT_GUARD_MASK_VALUE","STYLING_INDEX_FOR_MAP_BINDING","DEFAULT_BINDING_VALUE","DEFAULT_SIZE_VALUE","deferredBindingQueue","updateClassBinding","bindingIndex","deferRegistration","forceUpdate","isMapBased","state","updateBindingData","updateStyleBinding","counterIndex","sanitizationRequired","deferBindingRegistration","flushDeferredBindings","registerBinding","changed","countId","bindingValue","registered","found","valuesCount","allocateNewContextEntry","addBindingIntoContext","firstValueIndex","lastValueIndex","maybeApplyStyling","allowFlush","bitMask","styleSetter","styleSanitizer","lockAndFinalizeContext","initialValues","updateInitialStylingOnContext","initialStyling","lockContext","contextHasUpdates","applyStyling","bindingData","bitMaskValue","applyStylingFn","normalizeBitMaskValue","stylingMapsSyncFn","getStylingMapsSyncFn","_activeStylingMapApplyFn","mapsMode","valueApplied","valuesCountUpToDefault","defaultValue","valueAppliedWithinMap","setStyle","nativeStyle","style","DashCase","removeStyle","removeProperty","setClass","className","classList","addClass","add","removeClass","remove","renderStylingMap","stylingValues","isClassBased","stylingMapArr","NO_CHANGE","ELEMENT_MARKER","COMMENT_MARKER","syncStylingMap","targetProp","targetPropValueWasApplied","runTheSyncAlgorithm","loopUntilEnd","innerSyncStylingMap","currentMapIndex","cursor","getCurrentSyncCursor","mapIndex","MAP_CURSORS","iteratedTooFar","isTargetPropMatched","valueIsDefined","resolveInnerMapMode","isValueAllowedToBeApplied","useDefault","valueToApply","bindingIndexToApply","setCurrentSyncCursor","indexValue","resetSyncCursors","activateStylingMapFeature","setStylingMapsSyncFn","currentMode","isExactMatch","innerMode","doApplyValue","addItemToStylingMap","allowOverwrite","propAtIndex","applied","stylingMapToString","attrValue","stylingMapToStringMap","stringMap","TStylingContextDebug","enumerable","configurable","entries","guardMask","bindingsStartPosition","sources","NodeStylingDebug","_data","_isClassBased","_sanitizer","overrideSanitizer","_mapValues","toDebug","debug","toHtml","includeChildren","isTextNode","textContent","readLViewValue","TNode","tView_","propertyMetadataStartIndex","propertyMetadataEndIndex","localNames","initialInputs","tViews","projectionNext","projection","LViewDebug","_raw_lView","__raw__flags__","creationMode","firstViewPass","checkAlways","dirty","attached","destroyed","isRoot","indexWithinInitPhase","toDebugNodes","debugNodes","tNodeCursor","rawValue","componentLViewDebug","nodes","cleanup","rendererFactory","childHead","childTail","declarationView","queries","tHost","childViews","__other__","LContainerDebug","_raw_lContainer","I18NDebugItem","__raw_opCode","ɵɵselect","selectInternal","I18nMutateOpCodesDebug","__raw_opCodes","__lView","results","opCode","result","text","commentValue","code","I18nUpdateOpCodesDebug","icus","checkBit","skipCodes","tIcuIndex","tIcu","sanitizeFn","_CLEAN_PROMISE","Promise","resolve","refreshDescendantViews","staticContentQueries","refreshContentQueries","refreshDynamicEmbeddedViews","viewOrContainer","embeddedLView","renderEmbeddedTemplate","setHostBindings","viewData","selectedIndex","expandoInstructions","expandoStartIndex","currentDirectiveIndex","currentElementIndex","instruction","providerCount","staticViewQueries","executeViewQueryFn","refreshChildComponents","hostLView","componentRefresh","directiveDefIdx","elementCreate","namespace","createElementNS","createLView","host","tHostNode","getOrCreateTNode","adjustedIndex","createTNodeAtIndex","createTNode","assignTViewNodeToLView","tParentNode","viewToRender","_previousOrParentTNode","templateFn","executeTemplate","getRenderFlags","renderComponentOrTemplate","normalExecutionPath","creationModeIsActive","begin","rf","prevSelectedIndex","executeContentQueries","createDirectivesAndLocals","localRefExtractor","instantiateAllDirectives","start","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","invokeHostBindingsInCreationMode","saveResolvedLocalsInData","localIndex","getOrCreateTView","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","directiveRegistry","pipeRegistry","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","tParent","generatePropertyAliases","direction","propStore","isInput","defs","propertyAliasMap","internalName","ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","elementPropertyInternal","nativeOnly","loadRendererFn","inputData","dataValue","initializeTNodeInputs","setInputsForProperty","markDirtyIfOnPush","childComponentLView","savePropertyDebugData","lastBindingIndex","bindingMetadata","resolveDirectives","findDirectiveMatches","registry","matches","markAsComponentHost","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","previousExpandoLength","directiveCount","postProcessBaseDirective","setInputsFromAttrs","initialInputData","generateInitialInputs","i_1","minifiedInputName","privateName","numberOfDirectives","directiveFactory","nodeInjectorFactory","componentView","addToViewTree","elementAttributeInternal","strValue","createLContainer","hostNative","isForViewContainerRef","adjustedElementIndex","viewAttachedToChangeDetector","syncViewWithBlueprint","componentTView","checkView","lViewOrLContainer","markViewDirty","tickRootContext","rootContext","rootComponent","detectChangesInternal","detectChangesInRootView","hostTView","storeBindingMetadata","prefix","suffix","CLEAN_PROMISE","getCleanup","getTViewCleanup","loadComponentRenderer","errorHandler","textBindingInternal","setValue","renderInitialStyling","getLContainer","embeddedView","container","getContainerRenderParent","tViewNode","nativeParentNode","executeActionOnElementOrContainer","action","lNodeToHandle","beforeNode","lContainer","rNode","nativeInsertBefore","nativeRemoveNode","destroyNode","executeActionOnContainer","renderParent","anchor","executeActionOnView","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","indexInContainer","containerLength","declarationLContainer","trackMovedView","declarationContainer","declaredViews","lQueries","detachMovedView","projectedViews","declaredViewIndex","detachView","removeIndex","viewToDetach","removedLView","removeView","detachedView","destroyLView","destroyViewTree","rootView","cleanUpView","firstView","getParentState","executeOnDestroys","removeListeners","tCleanup","lCleanup","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","destroy","insertBefore","nativeAppendOrInsertBefore","nativeAppendChild","childEl","childTNode","getRenderParent","getHighestElementOrICUContainer","getHostNative","isIcuCase","ShadowDom","Native","anchorNode","getNativeAnchorNode","parentTNode","getBeforeNodeForView","childEl_1","childEl_1_1","viewIndexInContainer","nextViewIndex","tViewNodeChild","isHostElement","nativeParent","nativeRemoveChild","appendProjectedNodes","tProjectionNode","selectorIndex","projectedView","nodeToProject","appendProjectedNode","appendProjectedChildren","ngContainerChildTNode","projectionView","projectedTNode","nodeOrContainer","viewRootTNode","executeActionOnNode","executeActionOnElementContainerOrIcuContainer","executeActionOnProjection","componentLView","projectionTNode","projectedComponentLView","R3ElementRef","R3TemplateRef","R3ViewContainerRef","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","tNodeChild","nativeNode","componentHost","currentProjectedNode","_lookUpContext","detach","callback","storeCleanupFn","cleanupFn","markForCheck","reattach","detectChanges","checkNoChanges","checkNoChangesInternal","attachToViewContainerRef","vcRef","detachFromAppRef","renderDetachView","attachToAppRef","appRef","RootViewRef","_super","_view","_this","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationView","_declarationTContainer","elementRef","createEmbeddedView","embeddedTView","createEmbeddedViewAndNode","declarationViewLQueries","viewRef","createContainerRef","ViewContainerRefToken","ViewContainerRef_","_lContainer","_hostTNode","_hostView","getParentInjectorTNode","startTNode","parentTNode_1","clear","templateRef","insert","createComponent","componentFactory","projectableNodes","ngModuleRef","contextInjector","parentInjector","ngModule","componentRef","allocateContainerIfNeeded","adjustedIdx","_adjustIndex","viewAttachedToContainer","move","newIndex","shift","commentNode","createComment","nativeNextSibling","injectChangeDetectorRef","isPipe","createViewRef","componentIndex","hostComponentView","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","Type","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","INHERITED_CLASS_WITH_DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","isDelegateCtor","typeStr","test","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","keys","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","deps","compiler","dep","reflectDependency","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","compileInjectable","srcMeta","hasAProvider","isUseClassProvider","isUseFactoryProvider","isUseValueProvider","isUseExistingProvider","compilerMeta","typeArgumentCount","ctorDeps","userDeps","useClass","useFactory","useExisting","USE_VALUE$1","Injectable","SWITCH_COMPILE_INJECTABLE","SWITCH_COMPILE_INJECTABLE__POST_R3__","APP_ROOT","NOT_YET","CIRCULAR","EMPTY_ARRAY$1","NULL_INJECTOR","getNullInjector","createInjector","defType","additionalProviders","R3Injector","records","injectorDefTypes","Set","_destroyed","dedupStack","injectorDef","processInjectorType","provider","processProvider","set","makeRecord","isRootInjector","has","assertNotDestroyed","service","previousInjector","record","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","catchInjectorError","injectorErrorName","tokenPath","message","formatError","substr","parts","JSON","tokens","defOrWrappedDef","parents","isDuplicate","importTypesWithProviders_1","imported","_loop_1","ngModule_1","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","multi","existing","multiRecord_1","throwCyclicDependencyError","hasOnDestroy","getUndecoratedInjectableFactory","paramLength","inheritedInjectableDef","getInheritedInjectableDef","isExistingProvider","isFactoryProvider","classRef_1","throwInvalidProviderError","ngModuleDetail","hasDeps","INJECTOR_IMPL__POST_R3__","INJECTOR_IMPL","Injector","NULL","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","multiProvider","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProvider","some","metadata","_createDependency","paramMetadata","Query","UNDEFINED","ReflectiveInjector","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","resolvedProvider","_normalizeProviders","invalidProviderError","from","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","_getByReflectiveDependency","instantiationError","originalException","originalStack","first","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","ANALYZE_FOR_ENTRY_COMPONENTS","ContentChildren","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","resolveComponentResources","resourceResolver","componentResolved","urlMap","cachedResourceResolve","promise","resp","then","unwrapResponse","componentResourceResolutionQueue","promises","templateUrl","styleUrls","styleOffset","styleUrl","fullyResolved","all","componentDefResolved","componentDefPendingResolution","delete","clearResolutionOfComponentResourcesQueue","componentNeedsResolution","old","ɵɵallocHostVars","count","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","_symbolIterator","getSymbolIterator","Symbol_1","getOwnPropertyNames","looseIdentical","isNaN","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject","updateBinding","getBinding","bindingUpdated","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","ɵɵproperty","bindReconciledValue","ɵɵattribute","bound","interpolationV","isBindingUpdated","interpolation1","v0","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","ɵɵattributeInterpolate1","interpolatedValue","ɵɵattributeInterpolate2","ɵɵattributeInterpolate3","ɵɵattributeInterpolate4","ɵɵattributeInterpolate5","ɵɵattributeInterpolate6","ɵɵattributeInterpolate7","ɵɵattributeInterpolate8","ɵɵattributeInterpolateV","interpolated","markDirty","scheduleTick","res_1","nothingScheduled","clean","scheduler","playerHandler","flushPlayers","ɵɵcontainer","containerInternal","ɵɵtemplate","tContainerNode","ɵɵcontainerRefreshStart","ɵɵcontainerRefreshEnd","nextIndex","comment","store","ɵɵreference","getContextLView","ɵɵload","ɵɵdirectiveInject","ɵɵinjectAttribute","attrNameToInject","injectAttributeImpl","attrsLength","ɵɵstyling","updateLastDirectiveIndex$1","getClassesContext","getStylesContext","getActiveDirectiveStylingIndex","ɵɵstyleSanitizer","ɵɵstyleProp","stylePropInternal","_stylingProp","resolveStylePropValue","resolvedValue","deferStylingUpdate","ɵɵclassProp","defer","updated","ɵɵstyleMap","updateDirectiveInputValue","_stylingMap","ɵɵclassMap","classMapInternal","valueHasChanged","normalizeIntoStylingMap","newValues","normalizeProps","allValuesTrue","newValue","normalizeStylingDirectiveInputValue","initialValue","forceClassesAsString","forceStylesAsString","ɵɵstylingApply","getRenderer","flushStyling","classesContext","stylesContext","persistState","allowFlushClasses","allowFlushStyles","classesFlushed","stylesFlushed","deleteStylingStateFromStorage","storeStylingState","registerInitialStylingOnTNode","startIndex","hasAdditionalInitialStyling","attr","updateRawValueOnContext","getActiveDirectiveId","getActiveDirectiveSuperClassDepth","getContext","allocTStylingContext","getActiveDirectiveSuperClassHeight","ɵɵelementStart","getNamespace","lastAttrIndex","getElementDepthCount","increaseElementDepthCount","elementStart","ɵɵelementEnd","decreaseElementDepthCount","elementEnd","setDirectiveStylingInput","ɵɵelement","ɵɵelementHostAttrs","hostElementIndex","stylingInputs","ɵɵelementContainerStart","ɵɵelementContainerEnd","ɵɵelementContainer","ɵɵembeddedViewStart","viewBlockId","containerTNode","scanForView","startIdx","viewAtPositionId","setIsParent","getOrCreateEmbeddedTView","containerTViews","ɵɵembeddedViewEnd","viewHost","ɵɵgetCurrentView","isPromise","isObservable","subscribe","ɵɵlistener","eventName","listenerFn","useCapture","eventTargetResolver","listenerInternal","ɵɵcomponentHostSyntheticListener","processOutputs","lCleanupIndex","existingListener","hasDirectives","findExistingListener","tNodeIdx","cleanupEventName","listenerIdxInLCleanup","__ngNextListenerFn__","wrapListener","listen","addEventListener","propsLength","subscription","idx","executeListenerWithErrorHandling","wrapWithPreventDefault","wrapListenerIn_markDirtyAndPreventDefault","nextListenerFn","preventDefault","returnValue","ɵɵnextContext","level","nextContextImpl","walkUpViews","nestingLevel","matchingProjectionSlotIndex","projectionSlots","wildcardNgContentIndex","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","ɵɵprojectionDef","componentNode","projectionHeads","tails","componentChild","slotIndex","delayProjection","setDelayProjection","ɵɵprojection","ɵɵpropertyInterpolate","ɵɵpropertyInterpolate1","ɵɵpropertyInterpolate2","ɵɵpropertyInterpolate3","ɵɵpropertyInterpolate4","ɵɵpropertyInterpolate5","ɵɵpropertyInterpolate6","ɵɵpropertyInterpolate7","ɵɵpropertyInterpolate8","ɵɵpropertyInterpolateV","ɵɵtext","textNative","ɵɵtextBinding","ɵɵtextInterpolate","ɵɵtextInterpolate1","ɵɵtextInterpolate2","ɵɵtextInterpolate3","ɵɵtextInterpolate4","ɵɵtextInterpolate5","ɵɵtextInterpolate6","ɵɵtextInterpolate7","ɵɵtextInterpolate8","ɵɵtextInterpolateV","ɵɵclassMapInterpolate1","ɵɵclassMapInterpolate2","ɵɵclassMapInterpolate3","ɵɵclassMapInterpolate4","ɵɵclassMapInterpolate5","ɵɵclassMapInterpolate6","ɵɵclassMapInterpolate7","ɵɵclassMapInterpolate8","ɵɵclassMapInterpolateV","ɵɵstylePropInterpolate1","valueSuffix","ɵɵstylePropInterpolate2","ɵɵstylePropInterpolate3","ɵɵstylePropInterpolate4","ɵɵstylePropInterpolate5","ɵɵstylePropInterpolate6","ɵɵstylePropInterpolate7","ɵɵstylePropInterpolate8","ɵɵstylePropInterpolateV","ɵɵhostProperty","ɵɵupdateSyntheticHostBinding","getComponent","loadLContextFromNode","getComponentAtNodeIndex","getContext$1","getViewComponent","loadLContext","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","isBrowserEvents","listener","getListeners","listeners","firstParam","secondParam","name_1","listenerElement","useCaptureOrIndx","sort","sortListeners","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","resetComponentState","resetAllStylingState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","ɵɵNgOnChangesFeature","NgOnChangesFeatureImpl","ngInherit","definition","ngOnChanges","ngOnChangesSetInput","wrapOnChanges","wrapOnChangesHook_inPreviousChangesStorage","simpleChangesStore","getSimpleChangesStore","setSimpleChangesStore","SIMPLE_CHANGES_STORE","previousChange","ɵɵInheritDefinitionFeature","superType","getSuperType","superDef","baseDef","writeableDef","maybeUnwrapEmpty","baseViewQuery","baseContentQueries","baseHostBindings","inheritHostBindings","inheritViewQuery","inheritContentQueries","superHostBindings","superViewQuery","superContentQueries","features_1","features_1_1","superPrototype","prevViewQuery","ctx","prevContentQueries","prevHostBindings","resolveProvider","lInjectablesBlueprint","providerFactory","beginIndex","isClassProvider","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","multiResolve","factories","componentCount","multiProviders","ɵɵProvidersFeature","viewProviders","processProvidersFn","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","RendererStyleFlags2","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","rootSelectorOrNode","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","SWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Version","Renderer2","SWITCH_RENDERER2_FACTORY","SWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","nodeAtIndex","getOrCreateRenderer2","VERSION","full","major","minor","patch","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_records","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","find","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","SWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","expressionChangedAfterItHasBeenCheckedError","currValue","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","renderDetachView$1","renderAttachEmbeddedView","prevView","prevRenderNode","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","elDef","elData","ref","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","disposables","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","delegate","selectorOrNode","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","setElementProperty","propertyName","propertyValue","setElementAttribute","attributeValue","ns","setBindingDebugInfo","setElementClass","isAdd","setElementStyle","styleName","styleValue","invokeElementMethod","methodName","setText","animate","moduleType","bootstrapComponents","NgModuleRef_","_moduleType","_bootstrapComponents","_destroyListeners","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","outputIndex","directChildFlags","childMatchedQueries","query","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","output","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","changes","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ComponentFactoryResolver$1","ComponentFactory$1","toRefArray","array","nonMinified","LocaleDataIndex","SCHEDULER","isBoundToModule","rootViewInjector","createChainedInjector","hostRNode","rootFlags","isIsolated","tElementNode","rootLView","oldLView","nodesforSlot","ComponentRef$1","_rootLView","destroyCbs","LOCALE_DATA","ɵLocaleDataIndex","u","localeEn","plural","floor","abs","getLocalePluralCase","locale","findLocaleData","PluralCase","normalizedLocale","parentLocale","MARKER","ICU_BLOCK_REGEXP","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","ROOT_TEMPLATE_ID","PP_MULTI_VALUE_PLACEHOLDERS_REGEXP","PP_PLACEHOLDERS_REGEXP","PP_ICU_VARS_REGEXP","PP_ICU_PLACEHOLDERS_REGEXP","PP_ICUS_REGEXP","PP_CLOSE_TEMPLATE_REGEXP","PP_TEMPLATE_ID_REGEXP","extractParts","pattern","prevPos","braceStack","braces","lastIndex","exec","pos","block","parseICUBlock","substring_1","cases","icuType","mainBinding","binding","parseInt","blocks","assertGreaterThan","expected","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","min","i18nVarsCount","parentIndexStack","ɵɵi18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","replaceNgsp","NGSP_UNICODE_REGEXP","getTranslationForTemplate","search","phIndex","icuNodeIndex","icuStart","hasBinding","textNodeIndex","allocExpando","numSlotsToAlloc","update","appendI18nNode","previousTNode","ɵɵi18nPostprocess","replacements","matches_1","templateIdsStack_1","phs","tmpl","placeholders","placeholder","templateId","isCloseTemplateTag","currentTemplateId","_type","_idx","ɵɵi18nEnd","i18nEndFirstPass","rootIndex","tI18n","lastCreatedNode","visitedNodes","readCreateOpCodes","removeNode","createDynamicNodeAtIndex","currentTNode","textRNode","destinationNodeIndex","elementNodeIndex","commentNodeIndex","commentRNode","activeCaseIndex","tagNameValue","removedPhTNode","removedPhRNode","ɵɵi18n","ɵɵi18nAttributes","i18nAttributesFirstPass","previousElementIndex","changeMask","shiftsCounter","ɵɵi18nExp","ɵɵi18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","icuTNode","removeCodes","removeOpCode","activeIndex","caseIndex","getCaseIndex","resolvedCase","getPluralCase","getLocaleId","LOCALE_ID","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","opCodes","parseNodes","currentNode","nestedIcusToCreate","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","ngDevMode","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","TRANSLATIONS","LOCALIZE_PH_REGEXP","ɵɵi18nLocalize","setLocaleId","localeId","assertSameOrNotExisting","incoming","registerNgModuleType","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","getNgLocaleIdDef","_r3Injector","NgModuleFactory$1","ɵɵpureFunction0","slotOffset","pureFn","thisArg","ɵɵpureFunction1","exp","ɵɵpureFunction2","ɵɵpureFunction3","ɵɵpureFunction4","ɵɵpureFunction5","exp5","ɵɵpureFunction6","exp6","ɵɵpureFunction7","exp7","ɵɵpureFunction8","exp8","ɵɵpureFunctionV","exps","ɵɵpipe","pipeName","getPipeDef$1","pipeInstance","ɵɵpipeBind1","unwrapValue$1","isPure","transform","ɵɵpipeBind2","ɵɵpipeBind3","ɵɵpipeBind4","ɵɵpipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","sink","Subscription","Subject","symbolIterator","_results","QueryList","symbol","proto","filter","reduce","init","toArray","reset","resultsTree","last","notifyOnChanges","setDirty","LQuery_","queryList","clone","LQueries_","tQueries","noOfInheritedQueries","viewLQueries","tQuery","getByIndex","indexInDeclarationView","dirtyQueriesWithMatches","getTQuery","TQueryMetadata_","predicate","isStatic","read","TQueries_","queriesForTemplateRef","childQueryIndex","tqueryClone","e_3","e_3_1","track","tquery","TQuery_","crossesNgTemplate","_appliesToNextNode","_declarationNodeIndex","isApplyingToNode","matchTNode","addMatch","matchTNodeWithReadOption","getIdxOfMatchingSelector","typePredicate","nodeMatchIdx","directiveOrProviderIdx","matchIdx","createResultForNode","matchingIdx","createResultByTNodeType","createSpecialToken","materializeViewResults","queryIndex","lQuery","tViewData","tQueryMatches","matchedNodeIdx","ɵɵqueryRefresh","collectQueryResults","e_4","lViewResults","e_4_1","ɵɵstaticViewQuery","descend","viewQueryInternal","ɵɵviewQuery","createTQuery","createLQuery","ɵɵloadViewQuery","loadQueryInternal","ɵɵcontentQuery","contentQueryInternal","ɵɵstaticContentQuery","saveContentQueryAndDirectiveIndex","tViewContentQueries","ɵɵloadContentQuery","storeCleanupWithContext","ɵɵtemplateRefExtractor","ɵɵinjectPipeChangeDetectorRef","angularCoreEnv","EMPTY_ARRAY$3","moduleQueue","flushingModuleQueue","flushModuleScopingQueueAsMuchAsPossible","every","isResolvedDeclaration","setScopeOnDeclaredComponents","declaration","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","allowDuplicateDeclarationsInRoot","expandModuleWithProviders","emitInline","compileInjector","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","compilation","dir","pipe","processNgModuleFn","isNgModule","scopes","exported","declared","importedType","importedScope","entry","exportedType","exportedScope","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","directiveMetadata","typeSourceSpan","createParseSourceSpan","preserveWhitespaces","interpolation","usesInheritance","addBaseDefToUndecoratedParents","hasSelectorScope","compileDirective","sourceMapUrl","facade","extendsDirectlyFromObject","extractQueriesMetadata","isContentQuery","lifecycle","usesOnChanges","part","viewQueries","objPrototype","extractBaseDefMetadata","compileBase","hasHostDecorators","field","ann","metadataName","bindingPropertyName","isQueryAnn","queriesMeta","_loop_2","annotations_1","isInputAnn","convertToR3QueryMetadata","splitByComma","piece","static","compilePipe","typeName","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","Input","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","catch","ApplicationInitStatus_Factory","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","random","MissingTranslationStrategy","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","Console_Factory","LOCALE_ID$1","TRANSLATIONS$1","TRANSLATIONS_FORMAT","trace","events","ModuleWithComponentFactories","ngModuleFactory","componentFactories","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync__POST_R3__","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync__POST_R3__","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","Compiler_Factory","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","Testability_Factory","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","TestabilityRegistry_Factory","_NoopGetTestability","compileNgModuleFactory","compileNgModuleFactory__POST_R3__","moduleFactory","isComponentResourceResolutionQueueEmpty","compilerProviders","_mergeArrays","resourceLoader","ResourceLoader","isBoundToModule__POST_R3__","cf","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","desc","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","bootstrapModuleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","ApplicationRef","ngDoBootstrap","PlatformRef_Factory","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","componentOrFactory","compRef","_unloadComponent","_loadComponent","_tickScope","_d","_e","_f","attachView","ApplicationRef_Factory","NgModuleFactoryLoader","getModuleFactory__POST_R3__","getRegisteredNgModuleType","noModuleError","getModuleFactory","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","_config","load","path","loadAndCompile","exportName","System","import","checkNotEmpty","loadFactory","factoryClassSuffix","SystemJsNgModuleLoader_Factory","modulePath","ViewRef$1","EmbeddedViewRef","DebugEventListener","DebugNode__PRE_R3__","_debugContext","DebugElement__PRE_R3__","addChild","providerTokens","childNodes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","collectPropertyBindings","getFirstBindingIndex","metadataIndex","currentBindingIndex","metadataParts","hostProperties","collectHostPropertyBindings","hostPropIndex","collectClassNames","debugElement","tNodeAttrs","lowercaseTNodeAttrs","eAttrs","_getStylingDebugInfo","children","getDebugNode__POST_R3__","_queryAllR3","invokedListeners","eventListeners","unwrappedListener","elementsOnly","_queryNodeChildrenR3","rootNativeNode","_addQueryMatchR3","_queryNativeNodeDescendants","debugNode","getDebugNode","_queryNodeChildrenInContainerR3","head","head_1","head_1_1","nextTNode","nextLView","childView","_nativeNodeToDebugNode","NG_DEBUG_PROPERTY","indexDebugNode","ViewAction","DebugNode","DebugElement","platformCore","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","ApplicationModule","ApplicationModule_Factory","parentEl","listenToElementOutputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","checkAndUpdateElementValue","securityContext","renderValue","unit","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef","createView","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","hostViewDef","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵNoopNgZone","ɵComponentFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵsetCurrentInjector","ɵgetInjectableDef","ɵAPP_ROOT","ɵDEFAULT_LOCALE_ID","ɵivyEnabled","ɵCodegenComponentFactoryResolver","ɵclearResolutionOfComponentResourcesQueue","ɵresolveComponentResources","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵgetLocalePluralCase","ɵfindLocaleData","ɵLOCALE_DATA","ɵdetectChanges","ɵrenderComponent","renderComponent","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetDirectives","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","ɵi18nConfigureLocalize","i18nConfigureLocalize","translations","ɵsetLocaleId","ɵsetClassMetadata","setClassMetadata","clazz","parentPrototype","parentConstructor","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵresetCompiledComponents","resetCompiledComponents","ɵflushModuleScopingQueueAsMuchAsPossible","ɵtransitiveScopesFor","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵNG_ELEMENT_ID","ɵNG_COMPONENT_DEF","ɵNG_DIRECTIVE_DEF","ɵNG_PIPE_DEF","ɵNG_MODULE_DEF","ɵNG_BASE_DEF","ɵNG_INJECTABLE_DEF","ɵNG_INJECTOR_DEF","ɵcompileNgModuleFactory__POST_R3__","ɵisBoundToModule__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵgetDebugNode__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","ɵCompiler_compileModuleSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","ɵgetModuleFactory__POST_R3__","ɵregisterNgModuleType","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵcreateInjector","ɵINJECTOR_IMPL__POST_R3__","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","ns_1","resolveRendererType2","isFilled","None","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v9.0.0-next.0+72.sha-4b8cdd4.with-local-changes\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        /** Check self and check parent injector if needed */\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't ascend to ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineInjectable(opts) {\n        return {\n            token: opts.token, providedIn: opts.providedIn || null, factory: opts.factory,\n            value: undefined,\n        };\n    }\n    /**\n     * @deprecated in v8, delete after v10. This API should be used only be generated code, and that\n     * code should now use ɵɵdefineInjectable instead.\n     * @publicApi\n     */\n    var defineInjectable = ɵɵdefineInjectable;\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function ɵɵdefineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` for `type` in a way which is immune to accidentally reading inherited\n     * value.\n     *\n     * @param type A type which may have its own (non-inherited) `ngInjectableDef`.\n     */\n    function getInjectableDef(type) {\n        var def = type[NG_INJECTABLE_DEF];\n        // The definition read above may come from a base class. `hasOwnProperty` is not sufficient to\n        // distinguish this case, as in older browsers (e.g. IE10) static property inheritance is\n        // implemented by copying the properties.\n        //\n        // Instead, the ngInjectableDef's token is compared to the type, and if they don't match then the\n        // property was not defined directly on the type itself, and was likely inherited. The definition\n        // is only returned if the type matches the def.token.\n        return def && def.token === type ? def : null;\n    }\n    /**\n     * Read the `ngInjectableDef` for `type` or read the `ngInjectableDef` from one of its ancestors.\n     *\n     * @param type A type which may have `ngInjectableDef`, via inheritance.\n     *\n     * @deprecated Will be removed in v10, where an error will occur in the scenario if we find the\n     * `ngInjectableDef` on an ancestor only.\n     */\n    function getInheritedInjectableDef(type) {\n        if (type && type[NG_INJECTABLE_DEF]) {\n            // TODO(FW-1307): Re-add ngDevMode when closure can handle it\n            // ngDevMode &&\n            console.warn(\"DEPRECATED: DI is instantiating a token \\\"\" + type.name + \"\\\" that inherits its @Injectable decorator but does not provide one itself.\\n\" +\n                (\"This will become an error in v10. Please add @Injectable() to the \\\"\" + type.name + \"\\\" class.\"));\n            return type[NG_INJECTABLE_DEF];\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        return isForwardRef(type) ? type() : type;\n    }\n    /** Checks whether a function is wrapped by a `forwardRef`. */\n    function isForwardRef(fn) {\n        return typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __globalThis = typeof globalThis !== 'undefined' && globalThis;\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Always use __globalThis if available, which is the spec-defined global variable across all\n    // environments, then fallback to __global first, because in Node tests both __global and\n    // __window may be defined and _global should be __global in that case.\n    var _global = __globalThis || __global || __window || __self;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"ChangeDetectorRef\"] = 2] = \"ChangeDetectorRef\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global['ng'];\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parameterized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            this.ngInjectableDef = undefined;\n            if (typeof options == 'number') {\n                // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n                // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n                // We are using it to assign `-1` which is used to identify `Injector`.\n                this.__NG_ELEMENT_ID__ = options;\n            }\n            else if (options !== undefined) {\n                this.ngInjectableDef = ɵɵdefineInjectable({\n                    token: this,\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n    );\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var SOURCE = '__source';\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function ɵɵinject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * Injects a token from the currently active injector.\n     *\n     * Must be used in the context of a factory function such as one defined for an\n     * `InjectionToken`. Throws an error if not called from such a context.\n     *\n     * Within such a factory function, using this function to request injection of a dependency\n     * is faster and more type-safe than providing an additional array of dependencies\n     * (as has been common with `useFactory` providers).\n     *\n     * @param token The injection token for the dependency to be injected.\n     * @param flags Optional flags that control how injection is executed.\n     * The flags correspond to injection strategies that can be specified with\n     * parameter decorators `@Host`, `@Self`, `@SkipSef`, and `@Optional`.\n     * @returns True if injection is successful, null otherwise.\n     *\n     * @usageNotes\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     * @publicApi\n     */\n    var inject = ɵɵinject;\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = resolveForwardRef(types[i]);\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional' || meta === Optional) {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf' || meta === SkipSelf) {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self' || meta === Self) {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject || meta === Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(ɵɵinject(type, flags));\n            }\n            else {\n                args.push(ɵɵinject(arg));\n            }\n        }\n        return args;\n    }\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (notFoundValue === THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                var error = new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n                error.name = 'NullInjectorError';\n                throw error;\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    function catchInjectorError(e, token, injectorErrorName, source) {\n        var tokenPath = e[NG_TEMP_TOKEN_PATH];\n        if (token[SOURCE]) {\n            tokenPath.unshift(token[SOURCE]);\n        }\n        e.message = formatError('\\n' + e.message, tokenPath, injectorErrorName, source);\n        e[NG_TOKEN_PATH] = tokenPath;\n        e[NG_TEMP_TOKEN_PATH] = null;\n        throw e;\n    }\n    function formatError(text, obj, injectorErrorName, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"\" + injectorErrorName + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreDiEnv = {\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵgetFactoryOf': getFactoryOf,\n    };\n    function getFactoryOf(type) {\n        var typeAny = type;\n        if (isForwardRef(type)) {\n            return (function () {\n                var factory = getFactoryOf(resolveForwardRef(typeAny));\n                return factory ? factory() : null;\n            });\n        }\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Equivalent to ES6 spread, add each item to an array.\n    *\n    * @param items The items to add\n    * @param arr The array to which you want to add the items\n    */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n    /**\n     * Flattens an array.\n     */\n    function flatten(list, dst) {\n        if (dst === undefined)\n            dst = list;\n        for (var i = 0; i < list.length; i++) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                // we need to inline it.\n                if (dst === list) {\n                    // Our assumption that the list was already flat was wrong and\n                    // we need to clone flat since we need to write to it.\n                    dst = list.slice(0, i);\n                }\n                flatten(item, dst);\n            }\n            else if (dst !== list) {\n                dst.push(item);\n            }\n        }\n        return dst;\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            return arr.pop();\n        }\n        else {\n            return arr.splice(index, 1)[0];\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotSame(actual, expected, msg) {\n        if (actual === expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        // If we're in a worker, `Node` will not be defined.\n        assertEqual((typeof Node !== 'undefined' && node instanceof Node) ||\n            (typeof node === 'object' && node != null &&\n                node.constructor.name === 'WebWorkerRenderNode'), true, \"The provided value must be an instance of a DOM Node but got \" + stringify(node));\n    }\n    function assertDataInRange(arr, index) {\n        var maxLen = arr ? arr.length : 0;\n        assertLessThan(index, maxLen, \"Index expected to be less than \" + maxLen + \" but got \" + index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var locationString = typeof location !== 'undefined' ? location.toString() : '';\n        var newCounters = {\n            namedConstructors: locationString.indexOf('ngDevMode=namedConstructors') != -1,\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererAppendChild: 0,\n            rendererInsertBefore: 0,\n            rendererCreateComment: 0,\n            styleMap: 0,\n            styleMapCacheMiss: 0,\n            classMap: 0,\n            classMapCacheMiss: 0,\n            styleProp: 0,\n            stylePropCacheMiss: 0,\n            classProp: 0,\n            classPropCacheMiss: 0,\n            flushStyling: 0,\n            classesApplied: 0,\n            stylesApplied: 0,\n            stylingWritePersistedState: 0,\n            stylingReadPersistedState: 0,\n        };\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n        var allowNgDevModeTrue = locationString.indexOf('ngDevMode=false') === -1;\n        _global['ngDevMode'] = allowNgDevModeTrue && newCounters;\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * then we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     *\n     * NOTE: changes to the `ngDevMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         * This strategy applies to all child directives and cannot be overridden.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        // These property accesses can be ignored because ngDevMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_OBJ);\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_ARRAY);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_LOCALE_ID_DEF = getClosureSafeProperty({ ngLocaleIdDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    // TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @codeGenApi\n     */\n    function ɵɵdefineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onChanges: null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n            setInput: null,\n            schemas: componentDefinition.schemas || null,\n            tView: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n            // Add ngInjectableDef so components are reachable through the module injector by default\n            // (unless it has already been set by the @Injectable decorator). This is mostly to\n            // support injecting components in tests. In real application code, components should\n            // be retrieved through the node injector, so this isn't a problem.\n            if (!type.hasOwnProperty(NG_INJECTABLE_DEF)) {\n                type[NG_INJECTABLE_DEF] =\n                    ɵɵdefineInjectable({ token: type, factory: componentDefinition.factory });\n            }\n        });\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵsetComponentScope(type, directives, pipes) {\n        var def = type.ngComponentDef;\n        def.directiveDefs = function () { return directives.map(extractDirectiveDef); };\n        def.pipeDefs = function () { return pipes.map(extractPipeDef); };\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵdefineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n            schemas: def.schemas || null,\n            id: def.id || null,\n        };\n        return res;\n    }\n    /**\n     * Adds the module metadata that is necessary to compute the module's transitive scope to an\n     * existing module definition.\n     *\n     * Scope metadata of modules is not used in production builds, so calls to this function can be\n     * marked pure to tree-shake it from the bundle, allowing for all referenced declarations\n     * to become eligible for tree-shaking as well.\n     *\n     * @codeGenApi\n     */\n    function ɵɵsetNgModuleScope(type, scope) {\n        return noSideEffects(function () {\n            var ngModuleDef = getNgModuleDef(type, true);\n            ngModuleDef.declarations = scope.declarations || EMPTY_ARRAY;\n            ngModuleDef.imports = scope.imports || EMPTY_ARRAY;\n            ngModuleDef.exports = scope.exports || EMPTY_ARRAY;\n        });\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```ts\n     * class ShouldBeInherited {\n     *   static ngBaseDef = ɵɵdefineBase({\n     *      ...\n     *   })\n     * }\n     * ```\n     *\n     * @param baseDefinition The base definition parameters\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n            viewQuery: baseDefinition.viewQuery || null,\n            contentQueries: baseDefinition.contentQueries || null,\n            hostBindings: baseDefinition.hostBindings || null\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```ts\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = ɵɵdefineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     *\n     * @codeGenApi\n     */\n    var ɵɵdefineDirective = ɵɵdefineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefinePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getBaseDef(type) {\n        return type[NG_BASE_DEF] || null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MODULE_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have 'ngModuleDef' property.\");\n        }\n        return ngModuleDef;\n    }\n    function getNgLocaleIdDef(type) {\n        return type[NG_LOCALE_ID_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var HOST = 0;\n    var TVIEW = 1;\n    var FLAGS = 2;\n    var PARENT = 3;\n    var NEXT = 4;\n    var QUERIES = 5;\n    var T_HOST = 6;\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var CHILD_HEAD = 14;\n    var CHILD_TAIL = 15;\n    var DECLARATION_VIEW = 16;\n    var DECLARATION_LCONTAINER = 17;\n    var PREORDER_HOOK_FLAGS = 18;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 19;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Special location which allows easy identification of type. If we have an array which was\n     * retrieved from the `LView` and that array has `true` at `TYPE` location, we know it is\n     * `LContainer`.\n     */\n    var TYPE = 1;\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 2;\n    // PARENT and NEXT are indices 3 and 4\n    // As we already have these constants in LView, we don't need to re-create them.\n    var MOVED_VIEWS = 5;\n    // T_HOST is index 6\n    // We already have this constants in LView, we don't need to re-create it.\n    var NATIVE = 7;\n    var VIEW_REFS = 8;\n    /**\n     * Size of LContainer's header. Represents the index after which all views in the\n     * container will be inserted. We need to keep a record of current views so we know\n     * which views are already in the DOM (and don't need to be re-added) and so we can\n     * remove views from the DOM when they are no longer required.\n     */\n    var CONTAINER_HEADER_OFFSET = 9;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * True if `value` is `LView`.\n    * @param value wrapped value of `RNode`, `LView`, `LContainer`\n    */\n    function isLView(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'object';\n    }\n    /**\n     * True if `value` is `LContainer`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function isLContainer(value) {\n        return Array.isArray(value) && value[TYPE] === true;\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 4 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 1 /* isComponent */) === 1 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 512 /* IsRoot */) !== 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertTNodeForLView(tNode, lView) {\n        tNode.hasOwnProperty('tView_') && assertEqual(tNode.tView_, lView[TVIEW], 'This TNode does not belong to this LView.');\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode, 'previousOrParentTNode should exist!');\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertLContainerOrUndefined(value) {\n        value && assertEqual(isLContainer(value), true, 'Expecting LContainer or undefined or null');\n    }\n    function assertLContainer(value) {\n        assertDefined(value, 'LContainer must be defined');\n        assertEqual(isLContainer(value), true, 'Expecting LContainer');\n    }\n    function assertLViewOrUndefined(value) {\n        value && assertEqual(isLView(value), true, 'Expecting LView or undefined or null');\n    }\n    function assertLView(value) {\n        assertDefined(value, 'LView must be defined');\n        assertEqual(isLView(value), true, 'Expecting LView');\n    }\n    function assertFirstTemplatePass(tView, errMessage) {\n        assertEqual(tView.firstTemplatePass, true, errMessage || 'Should only be called in first template pass.');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj !== null && typeof obj == 'object' &&\n            Object.getPrototypeOf(obj) == NodeInjectorFactory.prototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n     *\n     * Must be run *only* on the first template pass.\n     *\n     * Sets up the pre-order hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * @param directiveIndex The index of the directive in LView\n     * @param directiveDef The definition containing the hooks to setup in tView\n     * @param tView The current TView\n     * @param nodeIndex The index of the node to which the directive is attached\n     * @param initialPreOrderHooksLength the number of pre-order hooks already registered before the\n     * current process, used to know if the node index has to be added to the array. If it is -1,\n     * the node index is never added.\n     * @param initialPreOrderCheckHooksLength same as previous for pre-order check hooks\n     */\n    function registerPreOrderHooks(directiveIndex, directiveDef, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        var onChanges = directiveDef.onChanges, onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n        if (initialPreOrderHooksLength >= 0 &&\n            (!tView.preOrderHooks || initialPreOrderHooksLength === tView.preOrderHooks.length) &&\n            (onChanges || onInit || doCheck)) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(nodeIndex);\n        }\n        if (initialPreOrderCheckHooksLength >= 0 &&\n            (!tView.preOrderCheckHooks ||\n                initialPreOrderCheckHooksLength === tView.preOrderCheckHooks.length) &&\n            (onChanges || doCheck)) {\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(nodeIndex);\n        }\n        if (onChanges) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, onChanges);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, onChanges);\n        }\n        if (onInit) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(-directiveIndex, onInit);\n        }\n        if (doCheck) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, doCheck);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, doCheck);\n        }\n    }\n    /**\n     *\n     * Loops through the directives on the provided `tNode` and queues hooks to be\n     * run that are not initialization hooks.\n     *\n     * Should be executed during `elementEnd()` and similar to\n     * preserve hook execution order. Content, view, and destroy hooks for projected\n     * components and directives must be called *before* their hosts.\n     *\n     * Sets up the content, view, and destroy hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n     * separately at `elementStart`.\n     *\n     * @param tView The current TView\n     * @param tNode The TNode whose directives are to be searched for hooks to queue\n     */\n    function registerPostOrderHooks(tView, tNode) {\n        if (tView.firstTemplatePass) {\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n                var directiveDef = tView.data[i];\n                if (directiveDef.afterContentInit) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(-i, directiveDef.afterContentInit);\n                }\n                if (directiveDef.afterContentChecked) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                    (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, directiveDef.afterContentChecked);\n                }\n                if (directiveDef.afterViewInit) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(-i, directiveDef.afterViewInit);\n                }\n                if (directiveDef.afterViewChecked) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                    (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n                }\n                if (directiveDef.onDestroy != null) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n                }\n            }\n        }\n    }\n    /**\n     * Executing hooks requires complex logic as we need to deal with 2 constraints.\n     *\n     * 1. Init hooks (ngOnInit, ngAfterContentInit, ngAfterViewInit) must all be executed once and only\n     * once, across many change detection cycles. This must be true even if some hooks throw, or if\n     * some recursively trigger a change detection cycle.\n     * To solve that, it is required to track the state of the execution of these init hooks.\n     * This is done by storing and maintaining flags in the view: the {@link InitPhaseState},\n     * and the index within that phase. They can be seen as a cursor in the following structure:\n     * [[onInit1, onInit2], [afterContentInit1], [afterViewInit1, afterViewInit2, afterViewInit3]]\n     * They are are stored as flags in LView[FLAGS].\n     *\n     * 2. Pre-order hooks can be executed in batches, because of the select instruction.\n     * To be able to pause and resume their execution, we also need some state about the hook's array\n     * that is being processed:\n     * - the index of the next hook to be executed\n     * - the number of init hooks already found in the processed part of the  array\n     * They are are stored as flags in LView[PREORDER_HOOK_FLAGS].\n     */\n    /**\n     * Executes necessary hooks at the start of executing a template.\n     *\n     * Executes hooks that are to be run during the initialization of a directive such\n     * as `onChanges`, `onInit`, and `doCheck`.\n     *\n     * @param lView The current view\n     * @param tView Static data for the view containing the hooks to be executed\n     * @param checkNoChangesMode Whether or not we're in checkNoChanges mode.\n     * @param @param currentNodeIndex 2 cases depending the the value:\n     * - undefined: execute hooks only from the saved index until the end of the array (pre-order case,\n     * when flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executePreOrderHooks(currentView, tView, checkNoChangesMode, currentNodeIndex) {\n        if (!checkNoChangesMode) {\n            executeHooks(currentView, tView.preOrderHooks, tView.preOrderCheckHooks, checkNoChangesMode, 0 /* OnInitHooksToBeRun */, currentNodeIndex !== undefined ? currentNodeIndex : null);\n        }\n    }\n    /**\n     * Executes hooks against the given `LView` based off of whether or not\n     * This is the first pass.\n     *\n     * @param currentView The view instance data to run the hooks against\n     * @param firstPassHooks An array of hooks to run if we're in the first view pass\n     * @param checkHooks An Array of hooks to run if we're not in the first view pass.\n     * @param checkNoChangesMode Whether or not we're in no changes mode.\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending the the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeHooks(currentView, firstPassHooks, checkHooks, checkNoChangesMode, initPhaseState, currentNodeIndex) {\n        if (checkNoChangesMode)\n            return;\n        if (checkHooks !== null || firstPassHooks !== null) {\n            var hooksToCall = (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhaseState ?\n                firstPassHooks :\n                checkHooks;\n            if (hooksToCall !== null) {\n                callHooks(currentView, hooksToCall, initPhaseState, currentNodeIndex);\n            }\n        }\n        // The init phase state must be always checked here as it may have been recursively updated\n        var flags = currentView[FLAGS];\n        if (currentNodeIndex == null && (flags & 3 /* InitPhaseStateMask */) === initPhaseState &&\n            initPhaseState !== 3 /* InitPhaseCompleted */) {\n            flags &= 1023 /* IndexWithinInitPhaseReset */;\n            flags += 1 /* InitPhaseStateIncrementer */;\n            currentView[FLAGS] = flags;\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending the the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function callHooks(currentView, arr, initPhase, currentNodeIndex) {\n        var startIndex = currentNodeIndex !== undefined ?\n            (currentView[PREORDER_HOOK_FLAGS] & 65535 /* IndexOfTheNextPreOrderHookMaskMask */) :\n            0;\n        var nodeIndexLimit = currentNodeIndex != null ? currentNodeIndex : -1;\n        var lastNodeIndexFound = 0;\n        for (var i = startIndex; i < arr.length; i++) {\n            var hook = arr[i + 1];\n            if (typeof hook === 'number') {\n                lastNodeIndexFound = arr[i];\n                if (currentNodeIndex != null && lastNodeIndexFound >= currentNodeIndex) {\n                    break;\n                }\n            }\n            else {\n                var isInitHook = arr[i] < 0;\n                if (isInitHook)\n                    currentView[PREORDER_HOOK_FLAGS] += 65536 /* NumberOfInitHooksCalledIncrementer */;\n                if (lastNodeIndexFound < nodeIndexLimit || nodeIndexLimit == -1) {\n                    callHook(currentView, initPhase, arr, i);\n                    currentView[PREORDER_HOOK_FLAGS] =\n                        (currentView[PREORDER_HOOK_FLAGS] & 4294901760 /* NumberOfInitHooksCalledMask */) + i +\n                            2;\n                }\n                i++;\n            }\n        }\n    }\n    /**\n     * Execute one hook against the current `LView`.\n     *\n     * @param currentView The current view\n     * @param initPhaseState the current state of the init phase\n     * @param arr The array in which the hooks are found\n     * @param i The current index within the hook data array\n     */\n    function callHook(currentView, initPhase, arr, i) {\n        var isInitHook = arr[i] < 0;\n        var hook = arr[i + 1];\n        var directiveIndex = isInitHook ? -arr[i] : arr[i];\n        var directive = currentView[directiveIndex];\n        if (isInitHook) {\n            var indexWithintInitPhase = currentView[FLAGS] >> 10 /* IndexWithinInitPhaseShift */;\n            // The init phase state must be always checked here as it may have been recursively\n            // updated\n            if (indexWithintInitPhase <\n                (currentView[PREORDER_HOOK_FLAGS] >> 16 /* NumberOfInitHooksCalledShift */) &&\n                (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n                currentView[FLAGS] += 1024 /* IndexWithinInitPhaseIncrementer */;\n                hook.call(directive);\n            }\n        }\n        else {\n            hook.call(directive);\n        }\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * --------\n     *\n     * // TODO(matsko): add updateMask info\n     *\n     * This file contains all state-based logic for styling in Angular.\n     *\n     * Styling in Angular is evaluated with a series of styling-specific\n     * template instructions which are called one after another each time\n     * change detection occurs in Angular.\n     *\n     * Styling makes use of various temporary, state-based variables between\n     * instructions so that it can better cache and optimize its values.\n     * These values are usually populated and cleared when an element is\n     * exited in change detection (once all the instructions are run for\n     * that element).\n     *\n     * There are, however, situations where the state-based values\n     * need to be stored and used at a later point. This ONLY occurs when\n     * there are template-level as well as host-binding-level styling\n     * instructions on the same element. The example below shows exactly\n     * what could be:\n     *\n     * ```html\n     * <!-- two sources of styling: the template and the directive -->\n     * <div [style.width]=\"width\" dir-that-sets-height></div>\n     * ```\n     *\n     * If and when this situation occurs, the current styling state is\n     * stored in a storage map value and then later accessed once the\n     * host bindings are evaluated. Once styling for the current element\n     * is over then the map entry will be cleared.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    var _stylingState = null;\n    var _stateStorage = new Map();\n    // this value is not used outside this file and is only here\n    // as a caching check for when the element changes.\n    var _stylingElement = null;\n    var STYLING_INDEX_START_VALUE = 1;\n    var BIT_MASK_START_VALUE = 0;\n    function getStylingState(element, readFromMap) {\n        if (!_stylingElement || element !== _stylingElement) {\n            _stylingElement = element;\n            if (readFromMap) {\n                _stylingState = _stateStorage.get(element) || null;\n                ngDevMode && ngDevMode.stylingReadPersistedState++;\n            }\n            _stylingState = _stylingState || {\n                classesBitMask: BIT_MASK_START_VALUE,\n                classesIndex: STYLING_INDEX_START_VALUE,\n                stylesBitMask: BIT_MASK_START_VALUE,\n                stylesIndex: STYLING_INDEX_START_VALUE,\n            };\n        }\n        return _stylingState;\n    }\n    function resetStylingState() {\n        _stylingState = null;\n        _stylingElement = null;\n    }\n    function storeStylingState(element, state) {\n        ngDevMode && ngDevMode.stylingWritePersistedState++;\n        _stateStorage.set(element, state);\n    }\n    function deleteStylingStateFromStorage(element) {\n        _stateStorage.delete(element);\n    }\n    function resetAllStylingState() {\n        resetStylingState();\n        _stateStorage.clear();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * For efficiency reasons we often put several different data types (`RNode`, `LView`, `LContainer`)\n     * in same location in `LView`. This is because we don't want to pre-allocate space for it\n     * because the storage is sparse. This file contains utilities for dealing with such data types.\n     *\n     * How do we know what is stored at a given location in `LView`.\n     * - `Array.isArray(value) === false` => `RNode` (The normal storage value)\n     * - `Array.isArray(value) === true` => then the `value[0]` represents the wrapped value.\n     *   - `typeof value[TYPE] === 'object'` => `LView`\n     *      - This happens when we have a component at a given location\n     *   - `typeof value[TYPE] === true` => `LContainer`\n     *      - This happens when we have `LContainer` binding at a given location.\n     *\n     *\n     * NOTE: it is assumed that `Array.isArray` and `typeof` operations are very efficient.\n     */\n    /**\n     * Returns `RNode`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapRNode(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return unwrapRNode(lView[index + HEADER_OFFSET]);\n    }\n    /**\n     * Retrieve an `RNode` for a given `TNode` and `LView`.\n     *\n     * This function guarantees in dev mode to retrieve a non-null `RNode`.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNode(tNode, lView) {\n        ngDevMode && assertTNodeForLView(tNode, lView);\n        ngDevMode && assertDataInRange(lView, tNode.index);\n        var node = unwrapRNode(lView[tNode.index]);\n        ngDevMode && assertDomNode(node);\n        return node;\n    }\n    /**\n     * Retrieve an `RNode` or `null` for a given `TNode` and `LView`.\n     *\n     * Some `TNode`s don't have associated `RNode`s. For example `Projection`\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNodeOrNull(tNode, lView) {\n        ngDevMode && assertTNodeForLView(tNode, lView);\n        var index = tNode.index;\n        var node = index == -1 ? null : unwrapRNode(lView[index]);\n        ngDevMode && node !== null && assertDomNode(node);\n        return node;\n    }\n    /**\n     * A helper function that returns `true` if a given `TNode` has any matching directives.\n     */\n    function hasDirectives(tNode) {\n        return tNode.directiveEnd > tNode.directiveStart;\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function loadInternal(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        var slotValue = hostView[nodeIndex];\n        var lView = isLView(slotValue) ? slotValue : slotValue[HOST];\n        return lView;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        return (view[FLAGS] & 4 /* CreationMode */) === 4 /* CreationMode */;\n    }\n    /**\n     * Returns a boolean for whether the view is attached to the change detection tree.\n     *\n     * Note: This determines whether a view should be checked, not whether it's inserted\n     * into a container. For that, you'll want `viewAttachedToContainer` below.\n     */\n    function viewAttachedToChangeDetector(view) {\n        return (view[FLAGS] & 128 /* Attached */) === 128 /* Attached */;\n    }\n    /** Returns a boolean for whether the view is attached to a container. */\n    function viewAttachedToContainer(view) {\n        return isLContainer(view[PARENT]);\n    }\n    /**\n     * Resets the pre-order hook flags of the view.\n     * @param lView the LView on which the flags are reset\n     */\n    function resetPreOrderHookFlags(lView) {\n        lView[PREORDER_HOOK_FLAGS] = 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    var currentDirectiveDef = null;\n    function getCurrentDirectiveDef() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        currentDirectiveDef = def;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵenableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵdisableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    /**\n     * Used as the starting directive id value.\n     *\n     * All subsequent directives are incremented from this value onwards.\n     * The reason why this value is `1` instead of `0` is because the `0`\n     * value is reserved for the template.\n     */\n    var MIN_DIRECTIVE_ID = 1;\n    var activeDirectiveId = MIN_DIRECTIVE_ID;\n    /**\n     * Position depth (with respect from leaf to root) in a directive sub-class inheritance chain.\n     */\n    var activeDirectiveSuperClassDepthPosition = 0;\n    /**\n     * Total count of how many directives are a part of an inheritance chain.\n     *\n     * When directives are sub-classed (extended) from one to another, Angular\n     * needs to keep track of exactly how many were encountered so it can accurately\n     * generate the next directive id (once the next directive id is visited).\n     * Normally the next directive id just a single incremented value from the\n     * previous one, however, if the previous directive is a part of an inheritance\n     * chain (a series of sub-classed directives) then the incremented value must\n     * also take into account the total amount of sub-classed values.\n     *\n     * Note that this value resets back to zero once the next directive is\n     * visited (when `incrementActiveDirectiveId` or `setActiveHostElement`\n     * is called).\n     */\n    var activeDirectiveSuperClassHeight = 0;\n    /**\n     * Sets the active directive host element and resets the directive id value\n     * (when the provided elementIndex value has changed).\n     *\n     * @param elementIndex the element index value for the host element where\n     *                     the directive/component instance lives\n     */\n    function setActiveHostElement(elementIndex) {\n        if (elementIndex === void 0) { elementIndex = null; }\n        if (_selectedIndex !== elementIndex) {\n            setSelectedIndex(elementIndex === null ? -1 : elementIndex);\n            activeDirectiveId = elementIndex === null ? 0 : MIN_DIRECTIVE_ID;\n            activeDirectiveSuperClassDepthPosition = 0;\n            activeDirectiveSuperClassHeight = 0;\n        }\n    }\n    /**\n     * Returns the current id value of the current directive.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (id == 1)\n     * dirTwo->hostBindings() (id == 2)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function getActiveDirectiveId() {\n        return activeDirectiveId;\n    }\n    /**\n     * Increments the current directive id value.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (index = 1)\n     * // increment\n     * dirTwo->hostBindings() (index = 2)\n     *\n     * Depending on whether or not a previous directive had any inherited\n     * directives present, that value will be incremented in addition\n     * to the id jumping up by one.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function incrementActiveDirectiveId() {\n        activeDirectiveId += 1 + activeDirectiveSuperClassHeight;\n        // because we are dealing with a new directive this\n        // means we have exited out of the inheritance chain\n        activeDirectiveSuperClassDepthPosition = 0;\n        activeDirectiveSuperClassHeight = 0;\n    }\n    /**\n     * Set the current super class (reverse inheritance) position depth for a directive.\n     *\n     * For example we have two directives: Child and Other (but Child is a sub-class of Parent)\n     * <div child-dir other-dir></div>\n     *\n     * // increment\n     * parentInstance->hostBindings() (depth = 1)\n     * // decrement\n     * childInstance->hostBindings() (depth = 0)\n     * otherInstance->hostBindings() (depth = 0 b/c it's a different directive)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     */\n    function adjustActiveDirectiveSuperClassDepthPosition(delta) {\n        activeDirectiveSuperClassDepthPosition += delta;\n        // we keep track of the height value so that when the next directive is visited\n        // then Angular knows to generate a new directive id value which has taken into\n        // account how many sub-class directives were a part of the previous directive.\n        activeDirectiveSuperClassHeight =\n            Math.max(activeDirectiveSuperClassHeight, activeDirectiveSuperClassDepthPosition);\n    }\n    /**\n     * Returns he current depth of the super/sub class inheritance chain.\n     *\n     * This will return how many inherited directive/component classes\n     * exist in the current chain.\n     *\n     * ```typescript\n     * @Directive({ selector: '[super-dir]' })\n     * class SuperDir {}\n     *\n     * @Directive({ selector: '[sub-dir]' })\n     * class SubDir extends SuperDir {}\n     *\n     * // if `<div sub-dir>` is used then the super class height is `1`\n     * // if `<div super-dir>` is used then the super class height is `0`\n     * ```\n     */\n    function getActiveDirectiveSuperClassHeight() {\n        return activeDirectiveSuperClassHeight;\n    }\n    /**\n     * Returns the current super class (reverse inheritance) depth for a directive.\n     *\n     * This is designed to help instruction code distinguish different hostBindings\n     * calls from each other when a directive has extended from another directive.\n     * Normally using the directive id value is enough, but with the case\n     * of parent/sub-class directive inheritance more information is required.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     */\n    function getActiveDirectiveSuperClassDepth() {\n        return activeDirectiveSuperClassDepthPosition;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     *\n     * @codeGenApi\n     */\n    function ɵɵrestoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode, _isParent) {\n        previousOrParentTNode = tNode;\n        isParent = _isParent;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        ngDevMode && assertLViewOrUndefined(view);\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsNotParent() {\n        isParent = false;\n    }\n    function setIsParent() {\n        isParent = true;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Current index of a View or Content Query which needs to be processed next.\n     * We iterate over the list of Queries and increment current query index at every step.\n     */\n    var currentQueryIndex = 0;\n    function getCurrentQueryIndex() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueryIndex;\n    }\n    function setCurrentQueryIndex(value) {\n        currentQueryIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        ngDevMode && assertLViewOrUndefined(newView);\n        var oldView = lView;\n        if (newView) {\n            var tView = newView[TVIEW];\n            bindingRootIndex = tView.bindingStartIndex;\n        }\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n        setCurrentStyleSanitizer(null);\n        resetAllStylingState();\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     * @param safeToRunHooks Whether the runtime is in a state where running lifecycle hooks is valid.\n     * This is not always the case (for example, the application may have crashed and `leaveView` is\n     * being executed while unwinding the call stack).\n     */\n    function leaveView(newView, safeToRunHooks) {\n        var tView = lView[TVIEW];\n        if (isCreationMode(lView)) {\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        else {\n            try {\n                resetPreOrderHookFlags(lView);\n                safeToRunHooks && executeHooks(lView, tView.viewHooks, tView.viewCheckHooks, checkNoChangesMode, 2 /* AfterViewInitHooksToBeRun */, undefined);\n            }\n            finally {\n                // Views are clean and in update mode after being checked, so these bits are cleared\n                lView[FLAGS] &= ~(64 /* Dirty */ | 8 /* FirstLViewPass */);\n                lView[BINDING_INDEX] = tView.bindingStartIndex;\n            }\n        }\n        enterView(newView, null);\n    }\n    var _selectedIndex = -1;\n    /**\n     * Gets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function getSelectedIndex() {\n        return _selectedIndex;\n    }\n    /**\n     * Sets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function setSelectedIndex(index) {\n        _selectedIndex = index;\n        // we have now jumped to another element\n        // therefore the state is stale\n        resetStylingState();\n    }\n    var _currentNamespace = null;\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/2000/svg'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/1998/MathML/'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceHTML() {\n        namespaceHTMLInternal();\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     */\n    function namespaceHTMLInternal() {\n        _currentNamespace = null;\n    }\n    function getNamespace() {\n        return _currentNamespace;\n    }\n    var _currentSanitizer;\n    function setCurrentStyleSanitizer(sanitizer) {\n        _currentSanitizer = sanitizer;\n    }\n    function getCurrentStyleSanitizer() {\n        return _currentSanitizer;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    /**\n     * Used for stringify render output in Ivy.\n     * Important! This function is very performance-sensitive and we should\n     * be extra careful not to introduce megamorphic reads in it.\n     */\n    function renderStringify(value) {\n        if (typeof value === 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Used to stringify a value so that it can be displayed in an error message.\n     * Important! This function contains a megamorphic read and should only be\n     * used for error messages.\n     */\n    function stringifyForError(value) {\n        if (typeof value === 'function')\n            return value.name || value.toString();\n        if (typeof value === 'object' && value != null && typeof value.type === 'function') {\n            return value.type.name || value.type.toString();\n        }\n        return renderStringify(value);\n    }\n    var defaultScheduler = (function () {\n        return (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n            setTimeout // everything else\n        ).bind(_global);\n    })();\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n    /**\n     * The special delimiter we use to separate property names, prefixes, and suffixes\n     * in property binding metadata. See storeBindingMetadata().\n     *\n     * We intentionally use the Unicode \"REPLACEMENT CHARACTER\" (U+FFFD) as a delimiter\n     * because it is a very uncommon character that is unlikely to be part of a user's\n     * property names or interpolation strings. If it is in fact used in a property\n     * binding, DebugElement.properties will not return the correct value for that\n     * binding. However, there should be no runtime effect for real applications.\n     *\n     * This character is typically rendered as a question mark inside of a diamond.\n     * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)\n     *\n     */\n    var INTERPOLATION_DELIMITER = \"\\uFFFD\";\n    /**\n     * Determines whether or not the given string is a property metadata string.\n     * See storeBindingMetadata().\n     */\n    function isPropMetadataString(str) {\n        return str.indexOf(INTERPOLATION_DELIMITER) >= 0;\n    }\n    /**\n     * Unwrap a value which might be behind a closure (for forward declaration reasons).\n     */\n    function maybeUnwrapFn(value) {\n        if (value instanceof Function) {\n            return value();\n        }\n        else {\n            return value;\n        }\n    }\n\n    var MAP_BASED_ENTRY_PROP_NAME = '--MAP--';\n    var TEMPLATE_DIRECTIVE_INDEX = 0;\n    /**\n     * Creates a new instance of the `TStylingContext`.\n     *\n     * The `TStylingContext` is used as a manifest of all style or all class bindings on\n     * an element. Because it is a T-level data-structure, it is only created once per\n     * tNode for styles and for classes. This function allocates a new instance of a\n     * `TStylingContext` with the initial values (see `interfaces.ts` for more info).\n     */\n    function allocTStylingContext(initialStyling) {\n        // because map-based bindings deal with a dynamic set of values, there\n        // is no way to know ahead of time whether or not sanitization is required.\n        // For this reason the configuration will always mark sanitization as active\n        // (this means that when map-based values are applied then sanitization will\n        // be checked against each property).\n        var mapBasedConfig = 1 /* SanitizationRequired */;\n        return [\n            initialStyling || [''],\n            0 /* Initial */,\n            TEMPLATE_DIRECTIVE_INDEX,\n            mapBasedConfig,\n            0,\n            MAP_BASED_ENTRY_PROP_NAME,\n        ];\n    }\n    /**\n     * Sets the provided directive as the last directive index in the provided `TStylingContext`.\n     *\n     * Styling in Angular can be applied from the template as well as multiple sources of\n     * host bindings. This means that each binding function (the template function or the\n     * hostBindings functions) will generate styling instructions as well as a styling\n     * apply function (i.e. `stylingApply()`). Because host bindings functions and the\n     * template function are independent from one another this means that the styling apply\n     * function will be called multiple times. By tracking the last directive index (which\n     * is what happens in this function) the styling algorithm knows exactly when to flush\n     * styling (which is when the last styling apply function is executed).\n     */\n    function updateLastDirectiveIndex(context, lastDirectiveIndex) {\n        if (lastDirectiveIndex === TEMPLATE_DIRECTIVE_INDEX) {\n            var currentValue = context[2 /* LastDirectiveIndexPosition */];\n            if (currentValue > TEMPLATE_DIRECTIVE_INDEX) {\n                // This means that a directive or two contained a host bindings function, but\n                // now the template function also contains styling. When this combination of sources\n                // comes up then we need to tell the context to store the state between updates\n                // (because host bindings evaluation happens after template binding evaluation).\n                markContextToPersistState(context);\n            }\n        }\n        else {\n            context[2 /* LastDirectiveIndexPosition */] = lastDirectiveIndex;\n        }\n    }\n    function getConfig(context) {\n        return context[1 /* ConfigPosition */];\n    }\n    function setConfig(context, value) {\n        context[1 /* ConfigPosition */] = value;\n    }\n    function getProp(context, index) {\n        return context[index + 2 /* PropOffset */];\n    }\n    function getPropConfig(context, index) {\n        return context[index + 0 /* ConfigAndGuardOffset */] &\n            1 /* Mask */;\n    }\n    function isSanitizationRequired(context, index) {\n        return (getPropConfig(context, index) & 1 /* SanitizationRequired */) > 0;\n    }\n    function getGuardMask(context, index) {\n        var configGuardValue = context[index + 0 /* ConfigAndGuardOffset */];\n        return configGuardValue >> 1 /* TotalBits */;\n    }\n    function setGuardMask(context, index, maskValue) {\n        var config = getPropConfig(context, index);\n        var guardMask = maskValue << 1 /* TotalBits */;\n        context[index + 0 /* ConfigAndGuardOffset */] = config | guardMask;\n    }\n    function getValuesCount(context, index) {\n        return context[index + 1 /* ValuesCountOffset */];\n    }\n    function getBindingValue(context, index, offset) {\n        return context[index + 3 /* BindingsStartOffset */ + offset];\n    }\n    function getDefaultValue(context, index) {\n        var valuesCount = getValuesCount(context, index);\n        return context[index + 3 /* BindingsStartOffset */ + valuesCount - 1];\n    }\n    /**\n     * Temporary function which determines whether or not a context is\n     * allowed to be flushed based on the provided directive index.\n     */\n    function allowStylingFlush(context, index) {\n        return (context && index === context[2 /* LastDirectiveIndexPosition */]) ? true :\n            false;\n    }\n    function lockContext(context) {\n        setConfig(context, getConfig(context) | 1 /* Locked */);\n    }\n    function isContextLocked(context) {\n        return (getConfig(context) & 1 /* Locked */) > 0;\n    }\n    function stateIsPersisted(context) {\n        return (getConfig(context) & 2 /* PersistStateValues */) > 0;\n    }\n    function markContextToPersistState(context) {\n        setConfig(context, getConfig(context) | 2 /* PersistStateValues */);\n    }\n    function getPropValuesStartPosition(context) {\n        return 6 /* MapBindingsBindingsStartPosition */ +\n            context[4 /* MapBindingsValuesCountPosition */];\n    }\n    function hasValueChanged(a, b) {\n        var compareValueA = Array.isArray(a) ? a[0 /* RawValuePosition */] : a;\n        var compareValueB = Array.isArray(b) ? b[0 /* RawValuePosition */] : b;\n        // these are special cases for String based values (which are created as artifacts\n        // when sanitization is bypassed on a particular value)\n        if (compareValueA instanceof String) {\n            compareValueA = compareValueA.toString();\n        }\n        if (compareValueB instanceof String) {\n            compareValueB = compareValueB.toString();\n        }\n        return isDifferent(compareValueA, compareValueB);\n    }\n    /**\n     * Determines whether the provided styling value is truthy or falsy.\n     */\n    function isStylingValueDefined(value) {\n        // the reason why null is compared against is because\n        // a CSS class value that is set to `false` must be\n        // respected (otherwise it would be treated as falsy).\n        // Empty string values are because developers usually\n        // set a value to an empty string to remove it.\n        return value != null && value !== '';\n    }\n    function concatString(a, b, separator) {\n        if (separator === void 0) { separator = ' '; }\n        return a + ((b.length && a.length) ? separator : '') + b;\n    }\n    function hyphenate(value) {\n        return value.replace(/[a-z][A-Z]/g, function (v) { return v.charAt(0) + '-' + v.charAt(1); }).toLowerCase();\n    }\n    /**\n     * Returns an instance of `StylingMapArray`.\n     *\n     * This function is designed to find an instance of `StylingMapArray` in case it is stored\n     * inside of an instance of `TStylingContext`. When a styling context is created it\n     * will copy over an initial styling values from the tNode (which are stored as a\n     * `StylingMapArray` on the `tNode.classes` or `tNode.styles` values).\n     */\n    function getStylingMapArray(value) {\n        return isStylingContext(value) ?\n            value[0 /* InitialStylingValuePosition */] :\n            value;\n    }\n    function isStylingContext(value) {\n        // the StylingMapArray is in the format of [initial, prop, string, prop, string]\n        // and this is the defining value to distinguish between arrays\n        return Array.isArray(value) &&\n            value.length >= 6 /* MapBindingsBindingsStartPosition */ &&\n            typeof value[1] !== 'string';\n    }\n    function getInitialStylingValue(context) {\n        var map = getStylingMapArray(context);\n        return map && map[0 /* RawValuePosition */] || '';\n    }\n    function hasClassInput(tNode) {\n        return (tNode.flags & 8 /* hasClassInput */) !== 0;\n    }\n    function hasStyleInput(tNode) {\n        return (tNode.flags & 16 /* hasStyleInput */) !== 0;\n    }\n    function getMapProp(map, index) {\n        return map[index + 0 /* PropOffset */];\n    }\n    function setMapValue(map, index, value) {\n        map[index + 1 /* ValueOffset */] = value;\n    }\n    function getMapValue(map, index) {\n        return map[index + 1 /* ValueOffset */];\n    }\n    function forceClassesAsString(classes) {\n        if (classes && typeof classes !== 'string') {\n            classes = Object.keys(classes).join(' ');\n        }\n        return classes || '';\n    }\n    function forceStylesAsString(styles) {\n        var str = '';\n        if (styles) {\n            var props = Object.keys(styles);\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                str = concatString(str, prop + \":\" + styles[prop], ';');\n            }\n        }\n        return str;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * Assigns all attribute values to the provided element via the inferred renderer.\n     *\n     * This function accepts two forms of attribute entries:\n     *\n     * default: (key, value):\n     *  attrs = [key1, value1, key2, value2]\n     *\n     * namespaced: (NAMESPACE_MARKER, uri, name, value)\n     *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n     *\n     * The `attrs` array can contain a mix of both the default and namespaced entries.\n     * The \"default\" values are set without a marker, but if the function comes across\n     * a marker value then it will attempt to set a namespaced value. If the marker is\n     * not of a namespaced value then the function will quit and return the index value\n     * where it stopped during the iteration of the attrs array.\n     *\n     * See [AttributeMarker] to understand what the namespace marker value is.\n     *\n     * Note that this instruction does not support assigning style and class values to\n     * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n     * are applied to an element.\n     * @param renderer The renderer to be used\n     * @param native The element that the attributes will be assigned to\n     * @param attrs The attribute array of values that will be assigned to the element\n     * @returns the index value that was last accessed in the attributes array\n     */\n    function setUpAttributes(renderer, native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                // only namespaces are supported. Other value types (such as style/class\n                // entries) are not supported in this function.\n                if (value !== 0 /* NamespaceURI */) {\n                    break;\n                }\n                // we just landed on the marker value ... therefore\n                // we should skip to the next entry\n                i++;\n                var namespaceURI = attrs[i++];\n                var attrName = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n            }\n            else {\n                // attrName is string;\n                var attrName = value;\n                var attrVal = attrs[++i];\n                // Standard attributes\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (isAnimationProp(attrName)) {\n                    if (isProc) {\n                        renderer.setProperty(native, attrName, attrVal);\n                    }\n                }\n                else {\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                }\n                i++;\n            }\n        }\n        // another piece of code may iterate over the same attributes array. Therefore\n        // it may be helpful to return the exact spot where the attributes array exited\n        // whether by running into an unsupported marker or if all the static values were\n        // iterated over.\n        return i;\n    }\n    /**\n     * Test whether the given value is a marker that indicates that the following\n     * attribute values in a `TAttributes` array are only the names of attributes,\n     * and not name-value pairs.\n     * @param marker The attribute marker to test.\n     * @returns true if the marker is a \"name-only\" marker (e.g. `Bindings`, `Template` or `I18n`).\n     */\n    function isNameOnlyAttributeMarker(marker) {\n        return marker === 3 /* Bindings */ || marker === 4 /* Template */ ||\n            marker === 6 /* I18n */;\n    }\n    var ANIMATION_PROP_PREFIX = '@';\n    function isAnimationProp(name) {\n        return name[0] === ANIMATION_PROP_PREFIX;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /// Parent Injector Utils ///////////////////////////////////////////////////////////////\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Gets the parent LView of the passed LView, if the PARENT is an LContainer, will get the parent of\n     * that LContainer, which is an LView\n     * @param lView the lView whose parent to get\n     */\n    function getLViewParent(lView) {\n        ngDevMode && assertLView(lView);\n        var parent = lView[PARENT];\n        return isLContainer(parent) ? parent[PARENT] : parent;\n    }\n    /**\n     * Retrieve the root view from any component or `LView` by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrLView any component or `LView`\n     */\n    function getRootView(componentOrLView) {\n        ngDevMode && assertDefined(componentOrLView, 'component');\n        var lView = isLView(componentOrLView) ? componentOrLView : readPatchedLView(componentOrLView);\n        while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n            lView = getLViewParent(lView);\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Given an `LView`, find the closest declaration view which is not an embedded view.\n     *\n     * This method searches for the `LView` associated with the component which declared the `LView`.\n     *\n     * This function may return itself if the `LView` passed in is not an embedded `LView`. Otherwise\n     * it walks the declaration parents until it finds a component view (non-embedded-view.)\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[T_HOST];\n        while (rootTNode !== null && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n            lView = lView[DECLARATION_VIEW];\n            rootTNode = lView[T_HOST];\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated. It does this by walking the parent views until it\n     * gets to the root view, then getting the context off of that.\n     *\n     * @param viewOrComponent the `LView` or component to get the root context for.\n     */\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 1 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentLView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[T_HOST];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[T_HOST] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, tView, token) {\n        bloomAdd(injectorIndex, tView, token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        if (attrNameToInject === 'class') {\n            return getInitialStylingValue(tNode.classes);\n        }\n        if (attrNameToInject === 'style') {\n            return getInitialStylingValue(tNode.styles);\n        }\n        var attrs = tNode.attrs;\n        if (attrs) {\n            var attrsLength = attrs.length;\n            var i = 0;\n            while (i < attrsLength) {\n                var value = attrs[i];\n                // If we hit a `Bindings` or `Template` marker then we are done.\n                if (isNameOnlyAttributeMarker(value))\n                    break;\n                // Skip namespaced attributes\n                if (value === 0 /* NamespaceURI */) {\n                    // we skip the next two values\n                    // as namespaced attributes looks like\n                    // [..., AttributeMarker.NamespaceURI, 'http://someuri.com/test', 'test:exist',\n                    // 'existValue', ...]\n                    i = i + 2;\n                }\n                else if (typeof value === 'number') {\n                    // Skip to the first value of the marked attribute.\n                    i++;\n                    while (i < attrsLength && typeof attrs[i] === 'string') {\n                        i++;\n                    }\n                }\n                else if (value === attrNameToInject) {\n                    return attrs[i + 1];\n                }\n                else {\n                    i = i + 2;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n     * filter. Negative values are reserved for special objects.\n     *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                var savePreviousOrParentTNode = getPreviousOrParentTNode();\n                var saveLView = getLView();\n                setTNodeAndViewData(tNode, lView);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + stringifyForError(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                if (bloomHash === -1) {\n                    // `-1` is a special value used to identify `Injector` types.\n                    return new NodeInjector(tNode, lView);\n                }\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? findComponentView(lView)[T_HOST] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR$1];\n            // switch to `injectInjectorOnly` implementation for module injector, since module injector\n            // should not have access to Component/Directive DI scope (that may happen through\n            // `directiveInject` implementation)\n            var previousInjectImplementation = setInjectImplementation(undefined);\n            try {\n                if (moduleInjector) {\n                    return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n                else {\n                    return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n            }\n            finally {\n                setInjectImplementation(previousInjectImplementation);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringifyForError(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponent(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, currentTView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param tView The tView we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, tView, token, canAccessViewProviders, isHostSpecialCase) {\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringifyForError(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(undefined, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     *   When the returned value is negative then it represents special values such as `Injector`.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        // Negative token IDs are used for special objects such as `Injector`\n        return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetFactoryOf(type) {\n        var typeAny = type;\n        if (isForwardRef(type)) {\n            return (function () {\n                var factory = ɵɵgetFactoryOf(resolveForwardRef(typeAny));\n                return factory ? factory() : null;\n            });\n        }\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = ɵɵgetFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type);\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either an allowed protocol (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var e_2, _a;\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // Accessibility attributes as per WAI-ARIA 1.1 (W3C Working Draft 14 December 2018)\n    var ARIA_ATTRS = tagSet('aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,' +\n        'aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,' +\n        'aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,' +\n        'aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,' +\n        'aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,' +\n        'aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,' +\n        'aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS, ARIA_ATTRS);\n    // Elements whose content should not be traversed/preserved, if the elements themselves are invalid.\n    //\n    // Typically, `<invalid>Some content</invalid>` would traverse (and in this case preserve)\n    // `Some content`, but strip `invalid-element` opening/closing tags. For some elements, though, we\n    // don't want to preserve the content, if the elements themselves are going to be removed.\n    var SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS = tagSet('script,style,template');\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var traverseContent = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    traverseContent = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (traverseContent && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Sanitizes an opening element tag (if valid) and returns whether the element's contents should\n         * be traversed. Element content must always be traversed (even if the element itself is not\n         * valid/safe), unless the element is one of `SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS`.\n         *\n         * @param element The element to sanitize.\n         * @return True if the element's contents should be traversed.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return !SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS.hasOwnProperty(tagName);\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|Z|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, renderStringify(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(renderStringify(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(renderStringify(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return ɵɵsanitizeResourceUrl;\n        }\n        return ɵɵsanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     *\n     * @publicApi\n     */\n    var ɵɵdefaultStyleSanitizer = function (prop, value, mode) {\n        mode = mode || 3 /* ValidateAndSanitize */;\n        var doSanitizeValue = true;\n        if (mode & 1 /* ValidateProperty */) {\n            doSanitizeValue = prop === 'background-image' || prop === 'background' ||\n                prop === 'border-image' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image' || prop === 'clip-path';\n        }\n        if (mode & 2 /* SanitizeOnly */) {\n            return doSanitizeValue ? ɵɵsanitizeStyle(value) : value;\n        }\n        else {\n            return doSanitizeValue;\n        }\n    };\n    function validateAgainstEventProperties(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            throw new Error(msg);\n        }\n    }\n    function validateAgainstEventAttributes(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            throw new Error(msg);\n        }\n    }\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * THIS FILE CONTAINS CODE WHICH SHOULD BE TREE SHAKEN AND NEVER CALLED FROM PRODUCTION CODE!!!\n     */\n    /**\n     * Creates an `Array` construction with a given name. This is useful when\n     * looking for memory consumption to see what time of array it is.\n     *\n     *\n     * @param name Name to give to the constructor\n     * @returns A subclass of `Array` if possible. This can only be done in\n     *          environments which support `class` construct.\n     */\n    function createNamedArrayType(name) {\n        // This should never be called in prod mode, so let's verify that is the case.\n        if (ngDevMode) {\n            try {\n                // We need to do it this way so that TypeScript does not down-level the below code.\n                var FunctionConstructor = createNamedArrayType.constructor;\n                return (new FunctionConstructor('Array', \"return class ABC extends Array{}\"))(Array);\n            }\n            catch (e) {\n                // If it does not work just give up and fall back to regular Array.\n                return Array;\n            }\n        }\n        else {\n            throw new Error('Looks like we are in \\'prod mode\\', but we are creating a named Array type, which is wrong! Check your code');\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = unwrapRNode(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = unwrapRNode(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNodeOrNull(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 1 /* isComponent */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 1 /* isComponent */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                result[tNode.localNames[i]] = lView[localIndex];\n                localIndex++;\n            }\n            return result;\n        }\n        return null;\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n    function throwMixedMultiProviderError() {\n        throw new Error(\"Cannot mix multi providers and regular providers\");\n    }\n    function throwInvalidProviderError(ngModuleType, providers, provider) {\n        var ngModuleDetail = '';\n        if (ngModuleType && providers) {\n            var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n            ngModuleDetail =\n                \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n        }\n        throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n    }\n\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be performed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode:\n     * - in the \"directive matching\" mode we do _not_ take TContainer's tagName into account if it is\n     * different from NG_TEMPLATE_SELECTOR (value different from NG_TEMPLATE_SELECTOR indicates that a\n     * tag name was extracted from * syntax so we would match the same directive twice);\n     * - in the \"projection\" mode, we use a tag name potentially extracted from the * syntax processing\n     * (applicable to TNodeType.Container only).\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        var tagNameToCompare = tNode.type === 0 /* Container */ && !isProjectionMode ?\n            NG_TEMPLATE_SELECTOR :\n            tNode.tagName;\n        return currentSelector === tagNameToCompare;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data of the node to match\n     * @param selector The selector to try matching against the node.\n     * @param isProjectionMode if `true` we are matching for content projection, otherwise we are doing\n     * directive matching.\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs || [];\n        // Find the index of first attribute that has no value, only a name.\n        var nameOnlyMarkerIdx = getNameOnlyMarkerIndex(nodeAttrs);\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                // special case for matching against classes when a tNode has been instantiated with\n                // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n                if ((mode & 8 /* CLASS */) && tNode.classes) {\n                    if (!isCssClassMatching(getInitialStylingValue(tNode.classes), selectorAttrValue)) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                    continue;\n                }\n                var isInlineTemplate = tNode.type == 0 /* Container */ && tNode.tagName !== NG_TEMPLATE_SELECTOR;\n                var attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs, isInlineTemplate, isProjectionMode);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    if (attrIndexInNode > nameOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(nodeAttrs[attrIndexInNode], 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    var compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                    if (compareAgainstClassName &&\n                        !isCssClassMatching(compareAgainstClassName, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines the attribute's definition array for a node to find the index of the\n     * attribute that matches the given `name`.\n     *\n     * NOTE: This will not match namespaced attributes.\n     *\n     * Attribute matching depends upon `isInlineTemplate` and `isProjectionMode`.\n     * The following table summarizes which types of attributes we attempt to match:\n     *\n     * ===========================================================================================================\n     * Modes                   | Normal Attributes | Bindings Attributes | Template Attributes | I18n\n     * Attributes\n     * ===========================================================================================================\n     * Inline + Projection     | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Inline + Directive      | NO                | NO                  | YES                 | NO\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Projection | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Directive  | YES               | YES                 | NO                  | YES\n     * ===========================================================================================================\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     * @param isInlineTemplate true if the node being matched is an inline template (e.g. `*ngFor`)\n     * rather than a manually expanded template node (e.g `<ng-template>`).\n     * @param isProjectionMode true if we are matching against content projection otherwise we are\n     * matching against directives.\n     */\n    function findAttrIndexInNode(name, attrs, isInlineTemplate, isProjectionMode) {\n        if (attrs === null)\n            return -1;\n        var i = 0;\n        if (isProjectionMode || !isInlineTemplate) {\n            var bindingsMode = false;\n            while (i < attrs.length) {\n                var maybeAttrName = attrs[i];\n                if (maybeAttrName === name) {\n                    return i;\n                }\n                else if (maybeAttrName === 3 /* Bindings */ || maybeAttrName === 6 /* I18n */) {\n                    bindingsMode = true;\n                }\n                else if (maybeAttrName === 1 /* Classes */ || maybeAttrName === 2 /* Styles */) {\n                    var value = attrs[++i];\n                    // We should skip classes here because we have a separate mechanism for\n                    // matching classes in projection mode.\n                    while (typeof value === 'string') {\n                        value = attrs[++i];\n                    }\n                    continue;\n                }\n                else if (maybeAttrName === 4 /* Template */) {\n                    // We do not care about Template attributes in this scenario.\n                    break;\n                }\n                else if (maybeAttrName === 0 /* NamespaceURI */) {\n                    // Skip the whole namespaced attribute and value. This is by design.\n                    i += 4;\n                    continue;\n                }\n                // In binding mode there are only names, rather than name-value pairs.\n                i += bindingsMode ? 1 : 2;\n            }\n            // We did not match the attribute\n            return -1;\n        }\n        else {\n            return matchTemplateAttribute(attrs, name);\n        }\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(5 /* ProjectAs */);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    function getNameOnlyMarkerIndex(nodeAttrs) {\n        for (var i = 0; i < nodeAttrs.length; i++) {\n            var nodeAttr = nodeAttrs[i];\n            if (isNameOnlyAttributeMarker(nodeAttr)) {\n                return i;\n            }\n        }\n        return nodeAttrs.length;\n    }\n    function matchTemplateAttribute(attrs, name) {\n        var i = attrs.indexOf(4 /* Template */);\n        if (i > -1) {\n            i++;\n            while (i < attrs.length) {\n                if (attrs[i] === name)\n                    return i;\n                i++;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Checks whether a selector is inside a CssSelectorList\n     * @param selector Selector to be checked.\n     * @param list List in which to look for the selector.\n     */\n    function isSelectorInSelectorList(selector, list) {\n        selectorListLoop: for (var i = 0; i < list.length; i++) {\n            var currentSelectorInList = list[i];\n            if (selector.length !== currentSelectorInList.length) {\n                continue;\n            }\n            for (var j = 0; j < selector.length; j++) {\n                if (selector[j] !== currentSelectorInList[j]) {\n                    continue selectorListLoop;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * --------\n     *\n     * This file contains the core logic for styling in Angular.\n     *\n     * All styling bindings (i.e. `[style]`, `[style.prop]`, `[class]` and `[class.name]`)\n     * will have their values be applied through the logic in this file.\n     *\n     * When a binding is encountered (e.g. `<div [style.width]=\"w\">`) then\n     * the binding data will be populated into a `TStylingContext` data-structure.\n     * There is only one `TStylingContext` per `TNode` and each element instance\n     * will update its style/class binding values in concert with the styling\n     * context.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    // The first bit value reflects a map-based binding value's bit.\n    // The reason why it's always activated for every entry in the map\n    // is so that if any map-binding values update then all other prop\n    // based bindings will pass the guard check automatically without\n    // any extra code or flags.\n    var DEFAULT_GUARD_MASK_VALUE = 1;\n    /**\n     * The guard/update mask bit index location for map-based bindings.\n     *\n     * All map-based bindings (i.e. `[style]` and `[class]` )\n     */\n    var STYLING_INDEX_FOR_MAP_BINDING = 0;\n    /**\n     * Default fallback value for a styling binding.\n     *\n     * A value of `null` is used here which signals to the styling algorithm that\n     * the styling value is not present. This way if there are no other values\n     * detected then it will be removed once the style/class property is dirty and\n     * diffed within the styling algorithm present in `flushStyling`.\n     */\n    var DEFAULT_BINDING_VALUE = null;\n    /**\n     * Default size count value for a new entry in a context.\n     *\n     * A value of `1` is used here because each entry in the context has a default\n     * property.\n     */\n    var DEFAULT_SIZE_VALUE = 1;\n    var deferredBindingQueue = [];\n    /**\n     * Visits a class-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a class-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time it's called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateClassBinding(context, data, element, prop, bindingIndex, value, deferRegistration, forceUpdate) {\n        var isMapBased = !prop;\n        var state = getStylingState(element, stateIsPersisted(context));\n        var index = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : state.classesIndex++;\n        var updated = updateBindingData(context, data, index, prop, bindingIndex, value, deferRegistration, forceUpdate, false);\n        if (updated || forceUpdate) {\n            // We flip the bit in the bitMask to reflect that the binding\n            // at the `index` slot has changed. This identifies to the flushing\n            // phase that the bindings for this particular CSS class need to be\n            // applied again because on or more of the bindings for the CSS\n            // class have changed.\n            state.classesBitMask |= 1 << index;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Visits a style-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a style-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time it's called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateStyleBinding(context, data, element, prop, bindingIndex, value, sanitizer, deferRegistration, forceUpdate) {\n        var isMapBased = !prop;\n        var state = getStylingState(element, stateIsPersisted(context));\n        var index = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : state.stylesIndex++;\n        var sanitizationRequired = isMapBased ?\n            true :\n            (sanitizer ? sanitizer(prop, null, 1 /* ValidateProperty */) : false);\n        var updated = updateBindingData(context, data, index, prop, bindingIndex, value, deferRegistration, forceUpdate, sanitizationRequired);\n        if (updated || forceUpdate) {\n            // We flip the bit in the bitMask to reflect that the binding\n            // at the `index` slot has changed. This identifies to the flushing\n            // phase that the bindings for this particular property need to be\n            // applied again because on or more of the bindings for the CSS\n            // property have changed.\n            state.stylesBitMask |= 1 << index;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Called each time a binding value has changed within the provided `TStylingContext`.\n     *\n     * This function is designed to be called from `updateStyleBinding` and `updateClassBinding`.\n     * If called during the first update pass, the binding will be registered in the context.\n     * If the binding does get registered and the `deferRegistration` flag is true then the\n     * binding data will be queued up until the context is later flushed in `applyStyling`.\n     *\n     * This function will also update binding slot in the provided `LStylingData` with the\n     * new binding entry (if it has changed).\n     *\n     * @returns whether or not the binding value was updated in the `LStylingData`.\n     */\n    function updateBindingData(context, data, counterIndex, prop, bindingIndex, value, deferRegistration, forceUpdate, sanitizationRequired) {\n        if (!isContextLocked(context)) {\n            if (deferRegistration) {\n                deferBindingRegistration(context, counterIndex, prop, bindingIndex, sanitizationRequired);\n            }\n            else {\n                deferredBindingQueue.length && flushDeferredBindings();\n                // this will only happen during the first update pass of the\n                // context. The reason why we can't use `tNode.firstTemplatePass`\n                // here is because its not guaranteed to be true when the first\n                // update pass is executed (remember that all styling instructions\n                // are run in the update phase, and, as a result, are no more\n                // styling instructions that are run in the creation phase).\n                registerBinding(context, counterIndex, prop, bindingIndex, sanitizationRequired);\n            }\n        }\n        var changed = forceUpdate || hasValueChanged(data[bindingIndex], value);\n        if (changed) {\n            data[bindingIndex] = value;\n        }\n        return changed;\n    }\n    /**\n     * Schedules a binding registration to be run at a later point.\n     *\n     * The reasoning for this feature is to ensure that styling\n     * bindings are registered in the correct order for when\n     * directives/components have a super/sub class inheritance\n     * chains. Each directive's styling bindings must be\n     * registered into the context in reverse order. Therefore all\n     * bindings will be buffered in reverse order and then applied\n     * after the inheritance chain exits.\n     */\n    function deferBindingRegistration(context, counterIndex, prop, bindingIndex, sanitizationRequired) {\n        deferredBindingQueue.unshift(context, counterIndex, prop, bindingIndex, sanitizationRequired);\n    }\n    /**\n     * Flushes the collection of deferred bindings and causes each entry\n     * to be registered into the context.\n     */\n    function flushDeferredBindings() {\n        var i = 0;\n        while (i < deferredBindingQueue.length) {\n            var context = deferredBindingQueue[i++];\n            var count = deferredBindingQueue[i++];\n            var prop = deferredBindingQueue[i++];\n            var bindingIndex = deferredBindingQueue[i++];\n            var sanitizationRequired = deferredBindingQueue[i++];\n            registerBinding(context, count, prop, bindingIndex, sanitizationRequired);\n        }\n        deferredBindingQueue.length = 0;\n    }\n    /**\n     * Registers the provided binding (prop + bindingIndex) into the context.\n     *\n     * This function is shared between bindings that are assigned immediately\n     * (via `updateBindingData`) and at a deferred stage. When called, it will\n     * figure out exactly where to place the binding data in the context.\n     *\n     * It is needed because it will either update or insert a styling property\n     * into the context at the correct spot.\n     *\n     * When called, one of two things will happen:\n     *\n     * 1) If the property already exists in the context then it will just add\n     *    the provided `bindingValue` to the end of the binding sources region\n     *    for that particular property.\n     *\n     *    - If the binding value is a number then it will be added as a new\n     *      binding index source next to the other binding sources for the property.\n     *\n     *    - Otherwise, if the binding value is a string/boolean/null type then it will\n     *      replace the default value for the property if the default value is `null`.\n     *\n     * 2) If the property does not exist then it will be inserted into the context.\n     *    The styling context relies on all properties being stored in alphabetical\n     *    order, so it knows exactly where to store it.\n     *\n     *    When inserted, a default `null` value is created for the property which exists\n     *    as the default value for the binding. If the bindingValue property is inserted\n     *    and it is either a string, number or null value then that will replace the default\n     *    value.\n     *\n     * Note that this function is also used for map-based styling bindings. They are treated\n     * much the same as prop-based bindings, but, because they do not have a property value\n     * (since it's a map), all map-based entries are stored in an already populated area of\n     * the context at the top (which is reserved for map-based entries).\n     */\n    function registerBinding(context, countId, prop, bindingValue, sanitizationRequired) {\n        var registered = false;\n        if (prop) {\n            // prop-based bindings (e.g `<div [style.width]=\"w\" [class.foo]=\"f\">`)\n            var found = false;\n            var i = getPropValuesStartPosition(context);\n            while (i < context.length) {\n                var valuesCount = getValuesCount(context, i);\n                var p = getProp(context, i);\n                found = prop <= p;\n                if (found) {\n                    // all style/class bindings are sorted by property name\n                    if (prop < p) {\n                        allocateNewContextEntry(context, i, prop, sanitizationRequired);\n                    }\n                    addBindingIntoContext(context, false, i, bindingValue, countId);\n                    break;\n                }\n                i += 3 /* BindingsStartOffset */ + valuesCount;\n            }\n            if (!found) {\n                allocateNewContextEntry(context, context.length, prop, sanitizationRequired);\n                addBindingIntoContext(context, false, i, bindingValue, countId);\n                registered = true;\n            }\n        }\n        else {\n            // map-based bindings (e.g `<div [style]=\"s\" [class]=\"{className:true}\">`)\n            // there is no need to allocate the map-based binding region into the context\n            // since it is already there when the context is first created.\n            addBindingIntoContext(context, true, 3 /* MapBindingsPosition */, bindingValue, countId);\n            registered = true;\n        }\n        return registered;\n    }\n    function allocateNewContextEntry(context, index, prop, sanitizationRequired) {\n        // 1,2: splice index locations\n        // 3: each entry gets a config value (guard mask + flags)\n        // 4. each entry gets a size value (which is always one because there is always a default binding\n        // value)\n        // 5. the property that is getting allocated into the context\n        // 6. the default binding value (usually `null`)\n        var config = sanitizationRequired ? 1 /* SanitizationRequired */ :\n            0 /* Default */;\n        context.splice(index, 0, config, DEFAULT_SIZE_VALUE, prop, DEFAULT_BINDING_VALUE);\n        setGuardMask(context, index, DEFAULT_GUARD_MASK_VALUE);\n    }\n    /**\n     * Inserts a new binding value into a styling property tuple in the `TStylingContext`.\n     *\n     * A bindingValue is inserted into a context during the first update pass\n     * of a template or host bindings function. When this occurs, two things\n     * happen:\n     *\n     * - If the bindingValue value is a number then it is treated as a bindingIndex\n     *   value (a index in the `LView`) and it will be inserted next to the other\n     *   binding index entries.\n     *\n     * - Otherwise the binding value will update the default value for the property\n     *   and this will only happen if the default value is `null`.\n     *\n     * Note that this function also handles map-based bindings and will insert them\n     * at the top of the context.\n     */\n    function addBindingIntoContext(context, isMapBased, index, bindingValue, countId) {\n        var valuesCount = getValuesCount(context, index);\n        var firstValueIndex = index + 3 /* BindingsStartOffset */;\n        var lastValueIndex = firstValueIndex + valuesCount;\n        if (!isMapBased) {\n            // prop-based values all have default values, but map-based entries do not.\n            // we want to access the index for the default value in this case and not just\n            // the bindings...\n            lastValueIndex--;\n        }\n        if (typeof bindingValue === 'number') {\n            // the loop here will check to see if the binding already exists\n            // for the property in the context. Why? The reason for this is\n            // because the styling context is not \"locked\" until the first\n            // flush has occurred. This means that if a repeated element\n            // registers its styling bindings then it will register each\n            // binding more than once (since its duplicated). This check\n            // will prevent that from happening. Note that this only happens\n            // when a binding is first encountered and not each time it is\n            // updated.\n            for (var i = firstValueIndex; i <= lastValueIndex; i++) {\n                var indexAtPosition = context[i];\n                if (indexAtPosition === bindingValue)\n                    return;\n            }\n            context.splice(lastValueIndex, 0, bindingValue);\n            context[index + 1 /* ValuesCountOffset */]++;\n            // now that a new binding index has been added to the property\n            // the guard mask bit value (at the `countId` position) needs\n            // to be included into the existing mask value.\n            var guardMask = getGuardMask(context, index) | (1 << countId);\n            setGuardMask(context, index, guardMask);\n        }\n        else if (bindingValue !== null && context[lastValueIndex] == null) {\n            context[lastValueIndex] = bindingValue;\n        }\n    }\n    /**\n     * Applies all pending style and class bindings to the provided element.\n     *\n     * This function will attempt to flush styling via the provided `classesContext`\n     * and `stylesContext` context values. This function is designed to be run from\n     * the `stylingApply()` instruction (which is run at the very end of styling\n     * change detection) and will rely on any state values that are set from when\n     * any styling bindings update.\n     *\n     * This function may be called multiple times on the same element because it can\n     * be called from the template code as well as from host bindings. In order for\n     * styling to be successfully flushed to the element (which will only happen once\n     * despite this being called multiple times), the following criteria must be met:\n     *\n     * - `flushStyling` is called from the very last directive that has styling for\n     *    the element (see `allowStylingFlush()`).\n     * - one or more bindings for classes or styles has updated (this is checked by\n     *   examining the classes or styles bit mask).\n     *\n     * If the style and class values are successfully applied to the element then\n     * the temporary state values for the element will be cleared. Otherwise, if\n     * this did not occur then the styling state is persisted (see `state.ts` for\n     * more information on how this works).\n     */\n    function flushStyling(renderer, data, classesContext, stylesContext, element, directiveIndex, styleSanitizer) {\n        ngDevMode && ngDevMode.flushStyling++;\n        var persistState = classesContext ? stateIsPersisted(classesContext) :\n            (stylesContext ? stateIsPersisted(stylesContext) : false);\n        var allowFlushClasses = allowStylingFlush(classesContext, directiveIndex);\n        var allowFlushStyles = allowStylingFlush(stylesContext, directiveIndex);\n        // deferred bindings are bindings which are scheduled to register with\n        // the context at a later point. These bindings can only registered when\n        // the context will be 100% flushed to the element.\n        if (deferredBindingQueue.length && (allowFlushClasses || allowFlushStyles)) {\n            flushDeferredBindings();\n        }\n        var state = getStylingState(element, persistState);\n        var classesFlushed = maybeApplyStyling(renderer, element, data, classesContext, allowFlushClasses, state.classesBitMask, setClass, null);\n        var stylesFlushed = maybeApplyStyling(renderer, element, data, stylesContext, allowFlushStyles, state.stylesBitMask, setStyle, styleSanitizer);\n        if (classesFlushed && stylesFlushed) {\n            resetStylingState();\n            if (persistState) {\n                deleteStylingStateFromStorage(element);\n            }\n        }\n        else if (persistState) {\n            storeStylingState(element, state);\n        }\n    }\n    function maybeApplyStyling(renderer, element, data, context, allowFlush, bitMask, styleSetter, styleSanitizer) {\n        if (allowFlush && context) {\n            lockAndFinalizeContext(context);\n            if (contextHasUpdates(context, bitMask)) {\n                ngDevMode && (styleSanitizer ? ngDevMode.stylesApplied++ : ngDevMode.classesApplied++);\n                applyStyling(context, renderer, element, data, bitMask, styleSetter, styleSanitizer);\n                return true;\n            }\n        }\n        return allowFlush;\n    }\n    function contextHasUpdates(context, bitMask) {\n        return context && bitMask > BIT_MASK_START_VALUE;\n    }\n    /**\n     * Locks the context (so no more bindings can be added) and also copies over initial class/style\n     * values into their binding areas.\n     *\n     * There are two main actions that take place in this function:\n     *\n     * - Locking the context:\n     *   Locking the context is required so that the style/class instructions know NOT to\n     *   register a binding again after the first update pass has run. If a locking bit was\n     *   not used then it would need to scan over the context each time an instruction is run\n     *   (which is expensive).\n     *\n     * - Patching initial values:\n     *   Directives and component host bindings may include static class/style values which are\n     *   bound to the host element. When this happens, the styling context will need to be informed\n     *   so it can use these static styling values as defaults when a matching binding is falsy.\n     *   These initial styling values are read from the initial styling values slot within the\n     *   provided `TStylingContext` (which is an instance of a `StylingMapArray`). This inner map will\n     *   be updated each time a host binding applies its static styling values (via `elementHostAttrs`)\n     *   so these values are only read at this point because this is the very last point before the\n     *   first style/class values are flushed to the element.\n     */\n    function lockAndFinalizeContext(context) {\n        if (!isContextLocked(context)) {\n            var initialValues = getStylingMapArray(context);\n            if (initialValues) {\n                updateInitialStylingOnContext(context, initialValues);\n            }\n            lockContext(context);\n        }\n    }\n    /**\n     * Runs through the provided styling context and applies each value to\n     * the provided element (via the renderer) if one or more values are present.\n     *\n     * This function will iterate over all entries present in the provided\n     * `TStylingContext` array (both prop-based and map-based bindings).-\n     *\n     * Each entry, within the `TStylingContext` array, is stored alphabetically\n     * and this means that each prop/value entry will be applied in order\n     * (so long as it is marked dirty in the provided `bitMask` value).\n     *\n     * If there are any map-based entries present (which are applied to the\n     * element via the `[style]` and `[class]` bindings) then those entries\n     * will be applied as well. However, the code for that is not a part of\n     * this function. Instead, each time a property is visited, then the\n     * code below will call an external function called `stylingMapsSyncFn`\n     * and, if present, it will keep the application of styling values in\n     * map-based bindings up to sync with the application of prop-based\n     * bindings.\n     *\n     * Visit `styling_next/map_based_bindings.ts` to learn more about how the\n     * algorithm works for map-based styling bindings.\n     *\n     * Note that this function is not designed to be called in isolation (use\n     * `applyClasses` and `applyStyles` to actually apply styling values).\n     */\n    function applyStyling(context, renderer, element, bindingData, bitMaskValue, applyStylingFn, sanitizer) {\n        var bitMask = normalizeBitMaskValue(bitMaskValue);\n        var stylingMapsSyncFn = getStylingMapsSyncFn();\n        var mapsGuardMask = getGuardMask(context, 3 /* MapBindingsPosition */);\n        var applyAllValues = (bitMask & mapsGuardMask) > 0;\n        var mapsMode = applyAllValues ? 1 /* ApplyAllValues */ : 0 /* TraverseValues */;\n        var i = getPropValuesStartPosition(context);\n        while (i < context.length) {\n            var valuesCount = getValuesCount(context, i);\n            var guardMask = getGuardMask(context, i);\n            if (bitMask & guardMask) {\n                var valueApplied = false;\n                var prop = getProp(context, i);\n                var valuesCountUpToDefault = valuesCount - 1;\n                var defaultValue = getBindingValue(context, i, valuesCountUpToDefault);\n                // case 1: apply prop-based values\n                // try to apply the binding values and see if a non-null\n                // value gets set for the styling binding\n                for (var j = 0; j < valuesCountUpToDefault; j++) {\n                    var bindingIndex = getBindingValue(context, i, j);\n                    var value = bindingData[bindingIndex];\n                    if (isStylingValueDefined(value)) {\n                        var finalValue = sanitizer && isSanitizationRequired(context, i) ?\n                            sanitizer(prop, value, 2 /* SanitizeOnly */) :\n                            value;\n                        applyStylingFn(renderer, element, prop, finalValue, bindingIndex);\n                        valueApplied = true;\n                        break;\n                    }\n                }\n                // case 2: apply map-based values\n                // traverse through each map-based styling binding and update all values up to\n                // the provided `prop` value. If the property was not applied in the loop above\n                // then it will be attempted to be applied in the maps sync code below.\n                if (stylingMapsSyncFn) {\n                    // determine whether or not to apply the target property or to skip it\n                    var mode = mapsMode | (valueApplied ? 4 /* SkipTargetProp */ :\n                        2 /* ApplyTargetProp */);\n                    var valueAppliedWithinMap = stylingMapsSyncFn(context, renderer, element, bindingData, applyStylingFn, sanitizer, mode, prop, defaultValue);\n                    valueApplied = valueApplied || valueAppliedWithinMap;\n                }\n                // case 3: apply the default value\n                // if the value has not yet been applied then a truthy value does not exist in the\n                // prop-based or map-based bindings code. If and when this happens, just apply the\n                // default value (even if the default value is `null`).\n                if (!valueApplied) {\n                    applyStylingFn(renderer, element, prop, defaultValue);\n                }\n            }\n            i += 3 /* BindingsStartOffset */ + valuesCount;\n        }\n        // the map-based styling entries may have not applied all their\n        // values. For this reason, one more call to the sync function\n        // needs to be issued at the end.\n        if (stylingMapsSyncFn) {\n            stylingMapsSyncFn(context, renderer, element, bindingData, applyStylingFn, sanitizer, mapsMode);\n        }\n    }\n    function normalizeBitMaskValue(value) {\n        // if pass => apply all values (-1 implies that all bits are flipped to true)\n        if (value === true)\n            return -1;\n        // if pass => skip all values\n        if (value === false)\n            return 0;\n        // return the bit mask value as is\n        return value;\n    }\n    var _activeStylingMapApplyFn = null;\n    function getStylingMapsSyncFn() {\n        return _activeStylingMapApplyFn;\n    }\n    function setStylingMapsSyncFn(fn) {\n        _activeStylingMapApplyFn = fn;\n    }\n    /**\n     * Assigns a style value to a style property for the given element.\n     */\n    var setStyle = function (renderer, native, prop, value) {\n        // the reason why this may be `null` is either because\n        // it's a container element or it's a part of a test\n        // environment that doesn't have styling. In either\n        // case it's safe not to apply styling to the element.\n        var nativeStyle = native.style;\n        if (value) {\n            // opacity, z-index and flexbox all have number values\n            // and these need to be converted into strings so that\n            // they can be assigned properly.\n            value = value.toString();\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            renderer && isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                (nativeStyle && nativeStyle.setProperty(prop, value));\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            renderer && isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                (nativeStyle && nativeStyle.removeProperty(prop));\n        }\n    };\n    /**\n     * Adds/removes the provided className value to the provided element.\n     */\n    var setClass = function (renderer, native, className, value) {\n        if (className !== '') {\n            // the reason why this may be `null` is either because\n            // it's a container element or it's a part of a test\n            // environment that doesn't have styling. In either\n            // case it's safe not to apply styling to the element.\n            var classList = native.classList;\n            if (value) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                renderer && isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                    (classList && classList.add(className));\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                renderer && isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                    (classList && classList.remove(className));\n            }\n        }\n    };\n    /**\n     * Iterates over all provided styling entries and renders them on the element.\n     *\n     * This function is used alongside a `StylingMapArray` entry. This entry is not\n     * the same as the `TStylingContext` and is only really used when an element contains\n     * initial styling values (e.g. `<div style=\"width:200px\">`), but no style/class bindings\n     * are present. If and when that happens then this function will be called to render all\n     * initial styling values on an element.\n     */\n    function renderStylingMap(renderer, element, stylingValues, isClassBased) {\n        var stylingMapArr = getStylingMapArray(stylingValues);\n        if (stylingMapArr) {\n            for (var i = 1 /* ValuesStartPosition */; i < stylingMapArr.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(stylingMapArr, i);\n                var value = getMapValue(stylingMapArr, i);\n                if (isClassBased) {\n                    setClass(renderer, element, prop, value, null);\n                }\n                else {\n                    setStyle(renderer, element, prop, value, null);\n                }\n            }\n        }\n    }\n    /**\n     * Registers all initial styling entries into the provided context.\n     *\n     * This function will iterate over all entries in the provided `initialStyling` ar}ray and register\n     * them as default (initial) values in the provided context. Initial styling values in a context are\n     * the default values that are to be applied unless overwritten by a binding.\n     *\n     * The reason why this function exists and isn't a part of the context construction is because\n     * host binding is evaluated at a later stage after the element is created. This means that\n     * if a directive or component contains any initial styling code (i.e. `<div class=\"foo\">`)\n     * then that initial styling data can only be applied once the styling for that element\n     * is first applied (at the end of the update phase). Once that happens then the context will\n     * update itself with the complete initial styling for the element.\n     */\n    function updateInitialStylingOnContext(context, initialStyling) {\n        // `-1` is used here because all initial styling data is not a spart\n        // of a binding (since it's static)\n        var INITIAL_STYLING_COUNT_ID = -1;\n        for (var i = 1 /* ValuesStartPosition */; i < initialStyling.length; i += 2 /* TupleSize */) {\n            var value = getMapValue(initialStyling, i);\n            if (value) {\n                var prop = getMapProp(initialStyling, i);\n                registerBinding(context, INITIAL_STYLING_COUNT_ID, prop, value, false);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachDebugObject(obj, debug) {\n        Object.defineProperty(obj, 'debug', { value: debug, enumerable: false });\n    }\n\n    /**\n     * --------\n     *\n     * This file contains the algorithm logic for applying map-based bindings\n     * such as `[style]` and `[class]`.\n     *\n     * --------\n     */\n    /**\n     * Used to apply styling values presently within any map-based bindings on an element.\n     *\n     * Angular supports map-based styling bindings which can be applied via the\n     * `[style]` and `[class]` bindings which can be placed on any HTML element.\n     * These bindings can work independently, together or alongside prop-based\n     * styling bindings (e.g. `<div [style]=\"x\" [style.width]=\"w\">`).\n     *\n     * If a map-based styling binding is detected by the compiler, the following\n     * AOT code is produced:\n     *\n     * ```typescript\n     * styleMap(ctx.styles); // styles = {key:value}\n     * classMap(ctx.classes); // classes = {key:value}|string\n     * ```\n     *\n     * If and when either of the instructions above are evaluated, then the code\n     * present in this file is included into the bundle. The mechanism used, to\n     * activate support for map-based bindings at runtime is possible via the\n     * `activeStylingMapFeature` function (which is also present in this file).\n     *\n     * # The Algorithm\n     * Whenever a map-based binding updates (which is when the identity of the\n     * map-value changes) then the map is iterated over and a `StylingMapArray` array\n     * is produced. The `StylingMapArray` instance is stored in the binding location\n     * where the `BINDING_INDEX` is situated when the `styleMap()` or `classMap()`\n     * instruction were called. Once the binding changes, then the internal `bitMask`\n     * value is marked as dirty.\n     *\n     * Styling values are applied once CD exits the element (which happens when\n     * the `select(n)` instruction is called or the template function exits). When\n     * this occurs, all prop-based bindings are applied. If a map-based binding is\n     * present then a special flushing function (called a sync function) is made\n     * available and it will be called each time a styling property is flushed.\n     *\n     * The flushing algorithm is designed to apply styling for a property (which is\n     * a CSS property or a className value) one by one. If map-based bindings\n     * are present, then the flushing algorithm will keep calling the maps styling\n     * sync function each time a property is visited. This way, the flushing\n     * behavior of map-based bindings will always be at the same property level\n     * as the current prop-based property being iterated over (because everything\n     * is alphabetically sorted).\n     *\n     * Let's imagine we have the following HTML template code:\n     *\n     * ```html\n     * <div [style]=\"{width:'100px', height:'200px', 'z-index':'10'}\"\n     *      [style.width.px]=\"200\">...</div>\n     * ```\n     *\n     * When CD occurs, both the `[style]` and `[style.width]` bindings\n     * are evaluated. Then when the styles are flushed on screen, the\n     * following operations happen:\n     *\n     * 1. `[style.width]` is attempted to be written to the element.\n     *\n     * 2.  Once that happens, the algorithm instructs the map-based\n     *     entries (`[style]` in this case) to \"catch up\" and apply\n     *     all values up to the `width` value. When this happens the\n     *     `height` value is applied to the element (since it is\n     *     alphabetically situated before the `width` property).\n     *\n     * 3. Since there are no more prop-based entries anymore, the\n     *    loop exits and then, just before the flushing ends, it\n     *    instructs all map-based bindings to \"finish up\" applying\n     *    their values.\n     *\n     * 4. The only remaining value within the map-based entries is\n     *    the `z-index` value (`width` got skipped because it was\n     *    successfully applied via the prop-based `[style.width]`\n     *    binding). Since all map-based entries are told to \"finish up\",\n     *    the `z-index` value is iterated over and it is then applied\n     *    to the element.\n     *\n     * The most important thing to take note of here is that prop-based\n     * bindings are evaluated in order alongside map-based bindings.\n     * This allows all styling across an element to be applied in O(n)\n     * time (a similar algorithm is that of the array merge algorithm\n     * in merge sort).\n     */\n    var syncStylingMap = function (context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, defaultValue) {\n        var targetPropValueWasApplied = false;\n        // once the map-based styling code is activate it is never deactivated. For this reason a\n        // check to see if the current styling context has any map based bindings is required.\n        var totalMaps = getValuesCount(context, 3 /* MapBindingsPosition */);\n        if (totalMaps) {\n            var runTheSyncAlgorithm = true;\n            var loopUntilEnd = !targetProp;\n            // If the code is told to finish up (run until the end), but the mode\n            // hasn't been flagged to apply values (it only traverses values) then\n            // there is no point in iterating over the array because nothing will\n            // be applied to the element.\n            if (loopUntilEnd && (mode & ~1 /* ApplyAllValues */)) {\n                runTheSyncAlgorithm = false;\n                targetPropValueWasApplied = true;\n            }\n            if (runTheSyncAlgorithm) {\n                targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp || null, 0, defaultValue || null);\n            }\n            if (loopUntilEnd) {\n                resetSyncCursors();\n            }\n        }\n        return targetPropValueWasApplied;\n    };\n    /**\n     * Recursive function designed to apply map-based styling to an element one map at a time.\n     *\n     * This function is designed to be called from the `syncStylingMap` function and will\n     * apply map-based styling data one map at a time to the provided `element`.\n     *\n     * This function is recursive and it will call itself if a follow-up map value is to be\n     * processed. To learn more about how the algorithm works, see `syncStylingMap`.\n     */\n    function innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex, defaultValue) {\n        var targetPropValueWasApplied = false;\n        var totalMaps = getValuesCount(context, 3 /* MapBindingsPosition */);\n        if (currentMapIndex < totalMaps) {\n            var bindingIndex = getBindingValue(context, 3 /* MapBindingsPosition */, currentMapIndex);\n            var stylingMapArr = data[bindingIndex];\n            var cursor = getCurrentSyncCursor(currentMapIndex);\n            while (cursor < stylingMapArr.length) {\n                var prop = getMapProp(stylingMapArr, cursor);\n                var iteratedTooFar = targetProp && prop > targetProp;\n                var isTargetPropMatched = !iteratedTooFar && prop === targetProp;\n                var value = getMapValue(stylingMapArr, cursor);\n                var valueIsDefined = isStylingValueDefined(value);\n                // the recursive code is designed to keep applying until\n                // it reaches or goes past the target prop. If and when\n                // this happens then it will stop processing values, but\n                // all other map values must also catch up to the same\n                // point. This is why a recursive call is still issued\n                // even if the code has iterated too far.\n                var innerMode = iteratedTooFar ? mode : resolveInnerMapMode(mode, valueIsDefined, isTargetPropMatched);\n                var innerProp = iteratedTooFar ? targetProp : prop;\n                var valueApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, innerMode, innerProp, currentMapIndex + 1, defaultValue);\n                if (iteratedTooFar) {\n                    if (!targetPropValueWasApplied) {\n                        targetPropValueWasApplied = valueApplied;\n                    }\n                    break;\n                }\n                if (!valueApplied && isValueAllowedToBeApplied(mode, isTargetPropMatched)) {\n                    var useDefault = isTargetPropMatched && !valueIsDefined;\n                    var valueToApply = useDefault ? defaultValue : value;\n                    var bindingIndexToApply = useDefault ? bindingIndex : null;\n                    var finalValue = sanitizer ?\n                        sanitizer(prop, valueToApply, 3 /* ValidateAndSanitize */) :\n                        valueToApply;\n                    applyStylingFn(renderer, element, prop, finalValue, bindingIndexToApply);\n                    valueApplied = true;\n                }\n                targetPropValueWasApplied = valueApplied && isTargetPropMatched;\n                cursor += 2 /* TupleSize */;\n            }\n            setCurrentSyncCursor(currentMapIndex, cursor);\n            // this is a fallback case in the event that the styling map is `null` for this\n            // binding but there are other map-based bindings that need to be evaluated\n            // afterwards. If the `prop` value is falsy then the intention is to cycle\n            // through all of the properties in the remaining maps as well. If the current\n            // styling map is too short then there are no values to iterate over. In either\n            // case the follow-up maps need to be iterated over.\n            if (stylingMapArr.length === 1 /* ValuesStartPosition */ || !targetProp) {\n                return innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex + 1, defaultValue);\n            }\n        }\n        return targetPropValueWasApplied;\n    }\n    /**\n     * Enables support for map-based styling bindings (e.g. `[style]` and `[class]` bindings).\n     */\n    function activateStylingMapFeature() {\n        setStylingMapsSyncFn(syncStylingMap);\n    }\n    /**\n     * Used to determine the mode for the inner recursive call.\n     *\n     * If an inner map is iterated on then this is done so for one\n     * of two reasons:\n     *\n     * - value is being applied:\n     *   if the value is being applied from this current styling\n     *   map then there is no need to apply it in a deeper map.\n     *\n     * - value is being not applied:\n     *   apply the value if it is found in a deeper map.\n     *\n     * When these reasons are encountered the flags will for the\n     * inner map mode will be configured.\n     */\n    function resolveInnerMapMode(currentMode, valueIsDefined, isExactMatch) {\n        var innerMode = currentMode;\n        if (!valueIsDefined && !(currentMode & 4 /* SkipTargetProp */) &&\n            (isExactMatch || (currentMode & 1 /* ApplyAllValues */))) {\n            // case 1: set the mode to apply the targeted prop value if it\n            // ends up being encountered in another map value\n            innerMode |= 2 /* ApplyTargetProp */;\n            innerMode &= ~4 /* SkipTargetProp */;\n        }\n        else {\n            // case 2: set the mode to skip the targeted prop value if it\n            // ends up being encountered in another map value\n            innerMode |= 4 /* SkipTargetProp */;\n            innerMode &= ~2 /* ApplyTargetProp */;\n        }\n        return innerMode;\n    }\n    /**\n     * Decides whether or not a prop/value entry will be applied to an element.\n     *\n     * To determine whether or not a value is to be applied,\n     * the following procedure is evaluated:\n     *\n     * First check to see the current `mode` status:\n     *  1. If the mode value permits all props to be applied then allow.\n     *    - But do not allow if the current prop is set to be skipped.\n     *  2. Otherwise if the current prop is permitted then allow.\n     */\n    function isValueAllowedToBeApplied(mode, isTargetPropMatched) {\n        var doApplyValue = (mode & 1 /* ApplyAllValues */) > 0;\n        if (!doApplyValue) {\n            if (mode & 2 /* ApplyTargetProp */) {\n                doApplyValue = isTargetPropMatched;\n            }\n        }\n        else if ((mode & 4 /* SkipTargetProp */) && isTargetPropMatched) {\n            doApplyValue = false;\n        }\n        return doApplyValue;\n    }\n    /**\n     * Used to keep track of concurrent cursor values for multiple map-based styling bindings present on\n     * an element.\n     */\n    var MAP_CURSORS = [];\n    /**\n     * Used to reset the state of each cursor value being used to iterate over map-based styling\n     * bindings.\n     */\n    function resetSyncCursors() {\n        for (var i = 0; i < MAP_CURSORS.length; i++) {\n            MAP_CURSORS[i] = 1 /* ValuesStartPosition */;\n        }\n    }\n    /**\n     * Returns an active cursor value at a given mapIndex location.\n     */\n    function getCurrentSyncCursor(mapIndex) {\n        if (mapIndex >= MAP_CURSORS.length) {\n            MAP_CURSORS.push(1 /* ValuesStartPosition */);\n        }\n        return MAP_CURSORS[mapIndex];\n    }\n    /**\n     * Sets a cursor value at a given mapIndex location.\n     */\n    function setCurrentSyncCursor(mapIndex, indexValue) {\n        MAP_CURSORS[mapIndex] = indexValue;\n    }\n    /**\n     * Used to convert a {key:value} map into a `StylingMapArray` array.\n     *\n     * This function will either generate a new `StylingMapArray` instance\n     * or it will patch the provided `newValues` map value into an\n     * existing `StylingMapArray` value (this only happens if `bindingValue`\n     * is an instance of `StylingMapArray`).\n     *\n     * If a new key/value map is provided with an old `StylingMapArray`\n     * value then all properties will be overwritten with their new\n     * values or with `null`. This means that the array will never\n     * shrink in size (but it will also not be created and thrown\n     * away whenever the {key:value} map entries change).\n     */\n    function normalizeIntoStylingMap(bindingValue, newValues, normalizeProps) {\n        var stylingMapArr = Array.isArray(bindingValue) ? bindingValue : [null];\n        stylingMapArr[0 /* RawValuePosition */] = newValues || null;\n        // because the new values may not include all the properties\n        // that the old ones had, all values are set to `null` before\n        // the new values are applied. This way, when flushed, the\n        // styling algorithm knows exactly what style/class values\n        // to remove from the element (since they are `null`).\n        for (var j = 1 /* ValuesStartPosition */; j < stylingMapArr.length; j += 2 /* TupleSize */) {\n            setMapValue(stylingMapArr, j, null);\n        }\n        var props = null;\n        var map;\n        var allValuesTrue = false;\n        if (typeof newValues === 'string') { // [class] bindings allow string values\n            if (newValues.length) {\n                props = newValues.split(/\\s+/);\n                allValuesTrue = true;\n            }\n        }\n        else {\n            props = newValues ? Object.keys(newValues) : null;\n            map = newValues;\n        }\n        if (props) {\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                var newProp = normalizeProps ? hyphenate(prop) : prop;\n                var value = allValuesTrue ? true : map[prop];\n                addItemToStylingMap(stylingMapArr, newProp, value, true);\n            }\n        }\n        return stylingMapArr;\n    }\n    /**\n     * Inserts the provided item into the provided styling array at the right spot.\n     *\n     * The `StylingMapArray` type is a sorted key/value array of entries. This means\n     * that when a new entry is inserted it must be placed at the right spot in the\n     * array. This function figures out exactly where to place it.\n     */\n    function addItemToStylingMap(stylingMapArr, prop, value, allowOverwrite) {\n        for (var j = 1 /* ValuesStartPosition */; j < stylingMapArr.length; j += 2 /* TupleSize */) {\n            var propAtIndex = getMapProp(stylingMapArr, j);\n            if (prop <= propAtIndex) {\n                var applied = false;\n                if (propAtIndex === prop) {\n                    var valueAtIndex = stylingMapArr[j];\n                    if (allowOverwrite || !isStylingValueDefined(valueAtIndex)) {\n                        applied = true;\n                        setMapValue(stylingMapArr, j, value);\n                    }\n                }\n                else {\n                    applied = true;\n                    stylingMapArr.splice(j, 0, prop, value);\n                }\n                return applied;\n            }\n        }\n        stylingMapArr.push(prop, value);\n        return true;\n    }\n    /**\n     * Converts the provided styling map array into a string.\n     *\n     * Classes => `one two three`\n     * Styles => `prop:value; prop2:value2`\n     */\n    function stylingMapToString(map, isClassBased) {\n        var str = '';\n        for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n            var prop = getMapProp(map, i);\n            var value = getMapValue(map, i);\n            var attrValue = concatString(prop, isClassBased ? '' : value, ':');\n            str = concatString(str, attrValue, isClassBased ? ' ' : '; ');\n        }\n        return str;\n    }\n    /**\n     * Converts the provided styling map array into a key value map.\n     */\n    function stylingMapToStringMap(map) {\n        var stringMap = {};\n        if (map) {\n            for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(map, i);\n                var value = getMapValue(map, i);\n                stringMap[prop] = value;\n            }\n        }\n        return stringMap;\n    }\n\n    /**\n     * Instantiates and attaches an instance of `TStylingContextDebug` to the provided context.\n     */\n    function attachStylingDebugObject(context) {\n        var debug = new TStylingContextDebug(context);\n        attachDebugObject(context, debug);\n        return debug;\n    }\n    /**\n     * A human-readable debug summary of the styling data present within `TStylingContext`.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var TStylingContextDebug = /** @class */ (function () {\n        function TStylingContextDebug(context) {\n            this.context = context;\n        }\n        Object.defineProperty(TStylingContextDebug.prototype, \"isLocked\", {\n            get: function () { return isContextLocked(this.context); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TStylingContextDebug.prototype, \"entries\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context.\n             *\n             * See `TStylingTupleSummary`.\n             */\n            get: function () {\n                var context = this.context;\n                var entries = {};\n                var start = 3 /* MapBindingsPosition */;\n                var i = start;\n                while (i < context.length) {\n                    var valuesCount = getValuesCount(context, i);\n                    // the context may contain placeholder values which are populated ahead of time,\n                    // but contain no actual binding values. In this situation there is no point in\n                    // classifying this as an \"entry\" since no real data is stored here yet.\n                    if (valuesCount) {\n                        var prop = getProp(context, i);\n                        var guardMask = getGuardMask(context, i);\n                        var defaultValue = getDefaultValue(context, i);\n                        var sanitizationRequired = isSanitizationRequired(context, i);\n                        var bindingsStartPosition = i + 3 /* BindingsStartOffset */;\n                        var sources = [];\n                        for (var j = 0; j < valuesCount; j++) {\n                            sources.push(context[bindingsStartPosition + j]);\n                        }\n                        entries[prop] = { prop: prop, guardMask: guardMask, sanitizationRequired: sanitizationRequired, valuesCount: valuesCount, defaultValue: defaultValue, sources: sources };\n                    }\n                    i += 3 /* BindingsStartOffset */ + valuesCount;\n                }\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TStylingContextDebug;\n    }());\n    /**\n     * A human-readable debug summary of the styling data present for a `DebugNode` instance.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var NodeStylingDebug = /** @class */ (function () {\n        function NodeStylingDebug(context, _data, _isClassBased) {\n            this.context = context;\n            this._data = _data;\n            this._isClassBased = _isClassBased;\n            this._sanitizer = null;\n        }\n        /**\n         * Overrides the sanitizer used to process styles.\n         */\n        NodeStylingDebug.prototype.overrideSanitizer = function (sanitizer) { this._sanitizer = sanitizer; };\n        Object.defineProperty(NodeStylingDebug.prototype, \"summary\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context and\n             * what their runtime representation is.\n             *\n             * See `LStylingSummary`.\n             */\n            get: function () {\n                var entries = {};\n                this._mapValues(function (prop, value, bindingIndex) {\n                    entries[prop] = { prop: prop, value: value, bindingIndex: bindingIndex };\n                });\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NodeStylingDebug.prototype, \"values\", {\n            /**\n             * Returns a key/value map of all the styles/classes that were last applied to the element.\n             */\n            get: function () {\n                var entries = {};\n                this._mapValues(function (prop, value) { entries[prop] = value; });\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NodeStylingDebug.prototype._mapValues = function (fn) {\n            // there is no need to store/track an element instance. The\n            // element is only used when the styling algorithm attempts to\n            // style the value (and we mock out the stylingApplyFn anyway).\n            var mockElement = {};\n            var hasMaps = getValuesCount(this.context, 3 /* MapBindingsPosition */) > 0;\n            if (hasMaps) {\n                activateStylingMapFeature();\n            }\n            var mapFn = function (renderer, element, prop, value, bindingIndex) { fn(prop, value, bindingIndex || null); };\n            var sanitizer = this._isClassBased ? null : (this._sanitizer || getCurrentStyleSanitizer());\n            applyStyling(this.context, null, mockElement, this._data, true, mapFn, sanitizer);\n        };\n        return NodeStylingDebug;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /*\n     * This file contains conditionally attached classes which provide human readable (debug) level\n     * information for `LView`, `LContainer` and other internal data structures. These data structures\n     * are stored internally as array which makes it very difficult during debugging to reason about the\n     * current state of the system.\n     *\n     * Patching the array with extra property does change the array's hidden class' but it does not\n     * change the cost of access, therefore this patching should not have significant if any impact in\n     * `ngDevMode` mode. (see: https://jsperf.com/array-vs-monkey-patch-array)\n     *\n     * So instead of seeing:\n     * ```\n     * Array(30) [Object, 659, null, …]\n     * ```\n     *\n     * You get to see:\n     * ```\n     * LViewDebug {\n     *   views: [...],\n     *   flags: {attached: true, ...}\n     *   nodes: [\n     *     {html: '<div id=\"123\">', ..., nodes: [\n     *       {html: '<span>', ..., nodes: null}\n     *     ]}\n     *   ]\n     * }\n     * ```\n     */\n    var LViewArray = ngDevMode && createNamedArrayType('LView');\n    var LVIEW_EMPTY; // can't initialize here or it will not be tree shaken, because `LView`\n    // constructor could have side-effects.\n    /**\n     * This function clones a blueprint and creates LView.\n     *\n     * Simple slice will keep the same type, and we need it to be LView\n     */\n    function cloneToLView(list) {\n        if (LVIEW_EMPTY === undefined)\n            LVIEW_EMPTY = new LViewArray();\n        return LVIEW_EMPTY.concat(list);\n    }\n    /**\n     * This class is a debug version of Object literal so that we can have constructor name show up in\n     * debug tools in ngDevMode.\n     */\n    var TViewConstructor = /** @class */ (function () {\n        function TView(id, //\n        blueprint, //\n        template, //\n        queries, //\n        viewQuery, //\n        node, //\n        data, //\n        bindingStartIndex, //\n        expandoStartIndex, //\n        expandoInstructions, //\n        firstTemplatePass, //\n        staticViewQueries, //\n        staticContentQueries, //\n        preOrderHooks, //\n        preOrderCheckHooks, //\n        contentHooks, //\n        contentCheckHooks, //\n        viewHooks, //\n        viewCheckHooks, //\n        destroyHooks, //\n        cleanup, //\n        contentQueries, //\n        components, //\n        directiveRegistry, //\n        pipeRegistry, //\n        firstChild, //\n        schemas) {\n            this.id = id;\n            this.blueprint = blueprint;\n            this.template = template;\n            this.queries = queries;\n            this.viewQuery = viewQuery;\n            this.node = node;\n            this.data = data;\n            this.bindingStartIndex = bindingStartIndex;\n            this.expandoStartIndex = expandoStartIndex;\n            this.expandoInstructions = expandoInstructions;\n            this.firstTemplatePass = firstTemplatePass;\n            this.staticViewQueries = staticViewQueries;\n            this.staticContentQueries = staticContentQueries;\n            this.preOrderHooks = preOrderHooks;\n            this.preOrderCheckHooks = preOrderCheckHooks;\n            this.contentHooks = contentHooks;\n            this.contentCheckHooks = contentCheckHooks;\n            this.viewHooks = viewHooks;\n            this.viewCheckHooks = viewCheckHooks;\n            this.destroyHooks = destroyHooks;\n            this.cleanup = cleanup;\n            this.contentQueries = contentQueries;\n            this.components = components;\n            this.directiveRegistry = directiveRegistry;\n            this.pipeRegistry = pipeRegistry;\n            this.firstChild = firstChild;\n            this.schemas = schemas;\n        }\n        return TView;\n    }());\n    var TNodeConstructor = /** @class */ (function () {\n        function TNode(tView_, //\n        type, //\n        index, //\n        injectorIndex, //\n        directiveStart, //\n        directiveEnd, //\n        propertyMetadataStartIndex, //\n        propertyMetadataEndIndex, //\n        flags, //\n        providerIndexes, //\n        tagName, //\n        attrs, //\n        localNames, //\n        initialInputs, //\n        inputs, //\n        outputs, //\n        tViews, //\n        next, //\n        projectionNext, //\n        child, //\n        parent, //\n        projection, //\n        styles, //\n        classes) {\n            this.tView_ = tView_;\n            this.type = type;\n            this.index = index;\n            this.injectorIndex = injectorIndex;\n            this.directiveStart = directiveStart;\n            this.directiveEnd = directiveEnd;\n            this.propertyMetadataStartIndex = propertyMetadataStartIndex;\n            this.propertyMetadataEndIndex = propertyMetadataEndIndex;\n            this.flags = flags;\n            this.providerIndexes = providerIndexes;\n            this.tagName = tagName;\n            this.attrs = attrs;\n            this.localNames = localNames;\n            this.initialInputs = initialInputs;\n            this.inputs = inputs;\n            this.outputs = outputs;\n            this.tViews = tViews;\n            this.next = next;\n            this.projectionNext = projectionNext;\n            this.child = child;\n            this.parent = parent;\n            this.projection = projection;\n            this.styles = styles;\n            this.classes = classes;\n        }\n        Object.defineProperty(TNode.prototype, \"type_\", {\n            get: function () {\n                switch (this.type) {\n                    case 0 /* Container */:\n                        return 'TNodeType.Container';\n                    case 3 /* Element */:\n                        return 'TNodeType.Element';\n                    case 4 /* ElementContainer */:\n                        return 'TNodeType.ElementContainer';\n                    case 5 /* IcuContainer */:\n                        return 'TNodeType.IcuContainer';\n                    case 1 /* Projection */:\n                        return 'TNodeType.Projection';\n                    case 2 /* View */:\n                        return 'TNodeType.View';\n                    default:\n                        return 'TNodeType.???';\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"flags_\", {\n            get: function () {\n                var flags = [];\n                if (this.flags & 8 /* hasClassInput */)\n                    flags.push('TNodeFlags.hasClassInput');\n                if (this.flags & 4 /* hasContentQuery */)\n                    flags.push('TNodeFlags.hasContentQuery');\n                if (this.flags & 16 /* hasStyleInput */)\n                    flags.push('TNodeFlags.hasStyleInput');\n                if (this.flags & 1 /* isComponent */)\n                    flags.push('TNodeFlags.isComponent');\n                if (this.flags & 32 /* isDetached */)\n                    flags.push('TNodeFlags.isDetached');\n                if (this.flags & 2 /* isProjected */)\n                    flags.push('TNodeFlags.isProjected');\n                return flags.join('|');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TNode;\n    }());\n    var TViewData = ngDevMode && createNamedArrayType('TViewData');\n    var TVIEWDATA_EMPTY; // can't initialize here or it will not be tree shaken, because `LView`\n    // constructor could have side-effects.\n    /**\n     * This function clones a blueprint and creates TData.\n     *\n     * Simple slice will keep the same type, and we need it to be TData\n     */\n    function cloneToTViewData(list) {\n        if (TVIEWDATA_EMPTY === undefined)\n            TVIEWDATA_EMPTY = new TViewData();\n        return TVIEWDATA_EMPTY.concat(list);\n    }\n    var LViewBlueprint = ngDevMode && createNamedArrayType('LViewBlueprint');\n    var MatchesArray = ngDevMode && createNamedArrayType('MatchesArray');\n    var TViewComponents = ngDevMode && createNamedArrayType('TViewComponents');\n    var TNodeLocalNames = ngDevMode && createNamedArrayType('TNodeLocalNames');\n    var TNodeInitialInputs = ngDevMode && createNamedArrayType('TNodeInitialInputs');\n    var TNodeInitialData = ngDevMode && createNamedArrayType('TNodeInitialData');\n    var LCleanup = ngDevMode && createNamedArrayType('LCleanup');\n    var TCleanup = ngDevMode && createNamedArrayType('TCleanup');\n    function attachLViewDebug(lView) {\n        attachDebugObject(lView, new LViewDebug(lView));\n    }\n    function attachLContainerDebug(lContainer) {\n        attachDebugObject(lContainer, new LContainerDebug(lContainer));\n    }\n    function toDebug(obj) {\n        if (obj) {\n            var debug = obj.debug;\n            assertDefined(debug, 'Object does not have a debug representation.');\n            return debug;\n        }\n        else {\n            return obj;\n        }\n    }\n    /**\n     * Use this method to unwrap a native element in `LView` and convert it into HTML for easier\n     * reading.\n     *\n     * @param value possibly wrapped native DOM node.\n     * @param includeChildren If `true` then the serialized HTML form will include child elements (same\n     * as `outerHTML`). If `false` then the serialized HTML form will only contain the element itself\n     * (will not serialize child elements).\n     */\n    function toHtml(value, includeChildren) {\n        if (includeChildren === void 0) { includeChildren = false; }\n        var node = unwrapRNode(value);\n        if (node) {\n            var isTextNode = node.nodeType === Node.TEXT_NODE;\n            var outerHTML = (isTextNode ? node.textContent : node.outerHTML) || '';\n            if (includeChildren || isTextNode) {\n                return outerHTML;\n            }\n            else {\n                var innerHTML = node.innerHTML;\n                return outerHTML.split(innerHTML)[0] || null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    var LViewDebug = /** @class */ (function () {\n        function LViewDebug(_raw_lView) {\n            this._raw_lView = _raw_lView;\n        }\n        Object.defineProperty(LViewDebug.prototype, \"flags\", {\n            /**\n             * Flags associated with the `LView` unpacked into a more readable state.\n             */\n            get: function () {\n                var flags = this._raw_lView[FLAGS];\n                return {\n                    __raw__flags__: flags,\n                    initPhaseState: flags & 3 /* InitPhaseStateMask */,\n                    creationMode: !!(flags & 4 /* CreationMode */),\n                    firstViewPass: !!(flags & 8 /* FirstLViewPass */),\n                    checkAlways: !!(flags & 16 /* CheckAlways */),\n                    dirty: !!(flags & 64 /* Dirty */),\n                    attached: !!(flags & 128 /* Attached */),\n                    destroyed: !!(flags & 256 /* Destroyed */),\n                    isRoot: !!(flags & 512 /* IsRoot */),\n                    indexWithinInitPhase: flags >> 10 /* IndexWithinInitPhaseShift */,\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lView[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"host\", {\n            get: function () { return toHtml(this._raw_lView[HOST], true); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"context\", {\n            get: function () { return this._raw_lView[CONTEXT]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"nodes\", {\n            /**\n             * The tree of nodes associated with the current `LView`. The nodes have been normalized into a\n             * tree structure with relevant details pulled out for readability.\n             */\n            get: function () {\n                var lView = this._raw_lView;\n                var tNode = lView[TVIEW].firstChild;\n                return toDebugNodes(tNode, lView);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"__other__\", {\n            /**\n             * Additional information which is hidden behind a property. The extra level of indirection is\n             * done so that the debug view would not be cluttered with properties which are only rarely\n             * relevant to the developer.\n             */\n            get: function () {\n                return {\n                    tView: this._raw_lView[TVIEW],\n                    cleanup: this._raw_lView[CLEANUP],\n                    injector: this._raw_lView[INJECTOR$1],\n                    rendererFactory: this._raw_lView[RENDERER_FACTORY],\n                    renderer: this._raw_lView[RENDERER],\n                    sanitizer: this._raw_lView[SANITIZER],\n                    childHead: toDebug(this._raw_lView[CHILD_HEAD]),\n                    next: toDebug(this._raw_lView[NEXT]),\n                    childTail: toDebug(this._raw_lView[CHILD_TAIL]),\n                    declarationView: toDebug(this._raw_lView[DECLARATION_VIEW]),\n                    queries: null,\n                    tHost: this._raw_lView[T_HOST],\n                    bindingIndex: this._raw_lView[BINDING_INDEX],\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childViews\", {\n            /**\n             * Normalized view of child views (and containers) attached at this location.\n             */\n            get: function () {\n                var childViews = [];\n                var child = this.__other__.childHead;\n                while (child) {\n                    childViews.push(child);\n                    child = child.__other__.next;\n                }\n                return childViews;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LViewDebug;\n    }());\n    /**\n     * Turns a flat list of nodes into a tree by walking the associated `TNode` tree.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function toDebugNodes(tNode, lView) {\n        if (tNode) {\n            var debugNodes = [];\n            var tNodeCursor = tNode;\n            while (tNodeCursor) {\n                var rawValue = lView[tNode.index];\n                var native = unwrapRNode(rawValue);\n                var componentLViewDebug = toDebug(readLViewValue(rawValue));\n                var styles = isStylingContext(tNode.styles) ?\n                    new NodeStylingDebug(tNode.styles, lView) :\n                    null;\n                var classes = isStylingContext(tNode.classes) ?\n                    new NodeStylingDebug(tNode.classes, lView, true) :\n                    null;\n                debugNodes.push({\n                    html: toHtml(native),\n                    native: native, styles: styles, classes: classes,\n                    nodes: toDebugNodes(tNode.child, lView),\n                    component: componentLViewDebug,\n                });\n                tNodeCursor = tNodeCursor.next;\n            }\n            return debugNodes;\n        }\n        else {\n            return null;\n        }\n    }\n    var LContainerDebug = /** @class */ (function () {\n        function LContainerDebug(_raw_lContainer) {\n            this._raw_lContainer = _raw_lContainer;\n        }\n        Object.defineProperty(LContainerDebug.prototype, \"activeIndex\", {\n            get: function () { return this._raw_lContainer[ACTIVE_INDEX]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"views\", {\n            get: function () {\n                return this._raw_lContainer.slice(CONTAINER_HEADER_OFFSET)\n                    .map(toDebug);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lContainer[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"movedViews\", {\n            get: function () { return this._raw_lContainer[MOVED_VIEWS]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"host\", {\n            get: function () { return this._raw_lContainer[HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"native\", {\n            get: function () { return this._raw_lContainer[NATIVE]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"__other__\", {\n            get: function () {\n                return {\n                    next: toDebug(this._raw_lContainer[NEXT]),\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LContainerDebug;\n    }());\n    /**\n     * Return an `LView` value if found.\n     *\n     * @param value `LView` if any\n     */\n    function readLViewValue(value) {\n        while (Array.isArray(value)) {\n            // This check is not quite right, as it does not take into account `StylingContext`\n            // This is why it is in debug, not in util.ts\n            if (value.length >= HEADER_OFFSET - 1)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    var I18NDebugItem = /** @class */ (function () {\n        function I18NDebugItem(__raw_opCode, _lView, nodeIndex, type) {\n            this.__raw_opCode = __raw_opCode;\n            this._lView = _lView;\n            this.nodeIndex = nodeIndex;\n            this.type = type;\n        }\n        Object.defineProperty(I18NDebugItem.prototype, \"tNode\", {\n            get: function () { return getTNode(this.nodeIndex, this._lView); },\n            enumerable: true,\n            configurable: true\n        });\n        return I18NDebugItem;\n    }());\n    /**\n     * Turns a list of \"Create\" & \"Update\" OpCodes into a human-readable list of operations for\n     * debugging purposes.\n     * @param mutateOpCodes mutation opCodes to read\n     * @param updateOpCodes update opCodes to read\n     * @param icus list of ICU expressions\n     * @param lView The view the opCodes are acting on\n     */\n    function attachI18nOpCodesDebug(mutateOpCodes, updateOpCodes, icus, lView) {\n        attachDebugObject(mutateOpCodes, new I18nMutateOpCodesDebug(mutateOpCodes, lView));\n        attachDebugObject(updateOpCodes, new I18nUpdateOpCodesDebug(updateOpCodes, icus, lView));\n        if (icus) {\n            icus.forEach(function (icu) {\n                icu.create.forEach(function (icuCase) { attachDebugObject(icuCase, new I18nMutateOpCodesDebug(icuCase, lView)); });\n                icu.update.forEach(function (icuCase) {\n                    attachDebugObject(icuCase, new I18nUpdateOpCodesDebug(icuCase, icus, lView));\n                });\n            });\n        }\n    }\n    var I18nMutateOpCodesDebug = /** @class */ (function () {\n        function I18nMutateOpCodesDebug(__raw_opCodes, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nMutateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    var opCode = __raw_opCodes[i];\n                    var result = void 0;\n                    if (typeof opCode === 'string') {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Create Text Node',\n                            nodeIndex: __raw_opCodes[++i],\n                            text: opCode,\n                        };\n                    }\n                    if (typeof opCode === 'number') {\n                        switch (opCode & 7 /* MASK_OPCODE */) {\n                            case 1 /* AppendChild */:\n                                var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                                result = new I18NDebugItem(opCode, __lView, destinationNodeIndex, 'AppendChild');\n                                break;\n                            case 0 /* Select */:\n                                var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, nodeIndex, 'Select');\n                                break;\n                            case 5 /* ElementEnd */:\n                                var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'ElementEnd');\n                                break;\n                            case 4 /* Attr */:\n                                elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'Attr');\n                                result['attrName'] = __raw_opCodes[++i];\n                                result['attrValue'] = __raw_opCodes[++i];\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        switch (opCode) {\n                            case COMMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'COMMENT_MARKER',\n                                    commentValue: __raw_opCodes[++i],\n                                    nodeIndex: __raw_opCodes[++i],\n                                };\n                                break;\n                            case ELEMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'ELEMENT_MARKER',\n                                };\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Unknown Op Code',\n                            code: opCode,\n                        };\n                    }\n                    results.push(result);\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nMutateOpCodesDebug;\n    }());\n    var I18nUpdateOpCodesDebug = /** @class */ (function () {\n        function I18nUpdateOpCodesDebug(__raw_opCodes, icus, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.icus = icus;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nUpdateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes, icus = _a.icus;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    // bit code to check if we should apply the next update\n                    var checkBit = __raw_opCodes[i];\n                    // Number of opCodes to skip until next set of update codes\n                    var skipCodes = __raw_opCodes[++i];\n                    var value = '';\n                    for (var j = i + 1; j <= (i + skipCodes); j++) {\n                        var opCode = __raw_opCodes[j];\n                        if (typeof opCode === 'string') {\n                            value += opCode;\n                        }\n                        else if (typeof opCode == 'number') {\n                            if (opCode < 0) {\n                                // It's a binding index whose value is negative\n                                // We cannot know the value of the binding so we only show the index\n                                value += \"\\uFFFD\" + (-opCode - 1) + \"\\uFFFD\";\n                            }\n                            else {\n                                var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                                var tIcuIndex = void 0;\n                                var tIcu = void 0;\n                                switch (opCode & 3 /* MASK_OPCODE */) {\n                                    case 1 /* Attr */:\n                                        var attrName = __raw_opCodes[++j];\n                                        var sanitizeFn = __raw_opCodes[++j];\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Attr',\n                                            attrValue: value, attrName: attrName, sanitizeFn: sanitizeFn,\n                                        });\n                                        break;\n                                    case 0 /* Text */:\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Text', nodeIndex: nodeIndex,\n                                            text: value,\n                                        });\n                                        break;\n                                    case 2 /* IcuSwitch */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        var result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuSwitch');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['mainBinding'] = value;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                    case 3 /* IcuUpdate */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuUpdate');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    i += skipCodes;\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nUpdateOpCodesDebug;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Selects an element for later binding instructions.\n     *\n     * Used in conjunction with instructions like {@link property} to act on elements with specified\n     * indices, for example those created with {@link element} or {@link elementStart}.\n     *\n     * ```ts\n     * (rf: RenderFlags, ctx: any) => {\n     *   if (rf & 1) {\n     *     element(0, 'div');\n     *   }\n     *   if (rf & 2) {\n     *     select(0); // Select the <div/> created above.\n     *     property('title', 'test');\n     *   }\n     *  }\n     * ```\n     * @param index the index of the item to act on with the following instructions\n     *\n     * @codeGenApi\n     */\n    function ɵɵselect(index) {\n        ngDevMode && assertGreaterThan(index, -1, 'Invalid index');\n        ngDevMode &&\n            assertLessThan(index, getLView().length - HEADER_OFFSET, 'Should be within range for the view data');\n        var lView = getLView();\n        selectInternal(lView, index);\n    }\n    function selectInternal(lView, index) {\n        // Flush the initial hooks for elements in the view that have been added up to this point.\n        executePreOrderHooks(lView, lView[TVIEW], getCheckNoChangesMode(), index);\n        // We must set the selected index *after* running the hooks, because hooks may have side-effects\n        // that cause other template functions to run, thus updating the selected index, which is global\n        // state. If we run `setSelectedIndex` *before* we run the hooks, in some cases the selected index\n        // will be altered by the time we leave the `ɵɵselect` instruction.\n        setSelectedIndex(index);\n    }\n\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = (function () { return Promise.resolve(null); })();\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(lView) {\n        var tView = lView[TVIEW];\n        var creationMode = isCreationMode(lView);\n        if (!creationMode) {\n            // Resetting the bindingIndex of the current LView as the next steps may trigger change\n            // detection.\n            lView[BINDING_INDEX] = tView.bindingStartIndex;\n            var checkNoChangesMode = getCheckNoChangesMode();\n            executePreOrderHooks(lView, tView, checkNoChangesMode, undefined);\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            if (tView.contentQueries !== null) {\n                refreshContentQueries(tView, lView);\n            }\n            resetPreOrderHookFlags(lView);\n            executeHooks(lView, tView.contentHooks, tView.contentCheckHooks, checkNoChangesMode, 1 /* AfterContentInitHooksToBeRun */, undefined);\n            setHostBindings(tView, lView);\n        }\n        else {\n            // This needs to be set before children are processed to support recursive components.\n            // This must be set to false immediately after the first creation run because in an\n            // ngFor loop, all the views will be created together before update mode runs and turns\n            // off firstTemplatePass. If we don't set it here, instances will perform directive\n            // matching, etc again and again.\n            tView.firstTemplatePass = false;\n            // We resolve content queries specifically marked as `static` in creation mode. Dynamic\n            // content queries are resolved during change detection (i.e. update mode), after embedded\n            // views are refreshed (see block above).\n            if (tView.staticContentQueries) {\n                refreshContentQueries(tView, lView);\n            }\n        }\n        // We must materialize query results before child components are processed\n        // in case a child component has projected a container. The LContainer needs\n        // to exist so the embedded views are properly attached by the container.\n        if (!creationMode || tView.staticViewQueries) {\n            executeViewQueryFn(2 /* Update */, tView, lView[CONTEXT]);\n        }\n        var components = tView.components;\n        if (components !== null) {\n            refreshChildComponents(lView, components);\n        }\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        var selectedIndex = getSelectedIndex();\n        try {\n            if (tView.expandoInstructions !== null) {\n                var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n                setBindingRoot(bindingRootIndex);\n                var currentDirectiveIndex = -1;\n                var currentElementIndex = -1;\n                for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                    var instruction = tView.expandoInstructions[i];\n                    if (typeof instruction === 'number') {\n                        if (instruction <= 0) {\n                            // Negative numbers mean that we are starting new EXPANDO block and need to update\n                            // the current element and directive index.\n                            currentElementIndex = -instruction;\n                            setActiveHostElement(currentElementIndex);\n                            // Injector block and providers are taken into account.\n                            var providerCount = tView.expandoInstructions[++i];\n                            bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                            currentDirectiveIndex = bindingRootIndex;\n                        }\n                        else {\n                            // This is either the injector size (so the binding root can skip over directives\n                            // and get to the first set of host bindings on this node) or the host var count\n                            // (to get to the next set of host bindings on this node).\n                            bindingRootIndex += instruction;\n                        }\n                        setBindingRoot(bindingRootIndex);\n                    }\n                    else {\n                        // If it's not a number, it's a host binding function that needs to be executed.\n                        if (instruction !== null) {\n                            viewData[BINDING_INDEX] = bindingRootIndex;\n                            var hostCtx = unwrapRNode(viewData[currentDirectiveIndex]);\n                            instruction(2 /* Update */, hostCtx, currentElementIndex);\n                            // Each directive gets a uniqueId value that is the same for both\n                            // create and update calls when the hostBindings function is called. The\n                            // directive uniqueId is not set anywhere--it is just incremented between\n                            // each hostBindings call and is useful for helping instruction code\n                            // uniquely determine which directive is currently active when executed.\n                            incrementActiveDirectiveId();\n                        }\n                        currentDirectiveIndex++;\n                    }\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(selectedIndex);\n        }\n    }\n    /** Refreshes all content queries declared by directives in a given view */\n    function refreshContentQueries(tView, lView) {\n        var contentQueries = tView.contentQueries;\n        if (contentQueries !== null) {\n            for (var i = 0; i < contentQueries.length; i += 2) {\n                var queryStartIdx = contentQueries[i];\n                var directiveDefIdx = contentQueries[i + 1];\n                if (directiveDefIdx !== -1) {\n                    var directiveDef = tView.data[directiveDefIdx];\n                    ngDevMode &&\n                        assertDefined(directiveDef.contentQueries, 'contentQueries function should be defined');\n                    setCurrentQueryIndex(queryStartIdx);\n                    directiveDef.contentQueries(2 /* Update */, lView[directiveDefIdx], directiveDefIdx);\n                }\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(hostLView, components) {\n        for (var i = 0; i < components.length; i++) {\n            componentRefresh(hostLView, components[i]);\n        }\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param renderer A renderer to use\n     * @returns the element created\n     */\n    function elementCreate(name, renderer, namespace) {\n        if (isProceduralRenderer(renderer)) {\n            return renderer.createElement(name, namespace);\n        }\n        else {\n            return namespace === null ? renderer.createElement(name) :\n                renderer.createElementNS(namespace, name);\n        }\n    }\n    function createLView(parentLView, tView, context, flags, host, tHostNode, rendererFactory, renderer, sanitizer, injector) {\n        var lView = ngDevMode ? cloneToLView(tView.blueprint) : tView.blueprint.slice();\n        lView[HOST] = host;\n        lView[FLAGS] = flags | 4 /* CreationMode */ | 128 /* Attached */ | 8 /* FirstLViewPass */;\n        resetPreOrderHookFlags(lView);\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n        lView[T_HOST] = tHostNode;\n        ngDevMode && attachLViewDebug(lView);\n        return lView;\n    }\n    function getOrCreateTNode(tView, tHostNode, index, type, name, attrs) {\n        // Keep this function short, so that the VM will inline it.\n        var adjustedIndex = index + HEADER_OFFSET;\n        var tNode = tView.data[adjustedIndex] ||\n            createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs, index);\n        setPreviousOrParentTNode(tNode, true);\n        return tNode;\n    }\n    function createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs, index) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        var parent = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && parent !== tHostNode;\n        var tParentNode = parentInSameView ? parent : null;\n        var tNode = tView.data[adjustedIndex] =\n            createTNode(tView, tParentNode, type, adjustedIndex, name, attrs);\n        // The first node is not always the one at index 0, in case of i18n, index 0 can be the\n        // instruction `i18nStart` and the first node has the index 1 or more\n        if (index === 0 || !tView.firstChild) {\n            tView.firstChild = tNode;\n        }\n        // Now link ourselves into the tree.\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        return tNode;\n    }\n    function assignTViewNodeToLView(tView, tParentNode, index, lView) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        var tNode = tView.node;\n        if (tNode == null) {\n            ngDevMode && tParentNode &&\n                assertNodeOfPossibleTypes(tParentNode, 3 /* Element */, 0 /* Container */);\n            tView.node = tNode = createTNode(tView, tParentNode, //\n            2 /* View */, index, null, null);\n        }\n        return lView[T_HOST] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     *\n     * @param view The LView containing the blueprint to adjust\n     * @param numSlotsToAlloc The number of slots to alloc in the LView, should be >0\n     */\n    function allocExpando(view, numSlotsToAlloc) {\n        ngDevMode && assertGreaterThan(numSlotsToAlloc, 0, 'The number of slots to alloc should be greater than 0');\n        if (numSlotsToAlloc > 0) {\n            var tView = view[TVIEW];\n            if (tView.firstTemplatePass) {\n                for (var i = 0; i < numSlotsToAlloc; i++) {\n                    tView.blueprint.push(null);\n                    tView.data.push(null);\n                    view.push(null);\n                }\n                // We should only increment the expando start index if there aren't already directives\n                // and injectors saved in the \"expando\" section\n                if (!tView.expandoInstructions) {\n                    tView.expandoStartIndex += numSlotsToAlloc;\n                }\n                else {\n                    // Since we're adding the dynamic nodes into the expando section, we need to let the host\n                    // bindings know that they should skip x slots\n                    tView.expandoInstructions.push(numSlotsToAlloc);\n                }\n            }\n        }\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Used for creating the LView of a dynamic embedded view, either through\n     * ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, injectorIndex) {\n        var lView = createLView(declarationView, tView, context, 16 /* CheckAlways */, null, null);\n        lView[DECLARATION_VIEW] = declarationView;\n        assignTViewNodeToLView(tView, null, -1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        return lView;\n    }\n    /**\n     * Used for rendering views in a LContainer (embedded views or root component views for dynamically\n     * created components).\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor\n     * inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        var oldView;\n        // Will become true if the `try` block executes with no errors.\n        var safeToRunHooks = false;\n        try {\n            oldView = enterView(viewToRender, viewToRender[T_HOST]);\n            resetPreOrderHookFlags(viewToRender);\n            var templateFn = tView.template;\n            if (templateFn !== null) {\n                executeTemplate(viewToRender, templateFn, getRenderFlags(viewToRender), context);\n            }\n            refreshDescendantViews(viewToRender);\n            safeToRunHooks = true;\n        }\n        finally {\n            leaveView(oldView, safeToRunHooks);\n            setPreviousOrParentTNode(_previousOrParentTNode, _isParent);\n        }\n    }\n    function renderComponentOrTemplate(hostView, context, templateFn) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var oldView = enterView(hostView, hostView[T_HOST]);\n        var normalExecutionPath = !getCheckNoChangesMode();\n        var creationModeIsActive = isCreationMode(hostView);\n        // Will become true if the `try` block executes with no errors.\n        var safeToRunHooks = false;\n        try {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (creationModeIsActive) {\n                // creation mode pass\n                templateFn && executeTemplate(hostView, templateFn, 1 /* Create */, context);\n                refreshDescendantViews(hostView);\n                hostView[FLAGS] &= ~4 /* CreationMode */;\n            }\n            // update mode pass\n            resetPreOrderHookFlags(hostView);\n            templateFn && executeTemplate(hostView, templateFn, 2 /* Update */, context);\n            refreshDescendantViews(hostView);\n            safeToRunHooks = true;\n        }\n        finally {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView, safeToRunHooks);\n        }\n    }\n    function executeTemplate(lView, templateFn, rf, context) {\n        namespaceHTMLInternal();\n        var prevSelectedIndex = getSelectedIndex();\n        try {\n            setActiveHostElement(null);\n            if (rf & 2 /* Update */) {\n                // When we're updating, have an inherent ɵɵselect(0) so we don't have to generate that\n                // instruction for most update blocks\n                selectInternal(lView, 0);\n            }\n            templateFn(rf, context);\n        }\n        finally {\n            setSelectedIndex(prevSelectedIndex);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. Update block and create block are\n     * always run separately.\n     */\n    function getRenderFlags(view) {\n        return isCreationMode(view) ? 1 /* Create */ : 2 /* Update */;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    function executeContentQueries(tView, tNode, lView) {\n        if (isContentQueryHost(tNode)) {\n            var start = tNode.directiveStart;\n            var end = tNode.directiveEnd;\n            for (var directiveIndex = start; directiveIndex < end; directiveIndex++) {\n                var def = tView.data[directiveIndex];\n                if (def.contentQueries) {\n                    def.contentQueries(1 /* Create */, lView[directiveIndex], directiveIndex);\n                }\n            }\n        }\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, lView, tNode, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        instantiateAllDirectives(tView, lView, tNode);\n        invokeDirectivesHostBindings(tView, lView, tNode);\n        saveResolvedLocalsInData(lView, tNode, localRefExtractor);\n        setActiveHostElement(null);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param def ComponentDef\n     * @returns TView\n     */\n    function getOrCreateTView(def) {\n        return def.tView || (def.tView = createTView(-1, def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     * @param viewQuery View queries for this view\n     * @param schemas Schemas for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery, schemas) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = ngDevMode ?\n            new TViewConstructor(viewIndex, // id: number,\n            blueprint, // blueprint: LView,\n            templateFn, // template: ComponentTemplate<{}>|null,\n            null, // queries: TQueries|null\n            viewQuery, // viewQuery: ViewQueriesFunction<{}>|null,\n            null, // node: TViewNode|TElementNode|null,\n            cloneToTViewData(blueprint).fill(null, bindingStartIndex), // data: TData,\n            bindingStartIndex, // bindingStartIndex: number,\n            initialViewLength, // expandoStartIndex: number,\n            null, // expandoInstructions: ExpandoInstructions|null,\n            true, // firstTemplatePass: boolean,\n            false, // staticViewQueries: boolean,\n            false, // staticContentQueries: boolean,\n            null, // preOrderHooks: HookData|null,\n            null, // preOrderCheckHooks: HookData|null,\n            null, // contentHooks: HookData|null,\n            null, // contentCheckHooks: HookData|null,\n            null, // viewHooks: HookData|null,\n            null, // viewCheckHooks: HookData|null,\n            null, // destroyHooks: HookData|null,\n            null, // cleanup: any[]|null,\n            null, // contentQueries: number[]|null,\n            null, // components: number[]|null,\n            typeof directives === 'function' ?\n                directives() :\n                directives, // directiveRegistry: DirectiveDefList|null,\n            typeof pipes === 'function' ? pipes() : pipes, // pipeRegistry: PipeDefList|null,\n            null, // firstChild: TNode|null,\n            schemas) :\n            {\n                id: viewIndex,\n                blueprint: blueprint,\n                template: templateFn,\n                queries: null,\n                viewQuery: viewQuery,\n                node: null,\n                data: blueprint.slice().fill(null, bindingStartIndex),\n                bindingStartIndex: bindingStartIndex,\n                expandoStartIndex: initialViewLength,\n                expandoInstructions: null,\n                firstTemplatePass: true,\n                staticViewQueries: false,\n                staticContentQueries: false,\n                preOrderHooks: null,\n                preOrderCheckHooks: null,\n                contentHooks: null,\n                contentCheckHooks: null,\n                viewHooks: null,\n                viewCheckHooks: null,\n                destroyHooks: null,\n                cleanup: null,\n                contentQueries: null,\n                components: null,\n                directiveRegistry: typeof directives === 'function' ? directives() : directives,\n                pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n                firstChild: null,\n                schemas: schemas,\n            };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = ngDevMode ? new LViewBlueprint() : [];\n        for (var i = 0; i < initialViewLength; i++) {\n            blueprint.push(i < bindingStartIndex ? null : NO_CHANGE);\n        }\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringifyForError(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param tView `TView` to which this `TNode` belongs (used only in `ngDevMode`)\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(tView, tParent, type, adjustedIndex, tagName, attrs) {\n        ngDevMode && ngDevMode.tNode++;\n        var injectorIndex = tParent ? tParent.injectorIndex : -1;\n        return ngDevMode ? new TNodeConstructor(tView, // tView_: TView\n        type, // type: TNodeType\n        adjustedIndex, // index: number\n        injectorIndex, // injectorIndex: number\n        -1, // directiveStart: number\n        -1, // directiveEnd: number\n        -1, // propertyMetadataStartIndex: number\n        -1, // propertyMetadataEndIndex: number\n        0, // flags: TNodeFlags\n        0, // providerIndexes: TNodeProviderIndexes\n        tagName, // tagName: string|null\n        attrs, // attrs: (string|AttributeMarker|(string|SelectorFlags)[])[]|null\n        null, // localNames: (string|number)[]|null\n        undefined, // initialInputs: (string[]|null)[]|null|undefined\n        undefined, // inputs: PropertyAliases|null|undefined\n        undefined, // outputs: PropertyAliases|null|undefined\n        null, // tViews: ITView|ITView[]|null\n        null, // next: ITNode|null\n        null, // projectionNext: ITNode|null\n        null, // child: ITNode|null\n        tParent, // parent: TElementNode|TContainerNode|null\n        null, // projection: number|(ITNode|RNode[])[]|null\n        null, // styles: TStylingContext|null\n        null) :\n            {\n                type: type,\n                index: adjustedIndex,\n                injectorIndex: injectorIndex,\n                directiveStart: -1,\n                directiveEnd: -1,\n                propertyMetadataStartIndex: -1,\n                propertyMetadataEndIndex: -1,\n                flags: 0,\n                providerIndexes: 0,\n                tagName: tagName,\n                attrs: attrs,\n                localNames: null,\n                initialInputs: undefined,\n                inputs: undefined,\n                outputs: undefined,\n                tViews: null,\n                next: null,\n                projectionNext: null,\n                child: null,\n                parent: tParent,\n                projection: null,\n                styles: null,\n                classes: null,\n            };\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param tNode\n     * @param direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNode, direction) {\n        var tView = getLView()[TVIEW];\n        var propStore = null;\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (end > start) {\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, publicName, internalName) :\n                            (propStore[publicName] = [i, publicName, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Mapping between attributes names that don't correspond to their element property names.\n     * Note: this mapping has to be kept in sync with the equally named mapping in the template\n     * type-checking machinery of ngtsc.\n     */\n    var ATTR_TO_PROP = {\n        'class': 'className',\n        'for': 'htmlFor',\n        'formaction': 'formAction',\n        'innerHtml': 'innerHTML',\n        'readonly': 'readOnly',\n        'tabindex': 'tabIndex',\n    };\n    function elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        var lView = getLView();\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData;\n        var dataValue;\n        if (!nativeOnly && (inputData = initializeTNodeInputs(tNode)) &&\n            (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */) {\n                    /**\n                     * dataValue is an array containing runtime input or output names for the directives:\n                     * i+0: directive instance index\n                     * i+1: publicName\n                     * i+2: privateName\n                     *\n                     * e.g. [0, 'change', 'change-minified']\n                     * we want to set the reflected property with the privateName: dataValue[i+2]\n                     */\n                    for (var i = 0; i < dataValue.length; i += 3) {\n                        setNgReflectProperty(lView, element, tNode.type, dataValue[i + 2], value);\n                    }\n                }\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            propName = ATTR_TO_PROP[propName] || propName;\n            if (ngDevMode) {\n                validateAgainstEventProperties(propName);\n                validateAgainstUnknownProperties(lView, element, propName, tNode);\n                ngDevMode.rendererSetProperty++;\n            }\n            savePropertyDebugData(tNode, lView, propName, lView[TVIEW].data, nativeOnly);\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the\n            // property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // If the node is a container and the property didn't\n            // match any of the inputs or schemas we should throw.\n            if (ngDevMode && !matchingSchemas(lView, tNode.tagName)) {\n                throw createUnknownPropertyError(propName, tNode);\n            }\n        }\n    }\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        ngDevMode && assertLView(lView);\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 16 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 64 /* Dirty */;\n        }\n    }\n    function setNgReflectProperty(lView, element, type, attrName, value) {\n        var _a;\n        var renderer = lView[RENDERER];\n        attrName = normalizeDebugBindingName(attrName);\n        var debugValue = normalizeDebugBindingValue(value);\n        if (type === 3 /* Element */) {\n            if (value == null) {\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element, attrName) :\n                    element.removeAttribute(attrName);\n            }\n            else {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n        }\n        else {\n            var textContent = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setValue(element, textContent);\n            }\n            else {\n                element.textContent = textContent;\n            }\n        }\n    }\n    function validateAgainstUnknownProperties(hostView, element, propName, tNode) {\n        // If the tag matches any of the schemas we shouldn't throw.\n        if (matchingSchemas(hostView, tNode.tagName)) {\n            return;\n        }\n        // If prop is not a known property of the HTML element...\n        if (!(propName in element) &&\n            // and we are in a browser context... (web worker nodes should be skipped)\n            typeof Node === 'function' && element instanceof Node &&\n            // and isn't a synthetic animation property...\n            propName[0] !== ANIMATION_PROP_PREFIX) {\n            // ... it is probably a user error and we should throw.\n            throw createUnknownPropertyError(propName, tNode);\n        }\n    }\n    function matchingSchemas(hostView, tagName) {\n        var schemas = hostView[TVIEW].schemas;\n        if (schemas !== null) {\n            for (var i = 0; i < schemas.length; i++) {\n                var schema = schemas[i];\n                if (schema === NO_ERRORS_SCHEMA ||\n                    schema === CUSTOM_ELEMENTS_SCHEMA && tagName && tagName.indexOf('-') > -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n    * Stores debugging data for this property binding on first template pass.\n    * This enables features like DebugElement.properties.\n    */\n    function savePropertyDebugData(tNode, lView, propName, tData, nativeOnly) {\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        // Bind/interpolation functions save binding metadata in the last binding index,\n        // but leave the property name blank. If the interpolation delimiter is at the 0\n        // index, we know that this is our first pass and the property name still needs to\n        // be set.\n        var bindingMetadata = tData[lastBindingIndex];\n        if (bindingMetadata[0] == INTERPOLATION_DELIMITER) {\n            tData[lastBindingIndex] = propName + bindingMetadata;\n            // We don't want to store indices for host bindings because they are stored in a\n            // different part of LView (the expando section).\n            if (!nativeOnly) {\n                if (tNode.propertyMetadataStartIndex == -1) {\n                    tNode.propertyMetadataStartIndex = lastBindingIndex;\n                }\n                tNode.propertyMetadataEndIndex = lastBindingIndex + 1;\n            }\n        }\n    }\n    /**\n    * Creates an error that should be thrown when encountering an unknown property on an element.\n    * @param propName Name of the invalid property.\n    * @param tNode Node on which we encountered the error.\n    */\n    function createUnknownPropertyError(propName, tNode) {\n        return new Error(\"Template error: Can't bind to '\" + propName + \"' since it isn't a known property of '\" + tNode.tagName + \"'.\");\n    }\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, lView, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in\n        // tsickle.\n        ngDevMode && assertFirstTemplatePass(tView);\n        if (!getBindingsEnabled())\n            return;\n        var directives = findDirectiveMatches(tView, lView, tNode);\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            var initialPreOrderHooksLength = (tView.preOrderHooks && tView.preOrderHooks.length) || 0;\n            var initialPreOrderCheckHooksLength = (tView.preOrderCheckHooks && tView.preOrderCheckHooks.length) || 0;\n            var nodeIndex = tNode.index - HEADER_OFFSET;\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, lView, def, def.factory);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                if (def.contentQueries) {\n                    tNode.flags |= 4 /* hasContentQuery */;\n                }\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                registerPreOrderHooks(directiveDefIdx, def, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!tView.firstTemplatePass && start < end) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, tNode, directive, def, i);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = tView.firstTemplatePass;\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        var selectedIndex = getSelectedIndex();\n        try {\n            setActiveHostElement(elementIndex);\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                var directive = viewData[i];\n                if (def.hostBindings) {\n                    invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass);\n                    // Each directive gets a uniqueId value that is the same for both\n                    // create and update calls when the hostBindings function is called. The\n                    // directive uniqueId is not set anywhere--it is just incremented between\n                    // each hostBindings call and is useful for helping instruction code\n                    // uniquely determine which directive is currently active when executed.\n                    incrementActiveDirectiveId();\n                }\n                else if (firstTemplatePass) {\n                    expando.push(null);\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(selectedIndex);\n        }\n    }\n    function invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass) {\n        var previousExpandoLength = expando.length;\n        setCurrentDirectiveDef(def);\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        def.hostBindings(1 /* Create */, directive, elementIndex);\n        setCurrentDirectiveDef(null);\n        // `hostBindings` function may or may not contain `allocHostVars` call\n        // (e.g. it may not if it only contains host listeners), so we need to check whether\n        // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n        // expando block, to make sure we execute it for DI cycle\n        if (previousExpandoLength === expando.length && firstTemplatePass) {\n            expando.push(def.hostBindings);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(lView, hostTNode, directive, def, directiveDefIdx) {\n        postProcessBaseDirective(lView, hostTNode, directive);\n        if (hostTNode.attrs !== null) {\n            setInputsFromAttrs(directiveDefIdx, directive, def, hostTNode);\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(hostTNode.index, lView);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, hostTNode, directive) {\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        attachPatchData(directive, lView);\n        var native = getNativeByTNode(hostTNode, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 4 /* ElementContainer */, 0 /* Container */);\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = ngDevMode ? new MatchesArray() : []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, viewData), tView, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 1 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        markAsComponentHost(tView, tNode);\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /**\n     * Marks a given TNode as a component's host. This consists of:\n     * - setting appropriate TNode flags;\n     * - storing index of component's host element so it will be queued for view refresh during CD.\n    */\n    function markAsComponentHost(tView, hostTNode) {\n        ngDevMode && assertFirstTemplatePass(tView);\n        hostTNode.flags = 1 /* isComponent */;\n        (tView.components || (tView.components = ngDevMode ? new TViewComponents() : [])).push(hostTNode.index);\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames =\n                ngDevMode ? new TNodeLocalNames() : [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs) {\n                for (var i = 0; i < def.exportAs.length; i++) {\n                    exportsMap[def.exportAs[i]] = index;\n                }\n            }\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 1 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = flags & 1 /* isComponent */;\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, hostTNode, def) {\n        var native = getNativeByTNode(hostTNode, lView);\n        var tView = getOrCreateTView(def);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, createLView(lView, tView, null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, lView[hostTNode.index], hostTNode, rendererFactory, rendererFactory.createRenderer(native, def)));\n        componentView[T_HOST] = hostTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        lView[hostTNode.index] = componentView;\n    }\n    function elementAttributeInternal(index, name, value, lView, sanitizer, namespace) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && validateAgainstEventAttributes(name);\n        var element = getNativeByIndex(index, lView);\n        var renderer = lView[RENDERER];\n        if (value == null) {\n            ngDevMode && ngDevMode.rendererRemoveAttribute++;\n            isProceduralRenderer(renderer) ? renderer.removeAttribute(element, name, namespace) :\n                element.removeAttribute(name);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            var tNode = getTNode(index, lView);\n            var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setAttribute(element, name, strValue, namespace);\n            }\n            else {\n                namespace ? element.setAttributeNS(namespace, name, strValue) :\n                    element.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param def The directive def that contains the list of inputs\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, def, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, def.inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            var setInput = def.setInput;\n            for (var i = 0; i < initialInputs.length;) {\n                var publicName = initialInputs[i++];\n                var privateName = initialInputs[i++];\n                var value = initialInputs[i++];\n                if (setInput) {\n                    def.setInput(instance, value, publicName, privateName);\n                }\n                else {\n                    instance[privateName] = value;\n                }\n                if (ngDevMode) {\n                    var lView = getLView();\n                    var nativeElement = getNativeByTNode(tNode, lView);\n                    setNgReflectProperty(lView, nativeElement, tNode.type, privateName, value);\n                }\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = ngDevMode ? new TNodeInitialInputs() : []);\n        // Ensure that we don't create sparse arrays\n        for (var i_1 = initialInputData.length; i_1 <= directiveIndex; i_1++) {\n            initialInputData.push(null);\n        }\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            else if (attrName === 5 /* ProjectAs */) {\n                // Skip over the `ngProjectAs` value.\n                i += 2;\n                continue;\n            }\n            // If we hit any other attribute markers, we're done anyway. None of those are valid inputs.\n            if (typeof attrName === 'number')\n                break;\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] ||\n                    (initialInputData[directiveIndex] = ngDevMode ? new TNodeInitialData() : []);\n                inputsToStore.push(attrName, minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    // Not sure why I need to do `any` here but TS complains later.\n    var LContainerArray = ngDevMode && createNamedArrayType('LContainer');\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, tNode, isForViewContainerRef) {\n        ngDevMode && assertDomNode(native);\n        ngDevMode && assertLView(currentView);\n        // https://jsperf.com/array-literal-vs-new-array-really\n        var lContainer = new (ngDevMode ? LContainerArray : Array)(hostNative, // host native\n        true, // Boolean `true` in this position signifies that this is an `LContainer`\n        isForViewContainerRef ? -1 : 0, // active index\n        currentView, // parent\n        null, // next\n        null, // queries\n        tNode, // t_host\n        native, // native,\n        null);\n        ngDevMode && attachLContainerDebug(lContainer);\n        return lContainer;\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes\n     * them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        var viewOrContainer = lView[CHILD_HEAD];\n        while (viewOrContainer !== null) {\n            // Note: viewOrContainer can be an LView or an LContainer instance, but here we are only\n            // interested in LContainer\n            if (isLContainer(viewOrContainer) && viewOrContainer[ACTIVE_INDEX] === -1) {\n                for (var i = CONTAINER_HEADER_OFFSET; i < viewOrContainer.length; i++) {\n                    var embeddedLView = viewOrContainer[i];\n                    // The directives and pipes are not needed here as an existing view is only being\n                    // refreshed.\n                    ngDevMode && assertDefined(embeddedLView[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(embeddedLView, embeddedLView[TVIEW], embeddedLView[CONTEXT]);\n                }\n            }\n            viewOrContainer = viewOrContainer[NEXT];\n        }\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(hostLView, adjustedElementIndex) {\n        ngDevMode && assertDataInRange(hostLView, adjustedElementIndex);\n        var componentView = getComponentViewByIndex(adjustedElementIndex, hostLView);\n        ngDevMode &&\n            assertNodeType(hostLView[TVIEW].data[adjustedElementIndex], 3 /* Element */);\n        // Only components in creation mode, attached CheckAlways\n        // components or attached, dirty OnPush components should be checked\n        if ((viewAttachedToChangeDetector(componentView) || isCreationMode(hostLView)) &&\n            componentView[FLAGS] & (16 /* CheckAlways */ | 64 /* Dirty */)) {\n            syncViewWithBlueprint(componentView);\n            checkView(componentView, componentView[CONTEXT]);\n        }\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView.push(componentTView.blueprint[i]);\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param lViewOrLContainer The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, lViewOrLContainer) {\n        // TODO(benlesh/misko): This implementation is incorrect, because it always adds the LContainer\n        // to\n        // the end of the queue, which means if the developer retrieves the LContainers from RNodes out\n        // of\n        // order, the change detection will run out of order, as the act of retrieving the the\n        // LContainer\n        // from the RNode is what adds it to the queue.\n        if (lView[CHILD_HEAD]) {\n            lView[CHILD_TAIL][NEXT] = lViewOrLContainer;\n        }\n        else {\n            lView[CHILD_HEAD] = lViewOrLContainer;\n        }\n        lView[CHILD_TAIL] = lViewOrLContainer;\n        return lViewOrLContainer;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView) {\n            lView[FLAGS] |= 64 /* Dirty */;\n            var parent_1 = getLViewParent(lView);\n            // Stop traversing up as soon as you find a root view that wasn't attached to any container\n            if (isRootView(lView) && !parent_1) {\n                return lView;\n            }\n            // continue otherwise\n            lView = parent_1;\n        }\n        return null;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLView(rootComponent), rootComponent);\n        }\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        try {\n            if (isCreationMode(view)) {\n                checkView(view, context); // creation mode pass\n            }\n            checkView(view, context); // update mode pass\n        }\n        catch (error) {\n            handleError(view, error);\n            throw error;\n        }\n        finally {\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    function checkNoChangesInternal(view, context) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInternal(view, context);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck.\n     */\n    function checkView(hostView, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[T_HOST]);\n        var templateFn = hostTView.template;\n        var creationMode = isCreationMode(hostView);\n        // Will become true if the `try` block executes with no errors.\n        var safeToRunHooks = false;\n        try {\n            resetPreOrderHookFlags(hostView);\n            creationMode && executeViewQueryFn(1 /* Create */, hostTView, component);\n            executeTemplate(hostView, templateFn, getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView);\n            safeToRunHooks = true;\n        }\n        finally {\n            leaveView(oldView, safeToRunHooks);\n        }\n    }\n    function executeViewQueryFn(flags, tView, component) {\n        var viewQuery = tView.viewQuery;\n        if (viewQuery !== null) {\n            setCurrentQueryIndex(0);\n            viewQuery(flags, component);\n        }\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates binding metadata for a particular binding and stores it in\n     * TView.data. These are generated in order to support DebugElement.properties.\n     *\n     * Each binding / interpolation will have one (including attribute bindings)\n     * because at the time of binding, we don't know to which instruction the binding\n     * belongs. It is always stored in TView.data at the index of the last binding\n     * value in LView (e.g. for interpolation8, it would be stored at the index of\n     * the 8th value).\n     *\n     * @param lView The LView that contains the current binding index.\n     * @param prefix The static prefix string\n     * @param suffix The static suffix string\n     *\n     * @returns Newly created binding metadata string for this binding or null\n     */\n    function storeBindingMetadata(lView, prefix, suffix) {\n        if (prefix === void 0) { prefix = ''; }\n        if (suffix === void 0) { suffix = ''; }\n        var tData = lView[TVIEW].data;\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        var value = INTERPOLATION_DELIMITER + prefix + INTERPOLATION_DELIMITER + suffix;\n        return tData[lastBindingIndex] == null ? (tData[lastBindingIndex] = value) : null;\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode.inputs === undefined) {\n            // mark inputs as checked\n            tNode.inputs = generatePropertyAliases(tNode, 0 /* Input */);\n        }\n        return tNode.inputs;\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = ngDevMode ? new LCleanup() : []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = ngDevMode ? new TCleanup() : []);\n    }\n    /**\n     * There are cases where the sub component's renderer needs to be included\n     * instead of the current renderer (see the componentSyntheticHost* instructions).\n     */\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    /** Handles an error thrown in an LView. */\n    function handleError(lView, error) {\n        var injector = lView[INJECTOR$1];\n        var errorHandler = injector ? injector.get(ErrorHandler, null) : null;\n        errorHandler && errorHandler.handleError(error);\n    }\n    /**\n     * Set the inputs of directives at the current node to corresponding value.\n     *\n     * @param lView the `LView` which contains the directives.\n     * @param inputs mapping between the public \"input\" name and privately-known,\n     * possibly minified, property names to write to.\n     * @param value Value to set.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        var tView = lView[TVIEW];\n        for (var i = 0; i < inputs.length;) {\n            var index = inputs[i++];\n            var publicName = inputs[i++];\n            var privateName = inputs[i++];\n            var instance = lView[index];\n            ngDevMode && assertDataInRange(lView, index);\n            var def = tView.data[index];\n            var setInput = def.setInput;\n            if (setInput) {\n                def.setInput(instance, value, publicName, privateName);\n            }\n            else {\n                instance[privateName] = value;\n            }\n        }\n    }\n    /**\n     * Updates a text binding at a given index in a given LView.\n     */\n    function textBindingInternal(lView, index, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'value should not be NO_CHANGE');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var element = getNativeByIndex(index, lView);\n        ngDevMode && assertDefined(element, 'native element should exist');\n        ngDevMode && ngDevMode.rendererSetText++;\n        var renderer = lView[RENDERER];\n        isProceduralRenderer(renderer) ? renderer.setValue(element, value) : element.textContent = value;\n    }\n    /**\n     * Renders all initial styling (class and style values) on to the element from the tNode.\n     *\n     * All initial styling data (i.e. any values extracted from the `style` or `class` attributes\n     * on an element) are collected into the `tNode.styles` and `tNode.classes` data structures.\n     * These values are populated during the creation phase of an element and are then later\n     * applied once the element is instantiated. This function applies each of the static\n     * style and class entries to the element.\n     */\n    function renderInitialStyling(renderer, native, tNode) {\n        renderStylingMap(renderer, native, tNode.classes, true);\n        renderStylingMap(renderer, native, tNode.styles, false);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getLContainer(tNode, embeddedView) {\n        ngDevMode && assertLView(embeddedView);\n        var container = embeddedView[PARENT];\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // The parent isn't an LContainer if the embedded view hasn't been attached yet.\n            return isLContainer(container) ? container : null;\n        }\n        else {\n            ngDevMode && assertLContainer(container);\n            // This is a inline view node (e.g. embeddedViewStart)\n            return container;\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeActionOnElementOrContainer(action, renderer, parent, lNodeToHandle, beforeNode) {\n        // If this slot was allocated for a text node dynamically created by i18n, the text node itself\n        // won't be created until i18nApply() in the update block, so this node should be skipped.\n        // For more info, see \"ICU expressions should work inside an ngTemplateOutlet inside an ngFor\"\n        // in `i18n_spec.ts`.\n        if (lNodeToHandle != null) {\n            var lContainer = void 0;\n            var isComponent = false;\n            // We are expecting an RNode, but in the case of a component or LContainer the `RNode` is\n            // wrapped\n            // in an array which needs to be unwrapped. We need to know if it is a component and if\n            // it has LContainer so that we can process all of those cases appropriately.\n            if (isLContainer(lNodeToHandle)) {\n                lContainer = lNodeToHandle;\n            }\n            else if (isLView(lNodeToHandle)) {\n                isComponent = true;\n                ngDevMode && assertDefined(lNodeToHandle[HOST], 'HOST must be defined for a component LView');\n                lNodeToHandle = lNodeToHandle[HOST];\n            }\n            var rNode = unwrapRNode(lNodeToHandle);\n            ngDevMode && assertDomNode(rNode);\n            if (action === 0 /* Insert */) {\n                nativeInsertBefore(renderer, parent, rNode, beforeNode || null);\n            }\n            else if (action === 1 /* Detach */) {\n                nativeRemoveNode(renderer, rNode, isComponent);\n            }\n            else if (action === 2 /* Destroy */) {\n                ngDevMode && ngDevMode.rendererDestroyNode++;\n                renderer.destroyNode(rNode);\n            }\n            if (lContainer != null) {\n                executeActionOnContainer(renderer, action, lContainer, parent, beforeNode);\n            }\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(renderStringify(value)) :\n            renderer.createTextNode(renderStringify(value));\n    }\n    function addRemoveViewFromContainer(lView, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(lView[TVIEW].node, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = lView[RENDERER];\n            var action = insertMode ? 0 /* Insert */ : 1 /* Detach */;\n            executeActionOnView(renderer, action, lView, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Detach a `LView` from the DOM by detaching its nodes.\n     *\n     * @param lView the `LView` to be detached.\n     */\n    function renderDetachView(lView) {\n        executeActionOnView(lView[RENDERER], 1 /* Detach */, lView, null, null);\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        var lViewOrLContainer = rootView[CHILD_HEAD];\n        if (!lViewOrLContainer) {\n            return cleanUpView(rootView);\n        }\n        while (lViewOrLContainer) {\n            var next = null;\n            if (isLView(lViewOrLContainer)) {\n                // If LView, traverse down to child.\n                next = lViewOrLContainer[CHILD_HEAD];\n            }\n            else {\n                ngDevMode && assertLContainer(lViewOrLContainer);\n                // If container, traverse down to its first LView.\n                var firstView = lViewOrLContainer[CONTAINER_HEADER_OFFSET];\n                if (firstView)\n                    next = firstView;\n            }\n            if (!next) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (lViewOrLContainer && !lViewOrLContainer[NEXT] && lViewOrLContainer !== rootView) {\n                    cleanUpView(lViewOrLContainer);\n                    lViewOrLContainer = getParentState(lViewOrLContainer, rootView);\n                }\n                cleanUpView(lViewOrLContainer || rootView);\n                next = lViewOrLContainer && lViewOrLContainer[NEXT];\n            }\n            lViewOrLContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param index Which index in the container to insert the child view into\n     */\n    function insertView(lView, lContainer, index) {\n        ngDevMode && assertLView(lView);\n        ngDevMode && assertLContainer(lContainer);\n        var indexInContainer = CONTAINER_HEADER_OFFSET + index;\n        var containerLength = lContainer.length;\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            lContainer[indexInContainer - 1][NEXT] = lView;\n        }\n        if (index < containerLength - CONTAINER_HEADER_OFFSET) {\n            lView[NEXT] = lContainer[indexInContainer];\n            addToArray(lContainer, CONTAINER_HEADER_OFFSET + index, lView);\n        }\n        else {\n            lContainer.push(lView);\n            lView[NEXT] = null;\n        }\n        lView[PARENT] = lContainer;\n        // track views where declaration and insertion points are different\n        var declarationLContainer = lView[DECLARATION_LCONTAINER];\n        if (declarationLContainer !== null && lContainer !== declarationLContainer) {\n            trackMovedView(declarationLContainer, lView);\n        }\n        // notify query that a new view has been added\n        var lQueries = lView[QUERIES];\n        if (lQueries !== null) {\n            lQueries.insertView(lView[TVIEW]);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 128 /* Attached */;\n    }\n    /**\n     * Track views created from the declaration container (TemplateRef) and inserted into a\n     * different LContainer.\n     */\n    function trackMovedView(declarationContainer, lView) {\n        ngDevMode && assertLContainer(declarationContainer);\n        var declaredViews = declarationContainer[MOVED_VIEWS];\n        if (declaredViews === null) {\n            declarationContainer[MOVED_VIEWS] = [lView];\n        }\n        else {\n            declaredViews.push(lView);\n        }\n    }\n    function detachMovedView(declarationContainer, lView) {\n        ngDevMode && assertLContainer(declarationContainer);\n        ngDevMode && assertDefined(declarationContainer[MOVED_VIEWS], 'A projected view should belong to a non-empty projected views collection');\n        var projectedViews = declarationContainer[MOVED_VIEWS];\n        var declaredViewIndex = projectedViews.indexOf(lView);\n        projectedViews.splice(declaredViewIndex, 1);\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method removes the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex) {\n        if (lContainer.length <= CONTAINER_HEADER_OFFSET)\n            return;\n        var indexInContainer = CONTAINER_HEADER_OFFSET + removeIndex;\n        var viewToDetach = lContainer[indexInContainer];\n        if (viewToDetach) {\n            var declarationLContainer = viewToDetach[DECLARATION_LCONTAINER];\n            if (declarationLContainer !== null && declarationLContainer !== lContainer) {\n                detachMovedView(declarationLContainer, viewToDetach);\n            }\n            if (removeIndex > 0) {\n                lContainer[indexInContainer - 1][NEXT] = viewToDetach[NEXT];\n            }\n            var removedLView = removeFromArray(lContainer, CONTAINER_HEADER_OFFSET + removeIndex);\n            addRemoveViewFromContainer(viewToDetach, false);\n            // notify query that a view has been removed\n            var lQueries = removedLView[QUERIES];\n            if (lQueries !== null) {\n                lQueries.detachView(removedLView[TVIEW]);\n            }\n            viewToDetach[PARENT] = null;\n            viewToDetach[NEXT] = null;\n            // Unsets the attached flag\n            viewToDetach[FLAGS] &= ~128 /* Attached */;\n        }\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, removeIndex) {\n        var detachedView = detachView(lContainer, removeIndex);\n        detachedView && destroyLView(detachedView);\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param lView The view to be destroyed.\n     */\n    function destroyLView(lView) {\n        if (!(lView[FLAGS] & 256 /* Destroyed */)) {\n            var renderer = lView[RENDERER];\n            if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n                executeActionOnView(renderer, 2 /* Destroy */, lView, null, null);\n            }\n            destroyViewTree(lView);\n        }\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param lViewOrLContainer The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(lViewOrLContainer, rootView) {\n        var tNode;\n        if (isLView(lViewOrLContainer) && (tNode = lViewOrLContainer[T_HOST]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, lViewOrLContainer);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return lViewOrLContainer[PARENT] === rootView ? null : lViewOrLContainer[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(view) {\n        if (isLView(view) && !(view[FLAGS] & 256 /* Destroyed */)) {\n            // Usually the Attached flag is removed when the view is detached from its parent, however\n            // if it's a root view, the flag won't be unset hence why we're also removing on destroy.\n            view[FLAGS] &= ~128 /* Attached */;\n            // Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook\n            // runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If\n            // We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.\n            // This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is\n            // really more of an \"afterDestroy\" hook if you think about it.\n            view[FLAGS] |= 256 /* Destroyed */;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[T_HOST];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n            var declarationContainer = view[DECLARATION_LCONTAINER];\n            // we are dealing with an embedded view that is still inserted into a container\n            if (declarationContainer !== null && isLContainer(view[PARENT])) {\n                // and this is a projected view\n                if (declarationContainer !== view[PARENT]) {\n                    detachMovedView(declarationContainer, view);\n                }\n                // For embedded views still attached to a container: remove query result from this view.\n                var lQueries = view[QUERIES];\n                if (lQueries !== null) {\n                    lQueries.detachView(view[TVIEW]);\n                }\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup !== null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a native DOM listener\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        unwrapRNode(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // native DOM listener registered with Renderer3\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            for (var i = 0; i < destroyHooks.length; i += 2) {\n                var context = view[destroyHooks[i]];\n                // Only call the destroy hook if the context has been requested.\n                if (!(context instanceof NodeInjectorFactory)) {\n                    destroyHooks[i + 1].call(context);\n                }\n            }\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is made for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tNode, currentView) {\n        // Nodes of the top-most view can be inserted eagerly.\n        if (isRootView(currentView)) {\n            return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n        }\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parent = getHighestElementOrICUContainer(tNode);\n        var renderParent = parent.parent;\n        // If the parent is null, then we are inserting across views: either into an embedded view or a\n        // component view.\n        if (renderParent == null) {\n            var hostTNode = currentView[T_HOST];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                return getHostNative(currentView);\n            }\n        }\n        else {\n            var isIcuCase = parent && parent.type === 5 /* IcuContainer */;\n            // If the parent of this node is an ICU container, then it is represented by comment node and we\n            // need to use it as an anchor. If it is projected then its direct parent node is the renderer.\n            if (isIcuCase && parent.flags & 2 /* isProjected */) {\n                return getNativeByTNode(parent, currentView).parentNode;\n            }\n            ngDevMode && assertNodeType(renderParent, 3 /* Element */);\n            if (renderParent.flags & 1 /* isComponent */ && !isIcuCase) {\n                var tData = currentView[TVIEW].data;\n                var tNode_1 = tData[renderParent.index];\n                var encapsulation = tData[tNode_1.directiveStart].encapsulation;\n                // We've got a parent which is an element in the current view. We just need to verify if the\n                // parent element is not a component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would then move it to its final destination. Note that we can't\n                // make this assumption when using the Shadow DOM, because the native projection placeholders\n                // (<content> or <slot>) have to be in place as elements are being inserted.\n                if (encapsulation !== exports.ViewEncapsulation.ShadowDom &&\n                    encapsulation !== exports.ViewEncapsulation.Native) {\n                    return null;\n                }\n            }\n            return getNativeByTNode(renderParent, currentView);\n        }\n    }\n    /**\n     * Gets the native host element for a given view. Will return null if the current view does not have\n     * a host element.\n     */\n    function getHostNative(currentView) {\n        ngDevMode && assertLView(currentView);\n        var hostTNode = currentView[T_HOST];\n        return hostTNode && hostTNode.type === 3 /* Element */ ?\n            getNativeByTNode(hostTNode, getLViewParent(currentView)) :\n            null;\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        ngDevMode && ngDevMode.rendererInsertBefore++;\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    function nativeAppendChild(renderer, parent, child) {\n        ngDevMode && ngDevMode.rendererAppendChild++;\n        if (isProceduralRenderer(renderer)) {\n            renderer.appendChild(parent, child);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    }\n    function nativeAppendOrInsertBefore(renderer, parent, child, beforeNode) {\n        if (beforeNode !== null) {\n            nativeInsertBefore(renderer, parent, child, beforeNode);\n        }\n        else {\n            nativeAppendChild(renderer, parent, child);\n        }\n    }\n    /** Removes a node from the DOM given its native parent. */\n    function nativeRemoveChild(renderer, parent, child, isHostElement) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.removeChild(parent, child, isHostElement);\n        }\n        else {\n            parent.removeChild(child);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Finds a native \"anchor\" node for cases where we can't append a native child directly\n     * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.\n     * @param parentTNode\n     * @param lView\n     */\n    function getNativeAnchorNode(parentTNode, lView) {\n        if (parentTNode.type === 2 /* View */) {\n            var lContainer = getLContainer(parentTNode, lView);\n            var index = lContainer.indexOf(lView, CONTAINER_HEADER_OFFSET) - CONTAINER_HEADER_OFFSET;\n            return getBeforeNodeForView(index, lContainer);\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */) {\n            return getNativeByTNode(parentTNode, lView);\n        }\n        return null;\n    }\n    /**\n     * Appends the `child` native node (or a collection of nodes) to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The native child (or children) that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var e_1, _a;\n        var renderParent = getRenderParent(childTNode, currentView);\n        if (renderParent != null) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[T_HOST];\n            var anchorNode = getNativeAnchorNode(parentTNode, currentView);\n            if (Array.isArray(childEl)) {\n                try {\n                    for (var childEl_1 = __values(childEl), childEl_1_1 = childEl_1.next(); !childEl_1_1.done; childEl_1_1 = childEl_1.next()) {\n                        var nativeNode = childEl_1_1.value;\n                        nativeAppendOrInsertBefore(renderer, renderParent, nativeNode, anchorNode);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (childEl_1_1 && !childEl_1_1.done && (_a = childEl_1.return)) _a.call(childEl_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n            else {\n                nativeAppendOrInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n        }\n    }\n    /**\n     * Gets the top-level element or an ICU container if those containers are nested.\n     *\n     * @param tNode The starting TNode for which we should skip element and ICU containers\n     * @returns The TNode of the highest level ICU container or element container\n     */\n    function getHighestElementOrICUContainer(tNode) {\n        while (tNode.parent != null && (tNode.parent.type === 4 /* ElementContainer */ ||\n            tNode.parent.type === 5 /* IcuContainer */)) {\n            tNode = tNode.parent;\n        }\n        return tNode;\n    }\n    function getBeforeNodeForView(viewIndexInContainer, lContainer) {\n        var nextViewIndex = CONTAINER_HEADER_OFFSET + viewIndexInContainer + 1;\n        if (nextViewIndex < lContainer.length) {\n            var lView = lContainer[nextViewIndex];\n            ngDevMode && assertDefined(lView[T_HOST], 'Missing Host TNode');\n            var tViewNodeChild = lView[T_HOST].child;\n            return tViewNodeChild !== null ? getNativeByTNodeOrNull(tViewNodeChild, lView) :\n                lContainer[NATIVE];\n        }\n        else {\n            return lContainer[NATIVE];\n        }\n    }\n    /**\n     * Removes a native node itself using a given renderer. To remove the node we are looking up its\n     * parent from the native tree as not all platforms / browsers support the equivalent of\n     * node.remove().\n     *\n     * @param renderer A renderer to be used\n     * @param rNode The native node that should be removed\n     * @param isHostElement A flag indicating if a node to be removed is a host of a component.\n     */\n    function nativeRemoveNode(renderer, rNode, isHostElement) {\n        var nativeParent = nativeParentNode(renderer, rNode);\n        if (nativeParent) {\n            nativeRemoveChild(renderer, nativeParent, rNode, isHostElement);\n        }\n    }\n    /**\n     * Appends nodes to a target projection place. Nodes to insert were previously re-distribution and\n     * stored on a component host level.\n     * @param lView A LView where nodes are inserted (target LView)\n     * @param tProjectionNode A projection node where previously re-distribution should be appended\n     * (target insertion place)\n     * @param selectorIndex A bucket from where nodes to project should be taken\n     * @param componentView A where projectable nodes were initially created (source view)\n     */\n    function appendProjectedNodes(lView, tProjectionNode, selectorIndex, componentView) {\n        var projectedView = componentView[PARENT];\n        var componentNode = componentView[T_HOST];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        if (Array.isArray(nodeToProject)) {\n            appendChild(nodeToProject, tProjectionNode, lView);\n        }\n        else {\n            while (nodeToProject) {\n                if (!(nodeToProject.flags & 32 /* isDetached */)) {\n                    if (nodeToProject.type === 1 /* Projection */) {\n                        appendProjectedNodes(lView, tProjectionNode, nodeToProject.projection, findComponentView(projectedView));\n                    }\n                    else {\n                        // This flag must be set now or we won't know that this node is projected\n                        // if the nodes are inserted into a container later.\n                        nodeToProject.flags |= 2 /* isProjected */;\n                        appendProjectedNode(nodeToProject, tProjectionNode, lView, projectedView);\n                    }\n                }\n                nodeToProject = nodeToProject.projectionNext;\n            }\n        }\n    }\n    /**\n     * Loops over all children of a TNode container and appends them to the DOM\n     *\n     * @param ngContainerChildTNode The first child of the TNode container\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedChildren(ngContainerChildTNode, tProjectionNode, currentView, projectionView) {\n        while (ngContainerChildTNode) {\n            appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n            ngContainerChildTNode = ngContainerChildTNode.next;\n        }\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            for (var i = CONTAINER_HEADER_OFFSET; i < nodeOrContainer.length; i++) {\n                addRemoveViewFromContainer(nodeOrContainer[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else if (projectedTNode.type === 5 /* IcuContainer */) {\n            // The node we are adding is an ICU container which is why we also need to project all the\n            // children nodes that might have been created previously and are linked to this anchor\n            var ngContainerChildTNode = projectedTNode.child;\n            appendProjectedChildren(ngContainerChildTNode, ngContainerChildTNode, projectionView, projectionView);\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                appendProjectedChildren(projectedTNode.child, tProjectionNode, currentView, projectionView);\n            }\n            if (isLContainer(nodeOrContainer)) {\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n    /**\n     * `executeActionOnView` performs an operation on the view as specified in `action` (insert, detach,\n     * destroy)\n     *\n     * Inserting a view without projection or containers at top level is simple. Just iterate over the\n     * root nodes of the View, and for each node perform the `action`.\n     *\n     * Things get more complicated with containers and projections. That is because coming across:\n     * - Container: implies that we have to insert/remove/destroy the views of that container as well\n     *              which in turn can have their own Containers at the View roots.\n     * - Projection: implies that we have to insert/remove/destroy the nodes of the projection. The\n     *               complication is that the nodes we are projecting can themselves have Containers\n     *               or other Projections.\n     *\n     * As you can see this is a very recursive problem. While the recursive implementation is not the\n     * most efficient one, trying to unroll the nodes non-recursively results in very complex code that\n     * is very hard (to maintain). We are sacrificing a bit of performance for readability using a\n     * recursive implementation.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function executeActionOnView(renderer, action, lView, renderParent, beforeNode) {\n        var tView = lView[TVIEW];\n        ngDevMode && assertNodeType(tView.node, 2 /* View */);\n        var viewRootTNode = tView.node.child;\n        while (viewRootTNode !== null) {\n            executeActionOnNode(renderer, action, lView, viewRootTNode, renderParent, beforeNode);\n            viewRootTNode = viewRootTNode.next;\n        }\n    }\n    /**\n     * `executeActionOnProjection` performs an operation on the projection specified by `action`\n     * (insert, detach, destroy).\n     *\n     * Inserting a projection requires us to locate the projected nodes from the parent component. The\n     * complication is that those nodes themselves could be re-projected from their parent component.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param tProjectionNode projection TNode to process\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function executeActionOnProjection(renderer, action, lView, tProjectionNode, renderParent, beforeNode) {\n        var componentLView = findComponentView(lView);\n        var componentNode = componentLView[T_HOST];\n        ngDevMode && assertDefined(componentNode.projection, 'Element nodes for which projection is processed must have projection defined.');\n        var nodeToProject = componentNode.projection[tProjectionNode.projection];\n        if (nodeToProject !== undefined) {\n            if (Array.isArray(nodeToProject)) {\n                for (var i = 0; i < nodeToProject.length; i++) {\n                    var rNode = nodeToProject[i];\n                    ngDevMode && assertDomNode(rNode);\n                    executeActionOnElementOrContainer(action, renderer, renderParent, rNode, beforeNode);\n                }\n            }\n            else {\n                var projectionTNode = nodeToProject;\n                var projectedComponentLView = componentLView[PARENT];\n                while (projectionTNode !== null) {\n                    executeActionOnNode(renderer, action, projectedComponentLView, projectionTNode, renderParent, beforeNode);\n                    projectionTNode = projectionTNode.projectionNext;\n                }\n            }\n        }\n    }\n    /**\n     * `executeActionOnContainer` performs an operation on the container and its views as specified by\n     * `action` (insert, detach, destroy)\n     *\n     * Inserting a Container is complicated by the fact that the container may have Views which\n     * themselves have containers or projections.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lContainer The LContainer which needs to be inserted, detached, destroyed.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function executeActionOnContainer(renderer, action, lContainer, renderParent, beforeNode) {\n        ngDevMode && assertLContainer(lContainer);\n        var anchor = lContainer[NATIVE]; // LContainer has its own before node.\n        var native = unwrapRNode(lContainer);\n        // An LContainer can be created dynamically on any node by injecting ViewContainerRef.\n        // Asking for a ViewContainerRef on an element will result in a creation of a separate anchor node\n        // (comment in the DOM) that will be different from the LContainer's host node. In this particular\n        // case we need to execute action on 2 nodes:\n        // - container's host node (this is done in the executeNodeAction)\n        // - container's host node (this is done here)\n        if (anchor !== native) {\n            executeActionOnElementOrContainer(action, renderer, renderParent, anchor, beforeNode);\n        }\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var lView = lContainer[i];\n            executeActionOnView(renderer, action, lView, renderParent, anchor);\n        }\n    }\n    /**\n     * `executeActionOnElementContainerOrIcuContainer` performs an operation on the ng-container node\n     * and its child nodes as specified by the `action` (insert, detach, destroy).\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param tNode The TNode associated with the `ElementContainer` or `IcuContainer`.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function executeActionOnElementContainerOrIcuContainer(renderer, action, lView, tNode, renderParent, beforeNode) {\n        var node = lView[tNode.index];\n        executeActionOnElementOrContainer(action, renderer, renderParent, node, beforeNode);\n        var childTNode = tNode.child;\n        while (childTNode) {\n            executeActionOnNode(renderer, action, lView, childTNode, renderParent, beforeNode);\n            childTNode = childTNode.next;\n        }\n    }\n    function executeActionOnNode(renderer, action, lView, tNode, renderParent, beforeNode) {\n        var nodeType = tNode.type;\n        if (!(tNode.flags & 32 /* isDetached */)) {\n            if (nodeType === 4 /* ElementContainer */ || nodeType === 5 /* IcuContainer */) {\n                executeActionOnElementContainerOrIcuContainer(renderer, action, lView, tNode, renderParent, beforeNode);\n            }\n            else if (nodeType === 1 /* Projection */) {\n                executeActionOnProjection(renderer, action, lView, tNode, renderParent, beforeNode);\n            }\n            else {\n                ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */);\n                executeActionOnElementOrContainer(action, renderer, renderParent, lView[tNode.index], beforeNode);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[T_HOST];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[T_HOST];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[T_HOST];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 256 /* Destroyed */) === 256 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~128 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 128 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChangesInternal(this._lView, this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._lView);\n        };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = getLViewParent(this._lView)[this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            var nativeNode = getNativeByTNodeOrNull(tNodeChild, lView);\n            nativeNode && result.push(nativeNode);\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            else if (tNodeChild.type === 1 /* Projection */) {\n                var componentView = findComponentView(lView);\n                var componentHost = componentView[T_HOST];\n                var parentView = getLViewParent(componentView);\n                var currentProjectedNode = componentHost.projection[tNodeChild.projection];\n                while (currentProjectedNode && parentView) {\n                    result.push(getNativeByTNode(currentProjectedNode, parentView));\n                    currentProjectedNode = currentProjectedNode.next;\n                }\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node on which a TemplateRef is requested\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance or null if we can't create a TemplateRef on a given node type\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationView, _declarationTContainer, elementRef) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationView = _declarationView;\n                    _this._declarationTContainer = _declarationTContainer;\n                    _this.elementRef = elementRef;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context) {\n                    var embeddedTView = this._declarationTContainer.tViews;\n                    var lView = createEmbeddedViewAndNode(embeddedTView, context, this._declarationView, this._declarationTContainer.injectorIndex);\n                    var declarationLContainer = this._declarationView[this._declarationTContainer.index];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    lView[DECLARATION_LCONTAINER] = declarationLContainer;\n                    var declarationViewLQueries = this._declarationView[QUERIES];\n                    if (declarationViewLQueries !== null) {\n                        lView[QUERIES] = declarationViewLQueries.createEmbeddedView(embeddedTView);\n                    }\n                    renderEmbeddedTemplate(lView, embeddedTView, context);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[T_HOST];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, hostTNode, createElementRef(ElementRefToken, hostTNode, hostView));\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this.length > 0) {\n                        this.remove(this.length - 1);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) {\n                    return this._lContainer[VIEW_REFS] !== null && this._lContainer[VIEW_REFS][index] || null;\n                };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer.length - CONTAINER_HEADER_OFFSET; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var viewRef = templateRef.createEmbeddedView(context || {});\n                    this.insert(viewRef, index);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    this.allocateContainerIfNeeded();\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    if (viewAttachedToContainer(lView)) {\n                        // If view is already attached, fall back to move() so we clean up\n                        // references appropriately.\n                        return this.move(viewRef, adjustedIdx);\n                    }\n                    insertView(lView, this._lContainer, adjustedIdx);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    addToArray(this._lContainer[VIEW_REFS], adjustedIdx, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    if (index !== -1)\n                        this.detach(index);\n                    this.insert(viewRef, newIndex);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) {\n                    return this._lContainer[VIEW_REFS] !== null ?\n                        this._lContainer[VIEW_REFS].indexOf(viewRef) :\n                        0;\n                };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, adjustedIdx);\n                    removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx);\n                    var wasDetached = view && removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx) != null;\n                    return wasDetached ? new ViewRef(view, view[CONTEXT], -1) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this.length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this.length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                ViewContainerRef_.prototype.allocateContainerIfNeeded = function () {\n                    if (this._lContainer[VIEW_REFS] === null) {\n                        this._lContainer[VIEW_REFS] = [];\n                    }\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = void 0;\n            // If the host is an element container, the native host element is guaranteed to be a\n            // comment and we can reuse that comment as anchor element for the new LContainer.\n            if (hostTNode.type === 4 /* ElementContainer */) {\n                commentNode = unwrapRNode(slotValue);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererCreateComment++;\n                commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            }\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, hostTNode, true);\n            addToViewTree(hostView, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef(isPipe) {\n        if (isPipe === void 0) { isPipe = false; }\n        return createViewRef(getPreviousOrParentTNode(), getLView(), isPipe);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param isPipe Whether the view is being injected into a pipe.\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, isPipe) {\n        if (isComponent(hostTNode) && !isPipe) {\n            var componentIndex = hostTNode.directiveStart;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, null, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */ || hostTNode.type === 0 /* Container */ ||\n            hostTNode.type === 4 /* ElementContainer */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Injects a Renderer2 for the current component. */\n    function injectRenderer2() {\n        // We need the Renderer to be based on the component that it's being injected into, however since\n        // DI happens before we've entered its view, `getLView` will return the parent view instead.\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var nodeAtIndex = getComponentViewByIndex(tNode.index, lView);\n        return getOrCreateRenderer2(isLView(nodeAtIndex) ? nodeAtIndex : lView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var INHERITED_CLASS_WITH_DELEGATE_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(\\)\\s*{\\s+super\\(\\.\\.\\.arguments\\)/;\n    /**\n     * Determine whether a stringified type is a class which delegates its constructor\n     * to its parent.\n     *\n     * This is not trivial since compiled code can actually contain a constructor function\n     * even if the original source code did not. For instance, when the child class contains\n     * an initialized instance property.\n     */\n    function isDelegateCtor(typeStr) {\n        return DELEGATE_CTOR.test(typeStr) || INHERITED_CLASS_WITH_DELEGATE_CTOR.test(typeStr) ||\n            (INHERITED_CLASS.test(typeStr) && !INHERITED_CLASS_WITH_CTOR.test(typeStr));\n    }\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] && paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (isDelegateCtor(typeStr)) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.ownPropMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            return this._ownPropMetadata(typeOrFunc, getParentCtor(typeOrFunc)) || {};\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else if (param === ChangeDetectorRef) {\n                    meta.token = param;\n                    meta.resolved = compiler.R3ResolvedDependencyType.ChangeDetectorRef;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n            return;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n                    var meta = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        typeArgumentCount: 0,\n                        providedIn: meta.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined,\n                    };\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta.useClass;\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreDiEnv, \"ng:///\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$1 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR === undefined) {\n            NULL_INJECTOR = new NullInjector();\n        }\n        return NULL_INJECTOR;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders, name) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent, name);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent, source) {\n            var _this = this;\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            this._destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            var dedupStack = [];\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n            // Source name, used for debugging\n            this.source = source || (typeof def === 'object' ? null : stringify(def));\n        }\n        Object.defineProperty(R3Injector.prototype, \"destroyed\", {\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this._destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                return nextInjector.get(token, flags & exports.InjectFlags.Optional ? null : notFoundValue);\n            }\n            catch (e) {\n                if (e.name === 'NullInjectorError') {\n                    var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n                    path.unshift(stringify(token));\n                    if (previousInjector) {\n                        // We still have a parent injector, keep throwing\n                        throw e;\n                    }\n                    else {\n                        // Format & throw the final error message when we don't have any previous injector\n                        return catchInjectorError(e, token, 'R3InjectorError', this.source);\n                    }\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.toString = function () {\n            var tokens = [], records = this.records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"R3Injector[\" + tokens.join(', ') + \"]\";\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this._destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         *\n         * If an `InjectorTypeWithProviders` that declares providers besides the type is specified,\n         * the function will return \"true\" to indicate that the providers of the type definition need\n         * to be processed. This allows us to process providers of injector types after all imports of\n         * an injector definition are processed. (following View Engine semantics: see FW-1349)\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return false;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return false;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                var importTypesWithProviders_1;\n                try {\n                    deepForEach(def.imports, function (imported) {\n                        if (_this.processInjectorType(imported, parents, dedupStack)) {\n                            if (importTypesWithProviders_1 === undefined)\n                                importTypesWithProviders_1 = [];\n                            // If the processed import is an injector type with providers, we store it in the\n                            // list of import types with providers, so that we can process those afterwards.\n                            importTypesWithProviders_1.push(imported);\n                        }\n                    });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n                // Imports which are declared with providers (TypeWithProviders) need to be processed\n                // after all imported modules are processed. This is similar to how View Engine\n                // processes/merges module imports in the metadata resolver. See: FW-1349.\n                if (importTypesWithProviders_1 !== undefined) {\n                    var _loop_1 = function (i) {\n                        var _a = importTypesWithProviders_1[i], ngModule_1 = _a.ngModule, providers = _a.providers;\n                        deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModule_1, providers || EMPTY_ARRAY$1); });\n                    };\n                    for (var i = 0; i < importTypesWithProviders_1.length; i++) {\n                        _loop_1(i);\n                    }\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            return (ngModule !== undefined &&\n                defOrWrappedDef.providers !== undefined);\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throwMixedMultiProviderError();\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throwMixedMultiProviderError();\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR) {\n                throwCyclicDependencyError(stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        // Most tokens will have an ngInjectableDef directly on them, which specifies a factory directly.\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef !== null) {\n            return injectableDef.factory;\n        }\n        // If the token is an NgModule, it's also injectable but the factory is on its ngInjectorDef.\n        var injectorDef = getInjectorDef(token);\n        if (injectorDef !== null) {\n            return injectorDef.factory;\n        }\n        // InjectionTokens should have an ngInjectableDef and thus should be handled above.\n        // If it's missing that, it's an error.\n        if (token instanceof InjectionToken) {\n            throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n        }\n        // Undecorated types can sometimes be created if they have no constructor arguments.\n        if (token instanceof Function) {\n            return getUndecoratedInjectableFactory(token);\n        }\n        // There was no way to resolve a factory for this token.\n        throw new Error('unreachable');\n    }\n    function getUndecoratedInjectableFactory(token) {\n        // If the token has parameters then it has dependencies that we cannot resolve implicitly.\n        var paramLength = token.length;\n        if (paramLength > 0) {\n            var args = new Array(paramLength).fill('?');\n            throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n        }\n        // The constructor function appears to have no parameters.\n        // This might be because it inherits from a super-class. In which case, use an ngInjectableDef\n        // from an ancestor if there is one.\n        // Otherwise this really is a simple class with no dependencies, so return a factory that\n        // just instantiates the zero-arg constructor.\n        var inheritedInjectableDef = getInheritedInjectableDef(token);\n        if (inheritedInjectableDef !== null) {\n            return function () { return inheritedInjectableDef.factory(token); };\n        }\n        else {\n            return function () { return new token(); };\n        }\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return ɵɵinject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    throwInvalidProviderError(ngModuleType, providers, provider);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function isValueProvider(value) {\n        return value !== null && typeof value == 'object' && USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function isClassProvider(value) {\n        return !!value.useClass;\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return value !== null && typeof value === 'object' &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    function INJECTOR_IMPL__POST_R3__(providers, parent, name) {\n        return createInjector({ name: name }, parent, providers, name);\n    }\n    var INJECTOR_IMPL = INJECTOR_IMPL__POST_R3__;\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return INJECTOR_IMPL(options, parent, '');\n            }\n            else {\n                return INJECTOR_IMPL(options.providers, options.parent, options.name || '');\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = ɵɵdefineInjectable({\n            token: Injector,\n            providedIn: 'any',\n            factory: function () { return ɵɵinject(INJECTOR); },\n        });\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Injector.__NG_ELEMENT_ID__ = -1;\n        return Injector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI token that you can use to create a virtual [provider](guide/glossary#provider)\n     * that will populate the `entryComponents` field of components and NgModules\n     * based on its `useValue` property value.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) are added to the `entryComponents` property.\n     *\n     * @usageNotes\n     *\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on a router configuration that refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n     * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n     *\n     * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n     * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n     *\n     * // Use browser's `fetch()` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into `template` strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible for returning a `Promise` to the\n     * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var componentResolved = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component, type) {\n            var promises = [];\n            if (component.templateUrl) {\n                promises.push(cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                }));\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                promises.push(cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                }));\n            });\n            var fullyResolved = Promise.all(promises).then(function () { return componentDefResolved(type); });\n            componentResolved.push(fullyResolved);\n        });\n        clearResolutionOfComponentResourcesQueue();\n        return Promise.all(componentResolved).then(function () { return undefined; });\n    }\n    var componentResourceResolutionQueue = new Map();\n    // Track when existing ngComponentDef for a Type is waiting on resources.\n    var componentDefPendingResolution = new Set();\n    function maybeQueueResolutionOfComponentResources(type, metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.set(type, metadata);\n            componentDefPendingResolution.add(type);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return !!((component.templateUrl && !component.hasOwnProperty('template')) ||\n            component.styleUrls && component.styleUrls.length);\n    }\n    function clearResolutionOfComponentResourcesQueue() {\n        var old = componentResourceResolutionQueue;\n        componentResourceResolutionQueue = new Map();\n        return old;\n    }\n    function isComponentResourceResolutionQueueEmpty() {\n        return componentResourceResolutionQueue.size === 0;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n    function componentDefResolved(type) {\n        componentDefPendingResolution.delete(type);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     *\n     * @codeGenApi\n     */\n    function ɵɵallocHostVars(count) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (!tView.firstTemplatePass)\n            return;\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n     */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /**\n     * On the first template pass, we need to reserve space for host binding values\n     * after directives are matched (so all directives are saved, then bindings).\n     * Because we are updating the blueprint, we only need to do this once.\n     */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, bindingIndex);\n        ngDevMode &&\n            assertNotSame(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        var oldValue = lView[bindingIndex];\n        if (isDifferent(oldValue, value)) {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                // View engine didn't report undefined values as changed on the first checkNoChanges pass\n                // (before the change detection was run).\n                var oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;\n                if (!devModeEqual(oldValueToCompare, value)) {\n                    throwErrorIfNoChangesMode(oldValue === NO_CHANGE, oldValueToCompare, value);\n                }\n            }\n            lView[bindingIndex] = value;\n            return true;\n        }\n        return false;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a selected element.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵproperty(propName, value, sanitizer) {\n        var index = getSelectedIndex();\n        ngDevMode && assertNotEqual(index, -1, 'selected index cannot be -1');\n        var lView = getLView();\n        var bindReconciledValue = bind(lView, value);\n        if (bindReconciledValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, bindReconciledValue, sanitizer);\n        }\n        return ɵɵproperty;\n    }\n    /**\n     * Creates a single value binding.\n     *\n     * @param lView Current view\n     * @param value Value to diff\n     */\n    function bind(lView, value) {\n        var bindingIndex = lView[BINDING_INDEX]++;\n        storeBindingMetadata(lView);\n        return bindingUpdated(lView, bindingIndex, value) ? value : NO_CHANGE;\n    }\n\n    /**\n     * Updates the value of or removes a bound attribute on an Element.\n     *\n     * Used in the case of `[attr.title]=\"value\"`\n     *\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param namespace Optional namespace to use when setting the attribute.\n     *\n     * @codeGenApi\n     */\n    function ɵɵattribute(name, value, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var bound = bind(lView, value);\n        if (bound !== NO_CHANGE) {\n            elementAttributeInternal(index, name, bound, lView, sanitizer, namespace);\n        }\n        return ɵɵattribute;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(lView, values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var isBindingUpdated = false;\n        var tData = lView[TVIEW].data;\n        var bindingIndex = lView[BINDING_INDEX];\n        if (tData[bindingIndex] == null) {\n            // 2 is the index of the first static interstitial value (ie. not prefix)\n            for (var i = 2; i < values.length; i += 2) {\n                tData[bindingIndex++] = values[i];\n            }\n            bindingIndex = lView[BINDING_INDEX];\n        }\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            isBindingUpdated = bindingUpdated(lView, bindingIndex++, values[i]) || isBindingUpdated;\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        storeBindingMetadata(lView, values[0], values[values.length - 1]);\n        if (!isBindingUpdated) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += renderStringify(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(lView, prefix, v0, suffix) {\n        var different = bindingUpdated(lView, lView[BINDING_INDEX]++, v0);\n        storeBindingMetadata(lView, prefix, suffix);\n        return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 2 expressions.\n     */\n    function interpolation2(lView, prefix, v0, i0, v1, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated2(lView, bindingIndex, v0, v1);\n        lView[BINDING_INDEX] += 2;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            lView[TVIEW].data[bindingIndex] = i0;\n        }\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 3 expressions.\n     */\n    function interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Create an interpolation binding with 4 expressions.\n     */\n    function interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 5 expressions.\n     */\n    function interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 6 expressions.\n     */\n    function interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 7 expressions.\n     */\n    function interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 8 expressions.\n     */\n    function interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n            tData[bindingIndex + 6] = i6;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n            NO_CHANGE;\n    }\n\n    /**\n     *\n     * Update an interpolated attribute on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate1(attrName, prefix, v0, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate2(attrName, prefix, v0, i0, v1, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate3(attrName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate4(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate5(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate6(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate7(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate8(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate8;\n    }\n    /**\n     * Update an interpolated attribute on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param attrName The name of the attribute to update.\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolateV(attrName, values, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolated, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainer(index) {\n        var lView = getLView();\n        var tNode = containerInternal(lView, index, null, null);\n        if (lView[TVIEW].firstTemplatePass) {\n            tNode.tViews = [];\n        }\n        setIsNotParent();\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplate(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // TODO: consider a separate node type for templates\n        var tContainerNode = containerInternal(lView, index, tagName || null, attrs || null);\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, tContainerNode, localRefs || null);\n            var embeddedTView = tContainerNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, tView.schemas);\n            if (tView.queries !== null) {\n                tView.queries.template(tView, tContainerNode);\n                embeddedTView.queries = tView.queries.embeddedTView(tContainerNode);\n            }\n        }\n        createDirectivesAndLocals(tView, lView, tContainerNode, localRefExtractor);\n        attachPatchData(getNativeByTNode(tContainerNode, lView), lView);\n        registerPostOrderHooks(tView, tContainerNode);\n        setIsNotParent();\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = loadInternal(tView.data, index);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setPreviousOrParentTNode(previousOrParentTNode, true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        executePreOrderHooks(lView, tView, getCheckNoChangesMode(), undefined);\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer.length - CONTAINER_HEADER_OFFSET) {\n            removeView(lContainer, nextIndex);\n        }\n    }\n    function containerInternal(lView, nodeIndex, tagName, attrs) {\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = nodeIndex + HEADER_OFFSET;\n        ngDevMode && assertDataInRange(lView, nodeIndex + HEADER_OFFSET);\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var comment = lView[adjustedIndex] =\n            lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 0 /* Container */, tagName, attrs);\n        var lContainer = lView[adjustedIndex] = createLContainer(comment, lView, comment, tNode);\n        appendChild(comment, tNode, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, lContainer);\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n            tView.blueprint[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     *\n     * @codeGenApi\n     */\n    function ɵɵreference(index) {\n        var contextLView = getContextLView();\n        return loadInternal(contextLView, index);\n    }\n    /**\n     * Retrieves a value from current `viewData`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵload(index) {\n        return loadInternal(getLView(), index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ɵɵdirectiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        var lView = getLView();\n        // Fall back to inject() if view hasn't been created. This situation can happen in tests\n        // if inject utilities are used before bootstrapping.\n        if (lView == null)\n            return ɵɵinject(token, flags);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), lView, token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n\n    /**\n     * --------\n     *\n     * This file contains the core logic for how styling instructions are processed in Angular.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    /**\n     * Temporary function to bridge styling functionality between this new\n     * refactor (which is here inside of `styling_next/`) and the old\n     * implementation (which lives inside of `styling/`).\n     *\n     * This function is executed during the creation block of an element.\n     * Because the existing styling implementation issues a call to the\n     * `styling()` instruction, this instruction will also get run. The\n     * central idea here is that the directive index values are bound\n     * into the context. The directive index is temporary and is only\n     * required until the `select(n)` instruction is fully functional.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyling() {\n        var tView = getLView()[TVIEW];\n        if (tView.firstTemplatePass) {\n            updateLastDirectiveIndex$1(getPreviousOrParentTNode(), getActiveDirectiveStylingIndex());\n        }\n    }\n    /**\n     * Sets the current style sanitizer function which will then be used\n     * within all follow-up prop and map-based style binding instructions\n     * for the given element.\n     *\n     * Note that once styling has been applied to the element (i.e. once\n     * `select(n)` is executed or the hostBindings/template function exits)\n     * then the active `sanitizerFn` will be set to `null`. This means that\n     * once styling is applied to another element then a another call to\n     * `styleSanitizer` will need to be made.\n     *\n     * @param sanitizerFn The sanitization function that will be used to\n     *       process style prop/value entries.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleSanitizer(sanitizer) {\n        setCurrentStyleSanitizer(sanitizer);\n    }\n    /**\n     * Update a style binding on an element with the provided value.\n     *\n     * If the style value is falsy then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `styleMap` or any static styles that are\n     * present from when the element was created with `styling`).\n     *\n     * Note that the styling element is updated as part of `stylingApply`.\n     *\n     * @param prop A valid CSS property.\n     * @param value New value to write (`null` or an empty string to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     *\n     * Note that this will apply the provided style value to the host element if this function is called\n     * within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleProp(prop, value, suffix) {\n        stylePropInternal(getSelectedIndex(), prop, value, suffix);\n    }\n    function stylePropInternal(elementIndex, prop, value, suffix) {\n        var lView = getLView();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        var updated = _stylingProp(elementIndex, bindingIndex, prop, resolveStylePropValue(value, suffix), false, deferStylingUpdate());\n        if (ngDevMode) {\n            ngDevMode.styleProp++;\n            if (updated) {\n                ngDevMode.stylePropCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Update a class binding on an element with the provided value.\n     *\n     * This instruction is meant to handle the `[class.foo]=\"exp\"` case and,\n     * therefore, the class binding itself must already be allocated using\n     * `styling` within the creation block.\n     *\n     * @param prop A valid CSS class (only one).\n     * @param value A true/false value which will turn the class on or off.\n     *\n     * Note that this will apply the provided class value to the host element if this function\n     * is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassProp(className, value) {\n        var lView = getLView();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        var updated = _stylingProp(getSelectedIndex(), bindingIndex, className, value, true, deferStylingUpdate());\n        if (ngDevMode) {\n            ngDevMode.classProp++;\n            if (updated) {\n                ngDevMode.classPropCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Shared function used to update a prop-based styling binding for an element.\n     */\n    function _stylingProp(elementIndex, bindingIndex, prop, value, isClassBased, defer) {\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var native = getNativeByTNode(tNode, lView);\n        var updated = false;\n        if (value !== NO_CHANGE) {\n            if (isClassBased) {\n                updated = updateClassBinding(getClassesContext(tNode), lView, native, prop, bindingIndex, value, defer, false);\n            }\n            else {\n                var sanitizer = getCurrentStyleSanitizer();\n                updated = updateStyleBinding(getStylesContext(tNode), lView, native, prop, bindingIndex, value, sanitizer, defer, false);\n            }\n        }\n        return updated;\n    }\n    /**\n     * Update style bindings using an object literal on an element.\n     *\n     * This instruction is meant to apply styling via the `[style]=\"exp\"` template bindings.\n     * When styles are applied to the element they will then be updated with respect to\n     * any styles/classes set via `styleProp`. If any styles are set to falsy\n     * then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     *\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     *\n     * Note that this will apply the provided styleMap value to the host element if this function\n     * is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleMap(styles) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var context = getStylesContext(tNode);\n        var directiveIndex = getActiveDirectiveStylingIndex();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!directiveIndex && hasStyleInput(tNode) && styles !== NO_CHANGE) {\n            updateDirectiveInputValue(context, lView, tNode, bindingIndex, styles, false);\n            styles = NO_CHANGE;\n        }\n        var updated = _stylingMap(index, context, bindingIndex, styles, false, deferStylingUpdate());\n        if (ngDevMode) {\n            ngDevMode.styleMap++;\n            if (updated) {\n                ngDevMode.styleMapCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Update class bindings using an object literal or class-string on an element.\n     *\n     * This instruction is meant to apply styling via the `[class]=\"exp\"` template bindings.\n     * When classes are applied to the element they will then be updated with\n     * respect to any styles/classes set via `classProp`. If any\n     * classes are set to falsy then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     * Note that this will the provided classMap value to the host element if this function is called\n     * within a host binding.\n     *\n     * @param classes A key/value map or string of CSS classes that will be added to the\n     *        given element. Any missing classes (that have already been applied to the element\n     *        beforehand) will be removed (unset) from the element's list of CSS classes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassMap(classes) {\n        classMapInternal(getSelectedIndex(), classes);\n    }\n    function classMapInternal(elementIndex, classes) {\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var context = getClassesContext(tNode);\n        var directiveIndex = getActiveDirectiveStylingIndex();\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = lView[BINDING_INDEX]++;\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!directiveIndex && hasClassInput(tNode) && classes !== NO_CHANGE) {\n            updateDirectiveInputValue(context, lView, tNode, bindingIndex, classes, true);\n            classes = NO_CHANGE;\n        }\n        var updated = _stylingMap(elementIndex, context, bindingIndex, classes, true, deferStylingUpdate());\n        if (ngDevMode) {\n            ngDevMode.classMap++;\n            if (updated) {\n                ngDevMode.classMapCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Shared function used to update a map-based styling binding for an element.\n     *\n     * When this function is called it will activate support for `[style]` and\n     * `[class]` bindings in Angular.\n     */\n    function _stylingMap(elementIndex, context, bindingIndex, value, isClassBased, defer) {\n        activateStylingMapFeature();\n        var lView = getLView();\n        var valueHasChanged = false;\n        if (value !== NO_CHANGE) {\n            var tNode = getTNode(elementIndex, lView);\n            var native = getNativeByTNode(tNode, lView);\n            var oldValue = lView[bindingIndex];\n            valueHasChanged = hasValueChanged(oldValue, value);\n            var stylingMapArr = normalizeIntoStylingMap(oldValue, value, !isClassBased);\n            if (isClassBased) {\n                updateClassBinding(context, lView, native, null, bindingIndex, stylingMapArr, defer, valueHasChanged);\n            }\n            else {\n                var sanitizer = getCurrentStyleSanitizer();\n                updateStyleBinding(context, lView, native, null, bindingIndex, stylingMapArr, sanitizer, defer, valueHasChanged);\n            }\n        }\n        return valueHasChanged;\n    }\n    /**\n     * Writes a value to a directive's `style` or `class` input binding (if it has changed).\n     *\n     * If a directive has a `@Input` binding that is set on `style` or `class` then that value\n     * will take priority over the underlying style/class styling bindings. This value will\n     * be updated for the binding each time during change detection.\n     *\n     * When this occurs this function will attempt to write the value to the input binding\n     * depending on the following situations:\n     *\n     * - If `oldValue !== newValue`\n     * - If `newValue` is `null` (but this is skipped if it is during the first update pass--\n     *    which is when the context is not locked yet)\n     */\n    function updateDirectiveInputValue(context, lView, tNode, bindingIndex, newValue, isClassBased) {\n        var oldValue = lView[bindingIndex];\n        if (oldValue !== newValue) {\n            // even if the value has changed we may not want to emit it to the\n            // directive input(s) in the event that it is falsy during the\n            // first update pass.\n            if (newValue || isContextLocked(context)) {\n                var inputs = tNode.inputs[isClassBased ? 'class' : 'style'];\n                var initialValue = getInitialStylingValue(context);\n                var value = normalizeStylingDirectiveInputValue(initialValue, newValue, isClassBased);\n                setInputsForProperty(lView, inputs, value);\n            }\n            lView[bindingIndex] = newValue;\n        }\n    }\n    /**\n     * Returns the appropriate directive input value for `style` or `class`.\n     *\n     * Earlier versions of Angular expect a binding value to be passed into directive code\n     * exactly as it is unless there is a static value present (in which case both values\n     * will be stringified and concatenated).\n     */\n    function normalizeStylingDirectiveInputValue(initialValue, bindingValue, isClassBased) {\n        var value = bindingValue;\n        // we only concat values if there is an initial value, otherwise we return the value as is.\n        // Note that this is to satisfy backwards-compatibility in Angular.\n        if (initialValue.length > 0) {\n            if (isClassBased) {\n                value = concatString(initialValue, forceClassesAsString(bindingValue));\n            }\n            else {\n                value = concatString(initialValue, forceStylesAsString(bindingValue), ';');\n            }\n        }\n        return value;\n    }\n    /**\n     * Flushes all styling code to the element.\n     *\n     * This function is designed to be called from the template and hostBindings\n     * functions and may be called multiple times depending whether multiple\n     * sources of styling exist. If called multiple times, only the last call\n     * to `stlyingApply()` will render styling to the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstylingApply() {\n        var elementIndex = getSelectedIndex();\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var renderer = getRenderer(tNode, lView);\n        var native = getNativeByTNode(tNode, lView);\n        var directiveIndex = getActiveDirectiveStylingIndex();\n        var sanitizer = getCurrentStyleSanitizer();\n        flushStyling(renderer, lView, getClassesContext(tNode), getStylesContext(tNode), native, directiveIndex, sanitizer);\n        setCurrentStyleSanitizer(null);\n    }\n    function getRenderer(tNode, lView) {\n        return tNode.type === 3 /* Element */ ? lView[RENDERER] : null;\n    }\n    /**\n     * Searches and assigns provided all static style/class entries (found in the `attrs` value)\n     * and registers them in their respective styling contexts.\n     */\n    function registerInitialStylingOnTNode(tNode, attrs, startIndex) {\n        var hasAdditionalInitialStyling = false;\n        var styles = getStylingMapArray(tNode.styles);\n        var classes = getStylingMapArray(tNode.classes);\n        var mode = -1;\n        for (var i = startIndex; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode == 1 /* Classes */) {\n                classes = classes || [''];\n                addItemToStylingMap(classes, attr, true);\n                hasAdditionalInitialStyling = true;\n            }\n            else if (mode == 2 /* Styles */) {\n                var value = attrs[++i];\n                styles = styles || [''];\n                addItemToStylingMap(styles, attr, value);\n                hasAdditionalInitialStyling = true;\n            }\n        }\n        if (classes && classes.length > 1 /* ValuesStartPosition */) {\n            if (!tNode.classes) {\n                tNode.classes = classes;\n            }\n            updateRawValueOnContext(tNode.classes, stylingMapToString(classes, true));\n        }\n        if (styles && styles.length > 1 /* ValuesStartPosition */) {\n            if (!tNode.styles) {\n                tNode.styles = styles;\n            }\n            updateRawValueOnContext(tNode.styles, stylingMapToString(styles, false));\n        }\n        return hasAdditionalInitialStyling;\n    }\n    function updateRawValueOnContext(context, value) {\n        var stylingMapArr = getStylingMapArray(context);\n        stylingMapArr[0 /* RawValuePosition */] = value;\n    }\n    function getActiveDirectiveStylingIndex() {\n        // whenever a directive's hostBindings function is called a uniqueId value\n        // is assigned. Normally this is enough to help distinguish one directive\n        // from another for the styling context, but there are situations where a\n        // sub-class directive could inherit and assign styling in concert with a\n        // parent directive. To help the styling code distinguish between a parent\n        // sub-classed directive the inheritance depth is taken into account as well.\n        return getActiveDirectiveId() + getActiveDirectiveSuperClassDepth();\n    }\n    /**\n     * Temporary function that will update the max directive index value in\n     * both the classes and styles contexts present on the provided `tNode`.\n     *\n     * This code is only used because the `select(n)` code functionality is not\n     * yet 100% functional. The `select(n)` instruction cannot yet evaluate host\n     * bindings function code in sync with the associated template function code.\n     * For this reason the styling algorithm needs to track the last directive index\n     * value so that it knows exactly when to render styling to the element since\n     * `stylingApply()` is called multiple times per CD (`stylingApply` will be\n     * removed once `select(n)` is fixed).\n     */\n    function updateLastDirectiveIndex$1(tNode, directiveIndex) {\n        updateLastDirectiveIndex(getClassesContext(tNode), directiveIndex);\n        updateLastDirectiveIndex(getStylesContext(tNode), directiveIndex);\n    }\n    function getStylesContext(tNode) {\n        return getContext(tNode, false);\n    }\n    function getClassesContext(tNode) {\n        return getContext(tNode, true);\n    }\n    /**\n     * Returns/instantiates a styling context from/to a `tNode` instance.\n     */\n    function getContext(tNode, isClassBased) {\n        var context = isClassBased ? tNode.classes : tNode.styles;\n        if (!isStylingContext(context)) {\n            context = allocTStylingContext(context);\n            if (ngDevMode) {\n                attachStylingDebugObject(context);\n            }\n            if (isClassBased) {\n                tNode.classes = context;\n            }\n            else {\n                tNode.styles = context;\n            }\n        }\n        return context;\n    }\n    function resolveStylePropValue(value, suffix) {\n        if (value === NO_CHANGE)\n            return value;\n        var resolvedValue = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                resolvedValue = renderStringify(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                resolvedValue = value;\n            }\n        }\n        return resolvedValue;\n    }\n    /**\n     * Whether or not a style/class binding update should be applied later.\n     *\n     * This function will decide whether a binding should be applied immediately\n     * or later (just before the styles/classes are flushed to the element). The\n     * reason why this feature exists is because of super/sub directive inheritance.\n     * Angular will evaluate host bindings on the super directive first and the sub\n     * directive, but the styling bindings on the sub directive are of higher priority\n     * than the super directive. For this reason all styling bindings that take place\n     * in this circumstance will need to be deferred until later so that they can be\n     * applied together and in a different order (the algorithm handles that part).\n     */\n    function deferStylingUpdate() {\n        return getActiveDirectiveSuperClassHeight() > 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementStart(index, name, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var renderer = lView[RENDERER];\n        var native = lView[index + HEADER_OFFSET] = elementCreate(name, renderer, getNamespace());\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 3 /* Element */, name, attrs || null);\n        if (attrs != null) {\n            var lastAttrIndex = setUpAttributes(renderer, native, attrs);\n            if (tView.firstTemplatePass) {\n                registerInitialStylingOnTNode(tNode, attrs, lastAttrIndex);\n            }\n        }\n        renderInitialStyling(renderer, native, tNode);\n        appendChild(native, tNode, lView);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, tNode, localRefs || null);\n            var inputData = initializeTNodeInputs(tNode);\n            if (inputData && inputData.hasOwnProperty('class')) {\n                tNode.flags |= 8 /* hasClassInput */;\n            }\n            if (inputData && inputData.hasOwnProperty('style')) {\n                tNode.flags |= 16 /* hasStyleInput */;\n            }\n            if (tView.queries !== null) {\n                tView.queries.elementStart(tView, tNode);\n            }\n        }\n        createDirectivesAndLocals(tView, lView, tNode);\n        executeContentQueries(tView, tNode, lView);\n    }\n    /**\n     * Mark the end of the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDefined(previousOrParentTNode, 'No parent node to close.');\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        var tNode = previousOrParentTNode;\n        ngDevMode && assertNodeType(tNode, 3 /* Element */);\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        registerPostOrderHooks(tView, previousOrParentTNode);\n        decreaseElementDepthCount();\n        if (tView.firstTemplatePass && tView.queries !== null &&\n            isContentQueryHost(previousOrParentTNode)) {\n            tView.queries.elementEnd(previousOrParentTNode);\n        }\n        if (hasClassInput(tNode) && tNode.classes) {\n            setDirectiveStylingInput(tNode.classes, lView, tNode.inputs['class']);\n        }\n        if (hasStyleInput(tNode) && tNode.styles) {\n            setDirectiveStylingInput(tNode.styles, lView, tNode.inputs['style']);\n        }\n    }\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelement(index, name, attrs, localRefs) {\n        ɵɵelementStart(index, name, attrs, localRefs);\n        ɵɵelementEnd();\n    }\n    /**\n     * Assign static attribute values to a host element.\n     *\n     * This instruction will assign static attribute values as well as class and style\n     * values to an element within the host bindings function. Since attribute values\n     * can consist of different types of values, the `attrs` array must include the values in\n     * the following format:\n     *\n     * attrs = [\n     *   // static attributes (like `title`, `name`, `id`...)\n     *   attr1, value1, attr2, value,\n     *\n     *   // a single namespace value (like `x:id`)\n     *   NAMESPACE_MARKER, namespaceUri1, name1, value1,\n     *\n     *   // another single namespace value (like `x:name`)\n     *   NAMESPACE_MARKER, namespaceUri2, name2, value2,\n     *\n     *   // a series of CSS classes that will be applied to the element (no spaces)\n     *   CLASSES_MARKER, class1, class2, class3,\n     *\n     *   // a series of CSS styles (property + value) that will be applied to the element\n     *   STYLES_MARKER, prop1, value1, prop2, value2\n     * ]\n     *\n     * All non-class and non-style attributes must be defined at the start of the list\n     * first before all class and style values are set. When there is a change in value\n     * type (like when classes and styles are introduced) a marker must be used to separate\n     * the entries. The marker values themselves are set via entries found in the\n     * [AttributeMarker] enum.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array of static values (attributes, classes and styles) with the correct marker\n     * values.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementHostAttrs(attrs) {\n        var hostElementIndex = getSelectedIndex();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var tNode = getTNode(hostElementIndex, lView);\n        // non-element nodes (e.g. `<ng-container>`) are not rendered as actual\n        // element nodes and adding styles/classes on to them will cause runtime\n        // errors...\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var lastAttrIndex = setUpAttributes(lView[RENDERER], native, attrs);\n            if (tView.firstTemplatePass) {\n                var stylingNeedsToBeRendered = registerInitialStylingOnTNode(tNode, attrs, lastAttrIndex);\n                // this is only called during the first template pass in the\n                // event that this current directive assigned initial style/class\n                // host attribute values to the element. Because initial styling\n                // values are applied before directives are first rendered (within\n                // `createElement`) this means that initial styling for any directives\n                // still needs to be applied. Note that this will only happen during\n                // the first template pass and not each time a directive applies its\n                // attribute values to the element.\n                if (stylingNeedsToBeRendered) {\n                    var renderer = lView[RENDERER];\n                    renderInitialStyling(renderer, native, tNode);\n                }\n            }\n        }\n    }\n    function setDirectiveStylingInput(context, lView, stylingInputs) {\n        // older versions of Angular treat the input as `null` in the\n        // event that the value does not exist at all. For this reason\n        // we can't have a styling value be an empty string.\n        var value = getInitialStylingValue(context) || null;\n        // Ivy does an extra `[class]` write with a falsy value since the value\n        // is applied during creation mode. This is a deviation from VE and should\n        // be (Jira Issue = FW-1467).\n        setInputsForProperty(lView, stylingInputs, value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerStart(index, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var native = lView[index + HEADER_OFFSET] = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 4 /* ElementContainer */, tagName, attrs || null);\n        if (attrs && tView.firstTemplatePass) {\n            // While ng-container doesn't necessarily support styling, we use the style context to identify\n            // and execute directives on the ng-container.\n            registerInitialStylingOnTNode(tNode, attrs, 0);\n        }\n        appendChild(native, tNode, lView);\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, tNode, localRefs || null);\n            if (tView.queries) {\n                tView.queries.elementStart(tView, tNode);\n            }\n        }\n        createDirectivesAndLocals(tView, lView, tNode);\n        attachPatchData(native, lView);\n        executeContentQueries(tView, tNode, lView);\n    }\n    /**\n     * Mark the end of the <ng-container>.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        registerPostOrderHooks(tView, previousOrParentTNode);\n        if (tView.firstTemplatePass && tView.queries !== null &&\n            isContentQueryHost(previousOrParentTNode)) {\n            tView.queries.elementEnd(previousOrParentTNode);\n        }\n    }\n    /**\n     * Creates an empty logical container using {@link elementContainerStart}\n     * and {@link elementContainerEnd}\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainer(index, attrs, localRefs) {\n        ɵɵelementContainerStart(index, attrs, localRefs);\n        ɵɵelementContainerEnd();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewStart(viewBlockId, consts, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent();\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 16 /* CheckAlways */, null, null);\n            var tParentNode = getIsParent() ? previousOrParentTNode :\n                previousOrParentTNode && previousOrParentTNode.parent;\n            assignTViewNodeToLView(viewToRender[TVIEW], tParentNode, viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     */\n    function scanForView(lContainer, startIdx, viewBlockId) {\n        for (var i = startIdx + CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var viewAtPositionId = lContainer[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return lContainer[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, i - CONTAINER_HEADER_OFFSET);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the end of an embedded view.\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewEnd() {\n        var lView = getLView();\n        var viewHost = lView[T_HOST];\n        if (isCreationMode(lView)) {\n            refreshDescendantViews(lView); // creation mode pass\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        resetPreOrderHookFlags(lView);\n        refreshDescendantViews(lView); // update mode pass\n        var lContainer = lView[PARENT];\n        ngDevMode && assertLContainerOrUndefined(lContainer);\n        // It's always safe to run hooks here, as `leaveView` is not called during the 'finally' block\n        // of a try-catch-finally statement, so it can never be reached while unwinding the stack due to\n        // an error being thrown.\n        leaveView(lContainer[PARENT], /* safeToRunHooks */ true);\n        setPreviousOrParentTNode(viewHost, false);\n    }\n\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @codeGenApi\n     */\n    function ɵɵgetCurrentView() {\n        return getLView();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n     */\n    function ɵɵlistener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n    * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component.\n    *\n    * This instruction is for compatibility purposes and is designed to ensure that a\n    * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n    * in the component's renderer. Normally all host listeners are evaluated with the\n    * parent component's renderer, but, in the case of animation @triggers, they need\n    * to be evaluated with the sub component's renderer (because that's where the\n    * animation triggers are defined).\n    *\n    * Do not use this instruction as a replacement for `listener`. This instruction\n    * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n    *\n    * @param eventName Name of the event\n    * @param listenerFn The function to be called when event emits\n    * @param useCapture Whether or not to use capture in event listener\n    * @param eventTargetResolver Function that returns global target information in case this listener\n    * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n    */\n    function ɵɵcomponentHostSyntheticListener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadComponentRenderer);\n    }\n    /**\n     * A utility function that checks if a given element has already an event handler registered for an\n     * event with a specified name. The TView.cleanup data structure is used to find out which events\n     * are registered for a given element.\n     */\n    function findExistingListener(lView, eventName, tNodeIdx) {\n        var tView = lView[TVIEW];\n        var tCleanup = tView.cleanup;\n        if (tCleanup != null) {\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                var cleanupEventName = tCleanup[i];\n                if (cleanupEventName === eventName && tCleanup[i + 1] === tNodeIdx) {\n                    // We have found a matching event name on the same node but it might not have been\n                    // registered yet, so we must explicitly verify entries in the LView cleanup data\n                    // structures.\n                    var lCleanup = lView[CLEANUP];\n                    var listenerIdxInLCleanup = tCleanup[i + 2];\n                    return lCleanup.length > listenerIdxInLCleanup ? lCleanup[listenerIdxInLCleanup] : null;\n                }\n                // TView.cleanup can have a mix of 4-elements entries (for event handler cleanups) or\n                // 2-element entries (for directive and queries destroy hooks). As such we can encounter\n                // blocks of 4 or 2 items in the tView.cleanup and this is why we iterate over 2 elements\n                // first and jump another 2 elements if we detect listeners cleanup (4 elements). Also check\n                // documentation of TView.cleanup for more details of this data structure layout.\n                if (typeof cleanupEventName === 'string') {\n                    i += 2;\n                }\n            }\n        }\n        return null;\n    }\n    function listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadRendererFn) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var tView = lView[TVIEW];\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        var processOutputs = true;\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : EMPTY_OBJ;\n            var target = resolved.target || native;\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(unwrapRNode(_lView[tNode.index])).target; } :\n                tNode.index;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // There might be cases where multiple directives on the same element try to register an event\n                // handler function for the same event. In this situation we want to avoid registration of\n                // several native listeners as each registration would be intercepted by NgZone and\n                // trigger change detection. This would mean that a single user action would result in several\n                // change detections being invoked. To avoid this situation we want to have only one call to\n                // native handler registration (for the same element and same type of event).\n                //\n                // In order to have just one native event handler in presence of multiple handler functions,\n                // we just register a first handler function as a native event listener and then chain\n                // (coalesce) other handler functions on top of the first native handler function.\n                var existingListener = null;\n                // Please note that the coalescing described here doesn't happen for events specifying an\n                // alternative target (ex. (document:click)) - this is to keep backward compatibility with the\n                // view engine.\n                // Also, we don't have to search for existing listeners is there are no directives\n                // matching on a given node as we can't register multiple event handlers for the same event in\n                // a template (this would mean having duplicate attributes).\n                if (!eventTargetResolver && hasDirectives(tNode)) {\n                    existingListener = findExistingListener(lView, eventName, tNode.index);\n                }\n                if (existingListener !== null) {\n                    // Attach a new listener at the head of the coalesced listeners list.\n                    listenerFn.__ngNextListenerFn__ = existingListener.__ngNextListenerFn__;\n                    existingListener.__ngNextListenerFn__ = listenerFn;\n                    processOutputs = false;\n                }\n                else {\n                    // The first argument of `listen` function in Procedural Renderer is:\n                    // - either a target name (as a string) in case of global target (window, document, body)\n                    // - or element reference (in all other cases)\n                    listenerFn = wrapListener(tNode, lView, listenerFn, false /** preventDefault */);\n                    var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                    ngDevMode && ngDevMode.rendererAddEventListener++;\n                    lCleanup.push(listenerFn, cleanupFn);\n                    tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, lCleanupIndex + 1);\n                }\n            }\n            else {\n                listenerFn = wrapListener(tNode, lView, listenerFn, true /** preventDefault */);\n                target.addEventListener(eventName, listenerFn, useCapture);\n                ngDevMode && ngDevMode.rendererAddEventListener++;\n                lCleanup.push(listenerFn);\n                tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCapture);\n            }\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var props;\n        if (processOutputs && outputs && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 3) {\n                    var index = props[i];\n                    ngDevMode && assertDataInRange(lView, index);\n                    var minifiedName = props[i + 2];\n                    var directiveInstance = lView[index];\n                    var output = directiveInstance[minifiedName];\n                    if (ngDevMode && !isObservable(output)) {\n                        throw new Error(\"@Output \" + minifiedName + \" not initialized in '\" + directiveInstance.constructor.name + \"'.\");\n                    }\n                    var subscription = output.subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    function executeListenerWithErrorHandling(lView, listenerFn, e) {\n        try {\n            // Only explicitly returning false from a listener should preventDefault\n            return listenerFn(e) !== false;\n        }\n        catch (error) {\n            handleError(lView, error);\n            return false;\n        }\n    }\n    /**\n     * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,\n     * if applicable.\n     *\n     * @param tNode The TNode associated with this listener\n     * @param lView The LView that contains this listener\n     * @param listenerFn The listener function to call\n     * @param wrapWithPreventDefault Whether or not to prevent default behavior\n     * (the procedural renderer does this already, so in those cases, we should skip)\n     */\n    function wrapListener(tNode, lView, listenerFn, wrapWithPreventDefault) {\n        // Note: we are performing most of the work in the listener function itself\n        // to optimize listener registration.\n        return function wrapListenerIn_markDirtyAndPreventDefault(e) {\n            // Ivy uses `Function` as a special token that allows us to unwrap the function\n            // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`.\n            if (e === Function) {\n                return listenerFn;\n            }\n            // In order to be backwards compatible with View Engine, events on component host nodes\n            // must also mark the component view itself dirty (i.e. the view that it owns).\n            var startView = tNode.flags & 1 /* isComponent */ ? getComponentViewByIndex(tNode.index, lView) : lView;\n            // See interfaces/view.ts for more on LViewFlags.ManualOnPush\n            if ((lView[FLAGS] & 32 /* ManualOnPush */) === 0) {\n                markViewDirty(startView);\n            }\n            var result = executeListenerWithErrorHandling(lView, listenerFn, e);\n            // A just-invoked listener function might have coalesced listeners so we need to check for\n            // their presence and invoke as needed.\n            var nextListenerFn = wrapListenerIn_markDirtyAndPreventDefault.__ngNextListenerFn__;\n            while (nextListenerFn) {\n                // We should prevent default if any of the listeners explicitly return false\n                result = executeListenerWithErrorHandling(lView, nextListenerFn, e) && result;\n                nextListenerFn = nextListenerFn.__ngNextListenerFn__;\n            }\n            if (wrapWithPreventDefault && result === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n            return result;\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     *\n     * @codeGenApi\n     */\n    function ɵɵnextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n\n    /**\n     * Checks a given node against matching projection slots and returns the\n     * determined slot index. Returns \"null\" if no slot matched the given node.\n     *\n     * This function takes into account the parsed ngProjectAs selector from the\n     * node's attributes. If present, it will check whether the ngProjectAs selector\n     * matches any of the projection slot selectors.\n     */\n    function matchingProjectionSlotIndex(tNode, projectionSlots) {\n        var wildcardNgContentIndex = null;\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < projectionSlots.length; i++) {\n            var slotValue = projectionSlots[i];\n            // The last wildcard projection slot should match all nodes which aren't matching\n            // any selector. This is necessary to be backwards compatible with view engine.\n            if (slotValue === '*') {\n                wildcardNgContentIndex = i;\n                continue;\n            }\n            // If we ran into an `ngProjectAs` attribute, we should match its parsed selector\n            // to the list of selectors, otherwise we fall back to matching against the node.\n            if (ngProjectAsAttrVal === null ?\n                isNodeMatchingSelectorList(tNode, slotValue, /* isProjectionMode */ true) :\n                isSelectorInSelectorList(ngProjectAsAttrVal, slotValue)) {\n                return i; // first matching selector \"captures\" a given node\n            }\n        }\n        return wildcardNgContentIndex;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param projectionSlots? A collection of projection slots. A projection slot can be based\n     *        on a parsed CSS selectors or set to the wildcard selector (\"*\") in order to match\n     *        all nodes which do not match any selector. If not specified, a single wildcard\n     *        selector projection slot will be defined.\n     *\n     * @codeGenApi\n     */\n    function ɵɵprojectionDef(projectionSlots) {\n        var componentNode = findComponentView(getLView())[T_HOST];\n        if (!componentNode.projection) {\n            // If no explicit projection slots are defined, fall back to a single\n            // projection slot with the wildcard selector.\n            var numProjectionSlots = projectionSlots ? projectionSlots.length : 1;\n            var projectionHeads = componentNode.projection =\n                new Array(numProjectionSlots).fill(null);\n            var tails = projectionHeads.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var slotIndex = projectionSlots ? matchingProjectionSlotIndex(componentChild, projectionSlots) : 0;\n                if (slotIndex !== null) {\n                    if (tails[slotIndex]) {\n                        tails[slotIndex].projectionNext = componentChild;\n                    }\n                    else {\n                        projectionHeads[slotIndex] = componentChild;\n                    }\n                    tails[slotIndex] = componentChild;\n                }\n                componentChild = componentChild.next;\n            }\n        }\n    }\n    var delayProjection = false;\n    function setDelayProjection(value) {\n        delayProjection = value;\n    }\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     *\n     * @codeGenApi\n    */\n    function ɵɵprojection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 1 /* Projection */, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsNotParent();\n        // We might need to delay the projection of nodes if they are in the middle of an i18n block\n        if (!delayProjection) {\n            // re-distribution of projectable nodes is stored on a component's view level\n            appendProjectedNodes(lView, tProjectionNode, selectorIndex, findComponentView(lView));\n        }\n    }\n\n    /**\n     *\n     * Update an interpolated property on an element with a lone bound value\n     *\n     * Used when the value passed to a property has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div title=\"{{v0}}\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate('title', v0);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate(propName, v0, sanitizer) {\n        ɵɵpropertyInterpolate1(propName, '', v0, '', sanitizer);\n        return ɵɵpropertyInterpolate;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate1(propName, prefix, v0, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = interpolation1(getLView(), prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate2(propName, prefix, v0, i0, v1, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = interpolation2(getLView(), prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate3(propName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = interpolation3(getLView(), prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate4(propName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = interpolation4(getLView(), prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate5(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = interpolation5(getLView(), prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate6(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = interpolation6(getLView(), prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate7(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = interpolation7(getLView(), prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate8(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = interpolation8(getLView(), prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate8;\n    }\n    /**\n     * Update an interpolated property on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update.\n     * @param values The a collection of values and the strings inbetween those values, beginning with a\n     * string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolateV(propName, values, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = interpolationV(getLView(), values);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtext(index, value) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var textNative = lView[index + HEADER_OFFSET] = createTextNode(value, lView[RENDERER]);\n        ngDevMode && ngDevMode.rendererSetText++;\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, 3 /* Element */, null, null);\n        // Text nodes are self closing.\n        setIsNotParent();\n        appendChild(textNative, tNode, lView);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param value Stringified value to write.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtextBinding(value) {\n        var lView = getLView();\n        var index = getSelectedIndex();\n        var bound = bind(lView, value);\n        if (bound !== NO_CHANGE) {\n            textBindingInternal(lView, index, renderStringify(bound));\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update text content with a lone bound value\n     *\n     * Used when a text node has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div>{{v0}}</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate(v0);\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate(v0) {\n        ɵɵtextInterpolate1('', v0, '');\n        return ɵɵtextInterpolate;\n    }\n    /**\n     *\n     * Update text content with single bound value surrounded by other text.\n     *\n     * Used when a text node has 1 interpolated value in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate1('prefix', v0, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate1(prefix, v0, suffix) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolated = interpolation1(lView, prefix, v0, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, index, interpolated);\n        }\n        return ɵɵtextInterpolate1;\n    }\n    /**\n     *\n     * Update text content with 2 bound values surrounded by other text.\n     *\n     * Used when a text node has 2 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate2(prefix, v0, i0, v1, suffix) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolated = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, index, interpolated);\n        }\n        return ɵɵtextInterpolate2;\n    }\n    /**\n     *\n     * Update text content with 3 bound values surrounded by other text.\n     *\n     * Used when a text node has 3 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolated = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, index, interpolated);\n        }\n        return ɵɵtextInterpolate3;\n    }\n    /**\n     *\n     * Update text content with 4 bound values surrounded by other text.\n     *\n     * Used when a text node has 4 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see ɵɵtextInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolated = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, index, interpolated);\n        }\n        return ɵɵtextInterpolate4;\n    }\n    /**\n     *\n     * Update text content with 5 bound values surrounded by other text.\n     *\n     * Used when a text node has 5 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolated = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, index, interpolated);\n        }\n        return ɵɵtextInterpolate5;\n    }\n    /**\n     *\n     * Update text content with 6 bound values surrounded by other text.\n     *\n     * Used when a text node has 6 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change. @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolated = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, index, interpolated);\n        }\n        return ɵɵtextInterpolate6;\n    }\n    /**\n     *\n     * Update text content with 7 bound values surrounded by other text.\n     *\n     * Used when a text node has 7 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolated = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, index, interpolated);\n        }\n        return ɵɵtextInterpolate7;\n    }\n    /**\n     *\n     * Update text content with 8 bound values surrounded by other text.\n     *\n     * Used when a text node has 8 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolated = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, index, interpolated);\n        }\n        return ɵɵtextInterpolate8;\n    }\n    /**\n     * Update text content with 9 or more bound values other surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 8.\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The a collection of values and the strings in between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     *\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolateV(values) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, index, interpolated);\n        }\n        return ɵɵtextInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated class on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate1('prefix', v0, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     * Update an interpolated class on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolateV(values) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated style property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate1(0, 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate1(prop, prefix, v0, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate2(0, 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate2(prop, prefix, v0, i0, v1, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate3(0, 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate3(prop, prefix, v0, i0, v1, i1, v2, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate4(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate4(prop, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate5(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate5(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate6(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate6(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate7(\n     *    0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate7(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate8(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6,\n     * '-', v7, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate8(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate8;\n    }\n    /**\n     * Update an interpolated style property on an element with 8 or more bound values surrounded by\n     * text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\">\n     * </div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolateV(\n     *  0, ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`..\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolateV(prop, values, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a host element. Only applies to native node properties, not inputs.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵhostProperty(propName, value, sanitizer) {\n        var index = getSelectedIndex();\n        ngDevMode && assertNotEqual(index, -1, 'selected index cannot be -1');\n        var lView = getLView();\n        var bindReconciledValue = bind(lView, value);\n        if (bindReconciledValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, bindReconciledValue, sanitizer, true);\n        }\n        return ɵɵhostProperty;\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub component's renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     *\n     * @codeGenApi\n     */\n    function ɵɵupdateSyntheticHostBinding(propName, value, sanitizer) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        // TODO(benlesh): remove bind call here.\n        var bound = bind(lView, value);\n        if (bound !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, bound, sanitizer, true, loadComponentRenderer);\n        }\n        return ɵɵupdateSyntheticHostBinding;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        var context = loadLContextFromNode(element);\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext$1(element) {\n        var context = loadLContextFromNode(element);\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element);\n        var lView = context.lView;\n        var parent;\n        ngDevMode && assertLView(lView);\n        while (lView[HOST] === null && (parent = getLViewParent(lView))) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = parent;\n        }\n        return lView[FLAGS] & 512 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target);\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (!context)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringifyForError(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = unwrapRNode(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    var _published = false;\n    /**\n     * Publishes a collection of default debug tools onto`window.ng`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext$1);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ng` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        // this is preemptively set to avoid having test and debug code accidentally\n        // read data from a previous application state...\n        setActiveHostElement(null);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n            16 /* CheckAlways */ | 512 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLView(null, createTView(-1, null, 1, 0, null, null, null, null), rootContext, rootFlags, null, null, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = enterView(rootView, null);\n        var component;\n        // Will become true if the `try` block executes with no errors.\n        var safeToRunHooks = false;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            refreshDescendantViews(rootView); // creation mode pass\n            rootView[FLAGS] &= ~4 /* CreationMode */;\n            resetPreOrderHookFlags(rootView);\n            refreshDescendantViews(rootView); // update mode pass\n            safeToRunHooks = true;\n        }\n        finally {\n            leaveView(oldView, safeToRunHooks);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        ngDevMode && assertDataInRange(rootView, 0 + HEADER_OFFSET);\n        rootView[0 + HEADER_OFFSET] = rNode;\n        var tNode = getOrCreateTNode(tView, null, 0, 3 /* Element */, null, null);\n        var componentView = createLView(rootView, getOrCreateTView(def), null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, rootView[HEADER_OFFSET], tNode, rendererFactory, renderer, sanitizer);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), tView, def.type);\n            markAsComponentHost(tView, tNode);\n            initNodeFlags(tNode, rootView.length, 1);\n        }\n        addToViewTree(rootView, componentView);\n        // Store component view at node index, with node as the HOST\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        // We want to generate an empty QueryList for root content queries for backwards\n        // compatibility with ViewEngine.\n        if (componentDef.contentQueries) {\n            componentDef.contentQueries(1 /* Create */, component, rootView.length - 1);\n        }\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var elementIndex = rootTNode.index - HEADER_OFFSET;\n            setActiveHostElement(elementIndex);\n            var expando = tView.expandoInstructions;\n            invokeHostBindingsInCreationMode(componentDef, expando, component, rootTNode, tView.firstTemplatePass);\n            setActiveHostElement(null);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        registerPreOrderHooks(dirIndex, def, rootTView, -1, -1, -1);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a basic change from a previous to a new value for a single\n     * property on a directive instance. Passed as a value in a\n     * {@link SimpleChanges} object to the `ngOnChanges` hook.\n     *\n     * @see `OnChanges`\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature()]\n     * });\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵNgOnChangesFeature() {\n        // This option ensures that the ngOnChanges lifecycle hook will be inherited\n        // from superclasses (in InheritDefinitionFeature).\n        NgOnChangesFeatureImpl.ngInherit = true;\n        return NgOnChangesFeatureImpl;\n    }\n    function NgOnChangesFeatureImpl(definition) {\n        if (definition.type.prototype.ngOnChanges) {\n            definition.setInput = ngOnChangesSetInput;\n            definition.onChanges = wrapOnChanges();\n        }\n    }\n    function wrapOnChanges() {\n        return function wrapOnChangesHook_inPreviousChangesStorage() {\n            var simpleChangesStore = getSimpleChangesStore(this);\n            var current = simpleChangesStore && simpleChangesStore.current;\n            if (current) {\n                var previous = simpleChangesStore.previous;\n                if (previous === EMPTY_OBJ) {\n                    simpleChangesStore.previous = current;\n                }\n                else {\n                    // New changes are copied to the previous store, so that we don't lose history for inputs\n                    // which were not changed this time\n                    for (var key in current) {\n                        previous[key] = current[key];\n                    }\n                }\n                simpleChangesStore.current = null;\n                this.ngOnChanges(current);\n            }\n        };\n    }\n    function ngOnChangesSetInput(instance, value, publicName, privateName) {\n        var simpleChangesStore = getSimpleChangesStore(instance) ||\n            setSimpleChangesStore(instance, { previous: EMPTY_OBJ, current: null });\n        var current = simpleChangesStore.current || (simpleChangesStore.current = {});\n        var previous = simpleChangesStore.previous;\n        var declaredName = this.declaredInputs[publicName];\n        var previousChange = previous[declaredName];\n        current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n        instance[privateName] = value;\n    }\n    var SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\n    function getSimpleChangesStore(instance) {\n        return instance[SIMPLE_CHANGES_STORE] || null;\n    }\n    function setSimpleChangesStore(instance, store) {\n        return instance[SIMPLE_CHANGES_STORE] = store;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     *\n     * @codeGenApi\n     */\n    function ɵɵInheritDefinitionFeature(definition) {\n        var e_1, _a;\n        var superType = getSuperType(definition.type);\n        while (superType) {\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                var baseViewQuery = baseDef.viewQuery;\n                var baseContentQueries = baseDef.contentQueries;\n                var baseHostBindings = baseDef.hostBindings;\n                baseHostBindings && inheritHostBindings(definition, baseHostBindings);\n                baseViewQuery && inheritViewQuery(definition, baseViewQuery);\n                baseContentQueries && inheritContentQueries(definition, baseContentQueries);\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var superHostBindings = superDef.hostBindings;\n                superHostBindings && inheritHostBindings(definition, superHostBindings);\n                // Merge queries\n                var superViewQuery = superDef.viewQuery;\n                var superContentQueries = superDef.contentQueries;\n                superViewQuery && inheritViewQuery(definition, superViewQuery);\n                superContentQueries && inheritContentQueries(definition, superContentQueries);\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = (e_1 = void 0, __values(features)), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature.ngInherit) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.ngAfterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.ngAfterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.ngAfterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.ngAfterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.ngDoCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.ngOnDestroy;\n                    definition.onInit = definition.onInit || superPrototype.ngOnInit;\n                    if (superPrototype.ngOnChanges) {\n                        ɵɵNgOnChangesFeature()(definition);\n                    }\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n    function inheritViewQuery(definition, superViewQuery) {\n        var prevViewQuery = definition.viewQuery;\n        if (prevViewQuery) {\n            definition.viewQuery = function (rf, ctx) {\n                superViewQuery(rf, ctx);\n                prevViewQuery(rf, ctx);\n            };\n        }\n        else {\n            definition.viewQuery = superViewQuery;\n        }\n    }\n    function inheritContentQueries(definition, superContentQueries) {\n        var prevContentQueries = definition.contentQueries;\n        if (prevContentQueries) {\n            definition.contentQueries = function (rf, ctx, directiveIndex) {\n                superContentQueries(rf, ctx, directiveIndex);\n                prevContentQueries(rf, ctx, directiveIndex);\n            };\n        }\n        else {\n            definition.contentQueries = superContentQueries;\n        }\n    }\n    function inheritHostBindings(definition, superHostBindings) {\n        var prevHostBindings = definition.hostBindings;\n        // If the subclass does not have a host bindings function, we set the subclass host binding\n        // function to be the superclass's (in this feature). We should check if they're the same here\n        // to ensure we don't inherit it twice.\n        if (superHostBindings !== prevHostBindings) {\n            if (prevHostBindings) {\n                // because inheritance is unknown during compile time, the runtime code\n                // needs to be informed of the super-class depth so that instruction code\n                // can distinguish one host bindings function from another. The reason why\n                // relying on the directive uniqueId exclusively is not enough is because the\n                // uniqueId value and the directive instance stay the same between hostBindings\n                // calls throughout the directive inheritance chain. This means that without\n                // a super-class depth value, there is no way to know whether a parent or\n                // sub-class host bindings function is currently being executed.\n                definition.hostBindings = function (rf, ctx, elementIndex) {\n                    // The reason why we increment first and then decrement is so that parent\n                    // hostBindings calls have a higher id value compared to sub-class hostBindings\n                    // calls (this way the leaf directive is always at a super-class depth of 0).\n                    adjustActiveDirectiveSuperClassDepthPosition(1);\n                    try {\n                        superHostBindings(rf, ctx, elementIndex);\n                    }\n                    finally {\n                        adjustActiveDirectiveSuperClassDepthPosition(-1);\n                    }\n                    prevHostBindings(rf, ctx, elementIndex);\n                };\n            }\n            else {\n                definition.hostBindings = superHostBindings;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider(viewProviders, tView.data, tView.blueprint, isComponent, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider(providers, tView.data, tView.blueprint, isComponent, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider(provider, tInjectables, lInjectablesBlueprint, isComponent, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider(provider[i], tInjectables, lInjectablesBlueprint, isComponent, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isClassProvider(provider) || isTypeProvider(provider)) {\n                var prototype = (provider.useClass || provider).prototype;\n                var ngOnDestroy = prototype.ngOnDestroy;\n                if (ngOnDestroy) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(tInjectables.length, ngOnDestroy);\n                }\n            }\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, ɵɵdirectiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent);\n                }\n                if (!isViewProvider && isComponent && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, ɵɵdirectiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * ```ts\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        ɵɵtext(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        ɵɵselect(0);\n     *        ɵɵtextBinding(ctx.greeter.greet());\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     * ```\n     *\n     * @param definition\n     *\n     * @codeGenApi\n     */\n    function ɵɵProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver =\n                function (def, processProvidersFn) {\n                    return providersResolver(def, //\n                    processProvidersFn ? processProvidersFn(providers) : providers, //\n                    viewProviders);\n                };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * Base class for a factory that can create a component dynamically.\n     * Instantiate a factory for a given type of component with `resolveComponentFactory()`.\n     * Use the resulting `ComponentFactory.create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     *\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * A simple registry that maps `Components` to generated `ComponentFactory` classes\n     * that can be used to create instances of components.\n     * Use to obtain the factory for a given component type,\n     * then use the factory's `create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('9.0.0-next.0+72.sha-4b8cdd4.with-local-changes');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = ɵɵdefineInjectable({\n            token: IterableDiffers,\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = ɵɵdefineInjectable({\n            token: KeyValueDiffers,\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$2 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providers[index] = data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable !== null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView$1(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView$1(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode, text) { this.delegate.setValue(renderNode, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey = depDef.tokenKey;\n        if (tokenKey === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue, flags) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, flags);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue, flags);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            // default to 'div' in case this component has an attribute selector\n            _this.selector = componentDef.selectors[0][0] || 'div';\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? componentDef.ngContentSelectors : [];\n            _this.isBoundToModule = !!ngModule;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            // Ensure that the namespace for the root node is correct,\n            // otherwise the browser might not render out the element properly.\n            namespaceHTMLInternal();\n            var hostRNode = rootSelectorOrNode ?\n                locateHostElement(rendererFactory, rootSelectorOrNode) :\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef), null);\n            var rootFlags = this.componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n                16 /* CheckAlways */ | 512 /* IsRoot */;\n            // Check whether this Component needs to be isolated from other components, i.e. whether it\n            // should be placed into its own (empty) root context or existing root context should be used.\n            // Note: this is internal-only convention and might change in the future, so it should not be\n            // relied upon externally.\n            var isIsolated = typeof rootSelectorOrNode === 'string' &&\n                /^#root-ng-internal-isolated-\\d+/.test(rootSelectorOrNode);\n            var rootContext = createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootLView = createLView(null, createTView(-1, null, 1, 0, null, null, null, null), rootContext, rootFlags, null, null, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            // Will become true if the `try` block executes with no errors.\n            var safeToRunHooks = false;\n            try {\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                if (projectableNodes) {\n                    // projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n                    // case). Here we do normalize passed data structure to be an array of arrays to avoid\n                    // complex checks down the line.\n                    tElementNode.projection =\n                        projectableNodes.map(function (nodesforSlot) { return Array.from(nodesforSlot); });\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                refreshDescendantViews(rootLView);\n                safeToRunHooks = true;\n            }\n            finally {\n                leaveView(oldLView, safeToRunHooks);\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (!rootSelectorOrNode || isIsolated) {\n                // The host element of the internal or isolated root view is attached to the component's host\n                // view node.\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef, _super);\n        function ComponentRef(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = assignTViewNodeToLView(_rootLView[TVIEW], null, -1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef.prototype.destroy = function () {\n            if (this.destroyCbs) {\n                this.destroyCbs.forEach(function (fn) { return fn(); });\n                this.destroyCbs = null;\n                !this.hostView.destroyed && this.hostView.destroy();\n            }\n        };\n        ComponentRef.prototype.onDestroy = function (callback) {\n            if (this.destroyCbs) {\n                this.destroyCbs.push(callback);\n            }\n        };\n        return ComponentRef;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * NOTE: changes to the `ngI18nClosureMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    if (typeof ngI18nClosureMode === 'undefined') {\n        // These property accesses can be ignored because ngI18nClosureMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // Make sure to refer to ngI18nClosureMode as ['ngI18nClosureMode'] for closure.\n        // NOTE: we need to have it in IIFE so that the tree-shaker is happy.\n        (function () {\n            // tslint:disable-next-line:no-toplevel-property-access\n            _global['ngI18nClosureMode'] =\n                // TODO(FW-1250): validate that this actually, you know, works.\n                // tslint:disable-next-line:no-toplevel-property-access\n                typeof goog !== 'undefined' && typeof goog.getMsg === 'function';\n        })();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This const is used to store the locale data registered with `registerLocaleData`\n     */\n    var LOCALE_DATA = {};\n    (function (LocaleDataIndex) {\n        LocaleDataIndex[LocaleDataIndex[\"LocaleId\"] = 0] = \"LocaleId\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsFormat\"] = 1] = \"DayPeriodsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsStandalone\"] = 2] = \"DayPeriodsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysFormat\"] = 3] = \"DaysFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysStandalone\"] = 4] = \"DaysStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsFormat\"] = 5] = \"MonthsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsStandalone\"] = 6] = \"MonthsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"Eras\"] = 7] = \"Eras\";\n        LocaleDataIndex[LocaleDataIndex[\"FirstDayOfWeek\"] = 8] = \"FirstDayOfWeek\";\n        LocaleDataIndex[LocaleDataIndex[\"WeekendRange\"] = 9] = \"WeekendRange\";\n        LocaleDataIndex[LocaleDataIndex[\"DateFormat\"] = 10] = \"DateFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"TimeFormat\"] = 11] = \"TimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DateTimeFormat\"] = 12] = \"DateTimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberSymbols\"] = 13] = \"NumberSymbols\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberFormats\"] = 14] = \"NumberFormats\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencySymbol\"] = 15] = \"CurrencySymbol\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencyName\"] = 16] = \"CurrencyName\";\n        LocaleDataIndex[LocaleDataIndex[\"Currencies\"] = 17] = \"Currencies\";\n        LocaleDataIndex[LocaleDataIndex[\"PluralCase\"] = 18] = \"PluralCase\";\n        LocaleDataIndex[LocaleDataIndex[\"ExtraData\"] = 19] = \"ExtraData\";\n    })(exports.ɵLocaleDataIndex || (exports.ɵLocaleDataIndex = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // THIS CODE IS GENERATED - DO NOT MODIFY\n    // See angular/tools/gulp-tasks/cldr/extract.js\n    var u = undefined;\n    function plural(n) {\n        var i = Math.floor(Math.abs(n)), v = n.toString().replace(/^[^.]*\\.?/, '').length;\n        if (i === 1 && v === 0)\n            return 1;\n        return 5;\n    }\n    var localeEn = [\n        'en', [['a', 'p'], ['AM', 'PM'], u], [['AM', 'PM'], u, u],\n        [\n            ['S', 'M', 'T', 'W', 'T', 'F', 'S'], ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n            ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n            ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']\n        ],\n        u,\n        [\n            ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n            ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            [\n                'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n                'October', 'November', 'December'\n            ]\n        ],\n        u, [['B', 'A'], ['BC', 'AD'], ['Before Christ', 'Anno Domini']], 0, [6, 0],\n        ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'],\n        ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'], ['{1}, {0}', u, '{1} \\'at\\' {0}', u],\n        ['.', ',', ';', '%', '+', '-', 'E', '×', '‰', '∞', 'NaN', ':'],\n        ['#,##0.###', '#,##0%', '¤#,##0.00', '#E0'], '$', 'US Dollar', {}, plural\n    ];\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves the plural function used by ICU expressions to determine the plural case to use\n     * for a given locale.\n     * @param locale A locale code for the locale format rules to use.\n     * @returns The plural function for the locale.\n     * @see `NgPlural`\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function getLocalePluralCase(locale) {\n        var data = findLocaleData(locale);\n        return data[exports.ɵLocaleDataIndex.PluralCase];\n    }\n    /**\n     * Finds the locale data for a given locale.\n     *\n     * @param locale The locale code.\n     * @returns The locale data.\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function findLocaleData(locale) {\n        var normalizedLocale = locale.toLowerCase().replace(/_/g, '-');\n        var match = LOCALE_DATA[normalizedLocale];\n        if (match) {\n            return match;\n        }\n        // let's try to find a parent locale\n        var parentLocale = normalizedLocale.split('-')[0];\n        match = LOCALE_DATA[parentLocale];\n        if (match) {\n            return match;\n        }\n        if (parentLocale === 'en') {\n            return localeEn;\n        }\n        throw new Error(\"Missing locale data for the locale \\\"\" + locale + \"\\\".\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the plural case based on the locale\n     */\n    function getPluralCase(value, locale) {\n        var plural = getLocalePluralCase(locale)(value);\n        switch (plural) {\n            case 0:\n                return 'zero';\n            case 1:\n                return 'one';\n            case 2:\n                return 'two';\n            case 3:\n                return 'few';\n            case 4:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * The locale id that the application is using by default (for translations and ICU expressions).\n     */\n    var DEFAULT_LOCALE_ID = 'en-US';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEXP = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*!]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostprocess consts\n    var ROOT_TEMPLATE_ID = 0;\n    var PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]/;\n    var PP_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]|(�\\/?\\*\\d+:\\d+�)/g;\n    var PP_ICU_VARS_REGEXP = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICU_PLACEHOLDERS_REGEXP = /{([A-Z0-9_]+)}/g;\n    var PP_ICUS_REGEXP = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    var PP_CLOSE_TEMPLATE_REGEXP = /\\/\\*/;\n    var PP_TEMPLATE_ID_REGEXP = /\\d+\\:(\\d+)/;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEXP.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else {\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        results.push(substring);\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEXP, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (cases.length > values.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�!{index}(:{block})�`/`�/!{index}(:{block})�`: *Projection Placeholder*:  Marks the\n     *   beginning and end of <ng-content> that was embedded in the original translation block.\n     *   The placeholder `index` points to the element index in the template instructions set.\n     *   An optional `block` that matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nStart(index, message, subTemplateIndex) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        // We need to delay projections until `i18nEnd`\n        setDelayProjection(true);\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    // Count for the number of vars that will be allocated for each i18n block.\n    // It is global because this is used in multiple functions that include loops and recursive calls.\n    // This is reset to 0 when `i18nStartFirstPass` is called.\n    var i18nVarsCount;\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        var viewData = getLView();\n        var startIndex = tView.blueprint.length - HEADER_OFFSET;\n        i18nVarsCount = 0;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[T_HOST] ? parentTNode.index - HEADER_OFFSET : index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = replaceNgsp(templateTranslation).split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === \"#\" /* ELEMENT */) {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === \"#\" /* ELEMENT */) {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = extractParts(value);\n                for (var j = 0; j < parts.length; j++) {\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        var icuNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parts[j];\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (parts[j] !== '') {\n                        var text = parts[j];\n                        // Even indexes are text (including bindings)\n                        var hasBinding = text.match(BINDING_REGEXP);\n                        // Create text nodes\n                        var textNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : text, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(text, textNodeIndex), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        if (i18nVarsCount > 0) {\n            allocExpando(viewData, i18nVarsCount);\n        }\n        ngDevMode &&\n            attachI18nOpCodesDebug(createOpCodes, updateOpCodes, icuExpressions.length ? icuExpressions : null, viewData);\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: i18nVarsCount,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode, viewData) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var nextNode = tNode.next;\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // Re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== viewData[T_HOST]) {\n            tNode.parent = parentTNode;\n        }\n        // If tNode was moved around, we might need to fix a broken link.\n        var cursor = tNode.next;\n        while (cursor) {\n            if (cursor.next === tNode) {\n                cursor.next = nextNode;\n            }\n            cursor = cursor.next;\n        }\n        // If the placeholder to append is a projection, we need to move the projected nodes instead\n        if (tNode.type === 1 /* Projection */) {\n            var tProjectionNode = tNode;\n            appendProjectedNodes(viewData, tProjectionNode, tProjectionNode.projection, findComponentView(viewData));\n            return tNode;\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n     * 4. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        /**\n         * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]\n         *\n         * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n         * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root\n         * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index\n         * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in\n         * front of �#6�. The post processing step restores the right order by keeping track of the\n         * template id stack and looks for placeholders that belong to the currently active template.\n         */\n        var result = message;\n        if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {\n            var matches_1 = {};\n            var templateIdsStack_1 = [ROOT_TEMPLATE_ID];\n            result = result.replace(PP_PLACEHOLDERS_REGEXP, function (m, phs, tmpl) {\n                var content = phs || tmpl;\n                var placeholders = matches_1[content] || [];\n                if (!placeholders.length) {\n                    content.split('|').forEach(function (placeholder) {\n                        var match = placeholder.match(PP_TEMPLATE_ID_REGEXP);\n                        var templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;\n                        var isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);\n                        placeholders.push([templateId, isCloseTemplateTag, placeholder]);\n                    });\n                    matches_1[content] = placeholders;\n                }\n                if (!placeholders.length) {\n                    throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n                }\n                var currentTemplateId = templateIdsStack_1[templateIdsStack_1.length - 1];\n                var idx = 0;\n                // find placeholder index that matches current template id\n                for (var i = 0; i < placeholders.length; i++) {\n                    if (placeholders[i][0] === currentTemplateId) {\n                        idx = i;\n                        break;\n                    }\n                }\n                // update template id stack based on the current tag extracted\n                var _a = __read(placeholders[idx], 3), templateId = _a[0], isCloseTemplateTag = _a[1], placeholder = _a[2];\n                if (isCloseTemplateTag) {\n                    templateIdsStack_1.pop();\n                }\n                else if (currentTemplateId !== templateId) {\n                    templateIdsStack_1.push(templateId);\n                }\n                // remove processed tag from the list\n                placeholders.splice(idx, 1);\n                return placeholder;\n            });\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        /**\n         * Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n         */\n        result = result.replace(PP_ICU_VARS_REGEXP, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        /**\n         * Step 3: replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n         */\n        result = result.replace(PP_ICU_PLACEHOLDERS_REGEXP, function (match, key) {\n            return replacements.hasOwnProperty(key) ? replacements[key] : match;\n        });\n        /**\n         * Step 4: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case\n         * multiple ICUs have the same placeholder name\n         */\n        result = result.replace(PP_ICUS_REGEXP, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nEnd() {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(tView);\n        // Stop delaying projections\n        setDelayProjection(false);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = getLView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // Find the last node that was added before `i18nEnd`\n        var lastCreatedNode = getPreviousOrParentTNode();\n        // Read the instructions to insert/move/remove DOM elements\n        var visitedNodes = readCreateOpCodes(rootIndex, tI18n.create, tI18n.icus, viewData);\n        // Remove deleted nodes\n        for (var i = rootIndex + 1; i <= lastCreatedNode.index - HEADER_OFFSET; i++) {\n            if (visitedNodes.indexOf(i) === -1) {\n                removeNode(i, viewData);\n            }\n        }\n    }\n    /**\n     * Creates and stores the dynamic TNode, and unhooks it from the tree for now.\n     */\n    function createDynamicNodeAtIndex(lView, index, type, native, name) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        lView[index + HEADER_OFFSET] = native;\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, type, name, null);\n        // We are creating a dynamic node, the previous tNode might not be pointing at this node.\n        // We will link ourselves into the tree later with `appendI18nNode`.\n        if (previousOrParentTNode.next === tNode) {\n            previousOrParentTNode.next = null;\n        }\n        return tNode;\n    }\n    function readCreateOpCodes(index, createOpCodes, icus, viewData) {\n        var renderer = getLView()[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedNodes = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                var textNodeIndex = createOpCodes[++i];\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode =\n                    createDynamicNodeAtIndex(viewData, textNodeIndex, 3 /* Element */, textRNode, null);\n                visitedNodes.push(textNodeIndex);\n                setIsNotParent();\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[T_HOST];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode, viewData);\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedNodes.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode, currentTNode.type === 3 /* Element */);\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode, false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        // This code is used for ICU expressions only, since we don't support\n                        // directives/components in ICUs, we don't need to worry about inputs here\n                        elementAttributeInternal(elementNodeIndex, attrName, attrValue, viewData);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        var commentNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(viewData, commentNodeIndex, 5 /* IcuContainer */, commentRNode, null);\n                        visitedNodes.push(commentNodeIndex);\n                        attachPatchData(commentRNode, viewData);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsNotParent();\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        var elementNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(viewData, elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue);\n                        visitedNodes.push(elementNodeIndex);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsNotParent();\n        return visitedNodes;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += renderStringify(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            var tIcuIndex = void 0;\n                            var tIcu = void 0;\n                            var icuTNode = void 0;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var propName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementPropertyInternal(nodeIndex, propName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBindingInternal(viewData, nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    removeNode(nodeIndex_1, viewData);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], icus, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            nativeRemoveNode(viewData[RENDERER], removedPhRNode);\n        }\n        var slotValue = ɵɵload(index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                nativeRemoveNode(viewData[RENDERER], lContainer[NATIVE]);\n            }\n        }\n        // Define this node as detached so that we don't risk projecting it\n        removedPhTNode.flags |= 32 /* isDetached */;\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18n(index, message, subTemplateIndex) {\n        ɵɵi18nStart(index, message, subTemplateIndex);\n        ɵɵi18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nAttributes(index, values) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nAttributesFirstPass(tView, index, values);\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) {\n                    // Odd indexes are ICU expressions\n                    // TODO(ocombe): support ICU expressions in attributes\n                    throw new Error('ICU expressions are not yet supported in attributes');\n                }\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                        }\n                    }\n                    else {\n                        var lView = getLView();\n                        elementAttributeInternal(previousElementIndex, attrName, value, lView);\n                        // Check if that attribute is a directive input\n                        var tNode = getTNode(previousElementIndex, lView);\n                        var dataValue = tNode.inputs && tNode.inputs[attrName];\n                        if (dataValue) {\n                            setInputsForProperty(lView, dataValue, value);\n                        }\n                    }\n                }\n            }\n        }\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            tView.data[index + HEADER_OFFSET] = updateOpCodes;\n        }\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param value The binding's value\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `i18nExp(ctx.name)(ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nExp(value) {\n        var lView = getLView();\n        var expression = bind(lView, value);\n        if (expression !== NO_CHANGE) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n        return ɵɵi18nExp;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    var resolvedCase = getPluralCase(bindingValue, getLocaleId());\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        // Adding the maximum possible of vars needed (based on the cases with the most vars)\n        i18nVarsCount += Math.max.apply(Math, __spread(vars));\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element = currentNode;\n                        var tagName = element.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n    /**\n     * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n     * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n     * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n     * and later on replaced by a space. We are re-implementing the same idea here, since translations\n     * might contain this special character.\n     */\n    var NGSP_UNICODE_REGEXP = /\\uE500/g;\n    function replaceNgsp(value) {\n        return value.replace(NGSP_UNICODE_REGEXP, ' ');\n    }\n    var TRANSLATIONS = {};\n    /**\n     * Set the configuration for `i18nLocalize`.\n     *\n     * @deprecated this method is temporary & should not be used as it will be removed soon\n     */\n    function i18nConfigureLocalize(options) {\n        if (options === void 0) { options = {\n            translations: {}\n        }; }\n        TRANSLATIONS = options.translations;\n    }\n    var LOCALIZE_PH_REGEXP = /\\{\\$(.*?)\\}/g;\n    /**\n     * A goog.getMsg-like function for users that do not use Closure.\n     *\n     * This method is required as a *temporary* measure to prevent i18n tests from being blocked while\n     * running outside of Closure Compiler. This method will not be needed once runtime translation\n     * service support is introduced.\n     *\n     * @codeGenApi\n     * @deprecated this method is temporary & should not be used as it will be removed soon\n     */\n    function ɵɵi18nLocalize(input, placeholders) {\n        if (typeof TRANSLATIONS[input] !== 'undefined') { // to account for empty string\n            input = TRANSLATIONS[input];\n        }\n        if (placeholders !== undefined && Object.keys(placeholders).length) {\n            return input.replace(LOCALIZE_PH_REGEXP, function (_, key) { return placeholders[key] || ''; });\n        }\n        return input;\n    }\n    /**\n     * The locale id that the application is currently using (for translations and ICU expressions).\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    var LOCALE_ID = DEFAULT_LOCALE_ID;\n    /**\n     * Sets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     *\n     * @param localeId\n     */\n    function setLocaleId(localeId) {\n        assertDefined(localeId, \"Expected localeId to be defined\");\n        if (typeof localeId === 'string') {\n            LOCALE_ID = localeId.toLowerCase().replace(/_/g, '-');\n        }\n    }\n    /**\n     * Gets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    function getLocaleId() {\n        return LOCALE_ID;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n        modules.set(id, factory);\n    }\n    function assertSameOrNotExisting(id, type, incoming) {\n        if (type && type !== incoming) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(ngModuleType) {\n        if (ngModuleType.ngModuleDef.id !== null) {\n            var id = ngModuleType.ngModuleDef.id;\n            var existing = modules.get(id);\n            assertSameOrNotExisting(id, existing, ngModuleType);\n            modules.set(id, ngModuleType);\n        }\n        var imports = ngModuleType.ngModuleDef.imports;\n        if (imports instanceof Function) {\n            imports = imports();\n        }\n        if (imports) {\n            imports.forEach(function (i) { return registerNgModuleType(i); });\n        }\n    }\n    function getRegisteredNgModuleType(id) {\n        return modules.get(id);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$1, _super);\n        function NgModuleRef$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            var ngLocaleIdDef = getNgLocaleIdDef(ngModuleType);\n            if (ngLocaleIdDef) {\n                setLocaleId(ngLocaleIdDef);\n            }\n            _this._bootstrapComponents = maybeUnwrapFn(ngModuleDef.bootstrap);\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders, stringify(ngModuleType));\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            var injector = this._r3Injector;\n            !injector.destroyed && injector.destroy();\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory, _super);\n        function NgModuleFactory(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            var ngModuleDef = getNgModuleDef(moduleType);\n            if (ngModuleDef !== null) {\n                // Register the NgModule with Angular's module registry. The location (and hence timing) of\n                // this call is critical to ensure this works correctly (modules get registered when expected)\n                // without bloating bundles (modules are registered when otherwise not referenced).\n                //\n                // In View Engine, registration occurs in the .ngfactory.js file as a side effect. This has\n                // several practical consequences:\n                //\n                // - If an .ngfactory file is not imported from, the module won't be registered (and can be\n                //   tree shaken).\n                // - If an .ngfactory file is imported from, the module will be registered even if an instance\n                //   is not actually created (via `create` below).\n                // - Since an .ngfactory file in View Engine references the .ngfactory files of the NgModule's\n                //   imports,\n                //\n                // In Ivy, things are a bit different. .ngfactory files still exist for compatibility, but are\n                // not a required API to use - there are other ways to obtain an NgModuleFactory for a given\n                // NgModule. Thus, relying on a side effect in the .ngfactory file is not sufficient. Instead,\n                // the side effect of registration is added here, in the constructor of NgModuleFactory,\n                // ensuring no matter how a factory is created, the module is registered correctly.\n                //\n                // An alternative would be to include the registration side effect inline following the actual\n                // NgModule definition. This also has the correct timing, but breaks tree-shaking - modules\n                // will be registered and retained even if they're otherwise never referenced.\n                registerNgModuleType(moduleType);\n            }\n            return _this;\n        }\n        NgModuleFactory.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        return noSideEffects(function () {\n            var _a;\n            var clazz = type;\n            // We determine whether a class has its own metadata by taking the metadata from the parent\n            // constructor and checking whether it's the same as the subclass metadata below. We can't use\n            // `hasOwnProperty` here because it doesn't work correctly in IE10 for static fields that are\n            // defined by TS. See https://github.com/angular/angular/pull/28439#issuecomment-459349218.\n            var parentPrototype = clazz.prototype ? Object.getPrototypeOf(clazz.prototype) : null;\n            var parentConstructor = parentPrototype && parentPrototype.constructor;\n            if (decorators !== null) {\n                if (clazz.decorators !== undefined &&\n                    (!parentConstructor || parentConstructor.decorators !== clazz.decorators)) {\n                    (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n                }\n                else {\n                    clazz.decorators = decorators;\n                }\n            }\n            if (ctorParameters !== null) {\n                // Rather than merging, clobber the existing parameters. If other projects exist which use\n                // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n                // but that is vanishingly unlikely.\n                clazz.ctorParameters = ctorParameters;\n            }\n            if (propDecorators !== null) {\n                // The property decorator objects are merged as it is possible different fields have different\n                // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n                // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n                // decorator that's also been downleveled.\n                if (clazz.propDecorators !== undefined &&\n                    (!parentConstructor || parentConstructor.propDecorators !== clazz.propDecorators)) {\n                    clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n                }\n                else {\n                    clazz.propDecorators = propDecorators;\n                }\n            }\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return isCreationMode(lView) ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     *\n     * @publicApi\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind1(index, slotOffset, v1) {\n        var pipeInstance = ɵɵload(index);\n        return unwrapValue$1(isPure(index) ? ɵɵpureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = ɵɵload(index);\n        return unwrapValue$1(isPure(index) ? ɵɵpureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = ɵɵload(index);\n        return unwrapValue$1(isPure(index) ?\n            ɵɵpureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = ɵɵload(index);\n        return unwrapValue$1(isPure(index) ?\n            ɵɵpureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBindV(index, slotOffset, values) {\n        var pipeInstance = ɵɵload(index);\n        return unwrapValue$1(isPure(index) ? ɵɵpureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(index) {\n        return getLView()[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue$1(newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            var lView = getLView();\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = lView[BINDING_INDEX];\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in components with the `@Output` directive to emit custom events\n     * synchronously or asynchronously, and register handlers for those events\n     * by subscribing to an instance.\n     *\n     * @usageNotes\n     *\n     * Extends\n     * [RxJS `Subject`](https://rxjs.dev/api/index/class/Subject)\n     * for Angular by adding the `emit()` method.\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```html\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```html\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * @see [Observables in Angular](guide/observables-in-angular)\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function symbolIterator() {\n        return this._results[getSymbolIterator()]();\n    }\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n            // This function should be declared on the prototype, but doing so there will cause the class\n            // declaration to have side-effects and become not tree-shakable. For this reason we do it in\n            // the constructor.\n            // [getSymbolIterator()](): Iterator<T> { ... }\n            var symbol = getSymbolIterator();\n            var proto = QueryList.prototype;\n            if (!proto[symbol])\n                proto[symbol] = symbolIterator;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        /**\n         * Returns a copy of the internal results list as an Array.\n         */\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        /**\n         * Updates the stored data of the query list, and resets the `dirty` flag to `false`, so that\n         * on change detection, it will not notify of changes to the queries, unless a new change\n         * occurs.\n         *\n         * @param resultsTree The query results to store\n         */\n        QueryList.prototype.reset = function (resultsTree) {\n            this._results = flatten(resultsTree);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        /**\n         * Triggers a change event by emitting on the `changes` {@link EventEmitter}.\n         */\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQuery_ = /** @class */ (function () {\n        function LQuery_(queryList) {\n            this.queryList = queryList;\n            this.matches = null;\n        }\n        LQuery_.prototype.clone = function () { return new LQuery_(this.queryList); };\n        LQuery_.prototype.setDirty = function () { this.queryList.setDirty(); };\n        return LQuery_;\n    }());\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        LQueries_.prototype.createEmbeddedView = function (tView) {\n            var tQueries = tView.queries;\n            if (tQueries !== null) {\n                var noOfInheritedQueries = tView.contentQueries !== null ? tView.contentQueries[0] : tQueries.length;\n                var viewLQueries = new Array(noOfInheritedQueries);\n                // An embedded view has queries propagated from a declaration view at the beginning of the\n                // TQueries collection and up until a first content query declared in the embedded view. Only\n                // propagated LQueries are created at this point (LQuery corresponding to declared content\n                // queries will be instantiated from the content query instructions for each directive).\n                for (var i = 0; i < noOfInheritedQueries; i++) {\n                    var tQuery = tQueries.getByIndex(i);\n                    var parentLQuery = this.queries[tQuery.indexInDeclarationView];\n                    viewLQueries[i] = parentLQuery.clone();\n                }\n                return new LQueries_(viewLQueries);\n            }\n            return null;\n        };\n        LQueries_.prototype.insertView = function (tView) { this.dirtyQueriesWithMatches(tView); };\n        LQueries_.prototype.detachView = function (tView) { this.dirtyQueriesWithMatches(tView); };\n        LQueries_.prototype.dirtyQueriesWithMatches = function (tView) {\n            for (var i = 0; i < this.queries.length; i++) {\n                if (getTQuery(tView, i).matches !== null) {\n                    this.queries[i].setDirty();\n                }\n            }\n        };\n        return LQueries_;\n    }());\n    var TQueryMetadata_ = /** @class */ (function () {\n        function TQueryMetadata_(predicate, descendants, isStatic, read) {\n            if (read === void 0) { read = null; }\n            this.predicate = predicate;\n            this.descendants = descendants;\n            this.isStatic = isStatic;\n            this.read = read;\n        }\n        return TQueryMetadata_;\n    }());\n    var TQueries_ = /** @class */ (function () {\n        function TQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        TQueries_.prototype.elementStart = function (tView, tNode) {\n            var e_1, _a;\n            ngDevMode && assertFirstTemplatePass(tView, 'Queries should collect results on the first template pass only');\n            try {\n                for (var _b = __values(this.queries), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var query = _c.value;\n                    query.elementStart(tView, tNode);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        };\n        TQueries_.prototype.elementEnd = function (tNode) {\n            var e_2, _a;\n            try {\n                for (var _b = __values(this.queries), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var query = _c.value;\n                    query.elementEnd(tNode);\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n        };\n        TQueries_.prototype.embeddedTView = function (tNode) {\n            var queriesForTemplateRef = null;\n            for (var i = 0; i < this.length; i++) {\n                var childQueryIndex = queriesForTemplateRef !== null ? queriesForTemplateRef.length : 0;\n                var tqueryClone = this.getByIndex(i).embeddedTView(tNode, childQueryIndex);\n                if (tqueryClone) {\n                    tqueryClone.indexInDeclarationView = i;\n                    if (queriesForTemplateRef !== null) {\n                        queriesForTemplateRef.push(tqueryClone);\n                    }\n                    else {\n                        queriesForTemplateRef = [tqueryClone];\n                    }\n                }\n            }\n            return queriesForTemplateRef !== null ? new TQueries_(queriesForTemplateRef) : null;\n        };\n        TQueries_.prototype.template = function (tView, tNode) {\n            var e_3, _a;\n            ngDevMode && assertFirstTemplatePass(tView, 'Queries should collect results on the first template pass only');\n            try {\n                for (var _b = __values(this.queries), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var query = _c.value;\n                    query.template(tView, tNode);\n                }\n            }\n            catch (e_3_1) { e_3 = { error: e_3_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_3) throw e_3.error; }\n            }\n        };\n        TQueries_.prototype.getByIndex = function (index) {\n            ngDevMode && assertDataInRange(this.queries, index);\n            return this.queries[index];\n        };\n        Object.defineProperty(TQueries_.prototype, \"length\", {\n            get: function () { return this.queries.length; },\n            enumerable: true,\n            configurable: true\n        });\n        TQueries_.prototype.track = function (tquery) { this.queries.push(tquery); };\n        return TQueries_;\n    }());\n    var TQuery_ = /** @class */ (function () {\n        function TQuery_(metadata, nodeIndex) {\n            if (nodeIndex === void 0) { nodeIndex = -1; }\n            this.metadata = metadata;\n            this.matches = null;\n            this.indexInDeclarationView = -1;\n            this.crossesNgTemplate = false;\n            /**\n             * A flag indicating if a given query still applies to nodes it is crossing. We use this flag\n             * (alongside with _declarationNodeIndex) to know when to stop applying content queries to\n             * elements in a template.\n             */\n            this._appliesToNextNode = true;\n            this._declarationNodeIndex = nodeIndex;\n        }\n        TQuery_.prototype.elementStart = function (tView, tNode) {\n            if (this.isApplyingToNode(tNode)) {\n                this.matchTNode(tView, tNode);\n            }\n        };\n        TQuery_.prototype.elementEnd = function (tNode) {\n            if (this._declarationNodeIndex === tNode.index) {\n                this._appliesToNextNode = false;\n            }\n        };\n        TQuery_.prototype.template = function (tView, tNode) { this.elementStart(tView, tNode); };\n        TQuery_.prototype.embeddedTView = function (tNode, childQueryIndex) {\n            if (this.isApplyingToNode(tNode)) {\n                this.crossesNgTemplate = true;\n                // A marker indicating a `<ng-template>` element (a placeholder for query results from\n                // embedded views created based on this `<ng-template>`).\n                this.addMatch(-tNode.index, childQueryIndex);\n                return new TQuery_(this.metadata);\n            }\n            return null;\n        };\n        TQuery_.prototype.isApplyingToNode = function (tNode) {\n            if (this._appliesToNextNode && this.metadata.descendants === false) {\n                return this._declarationNodeIndex === (tNode.parent ? tNode.parent.index : -1);\n            }\n            return this._appliesToNextNode;\n        };\n        TQuery_.prototype.matchTNode = function (tView, tNode) {\n            if (Array.isArray(this.metadata.predicate)) {\n                var localNames = this.metadata.predicate;\n                for (var i = 0; i < localNames.length; i++) {\n                    this.matchTNodeWithReadOption(tView, tNode, getIdxOfMatchingSelector(tNode, localNames[i]));\n                }\n            }\n            else {\n                var typePredicate = this.metadata.predicate;\n                if (typePredicate === TemplateRef) {\n                    if (tNode.type === 0 /* Container */) {\n                        this.matchTNodeWithReadOption(tView, tNode, -1);\n                    }\n                }\n                else {\n                    this.matchTNodeWithReadOption(tView, tNode, locateDirectiveOrProvider(tNode, tView, typePredicate, false, false));\n                }\n            }\n        };\n        TQuery_.prototype.matchTNodeWithReadOption = function (tView, tNode, nodeMatchIdx) {\n            if (nodeMatchIdx !== null) {\n                var read = this.metadata.read;\n                if (read !== null) {\n                    if (read === ElementRef || read === ViewContainerRef ||\n                        read === TemplateRef && tNode.type === 0 /* Container */) {\n                        this.addMatch(tNode.index, -2);\n                    }\n                    else {\n                        var directiveOrProviderIdx = locateDirectiveOrProvider(tNode, tView, read, false, false);\n                        if (directiveOrProviderIdx !== null) {\n                            this.addMatch(tNode.index, directiveOrProviderIdx);\n                        }\n                    }\n                }\n                else {\n                    this.addMatch(tNode.index, nodeMatchIdx);\n                }\n            }\n        };\n        TQuery_.prototype.addMatch = function (tNodeIdx, matchIdx) {\n            if (this.matches === null) {\n                this.matches = [tNodeIdx, matchIdx];\n            }\n            else {\n                this.matches.push(tNodeIdx, matchIdx);\n            }\n        };\n        return TQuery_;\n    }());\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames !== null) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    function createResultByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        else if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function createResultForNode(lView, tNode, matchingIdx, read) {\n        if (matchingIdx === -1) {\n            // if read token and / or strategy is not specified, detect it using appropriate tNode type\n            return createResultByTNodeType(tNode, lView);\n        }\n        else if (matchingIdx === -2) {\n            // read a special token from a node injector\n            return createSpecialToken(lView, tNode, read);\n        }\n        else {\n            // read a token\n            return getNodeInjectable(lView[TVIEW].data, lView, matchingIdx, tNode);\n        }\n    }\n    function createSpecialToken(lView, tNode, read) {\n        if (read === ElementRef) {\n            return createElementRef(ElementRef, tNode, lView);\n        }\n        else if (read === TemplateRef) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, lView);\n        }\n        else if (read === ViewContainerRef) {\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n            return createContainerRef(ViewContainerRef, ElementRef, tNode, lView);\n        }\n        else {\n            ngDevMode &&\n                throwError(\"Special token to read should be one of ElementRef, TemplateRef or ViewContainerRef but got \" + stringify(read) + \".\");\n        }\n    }\n    /**\n     * A helper function that creates query results for a given view. This function is meant to do the\n     * processing once and only once for a given view instance (a set of results for a given view\n     * doesn't change).\n     */\n    function materializeViewResults(lView, tQuery, queryIndex) {\n        var lQuery = lView[QUERIES].queries[queryIndex];\n        if (lQuery.matches === null) {\n            var tViewData = lView[TVIEW].data;\n            var tQueryMatches = tQuery.matches;\n            var result = new Array(tQueryMatches.length / 2);\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var matchedNodeIdx = tQueryMatches[i];\n                if (matchedNodeIdx < 0) {\n                    // we at the <ng-template> marker which might have results in views created based on this\n                    // <ng-template> - those results will be in separate views though, so here we just leave\n                    // null as a placeholder\n                    result[i / 2] = null;\n                }\n                else {\n                    ngDevMode && assertDataInRange(tViewData, matchedNodeIdx);\n                    var tNode = tViewData[matchedNodeIdx];\n                    result[i / 2] =\n                        createResultForNode(lView, tNode, tQueryMatches[i + 1], tQuery.metadata.read);\n                }\n            }\n            lQuery.matches = result;\n        }\n        return lQuery.matches;\n    }\n    /**\n     * A helper function that collects (already materialized) query results from a tree of views,\n     * starting with a provided LView.\n     */\n    function collectQueryResults(lView, queryIndex, result) {\n        var e_4, _a;\n        var tQuery = lView[TVIEW].queries.getByIndex(queryIndex);\n        var tQueryMatches = tQuery.matches;\n        if (tQueryMatches !== null) {\n            var lViewResults = materializeViewResults(lView, tQuery, queryIndex);\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var tNodeIdx = tQueryMatches[i];\n                if (tNodeIdx > 0) {\n                    var viewResult = lViewResults[i / 2];\n                    ngDevMode && assertDefined(viewResult, 'materialized query result should be defined');\n                    result.push(viewResult);\n                }\n                else {\n                    var childQueryIndex = tQueryMatches[i + 1];\n                    var declarationLContainer = lView[-tNodeIdx];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    // collect matches for views inserted in this container\n                    for (var i_1 = CONTAINER_HEADER_OFFSET; i_1 < declarationLContainer.length; i_1++) {\n                        var embeddedLView = declarationLContainer[i_1];\n                        if (embeddedLView[DECLARATION_LCONTAINER] === embeddedLView[PARENT]) {\n                            collectQueryResults(embeddedLView, childQueryIndex, result);\n                        }\n                    }\n                    // collect matches for views created from this declaration container and inserted into\n                    // different containers\n                    if (declarationLContainer[MOVED_VIEWS] !== null) {\n                        try {\n                            for (var _b = (e_4 = void 0, __values(declarationLContainer[MOVED_VIEWS])), _c = _b.next(); !_c.done; _c = _b.next()) {\n                                var embeddedLView = _c.value;\n                                collectQueryResults(embeddedLView, childQueryIndex, result);\n                            }\n                        }\n                        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n                        finally {\n                            try {\n                                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                            }\n                            finally { if (e_4) throw e_4.error; }\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     *\n     * @returns `true` if a query got dirty during change detection or if this is a static query\n     * resolving in creation mode, `false` otherwise.\n     *\n     * @codeGenApi\n     */\n    function ɵɵqueryRefresh(queryList) {\n        var lView = getLView();\n        var queryIndex = getCurrentQueryIndex();\n        setCurrentQueryIndex(queryIndex + 1);\n        var tQuery = getTQuery(lView[TVIEW], queryIndex);\n        if (queryList.dirty && (isCreationMode(lView) === tQuery.metadata.isStatic)) {\n            if (tQuery.matches === null) {\n                queryList.reset([]);\n            }\n            else {\n                var result = tQuery.crossesNgTemplate ? collectQueryResults(lView, queryIndex, []) :\n                    materializeViewResults(lView, tQuery, queryIndex);\n                queryList.reset(result);\n                queryList.notifyOnChanges();\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Creates new QueryList for a static view query.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticViewQuery(predicate, descend, read) {\n        viewQueryInternal(getLView(), predicate, descend, read, true);\n    }\n    /**\n     * Creates new QueryList, stores the reference in LView and returns QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵviewQuery(predicate, descend, read) {\n        viewQueryInternal(getLView(), predicate, descend, read, false);\n    }\n    function viewQueryInternal(lView, predicate, descend, read, isStatic) {\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), -1);\n            if (isStatic) {\n                tView.staticViewQueries = true;\n            }\n        }\n        createLQuery(lView);\n    }\n    /**\n     * Loads a QueryList corresponding to the current view query.\n     *\n     * @codeGenApi\n     */\n    function ɵɵloadViewQuery() {\n        return loadQueryInternal(getLView(), getCurrentQueryIndex());\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getLView(), predicate, descend, read, false, getPreviousOrParentTNode(), directiveIndex);\n    }\n    /**\n     * Registers a QueryList, associated with a static content query, for later refresh\n     * (part of a view refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticContentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getLView(), predicate, descend, read, true, getPreviousOrParentTNode(), directiveIndex);\n    }\n    function contentQueryInternal(lView, predicate, descend, read, isStatic, tNode, directiveIndex) {\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), tNode.index);\n            saveContentQueryAndDirectiveIndex(tView, directiveIndex);\n            if (isStatic) {\n                tView.staticContentQueries = true;\n            }\n        }\n        createLQuery(lView);\n    }\n    /**\n     * Loads a QueryList corresponding to the current content query.\n     *\n     * @codeGenApi\n     */\n    function ɵɵloadContentQuery() {\n        return loadQueryInternal(getLView(), getCurrentQueryIndex());\n    }\n    function loadQueryInternal(lView, queryIndex) {\n        ngDevMode &&\n            assertDefined(lView[QUERIES], 'LQueries should be defined when trying to load a query');\n        ngDevMode && assertDataInRange(lView[QUERIES].queries, queryIndex);\n        return lView[QUERIES].queries[queryIndex].queryList;\n    }\n    function createLQuery(lView) {\n        var queryList = new QueryList();\n        storeCleanupWithContext(lView, queryList, queryList.destroy);\n        if (lView[QUERIES] === null)\n            lView[QUERIES] = new LQueries_();\n        lView[QUERIES].queries.push(new LQuery_(queryList));\n    }\n    function createTQuery(tView, metadata, nodeIndex) {\n        if (tView.queries === null)\n            tView.queries = new TQueries_();\n        tView.queries.track(new TQuery_(metadata, nodeIndex));\n    }\n    function saveContentQueryAndDirectiveIndex(tView, directiveIndex) {\n        var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n        var lastSavedDirectiveIndex = tView.contentQueries.length ? tViewContentQueries[tViewContentQueries.length - 1] : -1;\n        if (directiveIndex !== lastSavedDirectiveIndex) {\n            tViewContentQueries.push(tView.queries.length - 1, directiveIndex);\n        }\n    }\n    function getTQuery(tView, index) {\n        ngDevMode && assertDefined(tView.queries, 'TQueries must be defined to retrieve a TQuery');\n        return tView.queries.getByIndex(index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n    /**\n     * Returns the appropriate `ChangeDetectorRef` for a pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectPipeChangeDetectorRef(flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        var value = injectChangeDetectorRef(true);\n        if (value == null && !(flags & exports.InjectFlags.Optional)) {\n            throw new Error(\"No provider for ChangeDetectorRef!\");\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = (function () { return ({\n        'ɵɵattribute': ɵɵattribute,\n        'ɵɵattributeInterpolate1': ɵɵattributeInterpolate1,\n        'ɵɵattributeInterpolate2': ɵɵattributeInterpolate2,\n        'ɵɵattributeInterpolate3': ɵɵattributeInterpolate3,\n        'ɵɵattributeInterpolate4': ɵɵattributeInterpolate4,\n        'ɵɵattributeInterpolate5': ɵɵattributeInterpolate5,\n        'ɵɵattributeInterpolate6': ɵɵattributeInterpolate6,\n        'ɵɵattributeInterpolate7': ɵɵattributeInterpolate7,\n        'ɵɵattributeInterpolate8': ɵɵattributeInterpolate8,\n        'ɵɵattributeInterpolateV': ɵɵattributeInterpolateV,\n        'ɵɵdefineBase': ɵɵdefineBase,\n        'ɵɵdefineComponent': ɵɵdefineComponent,\n        'ɵɵdefineDirective': ɵɵdefineDirective,\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵdefineNgModule': ɵɵdefineNgModule,\n        'ɵɵdefinePipe': ɵɵdefinePipe,\n        'ɵɵdirectiveInject': ɵɵdirectiveInject,\n        'ɵɵgetFactoryOf': ɵɵgetFactoryOf,\n        'ɵɵgetInheritedFactory': ɵɵgetInheritedFactory,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵinjectAttribute': ɵɵinjectAttribute,\n        'ɵɵinjectPipeChangeDetectorRef': ɵɵinjectPipeChangeDetectorRef,\n        'ɵɵtemplateRefExtractor': ɵɵtemplateRefExtractor,\n        'ɵɵNgOnChangesFeature': ɵɵNgOnChangesFeature,\n        'ɵɵProvidersFeature': ɵɵProvidersFeature,\n        'ɵɵInheritDefinitionFeature': ɵɵInheritDefinitionFeature,\n        'ɵɵcontainer': ɵɵcontainer,\n        'ɵɵnextContext': ɵɵnextContext,\n        'ɵɵcontainerRefreshStart': ɵɵcontainerRefreshStart,\n        'ɵɵcontainerRefreshEnd': ɵɵcontainerRefreshEnd,\n        'ɵɵnamespaceHTML': ɵɵnamespaceHTML,\n        'ɵɵnamespaceMathML': ɵɵnamespaceMathML,\n        'ɵɵnamespaceSVG': ɵɵnamespaceSVG,\n        'ɵɵenableBindings': ɵɵenableBindings,\n        'ɵɵdisableBindings': ɵɵdisableBindings,\n        'ɵɵallocHostVars': ɵɵallocHostVars,\n        'ɵɵelementStart': ɵɵelementStart,\n        'ɵɵelementEnd': ɵɵelementEnd,\n        'ɵɵelement': ɵɵelement,\n        'ɵɵelementContainerStart': ɵɵelementContainerStart,\n        'ɵɵelementContainerEnd': ɵɵelementContainerEnd,\n        'ɵɵelementContainer': ɵɵelementContainer,\n        'ɵɵpureFunction0': ɵɵpureFunction0,\n        'ɵɵpureFunction1': ɵɵpureFunction1,\n        'ɵɵpureFunction2': ɵɵpureFunction2,\n        'ɵɵpureFunction3': ɵɵpureFunction3,\n        'ɵɵpureFunction4': ɵɵpureFunction4,\n        'ɵɵpureFunction5': ɵɵpureFunction5,\n        'ɵɵpureFunction6': ɵɵpureFunction6,\n        'ɵɵpureFunction7': ɵɵpureFunction7,\n        'ɵɵpureFunction8': ɵɵpureFunction8,\n        'ɵɵpureFunctionV': ɵɵpureFunctionV,\n        'ɵɵgetCurrentView': ɵɵgetCurrentView,\n        'ɵɵrestoreView': ɵɵrestoreView,\n        'ɵɵlistener': ɵɵlistener,\n        'ɵɵload': ɵɵload,\n        'ɵɵprojection': ɵɵprojection,\n        'ɵɵupdateSyntheticHostBinding': ɵɵupdateSyntheticHostBinding,\n        'ɵɵcomponentHostSyntheticListener': ɵɵcomponentHostSyntheticListener,\n        'ɵɵpipeBind1': ɵɵpipeBind1,\n        'ɵɵpipeBind2': ɵɵpipeBind2,\n        'ɵɵpipeBind3': ɵɵpipeBind3,\n        'ɵɵpipeBind4': ɵɵpipeBind4,\n        'ɵɵpipeBindV': ɵɵpipeBindV,\n        'ɵɵprojectionDef': ɵɵprojectionDef,\n        'ɵɵhostProperty': ɵɵhostProperty,\n        'ɵɵproperty': ɵɵproperty,\n        'ɵɵpropertyInterpolate': ɵɵpropertyInterpolate,\n        'ɵɵpropertyInterpolate1': ɵɵpropertyInterpolate1,\n        'ɵɵpropertyInterpolate2': ɵɵpropertyInterpolate2,\n        'ɵɵpropertyInterpolate3': ɵɵpropertyInterpolate3,\n        'ɵɵpropertyInterpolate4': ɵɵpropertyInterpolate4,\n        'ɵɵpropertyInterpolate5': ɵɵpropertyInterpolate5,\n        'ɵɵpropertyInterpolate6': ɵɵpropertyInterpolate6,\n        'ɵɵpropertyInterpolate7': ɵɵpropertyInterpolate7,\n        'ɵɵpropertyInterpolate8': ɵɵpropertyInterpolate8,\n        'ɵɵpropertyInterpolateV': ɵɵpropertyInterpolateV,\n        'ɵɵpipe': ɵɵpipe,\n        'ɵɵqueryRefresh': ɵɵqueryRefresh,\n        'ɵɵviewQuery': ɵɵviewQuery,\n        'ɵɵstaticViewQuery': ɵɵstaticViewQuery,\n        'ɵɵstaticContentQuery': ɵɵstaticContentQuery,\n        'ɵɵloadViewQuery': ɵɵloadViewQuery,\n        'ɵɵcontentQuery': ɵɵcontentQuery,\n        'ɵɵloadContentQuery': ɵɵloadContentQuery,\n        'ɵɵreference': ɵɵreference,\n        'ɵɵelementHostAttrs': ɵɵelementHostAttrs,\n        'ɵɵclassMap': ɵɵclassMap,\n        'ɵɵclassMapInterpolate1': ɵɵclassMapInterpolate1,\n        'ɵɵclassMapInterpolate2': ɵɵclassMapInterpolate2,\n        'ɵɵclassMapInterpolate3': ɵɵclassMapInterpolate3,\n        'ɵɵclassMapInterpolate4': ɵɵclassMapInterpolate4,\n        'ɵɵclassMapInterpolate5': ɵɵclassMapInterpolate5,\n        'ɵɵclassMapInterpolate6': ɵɵclassMapInterpolate6,\n        'ɵɵclassMapInterpolate7': ɵɵclassMapInterpolate7,\n        'ɵɵclassMapInterpolate8': ɵɵclassMapInterpolate8,\n        'ɵɵclassMapInterpolateV': ɵɵclassMapInterpolateV,\n        'ɵɵstyling': ɵɵstyling,\n        'ɵɵstyleMap': ɵɵstyleMap,\n        'ɵɵstyleProp': ɵɵstyleProp,\n        'ɵɵstylePropInterpolate1': ɵɵstylePropInterpolate1,\n        'ɵɵstylePropInterpolate2': ɵɵstylePropInterpolate2,\n        'ɵɵstylePropInterpolate3': ɵɵstylePropInterpolate3,\n        'ɵɵstylePropInterpolate4': ɵɵstylePropInterpolate4,\n        'ɵɵstylePropInterpolate5': ɵɵstylePropInterpolate5,\n        'ɵɵstylePropInterpolate6': ɵɵstylePropInterpolate6,\n        'ɵɵstylePropInterpolate7': ɵɵstylePropInterpolate7,\n        'ɵɵstylePropInterpolate8': ɵɵstylePropInterpolate8,\n        'ɵɵstylePropInterpolateV': ɵɵstylePropInterpolateV,\n        'ɵɵstyleSanitizer': ɵɵstyleSanitizer,\n        'ɵɵstylingApply': ɵɵstylingApply,\n        'ɵɵclassProp': ɵɵclassProp,\n        'ɵɵselect': ɵɵselect,\n        'ɵɵtemplate': ɵɵtemplate,\n        'ɵɵtext': ɵɵtext,\n        'ɵɵtextBinding': ɵɵtextBinding,\n        'ɵɵtextInterpolate': ɵɵtextInterpolate,\n        'ɵɵtextInterpolate1': ɵɵtextInterpolate1,\n        'ɵɵtextInterpolate2': ɵɵtextInterpolate2,\n        'ɵɵtextInterpolate3': ɵɵtextInterpolate3,\n        'ɵɵtextInterpolate4': ɵɵtextInterpolate4,\n        'ɵɵtextInterpolate5': ɵɵtextInterpolate5,\n        'ɵɵtextInterpolate6': ɵɵtextInterpolate6,\n        'ɵɵtextInterpolate7': ɵɵtextInterpolate7,\n        'ɵɵtextInterpolate8': ɵɵtextInterpolate8,\n        'ɵɵtextInterpolateV': ɵɵtextInterpolateV,\n        'ɵɵembeddedViewStart': ɵɵembeddedViewStart,\n        'ɵɵembeddedViewEnd': ɵɵembeddedViewEnd,\n        'ɵɵi18n': ɵɵi18n,\n        'ɵɵi18nAttributes': ɵɵi18nAttributes,\n        'ɵɵi18nExp': ɵɵi18nExp,\n        'ɵɵi18nStart': ɵɵi18nStart,\n        'ɵɵi18nEnd': ɵɵi18nEnd,\n        'ɵɵi18nApply': ɵɵi18nApply,\n        'ɵɵi18nPostprocess': ɵɵi18nPostprocess,\n        'ɵɵi18nLocalize': ɵɵi18nLocalize,\n        'ɵɵresolveWindow': ɵɵresolveWindow,\n        'ɵɵresolveDocument': ɵɵresolveDocument,\n        'ɵɵresolveBody': ɵɵresolveBody,\n        'ɵɵsetComponentScope': ɵɵsetComponentScope,\n        'ɵɵsetNgModuleScope': ɵɵsetNgModuleScope,\n        'ɵɵsanitizeHtml': ɵɵsanitizeHtml,\n        'ɵɵsanitizeStyle': ɵɵsanitizeStyle,\n        'ɵɵdefaultStyleSanitizer': ɵɵdefaultStyleSanitizer,\n        'ɵɵsanitizeResourceUrl': ɵɵsanitizeResourceUrl,\n        'ɵɵsanitizeScript': ɵɵsanitizeScript,\n        'ɵɵsanitizeUrl': ɵɵsanitizeUrl,\n        'ɵɵsanitizeUrlOrResourceUrl': ɵɵsanitizeUrlOrResourceUrl,\n    }); })();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$3 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     *\n     * It's possible to compile a module via this API which will allow duplicate declarations in its\n     * root.\n     */\n    function compileNgModuleDefs(moduleType, ngModule, allowDuplicateDeclarationsInRoot) {\n        if (allowDuplicateDeclarationsInRoot === void 0) { allowDuplicateDeclarationsInRoot = false; }\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$3);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    if (ngDevMode && ngModule.imports && ngModule.imports.indexOf(moduleType) > -1) {\n                        // We need to assert this immediately, because allowing it to continue will cause it to\n                        // go into an infinite loop before we've reached the point where we throw all the errors.\n                        throw new Error(\"'\" + stringifyForError(moduleType) + \"' module can't import itself\");\n                    }\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng:///\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten(ngModule.bootstrap || EMPTY_ARRAY$3).map(resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten(ngModule.imports || EMPTY_ARRAY$3)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten(ngModule.exports || EMPTY_ARRAY$3)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                        schemas: ngModule.schemas ? flatten(ngModule.schemas) : null,\n                        id: ngModule.id || null,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$3,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$3).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$3).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng:///\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot, importingModule) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef;\n        if (importingModule) {\n            ngModuleDef = getNgModuleDef(moduleType);\n            if (!ngModuleDef) {\n                throw new Error(\"Unexpected value '\" + moduleType.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n        else {\n            ngModuleDef = getNgModuleDef(moduleType, true);\n        }\n        var errors = [];\n        var declarations = maybeUnwrapFn(ngModuleDef.declarations);\n        var imports = maybeUnwrapFn(ngModuleDef.imports);\n        flatten(imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n            verifySemanticsOfNgModuleImport(mod, moduleType);\n            verifySemanticsOfNgModuleDef(mod, false, moduleType);\n        });\n        var exports = maybeUnwrapFn(ngModuleDef.exports);\n        declarations.forEach(verifyDeclarationsHaveDefinitions);\n        var combinedDeclarations = __spread(declarations.map(resolveForwardRef), flatten(imports.map(computeCombinedExports)).map(resolveForwardRef));\n        exports.forEach(verifyExportsAreDeclaredOrReExported);\n        declarations.forEach(function (decl) { return verifyDeclarationIsUnique(decl, allowDuplicateDeclarationsInRoot); });\n        declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten(ngModule.imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n                    verifySemanticsOfNgModuleImport(mod, moduleType);\n                    verifySemanticsOfNgModuleDef(mod, false, moduleType);\n                });\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyCorrectBootstrapType);\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents &&\n                deepForEach(ngModule.entryComponents, verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + stringifyForError(type) + \"' declared by the module '\" + stringifyForError(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + stringifyForError(type) + \" from \" + stringifyForError(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type, suppressErrors) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                if (!suppressErrors) {\n                    var modules = [existingModule, moduleType].map(stringifyForError).sort();\n                    errors.push(\"Type \" + stringifyForError(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                        (\"Please consider moving \" + stringifyForError(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                        (\"You can also create a new NgModule that exports and includes \" + stringifyForError(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n                }\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + stringifyForError(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyCorrectBootstrapType(type) {\n            type = resolveForwardRef(type);\n            if (!getComponentDef(type)) {\n                errors.push(stringifyForError(type) + \" cannot be used as an entry component.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    deepForEach(component.entryComponents, verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n        function verifySemanticsOfNgModuleImport(type, importingModule) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type) || getDirectiveDef(type)) {\n                throw new Error(\"Unexpected directive '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n            if (getPipeDef(type)) {\n                throw new Error(\"Unexpected pipe '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten(maybeUnwrapFn(ngModuleDef.exports).map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type, false);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$3);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () {\n            return Array.from(transitiveScopes.compilation.directives)\n                .map(function (dir) { return dir.hasOwnProperty(NG_COMPONENT_DEF) ? getComponentDef(dir) :\n                getDirectiveDef(dir); })\n                .filter(function (def) { return !!def; });\n        };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n        componentDef.schemas = transitiveScopes.schemas;\n        // Since we avoid Components/Directives/Pipes recompiling in case there are no overrides, we\n        // may face a problem where previously compiled defs available to a given Component/Directive\n        // are cached in TView and may become stale (in case any of these defs gets recompiled). In\n        // order to avoid this problem, we force fresh TView to be created.\n        componentDef.tView = null;\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType, processNgModuleFn) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            schemas: def.schemas || null,\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        maybeUnwrapFn(def.declarations).forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        maybeUnwrapFn(def.imports).forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have an ngModuleDef\");\n            }\n            if (processNgModuleFn) {\n                processNgModuleFn(importedType);\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType, processNgModuleFn);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        maybeUnwrapFn(def.exports).forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType, processNgModuleFn);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(type, metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + type.name + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + metadata.templateUrl);\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var templateUrl = metadata.templateUrl || \"ng:///\" + type.name + \"/template.html\";\n                    var meta = __assign({}, directiveMetadata(type, metadata), { typeSourceSpan: compiler.createParseSourceSpan('Component', type.name, templateUrl), template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    if (meta.usesInheritance) {\n                        addBaseDefToUndecoratedParents(type);\n                    }\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, templateUrl, meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        // Add ngInjectableDef so components are reachable through the module injector by default\n        // This is mostly to support injecting components in tests. In real application code,\n        // components should be retrieved through the node injector, so this isn't a problem.\n        compileInjectable(type);\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var name_1 = type && type.name;\n                    var sourceMapUrl = \"ng:///\" + name_1 + \"/ngDirectiveDef.js\";\n                    var compiler = getCompilerFacade();\n                    var facade = directiveMetadata(type, directive);\n                    facade.typeSourceSpan = compiler.createParseSourceSpan('Directive', name_1, sourceMapUrl);\n                    if (facade.usesInheritance) {\n                        addBaseDefToUndecoratedParents(type);\n                    }\n                    ngDirectiveDef = compiler.compileDirective(angularCoreEnv, sourceMapUrl, facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        // Add ngInjectableDef so directives are reachable through the module injector by default\n        // This is mostly to support injecting directives in tests. In real application code,\n        // directives should be retrieved through the node injector, so this isn't a problem.\n        compileInjectable(type);\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().ownPropMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY,\n            outputs: metadata.outputs || EMPTY_ARRAY,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: { usesOnChanges: type.prototype.hasOwnProperty('ngOnChanges') },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n            viewQueries: extractQueriesMetadata(type, propMetadata, isViewQuery),\n        };\n    }\n    /**\n     * Adds an `ngBaseDef` to all parent classes of a type that don't have an Angular decorator.\n     */\n    function addBaseDefToUndecoratedParents(type) {\n        var objPrototype = Object.prototype;\n        var parent = Object.getPrototypeOf(type);\n        // Go up the prototype until we hit `Object`.\n        while (parent && parent !== objPrototype) {\n            // Since inheritance works if the class was annotated already, we only need to add\n            // the base def if there are no annotations and the base def hasn't been created already.\n            if (!getDirectiveDef(parent) && !getComponentDef(parent) && !getBaseDef(parent)) {\n                var facade = extractBaseDefMetadata(parent);\n                facade && compileBase(parent, facade);\n            }\n            parent = Object.getPrototypeOf(parent);\n        }\n    }\n    /** Compiles the base metadata into a base definition. */\n    function compileBase(type, facade) {\n        var ngBaseDef = null;\n        Object.defineProperty(type, NG_BASE_DEF, {\n            get: function () {\n                if (ngBaseDef === null) {\n                    var name_2 = type && type.name;\n                    var sourceMapUrl = \"ng://\" + name_2 + \"/ngBaseDef.js\";\n                    var compiler = getCompilerFacade();\n                    ngBaseDef = compiler.compileBase(angularCoreEnv, sourceMapUrl, facade);\n                }\n                return ngBaseDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /** Extracts the metadata necessary to construct an `ngBaseDef` from a class. */\n    function extractBaseDefMetadata(type) {\n        var propMetadata = getReflect().ownPropMetadata(type);\n        var viewQueries = extractQueriesMetadata(type, propMetadata, isViewQuery);\n        var queries = extractQueriesMetadata(type, propMetadata, isContentQuery);\n        var inputs;\n        var outputs;\n        // We only need to know whether there are any HostListener or HostBinding\n        // decorators present, the parsing logic is in the compiler already.\n        var hasHostDecorators = false;\n        var _loop_1 = function (field) {\n            propMetadata[field].forEach(function (ann) {\n                var metadataName = ann.ngMetadataName;\n                if (metadataName === 'Input') {\n                    inputs = inputs || {};\n                    inputs[field] = ann.bindingPropertyName ? [ann.bindingPropertyName, field] : field;\n                }\n                else if (metadataName === 'Output') {\n                    outputs = outputs || {};\n                    outputs[field] = ann.bindingPropertyName || field;\n                }\n                else if (metadataName === 'HostBinding' || metadataName === 'HostListener') {\n                    hasHostDecorators = true;\n                }\n            });\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        // Only generate the base def if there's any info inside it.\n        if (inputs || outputs || viewQueries.length || queries.length || hasHostDecorators) {\n            return { name: type.name, type: type, inputs: inputs, outputs: outputs, viewQueries: viewQueries, queries: queries, propMetadata: propMetadata };\n        }\n        return null;\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null,\n            static: !!ann.static\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_2 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                var annotations_1 = propMetadata[field];\n                annotations_1.forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + stringifyForError(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        if (annotations_1.some(isInputAnn)) {\n                            throw new Error(\"Cannot combine @Input decorators with query decorators\");\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_2(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        if (exportAs === undefined) {\n            return null;\n        }\n        return exportAs.split(',').map(function (part) { return part.trim(); });\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function isInputAnn(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var typeName = type.name;\n                    ngPipeDef =\n                        getCompilerFacade().compilePipe(angularCoreEnv, \"ng:///\" + typeName + \"/ngPipeDef.js\", {\n                            type: type,\n                            typeArgumentCount: 0,\n                            name: typeName,\n                            deps: reflectDependencies(type),\n                            pipeName: meta.name,\n                            pure: meta.pure !== undefined ? meta.pure : true\n                        });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Decorator that binds a DOM event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     *\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```ts\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__POST_R3__;\n\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus.ngInjectableDef = ɵɵdefineInjectable({ token: ApplicationInitStatus, factory: function ApplicationInitStatus_Factory(t) { return new (t || ApplicationInitStatus)(ɵɵinject(APP_INITIALIZER, 8)); }, providedIn: null });\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console.ngInjectableDef = ɵɵdefineInjectable({ token: Console, factory: function Console_Factory(t) { return new (t || Console)(); }, providedIn: null });\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID$1 = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS$1 = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var ivyEnabled = SWITCH_IVY_ENABLED__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__POST_R3__;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n        var moduleDef = getNgModuleDef(moduleType);\n        var componentFactories = maybeUnwrapFn(moduleDef.declarations)\n            .reduce(function (factories, declaration) {\n            var componentDef = getComponentDef(declaration);\n            componentDef && factories.push(new ComponentFactory$1(componentDef));\n            return factories;\n        }, []);\n        return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler.ngInjectableDef = ɵɵdefineInjectable({ token: Compiler, factory: function Compiler_Factory(t) { return new (t || Compiler)(); }, providedIn: null });\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = (function () { return Promise.resolve(0); })();\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.ngInjectableDef = ɵɵdefineInjectable({ token: Testability, factory: function Testability_Factory(t) { return new (t || Testability)(ɵɵinject(NgZone)); }, providedIn: null });\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.ngInjectableDef = ɵɵdefineInjectable({ token: TestabilityRegistry, factory: function TestabilityRegistry_Factory(t) { return new (t || TestabilityRegistry)(); }, providedIn: null });\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__POST_R3__;\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        var moduleFactory = new NgModuleFactory$1(moduleType);\n        if (isComponentResourceResolutionQueueEmpty()) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compilerOptions = injector.get(COMPILER_OPTIONS, []).concat(options);\n        var compilerProviders = _mergeArrays(compilerOptions.map(function (o) { return o.providers; }));\n        // In case there are no compiler providers, we just return the module factory as\n        // there won't be any resource loader. This can happen with Ivy, because AOT compiled\n        // modules can be still passed through \"bootstrapModule\". In that case we shouldn't\n        // unnecessarily require the JIT compiler.\n        if (compilerProviders.length === 0) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compiler = getCompilerFacade();\n        var compilerInjector = Injector.create({ providers: compilerProviders });\n        var resourceLoader = compilerInjector.get(compiler.ResourceLoader);\n        // The resource loader can also return a string while the \"resolveComponentResources\"\n        // always expects a promise. Therefore we need to wrap the returned value in a promise.\n        return resolveComponentResources(function (url) { return Promise.resolve(resourceLoader.get(url)); })\n            .then(function () { return moduleFactory; });\n    }\n    var isBoundToModule = isBoundToModule__POST_R3__;\n    function isBoundToModule__POST_R3__(cf) {\n        return cf.isBoundToModule;\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                // If the `LOCALE_ID` provider is defined at bootstrap we set the value for runtime i18n (ivy)\n                {\n                    var localeId = moduleRef.injector.get(LOCALE_ID$1, DEFAULT_LOCALE_ID);\n                    setLocaleId(localeId || DEFAULT_LOCALE_ID);\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef.ngInjectableDef = ɵɵdefineInjectable({ token: PlatformRef, factory: function PlatformRef_Factory(t) { return new (t || PlatformRef)(ɵɵinject(Injector)); }, providedIn: null });\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @usageNotes\n     *\n     * {@a is-stable-examples}\n     * ### isStable examples and caveats\n     *\n     * Note two important points about `isStable`, demonstrated in the examples below:\n     * - the application will never be stable if you start any kind\n     * of recurrent asynchronous task when the application starts\n     * (for example for a polling process, started with a `setInterval`, a `setTimeout`\n     * or using RxJS operators like `interval`);\n     * - the `isStable` Observable runs outside of the Angular zone.\n     *\n     * Let's imagine that you start a recurrent task\n     * (here incrementing a counter, using RxJS `interval`),\n     * and at the same time subscribe to `isStable`.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *      filter(stable => stable)\n     *   ).subscribe(() => console.log('App is stable now');\n     *   interval(1000).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, `isStable` will never emit `true`,\n     * and the trace \"App is stable now\" will never get logged.\n     *\n     * If you want to execute something when the app is stable,\n     * you have to wait for the application to be stable\n     * before starting your polling process.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     tap(stable => console.log('App is stable now')),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, the trace \"App is stable now\" will be logged\n     * and then the counter starts incrementing every second.\n     *\n     * Note also that this Observable runs outside of the Angular zone,\n     * which means that the code in the subscription\n     * to this Observable will not trigger the change detection.\n     *\n     * Let's imagine that instead of logging the counter value,\n     * you update a field of your component\n     * and display it in its template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => this.value = counter);\n     * }\n     * ```\n     * As the `isStable` Observable runs outside the zone,\n     * the `value` field will be updated properly,\n     * but the template will not be refreshed!\n     *\n     * You'll have to manually trigger the change detection to update the template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => {\n     *     this.value = counter;\n     *     cd.detectChanges();\n     *   });\n     * }\n     * ```\n     *\n     * Or make the subscription callback run inside the zone.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, zone: NgZone) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => zone.run(() => this.value = counter));\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = isBoundToModule(componentFactory) ? null : this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var e_1, _a, e_2, _b;\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef._tickScope();\n            try {\n                this._runningTick = true;\n                try {\n                    for (var _c = __values(this._views), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var view = _d.value;\n                        view.detectChanges();\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                if (this._enforceNoNewChanges) {\n                    try {\n                        for (var _e = __values(this._views), _f = _e.next(); !_f.done; _f = _e.next()) {\n                            var view = _f.value;\n                            view.checkNoChanges();\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef.ngInjectableDef = ɵɵdefineInjectable({ token: ApplicationRef, factory: function ApplicationRef_Factory(t) { return new (t || ApplicationRef)(ɵɵinject(NgZone), ɵɵinject(Console), ɵɵinject(Injector), ɵɵinject(ErrorHandler), ɵɵinject(ComponentFactoryResolver), ɵɵinject(ApplicationInitStatus)); }, providedIn: null });\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n    function _mergeArrays(parts) {\n        var result = [];\n        parts.forEach(function (part) { return part && result.push.apply(result, __spread(part)); });\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `NgModuleFactoryLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    function getModuleFactory__POST_R3__(id) {\n        var type = getRegisteredNgModuleType(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__POST_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoaderConfig`\n     * is part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            return this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.ngInjectableDef = ɵɵdefineInjectable({ token: SystemJsNgModuleLoader, factory: function SystemJsNgModuleLoader_Factory(t) { return new (t || SystemJsNgModuleLoader)(ɵɵinject(Compiler), ɵɵinject(SystemJsNgModuleLoaderConfig, 8)); }, providedIn: null });\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @publicApi\n     */\n    var DebugEventListener = /** @class */ (function () {\n        function DebugEventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return DebugEventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _a;\n            var _this = this;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement &&\n                    (getComponent(nativeElement) || getViewComponent(nativeElement));\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () {\n                return getComponent(this.nativeNode) || getContext$1(this.nativeNode);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () { return this.nativeElement.nodeName; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            /**\n             *  Gets a map of property names to property values for an element.\n             *\n             *  This map includes:\n             *  - Regular property bindings (e.g. `[id]=\"id\"`)\n             *  - Host property bindings (e.g. `host: { '[id]': \"id\" }`)\n             *  - Interpolated property bindings (e.g. `id=\"{{ value }}\")\n             *\n             *  It does not include:\n             *  - input property bindings (e.g. `[myCustomInput]=\"value\"`)\n             *  - attribute bindings (e.g. `[attr.role]=\"menu\"`)\n             */\n            get: function () {\n                var context = loadLContext(this.nativeNode);\n                var lView = context.lView;\n                var tData = lView[TVIEW].data;\n                var tNode = tData[context.nodeIndex];\n                var properties = collectPropertyBindings(tNode, lView, tData);\n                var hostProperties = collectHostPropertyBindings(tNode, lView, tData);\n                var className = collectClassNames(this);\n                var output = __assign({}, properties, hostProperties);\n                if (className) {\n                    output['className'] = output['className'] ? output['className'] + (\" \" + className) : className;\n                }\n                return output;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (!element) {\n                    return attributes;\n                }\n                var context = loadLContext(element);\n                var lView = context.lView;\n                var tNodeAttrs = lView[TVIEW].data[context.nodeIndex].attrs;\n                var lowercaseTNodeAttrs = [];\n                // For debug nodes we take the element's attribute directly from the DOM since it allows us\n                // to account for ones that weren't set via bindings (e.g. ViewEngine keeps track of the ones\n                // that are set through `Renderer2`). The problem is that the browser will lowercase all names,\n                // however since we have the attributes already on the TNode, we can preserve the case by going\n                // through them once, adding them to the `attributes` map and putting their lower-cased name\n                // into an array. Afterwards when we're going through the native DOM attributes, we can check\n                // whether we haven't run into an attribute already through the TNode.\n                if (tNodeAttrs) {\n                    var i = 0;\n                    while (i < tNodeAttrs.length) {\n                        var attrName = tNodeAttrs[i];\n                        // Stop as soon as we hit a marker. We only care about the regular attributes. Everything\n                        // else will be handled below when we read the final attributes off the DOM.\n                        if (typeof attrName !== 'string')\n                            break;\n                        var attrValue = tNodeAttrs[i + 1];\n                        attributes[attrName] = attrValue;\n                        lowercaseTNodeAttrs.push(attrName.toLowerCase());\n                        i += 2;\n                    }\n                }\n                var eAttrs = element.attributes;\n                for (var i = 0; i < eAttrs.length; i++) {\n                    var attr = eAttrs[i];\n                    // Make sure that we don't assign the same attribute both in its\n                    // case-sensitive form and the lower-cased one from the browser.\n                    if (lowercaseTNodeAttrs.indexOf(attr.name) === -1) {\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                return _getStylingDebugInfo(this.nativeElement, false);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                return _getStylingDebugInfo(this.nativeElement, true);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            var node = this.nativeNode;\n            var invokedListeners = [];\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    var callback = listener.callback;\n                    callback(eventObj);\n                    invokedListeners.push(callback);\n                }\n            });\n            // We need to check whether `eventListeners` exists, because it's something\n            // that Zone.js only adds to `EventTarget` in browser environments.\n            if (typeof node.eventListeners === 'function') {\n                // Note that in Ivy we wrap event listeners with a call to `event.preventDefault` in some\n                // cases. We use `Function` as a special token that gives us access to the actual event\n                // listener.\n                node.eventListeners(eventName).forEach(function (listener) {\n                    var unwrappedListener = listener(Function);\n                    return invokedListeners.indexOf(unwrappedListener) === -1 && unwrappedListener(eventObj);\n                });\n            }\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    function _getStylingDebugInfo(element, isClassBased) {\n        if (element) {\n            var context = loadLContextFromNode(element);\n            var lView = context.lView;\n            var tData = lView[TVIEW].data;\n            var tNode = tData[context.nodeIndex];\n            if (isClassBased) {\n                return isStylingContext(tNode.classes) ?\n                    new NodeStylingDebug(tNode.classes, lView, true).values :\n                    stylingMapToStringMap(tNode.classes);\n            }\n            else {\n                return isStylingContext(tNode.styles) ?\n                    new NodeStylingDebug(tNode.styles, lView, false).values :\n                    stylingMapToStringMap(tNode.styles);\n            }\n        }\n        return {};\n    }\n    function _queryAllR3(parentElement, predicate, matches, elementsOnly) {\n        var context = loadLContext(parentElement.nativeNode);\n        var parentTNode = context.lView[TVIEW].data[context.nodeIndex];\n        _queryNodeChildrenR3(parentTNode, context.lView, predicate, matches, elementsOnly, parentElement.nativeNode);\n    }\n    /**\n     * Recursively match the current TNode against the predicate, and goes on with the next ones.\n     *\n     * @param tNode the current TNode\n     * @param lView the LView of this TNode\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenR3(tNode, lView, predicate, matches, elementsOnly, rootNativeNode) {\n        var e_1, _a;\n        var nativeNode = getNativeByTNodeOrNull(tNode, lView);\n        // For each type of TNode, specific logic is executed.\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            // Case 1: the TNode is an element\n            // The native node has to be checked.\n            _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode);\n            if (isComponent(tNode)) {\n                // If the element is the host of a component, then all nodes in its view have to be processed.\n                // Note: the component's content (tNode.child) will be processed from the insertion points.\n                var componentView = getComponentViewByIndex(tNode.index, lView);\n                if (componentView && componentView[TVIEW].firstChild) {\n                    _queryNodeChildrenR3(componentView[TVIEW].firstChild, componentView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n            }\n            else {\n                if (tNode.child) {\n                    // Otherwise, its children have to be processed.\n                    _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n                // We also have to query the DOM directly in order to catch elements inserted through\n                // Renderer2. Note that this is __not__ optimal, because we're walking similar trees multiple\n                // times. ViewEngine could do it more efficiently, because all the insertions go through\n                // Renderer2, however that's not the case in Ivy. This approach is being used because:\n                // 1. Matching the ViewEngine behavior would mean potentially introducing a depedency\n                //    from `Renderer2` to Ivy which could bring Ivy code into ViewEngine.\n                // 2. We would have to make `Renderer3` \"know\" about debug nodes.\n                // 3. It allows us to capture nodes that were inserted directly via the DOM.\n                nativeNode && _queryNativeNodeDescendants(nativeNode, predicate, matches, elementsOnly);\n            }\n            // In all cases, if a dynamic container exists for this node, each view inside it has to be\n            // processed.\n            var nodeOrContainer = lView[tNode.index];\n            if (isLContainer(nodeOrContainer)) {\n                _queryNodeChildrenInContainerR3(nodeOrContainer, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // Case 2: the TNode is a container\n            // The native node has to be checked.\n            var lContainer = lView[tNode.index];\n            _addQueryMatchR3(lContainer[NATIVE], predicate, matches, elementsOnly, rootNativeNode);\n            // Each view inside the container has to be processed.\n            _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        else if (tNode.type === 1 /* Projection */) {\n            // Case 3: the TNode is a projection insertion point (i.e. a <ng-content>).\n            // The nodes projected at this location all need to be processed.\n            var componentView = findComponentView(lView);\n            var componentHost = componentView[T_HOST];\n            var head = componentHost.projection[tNode.projection];\n            if (Array.isArray(head)) {\n                try {\n                    for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                        var nativeNode_1 = head_1_1.value;\n                        _addQueryMatchR3(nativeNode_1, predicate, matches, elementsOnly, rootNativeNode);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n            else if (head) {\n                var nextLView = componentView[PARENT];\n                var nextTNode = nextLView[TVIEW].data[head.index];\n                _queryNodeChildrenR3(nextTNode, nextLView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.child) {\n            // Case 4: the TNode is a view.\n            _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        // We don't want to go to the next sibling of the root node.\n        if (rootNativeNode !== nativeNode) {\n            // To determine the next node to be processed, we need to use the next or the projectionNext\n            // link, depending on whether the current node has been projected.\n            var nextTNode = (tNode.flags & 2 /* isProjected */) ? tNode.projectionNext : tNode.next;\n            if (nextTNode) {\n                _queryNodeChildrenR3(nextTNode, lView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n    }\n    /**\n     * Process all TNodes in a given container.\n     *\n     * @param lContainer the container to be processed\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode) {\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var childView = lContainer[i];\n            _queryNodeChildrenR3(childView[TVIEW].node, childView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n    /**\n     * Match the current native node against the predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode) {\n        if (rootNativeNode !== nativeNode) {\n            var debugNode = getDebugNode(nativeNode);\n            if (!debugNode) {\n                return;\n            }\n            // Type of the \"predicate and \"matches\" array are set based on the value of\n            // the \"elementsOnly\" parameter. TypeScript is not able to properly infer these\n            // types with generics, so we manually cast the parameters accordingly.\n            if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n            else if (!elementsOnly && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n        }\n    }\n    /**\n     * Match all the descendants of a DOM node against a predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     */\n    function _queryNativeNodeDescendants(parentNode, predicate, matches, elementsOnly) {\n        var nodes = parentNode.childNodes;\n        var length = nodes.length;\n        for (var i = 0; i < length; i++) {\n            var node = nodes[i];\n            var debugNode = getDebugNode(node);\n            if (debugNode) {\n                if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                else if (!elementsOnly && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                _queryNativeNodeDescendants(node, predicate, matches, elementsOnly);\n            }\n        }\n    }\n    /**\n     * Iterates through the property bindings for a given node and generates\n     * a map of property names to values. This map only contains property bindings\n     * defined in templates, not in host bindings.\n     */\n    function collectPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        var bindingIndex = getFirstBindingIndex(tNode.propertyMetadataStartIndex, tData);\n        while (bindingIndex < tNode.propertyMetadataEndIndex) {\n            var value = void 0;\n            var propMetadata = tData[bindingIndex];\n            while (!isPropMetadataString(propMetadata)) {\n                // This is the first value for an interpolation. We need to build up\n                // the full interpolation by combining runtime values in LView with\n                // the static interstitial values stored in TData.\n                value = (value || '') + renderStringify(lView[bindingIndex]) + tData[bindingIndex];\n                propMetadata = tData[++bindingIndex];\n            }\n            value = value === undefined ? lView[bindingIndex] : value += lView[bindingIndex];\n            // Property metadata string has 3 parts: property name, prefix, and suffix\n            var metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);\n            var propertyName = metadataParts[0];\n            // Attr bindings don't have property names and should be skipped\n            if (propertyName) {\n                // Wrap value with prefix and suffix (will be '' for normal bindings), if they're defined.\n                // Avoid wrapping for normal bindings so that the value doesn't get cast to a string.\n                properties[propertyName] = (metadataParts[1] && metadataParts[2]) ?\n                    metadataParts[1] + value + metadataParts[2] :\n                    value;\n            }\n            bindingIndex++;\n        }\n        return properties;\n    }\n    /**\n     * Retrieves the first binding index that holds values for this property\n     * binding.\n     *\n     * For normal bindings (e.g. `[id]=\"id\"`), the binding index is the\n     * same as the metadata index. For interpolations (e.g. `id=\"{{id}}-{{name}}\"`),\n     * there can be multiple binding values, so we might have to loop backwards\n     * from the metadata index until we find the first one.\n     *\n     * @param metadataIndex The index of the first property metadata string for\n     * this node.\n     * @param tData The data array for the current TView\n     * @returns The first binding index for this binding\n     */\n    function getFirstBindingIndex(metadataIndex, tData) {\n        var currentBindingIndex = metadataIndex - 1;\n        // If the slot before the metadata holds a string, we know that this\n        // metadata applies to an interpolation with at least 2 bindings, and\n        // we need to search further to access the first binding value.\n        var currentValue = tData[currentBindingIndex];\n        // We need to iterate until we hit either a:\n        // - TNode (it is an element slot marking the end of `consts` section), OR a\n        // - metadata string (slot is attribute metadata or a previous node's property metadata)\n        while (typeof currentValue === 'string' && !isPropMetadataString(currentValue)) {\n            currentValue = tData[--currentBindingIndex];\n        }\n        return currentBindingIndex + 1;\n    }\n    function collectHostPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        // Host binding values for a node are stored after directives on that node\n        var hostPropIndex = tNode.directiveEnd;\n        var propMetadata = tData[hostPropIndex];\n        // When we reach a value in TView.data that is not a string, we know we've\n        // hit the next node's providers and directives and should stop copying data.\n        while (typeof propMetadata === 'string') {\n            var propertyName = propMetadata.split(INTERPOLATION_DELIMITER)[0];\n            properties[propertyName] = lView[hostPropIndex];\n            propMetadata = tData[++hostPropIndex];\n        }\n        return properties;\n    }\n    function collectClassNames(debugElement) {\n        var e_2, _a;\n        var classes = debugElement.classes;\n        var output = '';\n        try {\n            for (var _b = __values(Object.keys(classes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var className = _c.value;\n                if (classes[className]) {\n                    output = output ? output + (\" \" + className) : className;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return output;\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    var NG_DEBUG_PROPERTY = '__ng_debug__';\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            if (!(nativeNode.hasOwnProperty(NG_DEBUG_PROPERTY))) {\n                nativeNode[NG_DEBUG_PROPERTY] = nativeNode.nodeType == Node.ELEMENT_NODE ?\n                    new DebugElement__POST_R3__(nativeNode) :\n                    new DebugNode__POST_R3__(nativeNode);\n            }\n            return nativeNode[NG_DEBUG_PROPERTY];\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode = getDebugNode__POST_R3__;\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__POST_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        if (locale) {\n            if (ivyEnabled) {\n                setLocaleId(locale);\n            }\n            return locale;\n        }\n        // Use `goog.LOCALE` as default value for `LOCALE_ID` token for Closure Compiler.\n        // Note: default `goog.LOCALE` value is `en`, when Angular used `en-US`. In order to preserve\n        // backwards compatibility, we use Angular default value over Closure Compiler's one.\n        if (ngI18nClosureMode && typeof goog !== 'undefined' && goog.LOCALE !== 'en') {\n            if (ivyEnabled) {\n                setLocaleId(goog.LOCALE);\n            }\n            return goog.LOCALE;\n        }\n        return DEFAULT_LOCALE_ID;\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID$1,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID$1), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule.ngModuleDef = ɵɵdefineNgModule({ type: ApplicationModule });\n        ApplicationModule.ngInjectorDef = ɵɵdefineInjector({ factory: function ApplicationModule_Factory(t) { return new (t || ApplicationModule)(ɵɵinject(ApplicationRef)); }, providers: APPLICATION_MODULE_PROVIDERS });\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        var _a;\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode, name);\n        }\n        else {\n            renderer.removeClass(renderNode, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode;\n        var renderer = view.renderer;\n        renderNode = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode);\n        }\n        return { renderText: renderNode };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef = overrideComponentView;\n        }\n        else {\n            viewDef = applyProviderOverridesToView(viewDef);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef, elIndex) {\n            for (var i = elIndex + 1; i < viewDef.nodes.length; i++) {\n                var nodeDef = viewDef.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            var debugNode = getDebugNode(node);\n            removeDebugNodeFromIndex(debugNode);\n            if (debugNode instanceof DebugNode__PRE_R3__) {\n                debugNode.listeners.length = 0;\n            }\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new DebugEventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugEventListener = DebugEventListener;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS$1;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID$1;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.Attribute = Attribute;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.NgModule = NgModule;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.ɵɵdefineInjectable = ɵɵdefineInjectable;\n    exports.defineInjectable = defineInjectable;\n    exports.ɵɵdefineInjector = ɵɵdefineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.Injector = Injector;\n    exports.ɵɵinject = ɵɵinject;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual;\n    exports.ɵisListLikeIterable = isListLikeIterable;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵDEFAULT_LOCALE_ID = DEFAULT_LOCALE_ID;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵclearResolutionOfComponentResourcesQueue = clearResolutionOfComponentResourcesQueue;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ɵgetLocalePluralCase = getLocalePluralCase;\n    exports.ɵfindLocaleData = findLocaleData;\n    exports.ɵLOCALE_DATA = LOCALE_DATA;\n    exports.ɵɵattribute = ɵɵattribute;\n    exports.ɵɵattributeInterpolate1 = ɵɵattributeInterpolate1;\n    exports.ɵɵattributeInterpolate2 = ɵɵattributeInterpolate2;\n    exports.ɵɵattributeInterpolate3 = ɵɵattributeInterpolate3;\n    exports.ɵɵattributeInterpolate4 = ɵɵattributeInterpolate4;\n    exports.ɵɵattributeInterpolate5 = ɵɵattributeInterpolate5;\n    exports.ɵɵattributeInterpolate6 = ɵɵattributeInterpolate6;\n    exports.ɵɵattributeInterpolate7 = ɵɵattributeInterpolate7;\n    exports.ɵɵattributeInterpolate8 = ɵɵattributeInterpolate8;\n    exports.ɵɵattributeInterpolateV = ɵɵattributeInterpolateV;\n    exports.ɵɵdefineBase = ɵɵdefineBase;\n    exports.ɵɵdefineComponent = ɵɵdefineComponent;\n    exports.ɵɵdefineDirective = ɵɵdefineDirective;\n    exports.ɵɵdefinePipe = ɵɵdefinePipe;\n    exports.ɵɵdefineNgModule = ɵɵdefineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵɵdirectiveInject = ɵɵdirectiveInject;\n    exports.ɵɵinjectAttribute = ɵɵinjectAttribute;\n    exports.ɵɵinjectPipeChangeDetectorRef = ɵɵinjectPipeChangeDetectorRef;\n    exports.ɵɵgetFactoryOf = ɵɵgetFactoryOf;\n    exports.ɵɵgetInheritedFactory = ɵɵgetInheritedFactory;\n    exports.ɵɵsetComponentScope = ɵɵsetComponentScope;\n    exports.ɵɵsetNgModuleScope = ɵɵsetNgModuleScope;\n    exports.ɵɵtemplateRefExtractor = ɵɵtemplateRefExtractor;\n    exports.ɵɵProvidersFeature = ɵɵProvidersFeature;\n    exports.ɵɵInheritDefinitionFeature = ɵɵInheritDefinitionFeature;\n    exports.ɵɵNgOnChangesFeature = ɵɵNgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵɵcontainer = ɵɵcontainer;\n    exports.ɵɵnextContext = ɵɵnextContext;\n    exports.ɵɵelementStart = ɵɵelementStart;\n    exports.ɵɵnamespaceHTML = ɵɵnamespaceHTML;\n    exports.ɵɵnamespaceMathML = ɵɵnamespaceMathML;\n    exports.ɵɵnamespaceSVG = ɵɵnamespaceSVG;\n    exports.ɵɵelement = ɵɵelement;\n    exports.ɵɵlistener = ɵɵlistener;\n    exports.ɵɵtext = ɵɵtext;\n    exports.ɵɵtextInterpolate = ɵɵtextInterpolate;\n    exports.ɵɵtextInterpolate1 = ɵɵtextInterpolate1;\n    exports.ɵɵtextInterpolate2 = ɵɵtextInterpolate2;\n    exports.ɵɵtextInterpolate3 = ɵɵtextInterpolate3;\n    exports.ɵɵtextInterpolate4 = ɵɵtextInterpolate4;\n    exports.ɵɵtextInterpolate5 = ɵɵtextInterpolate5;\n    exports.ɵɵtextInterpolate6 = ɵɵtextInterpolate6;\n    exports.ɵɵtextInterpolate7 = ɵɵtextInterpolate7;\n    exports.ɵɵtextInterpolate8 = ɵɵtextInterpolate8;\n    exports.ɵɵtextInterpolateV = ɵɵtextInterpolateV;\n    exports.ɵɵembeddedViewStart = ɵɵembeddedViewStart;\n    exports.ɵɵprojection = ɵɵprojection;\n    exports.ɵɵpipeBind1 = ɵɵpipeBind1;\n    exports.ɵɵpipeBind2 = ɵɵpipeBind2;\n    exports.ɵɵpipeBind3 = ɵɵpipeBind3;\n    exports.ɵɵpipeBind4 = ɵɵpipeBind4;\n    exports.ɵɵpipeBindV = ɵɵpipeBindV;\n    exports.ɵɵpureFunction0 = ɵɵpureFunction0;\n    exports.ɵɵpureFunction1 = ɵɵpureFunction1;\n    exports.ɵɵpureFunction2 = ɵɵpureFunction2;\n    exports.ɵɵpureFunction3 = ɵɵpureFunction3;\n    exports.ɵɵpureFunction4 = ɵɵpureFunction4;\n    exports.ɵɵpureFunction5 = ɵɵpureFunction5;\n    exports.ɵɵpureFunction6 = ɵɵpureFunction6;\n    exports.ɵɵpureFunction7 = ɵɵpureFunction7;\n    exports.ɵɵpureFunction8 = ɵɵpureFunction8;\n    exports.ɵɵpureFunctionV = ɵɵpureFunctionV;\n    exports.ɵɵgetCurrentView = ɵɵgetCurrentView;\n    exports.ɵgetDirectives = getDirectives;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵɵrestoreView = ɵɵrestoreView;\n    exports.ɵɵcontainerRefreshStart = ɵɵcontainerRefreshStart;\n    exports.ɵɵcontainerRefreshEnd = ɵɵcontainerRefreshEnd;\n    exports.ɵɵqueryRefresh = ɵɵqueryRefresh;\n    exports.ɵɵviewQuery = ɵɵviewQuery;\n    exports.ɵɵstaticViewQuery = ɵɵstaticViewQuery;\n    exports.ɵɵstaticContentQuery = ɵɵstaticContentQuery;\n    exports.ɵɵloadViewQuery = ɵɵloadViewQuery;\n    exports.ɵɵcontentQuery = ɵɵcontentQuery;\n    exports.ɵɵloadContentQuery = ɵɵloadContentQuery;\n    exports.ɵɵelementEnd = ɵɵelementEnd;\n    exports.ɵɵhostProperty = ɵɵhostProperty;\n    exports.ɵɵproperty = ɵɵproperty;\n    exports.ɵɵpropertyInterpolate = ɵɵpropertyInterpolate;\n    exports.ɵɵpropertyInterpolate1 = ɵɵpropertyInterpolate1;\n    exports.ɵɵpropertyInterpolate2 = ɵɵpropertyInterpolate2;\n    exports.ɵɵpropertyInterpolate3 = ɵɵpropertyInterpolate3;\n    exports.ɵɵpropertyInterpolate4 = ɵɵpropertyInterpolate4;\n    exports.ɵɵpropertyInterpolate5 = ɵɵpropertyInterpolate5;\n    exports.ɵɵpropertyInterpolate6 = ɵɵpropertyInterpolate6;\n    exports.ɵɵpropertyInterpolate7 = ɵɵpropertyInterpolate7;\n    exports.ɵɵpropertyInterpolate8 = ɵɵpropertyInterpolate8;\n    exports.ɵɵpropertyInterpolateV = ɵɵpropertyInterpolateV;\n    exports.ɵɵupdateSyntheticHostBinding = ɵɵupdateSyntheticHostBinding;\n    exports.ɵɵcomponentHostSyntheticListener = ɵɵcomponentHostSyntheticListener;\n    exports.ɵɵprojectionDef = ɵɵprojectionDef;\n    exports.ɵɵreference = ɵɵreference;\n    exports.ɵɵenableBindings = ɵɵenableBindings;\n    exports.ɵɵdisableBindings = ɵɵdisableBindings;\n    exports.ɵɵallocHostVars = ɵɵallocHostVars;\n    exports.ɵɵelementContainerStart = ɵɵelementContainerStart;\n    exports.ɵɵelementContainerEnd = ɵɵelementContainerEnd;\n    exports.ɵɵelementContainer = ɵɵelementContainer;\n    exports.ɵɵstyling = ɵɵstyling;\n    exports.ɵɵstyleMap = ɵɵstyleMap;\n    exports.ɵɵstyleSanitizer = ɵɵstyleSanitizer;\n    exports.ɵɵclassMap = ɵɵclassMap;\n    exports.ɵɵclassMapInterpolate1 = ɵɵclassMapInterpolate1;\n    exports.ɵɵclassMapInterpolate2 = ɵɵclassMapInterpolate2;\n    exports.ɵɵclassMapInterpolate3 = ɵɵclassMapInterpolate3;\n    exports.ɵɵclassMapInterpolate4 = ɵɵclassMapInterpolate4;\n    exports.ɵɵclassMapInterpolate5 = ɵɵclassMapInterpolate5;\n    exports.ɵɵclassMapInterpolate6 = ɵɵclassMapInterpolate6;\n    exports.ɵɵclassMapInterpolate7 = ɵɵclassMapInterpolate7;\n    exports.ɵɵclassMapInterpolate8 = ɵɵclassMapInterpolate8;\n    exports.ɵɵclassMapInterpolateV = ɵɵclassMapInterpolateV;\n    exports.ɵɵstyleProp = ɵɵstyleProp;\n    exports.ɵɵstylePropInterpolate1 = ɵɵstylePropInterpolate1;\n    exports.ɵɵstylePropInterpolate2 = ɵɵstylePropInterpolate2;\n    exports.ɵɵstylePropInterpolate3 = ɵɵstylePropInterpolate3;\n    exports.ɵɵstylePropInterpolate4 = ɵɵstylePropInterpolate4;\n    exports.ɵɵstylePropInterpolate5 = ɵɵstylePropInterpolate5;\n    exports.ɵɵstylePropInterpolate6 = ɵɵstylePropInterpolate6;\n    exports.ɵɵstylePropInterpolate7 = ɵɵstylePropInterpolate7;\n    exports.ɵɵstylePropInterpolate8 = ɵɵstylePropInterpolate8;\n    exports.ɵɵstylePropInterpolateV = ɵɵstylePropInterpolateV;\n    exports.ɵɵstylingApply = ɵɵstylingApply;\n    exports.ɵɵclassProp = ɵɵclassProp;\n    exports.ɵɵelementHostAttrs = ɵɵelementHostAttrs;\n    exports.ɵɵselect = ɵɵselect;\n    exports.ɵɵtextBinding = ɵɵtextBinding;\n    exports.ɵɵtemplate = ɵɵtemplate;\n    exports.ɵɵembeddedViewEnd = ɵɵembeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵɵload = ɵɵload;\n    exports.ɵɵpipe = ɵɵpipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵɵi18n = ɵɵi18n;\n    exports.ɵɵi18nAttributes = ɵɵi18nAttributes;\n    exports.ɵɵi18nExp = ɵɵi18nExp;\n    exports.ɵɵi18nStart = ɵɵi18nStart;\n    exports.ɵɵi18nEnd = ɵɵi18nEnd;\n    exports.ɵɵi18nApply = ɵɵi18nApply;\n    exports.ɵɵi18nPostprocess = ɵɵi18nPostprocess;\n    exports.ɵi18nConfigureLocalize = i18nConfigureLocalize;\n    exports.ɵɵi18nLocalize = ɵɵi18nLocalize;\n    exports.ɵsetLocaleId = setLocaleId;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵɵresolveWindow = ɵɵresolveWindow;\n    exports.ɵɵresolveDocument = ɵɵresolveDocument;\n    exports.ɵɵresolveBody = ɵɵresolveBody;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵflushModuleScopingQueueAsMuchAsPossible = flushModuleScopingQueueAsMuchAsPossible;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵɵsanitizeHtml = ɵɵsanitizeHtml;\n    exports.ɵɵsanitizeStyle = ɵɵsanitizeStyle;\n    exports.ɵɵdefaultStyleSanitizer = ɵɵdefaultStyleSanitizer;\n    exports.ɵɵsanitizeScript = ɵɵsanitizeScript;\n    exports.ɵɵsanitizeUrl = ɵɵsanitizeUrl;\n    exports.ɵɵsanitizeResourceUrl = ɵɵsanitizeResourceUrl;\n    exports.ɵɵsanitizeUrlOrResourceUrl = ɵɵsanitizeUrlOrResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_COMPONENT_DEF = NG_COMPONENT_DEF;\n    exports.ɵNG_DIRECTIVE_DEF = NG_DIRECTIVE_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_MODULE_DEF = NG_MODULE_DEF;\n    exports.ɵNG_BASE_DEF = NG_BASE_DEF;\n    exports.ɵNG_INJECTABLE_DEF = NG_INJECTABLE_DEF;\n    exports.ɵNG_INJECTOR_DEF = NG_INJECTOR_DEF;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵisBoundToModule__POST_R3__ = isBoundToModule__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵregisterNgModuleType = registerNgModuleType;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵcreateInjector = createInjector;\n    exports.ɵINJECTOR_IMPL__POST_R3__ = INJECTOR_IMPL__POST_R3__;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$2;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=core.umd.js.map\n"]}