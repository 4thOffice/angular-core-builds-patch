{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","getClosureSafeProperty","objWithPropertyToExtract","Error","fillProperties","source","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_INJECTABLE_DEF","ngInjectableDef","NG_INJECTOR_DEF","ngInjectorDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","__NG_ELEMENT_ID__","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","getInjectableDef","type","getInjectorDef","InjectionToken","_desc","ngMetadataName","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ɵChangeDetectorStatus","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","ViewEncapsulation","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","styleUrls","unwrapResponse","response","text","EMPTY_OBJ","EMPTY_ARRAY","_renderCompCount","defineComponent","componentDefinition","typePrototype","declaredInputs","def","providersResolver","consts","vars","template","hostBindings","contentQueries","contentQueriesRefresh","attributes","inputs","outputs","exportAs","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","id","styles","_","noSideEffects","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","forEach","extractDirectiveDef","extractPipeDef","getComponentDef","getDirectiveDef","getPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","obj","secondary","newLookup","minifiedKey","publicName","declaredName","isArray","defineBase","baseDefinition","defineDirective","definePipe","pipeDef","pure","getNgModuleDef","throwNotFound","NodeInjectorFactory","TVIEW","FLAGS","PARENT","NEXT","QUERIES","HOST","HOST_NODE","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR","RENDERER_FACTORY","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","CONTENT_QUERIES","DECLARATION_VIEW","HEADER_OFFSET","ACTIVE_INDEX","VIEWS","NATIVE","RENDER_PARENT","LCONTAINER_LENGTH","MONKEY_PATCH_KEY_NAME","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","FactoryPrototype","isViewProvider","isProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","stringify$1","loadInternal","view","readElementValue","getNativeByIndex","lView","getNativeByTNode","tNode","hostView","getTNode","getComponentViewByIndex","nodeIndex","slotValue","isContentQueryHost","flags","isComponent","isComponentDef","isLContainer","isRootView","getRootView","readPatchedLView","getRootContext","viewOrComponent","readPatchedData","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","R3ResolvedDependencyType","defaultScheduler","requestAnimationFrame","setTimeout","addAllToArray","items","arr","findComponentView","rootTNode","getCompilerFacade","globalNg","ɵcompilerFacade","InjectFlags","Inject","Optional","Self","SkipSelf","Host","_injectImplementation","elementDepthCount","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","injectInjectorOnly","Default","injectRootLimpMode","get","inject","notFoundValue","injectableDef","injectArgs","types","arg","j","queueInitHooks","tView","initHooks","checkHooks","queueLifecycleHooks","firstTemplatePass","directiveStart","end","directiveEnd","queueContentHooks","queueViewHooks","queueDestroyHooks","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeInitHooks","currentView","checkNoChangesMode","executeHooks","allHooks","hooksToCall","callHooks","bindingsEnabled","previousOrParentTNode","isParent","currentDirectiveDef","setCurrentDirectiveDef","enableBindings","disableBindings","getLView","restoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","setTNodeAndViewData","getIsParent","setIsParent","isCreationMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","getFirstTemplatePass","setFirstTemplatePass","bindingRootIndex","getBindingRoot","setBindingRoot","enterView","newView","hostTNode","oldView","bindingStartIndex","nextContextImpl","level","walkUpViews","nestingLevel","leaveView","includeViewProviders","setIncludeViewProviders","v","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","parent","diPublicInInjector","bloomAdd","charCodeAt","bloomBit","mask","b6","b5","tData","injectAttributeImpl","attrNameToInject","attrs","attrName","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","instance","searchTokensOnInjector","NOT_FOUND","moduleInjector","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","cptViewProvidersCount","endIndex","providerTokenOrDef","dirDef","lData","isFactory","getPrototypeOf","previousIncludeViewProviders","previousInjectImplementation","injectorView","isFirstHostTNode","NodeInjector","_tNode","_lView","getFactoryOf","typeAny","getInheritedFactory","getLContext","mpValue","isComponentInstance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","firstChild","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","native","context","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","slice","getComponent","element","loadLContextFromNode","getComponentAtNodeIndex","getContext","getViewComponent","loadLContext","getRootContext$1","getRootView$1","componentOrView","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","directive","node","Node","isBrowserEvents","listener","useCapture","getListeners","lCleanup","tCleanup","cleanup","listeners","firstParam","secondParam","name_1","listenerElement","callback","useCaptureOrIndx","sort","sortListeners","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","throwMultipleComponentError","tagName","NO_CHANGE","updateBinding","bindingIndex","getBinding","bindingUpdated","isDifferent","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","RendererStyleFlags3","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","getLContainer","embeddedView","containerHostIndex","getContainerRenderParent","tViewNode","container","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","lContainer","componentView","head","projection","nativeInsertBefore","nativeRemoveChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","containerIndex","views","splice","detachView","removeIndex","detached","viewToDetach","removeView","containerHost","destroyLView","getLViewChild","childIndex","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","executeOnDestroys","removeListeners","useCaptureOrSubIdx","removeEventListener","unsubscribe","cleanupFn","destroy","getRenderParent","canInsertNativeNode","nativeParentNode","getHighestElementOrICUContainer","getParentNative","getHostNative","currentNode","canInsertNativeChildOfView","viewTNode","canInsertNativeChildOfElement","insertBefore","removeChild","appendChild","childEl","childTNode","parentTNode","getBeforeNodeForView","containerNative","parentNative","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","NG_TEMPLATE_SELECTOR","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","nodeAttrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","BoundPlayerFactory","CorePlayerHandler","_players","flushPlayers","player","play","queuePlayer","ANIMATION_PROP_PREFIX","createEmptyStylingContext","sanitizer","initialStyles","initialClasses","getStylingContext","viewData","storageIndex","wrapper","isStylingContext","stylingTemplate","allocStylingContext","templateStyleContext","isAnimationProp","addPlayerInternal","playerContext","rootContext","playerContextIndex","ref","addEventListener","playerHandler","getPlayerContext","stylingContext","allocPlayerContext","hasClassInput","initializeStaticContext","attr","patchInitialStylingValue","initialStyling","prop","existingValue","renderInitialStylingValues","initialStylingValues","isEntryClassBased","setClass","setStyle","getMatchingBindingIndex","bindingName","start","getProp","_updateSingleStylingValue","offset","input","isClassBased","directiveRef","directiveIndex","getDirectiveIndexFromRegistry","singleIndex","getSinglePropIndexValue","singlePropOffsetRegistryIndex","offsets","currValue","getValue","currFlag","getPointers","currDirective","getDirectiveIndexFromEntry","hasValueChanged","allowValueChange","newValue","currentDirectiveOwner","newDirectiveOwner","isClassBased_1","playerBuilder","ClassAndStylePlayerBuilder","value_1","currPlayerIndex","getPlayerBuilderIndex","playerBuildersAreDirty","playerBuilderIndex","hasPlayerBuilderChanged","newIndex","setPlayerBuilder","setPlayerBuilderIndex","getStyleSanitizer","setSanitizeFlag","sanitizeYes","setValue","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","valueExists","setDirty","setDirectiveDirty","setContextDirty","setContextPlayersDirty","store","DashCase","setProperty","removeStyle","removeProperty","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBasedValue","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","setProp","builder","insertionIndex","directiveOwnerPointers","playerIndex","getPlayerBuilder","setFlag","limitToSingleClasses","findEntryPositionByProp","startIndex","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","tmpPlayerBuilderIndex","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","prepareInitialFlag","entryIsClassBased","initialIndex","getInitialStylingValuesIndexOf","_element","_type","_values","_dirty","_factory","buildPlayer","currentPlayer","isFirstRender","getDirectiveRegistryValuesIndexOf","keyValues","dirs","dirtyYes","getInitialClassNameValue","initialClassValues","_CLEAN_PROMISE","refreshDescendantViews","refreshDynamicEmbeddedViews","container_1","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","directiveDefIdx","setHostBindings","expandoInstructions","expandoStartIndex","currentDirectiveIndex","currentElementIndex","instruction","providerCount","refreshChildComponents","viewAttached","syncViewWithBlueprint","componentTView","checkView","createLView","rendererFactory","createNodeAtIndex","createTNode","createViewNode","allocExpando","viewToRender","_isParent","_previousOrParentTNode","tickRootContext","namespaceHTML","getRenderFlags","nextContext","renderComponentOrTemplate","templateFn","normalExecutionPath","begin","_currentNamespace","namespaceSVG","namespaceMathML","elementStart","elementEnd","elementContainerStart","createComment","createDirectivesAndLocals","elementContainerEnd","currentQueries","addNode","elementCreate","hasStyling","setUpAttributes","getElementDepthCount","increaseElementDepthCount","inputData","initializeTNodeInputs","renderInitialStylesAndClasses","overriddenRenderer","rendererToUse","createElement","createElementNS","localRefExtractor","getBindingsEnabled","resolveDirectives","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","findDirectiveMatches","registry","directiveRegistry","matches","instantiateAllDirectives","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","previousExpandoLength","saveResolvedLocalsInData","localIndex","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","pipeRegistry","isProc","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","querySelector","eventName","listenerFn","lCleanupIndex","getCleanup","listen","wrappedListener","wrapListenerWithPreventDefault","wrapListenerIn_preventDefault","preventDefault","returnValue","generatePropertyAliases","propsLength","subscription","subscribe","idx","decreaseElementDepthCount","setInputsForProperty","elementAttribute","element_1","removeAttribute","strValue","elementProperty","nativeOnly","elementPropertyInternal","componentHostSyntheticProperty","loadComponentRenderer","loadRendererFn","dataValue","markDirtyIfOnPush","childComponentLView","tViews","tParent","initialInputs","direction","propStore","isInput","defs","directiveDef","propertyAliasMap","internalName","elementStyling","classBindingNames","styleBindingNames","styleSanitizer","updateContextWithBindings","onlyProcessSingleClasses","findOrPatchDirectiveIntoRegistry","directiveRefs","nextOffsetInsertionIndex","detectedIndex","singlePropOffsetValues","totalCurrentClassBindings","totalCurrentStyleBindings","stylesOffset","singleClassesStartIndex","multiStylesStartIndex","multiClassesStartIndex","currentSinglePropsLength","insertionOffset","filteredStyleBindingNames","i_1","singlePropIndex","filteredClassBindingNames","i_2","name_2","totalStyles","totalClasses","totalNewEntries","i_3","isMultiBased","singleOrMultiIndex","i_4","i_5","i_6","multiIndex","initialValuesToLookup","indexForInitial","initialFlag","elementHostAttrs","patchContextWithStaticAttrs","elementStylingApply","renderStyling","rootOrView","classesStore","stylesStore","totalPlayersQueued","targetDirectiveIndex","isContextDirty","isDirectiveDirty","flushPlayerBuilders","multiStartIndex","onlySingleClasses","stillDirty","readInitialValue","valueToApply","playersStartIndex","playerInsertionIndex","oldPlayer","scheduleTick","elementStyleProp","styleIndex","suffix","valueToAdd","updateStyleProp","elementClassProp","classIndex","onOrOffClassValue","updateClassProp","addOrRemove","elementStylingMap","classes","hackImplementationOfElementStylingMap","updateStylingMap","classesInput","stylesInput","classesPlayerBuilder","stylesPlayerBuilder","classesValue","stylesValue","ignoreAllClassUpdates","ignoreAllStyleUpdates","classNames","applyAllClasses","classesPlayerBuilderIndex","stylesPlayerBuilderIndex","split","styleProps","classesStartIndex","dirty","ctxIndex","propIndex","propLimit","adjustedPropIndex","newProp","initialValue","indexOfEntry","valueToCompare","flagToCompare","newFlag","ctxIndex_1","textNative","textBinding","element_2","textContent","directiveCount","elementIndex","postProcessBaseDirective","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","attrValue","queueComponentIndexForCheck","numberOfDirectives","directiveFactory","nodeInjectorFactory","addToViewTree","createLContainer","hostNative","isForViewContainerRef","containerInternal","comment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerTNode","scanForView","tContainerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","viewHost","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","nextNode","projectionNodeStack$1","selectorIndex","nodeToProject","projectedView","currentComponentView","firstProjectedNode","adjustedHostIndex","markViewDirty","res_1","nothingScheduled","clean","scheduler","rootComponent","detectChanges","detectChangesInternal","detectChangesInRootView","hostTView","createViewQuery","updateViewQuery","markDirty","allocHostVars","count","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","interpolationV","content","interpolation1","prefix","v0","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","getContextLView","loadQueryList","queryListIdx","load","directiveInject","injectAttribute","registerContentQuery","queryList","savedContentQueriesLength","tViewContentQueries","CLEAN_PROMISE","getCurrentView","getTViewCleanup","getPlayers","getPlayersInternal","players","nonFactoryPlayersStart","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","rNode","resetComponentState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","isComponentDef$1","definition","InheritDefinitionFeature","superType","getSuperType","_loop_1","e_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","rf","ctx","prevViewQuery_1","superViewQuery_1","prevContentQueries_1","superContentQueries_1","prevContentQueriesRefresh_1","superContentQueriesRefresh_1","queryIndex","features_1","features_1_1","ngInherit","e_1_1","return","superPrototype","PRIVATE_PREFIX","NgOnChangesFeature","publicToDeclaredInputs","publicToMinifiedInputs","proto","declaredKey_1","privateMinKey_1","originalProperty","checkProto","setter_1","set","simpleChanges","writable","currentChange","configurable","onChangesWrapper","delegateHook","ngOnChanges","noop","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR$1","NullInjector","Injector","StaticInjector","NULL","SWITCH_INJECTOR_FACTORY","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","USE_VALUE","provide","String","useValue","NULL_INJECTOR$1","NEW_LINE","NO_NEW_LINE","records","_records","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","charAt","substr","parts","JSON","replace","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$1","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","_this","injectorDefTypes","destroyed","dedupStack","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","has","assertNotDestroyed","service","clear","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","defOrWrappedDef","parents","ngModule","isDuplicate","imported","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","existing","multiRecord_1","hasOnDestroy","Function","paramLength","isExistingProvider","isFactoryProvider","classRef_1","ngModuleDetail","hasDeps","resolveProvider$1","lInjectablesBlueprint","isComponent$$1","providerFactory","beginIndex","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","factoryFn","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","item","multiResolve","result","factories","componentCount","multiProviders","ProvidersFeature","viewProviders","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","R3ElementRef","R3TemplateRef","R3ViewContainerRef","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_parent","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","ngContentSelectors","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","tNodeChild","enumerable","_lookUpContext","detach","storeCleanupFn","markForCheck","reattach","checkNoChanges","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","_view","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_renderer","_queries","_injectorIndex","createEmbeddedView","container$$1","createEmbeddedViewAndNode","declarationView","queries","viewRef","hostContainer","createViewRef","componentIndex","hostComponentView","RendererStyleFlags2","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","SecurityContext","Renderer2","SWITCH_RENDERER2_FACTORY","Version","Sanitizer","VERSION","full","major","minor","patch","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ComponentFactory$$1","isInternalRootView","rootViewInjector","createChainedInjector","hostRNode","rootFlags","tElementNode","rootLView","oldLView","projection$$1","nodeList","firstTNode","previousTNode","componentRef","ComponentRef$1","ComponentRef$$1","_rootLView","destroyCbs","changeDetectorRef","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","childNode","nodeType","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","console","warn","sanitizeSrcset","srcset","trim","tagSet","tags","_b","_c","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","elementValid","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","elAttr","lower","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","ELEMENT_MARKER","marker","COMMENT_MARKER","MARKER","ICU_BLOCK_REGEX","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","PP_PLACEHOLDERS","PP_ICU_VARS","PP_ICUS","extractParts","pattern","prevPos","braceStack","results","braces","lastIndex","exec","pos","pop","block","test","parseICUBlock","substring_1","cases","icuType","mainBinding","str","binding","parseInt","blocks","assertGreaterThan","actual","expected","msg","throwError","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","sanitizeFn","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","Math","min","parentIndexStack","i18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","getTranslationForTemplate","search","RegExp","phIndex","icuNodeIndex","icuStart","tIcuIndex","hasBinding","update","icus","appendI18nNode","i18nPostprocess","replacements","_match","shift","some","_idx","list","i18nEnd","i18nEndFirstPass","rootIndex","tI18n","visitedPlaceholders","readCreateOpCodes","removeNode","currentTNode","opCode","destinationNodeIndex","destinationTNode","commentValue","commentRNode","activeCaseIndex","tagNameValue","removedPhTNode","i18n","i18nAttributes","i18nAttributesFirstPass","previousElementIndex","Plural","changeMask","shiftsCounter","i18nExp","expression","i18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","checkBit","skipCodes","tIcu","icuTNode","removeCodes","k","removeOpCode","activeIndex","caseIndex","getCaseIndex","bindingValue","resolvedCase","getPluralCategory","locale","getPluralCase","nLike","nDecimal","floor","abs","One","Other","Zero","Two","Few","Many","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","worstCaseSize","max","opCodes","parseNodes","nestedIcusToCreate","element$$1","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","_bootstrapComponents","_r3Injector","injectFlags","NgModuleFactory$1","NgModuleFactory$$1","moduleType","parentInjector","pureFunction0","slotOffset","pureFn","thisArg","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef$1","pipeInstance","pipeBind1","unwrapValue","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","err","completeFn","sink","Subscription","Subject","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","LQueries_","shallow","deep","track","predicate","descend","read","createQuery","clone","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","isRootNodeOfQuery","removeView$1","query","containerValues","viewValuesIdx","getIdxOfMatchingSelector","queryByReadToken","matchingIdx","queryByTemplateRef","templateRefToken","templateRefResult","queryRead","queryByTNodeType","addMatch","matchingValue","createPredicate","_valuesTree","QueryList","QueryList_","changes","filter","find","reduce","init","toArray","reset","flatten","notifyOnChanges","memoryIndex","getOrCreateCurrentQueries","QueryType","storeCleanupWithContext","queryRefresh","templateRefExtractor","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","SAFE_STYLE_VALUE","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","sanitizeHtml","getSanitizer","sanitize","HTML","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","angularCoreEnv","ɵdefineBase","ɵdefineComponent","ɵdefineDirective","ɵdefineNgModule","ɵdefinePipe","ɵdirectiveInject","ɵgetFactoryOf","ɵgetInheritedFactory","ɵinjectAttribute","ɵtemplateRefExtractor","ɵNgOnChangesFeature","ɵProvidersFeature","ɵInheritDefinitionFeature","ɵelementAttribute","ɵbind","ɵcontainer","ɵnextContext","ɵcontainerRefreshStart","ɵcontainerRefreshEnd","ɵloadQueryList","ɵnamespaceHTML","ɵnamespaceMathML","ɵnamespaceSVG","ɵenableBindings","ɵdisableBindings","ɵallocHostVars","ɵelementStart","ɵelementEnd","ɵelement","ɵelementContainerStart","ɵelementContainerEnd","ɵpureFunction0","ɵpureFunction1","ɵpureFunction2","ɵpureFunction3","ɵpureFunction4","ɵpureFunction5","ɵpureFunction6","ɵpureFunction7","ɵpureFunction8","ɵpureFunctionV","ɵgetCurrentView","ɵrestoreView","ɵinterpolation1","ɵinterpolation2","ɵinterpolation3","ɵinterpolation4","ɵinterpolation5","ɵinterpolation6","ɵinterpolation7","ɵinterpolation8","ɵinterpolationV","ɵelementClassProp","ɵlistener","ɵload","ɵprojection","ɵelementProperty","ɵcomponentHostSyntheticProperty","ɵpipeBind1","ɵpipeBind2","ɵpipeBind3","ɵpipeBind4","ɵpipeBindV","ɵprojectionDef","ɵpipe","ɵquery","ɵqueryRefresh","ɵregisterContentQuery","ɵreference","ɵelementStyling","ɵelementHostAttrs","ɵelementStylingMap","ɵelementStyleProp","ɵelementStylingApply","ɵtemplate","ɵtext","ɵtextBinding","ɵembeddedViewStart","ɵembeddedViewEnd","ɵi18n","ɵi18nAttributes","ɵi18nExp","ɵi18nStart","ɵi18nEnd","ɵi18nApply","ɵi18nPostprocess","ɵsanitizeHtml","ɵsanitizeStyle","ɵdefaultStyleSanitizer","ɵsanitizeResourceUrl","ɵsanitizeScript","sanitizeScript","unsafeScript","SCRIPT","ɵsanitizeUrl","NgModuleFactoryLoader","modules","assertNotExisting","getModuleFactory__PRE_R3__","noModuleError","getModuleFactory","Type","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","typeStr","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","compiler","dep","reflectDependency","host","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","EMPTY_ARRAY$2","moduleQueue","flushingModuleQueue","isResolvedDeclaration","declaration","every","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","flatten$1","expandModuleWithProviders","emitInline","registerNgModuleType","compileInjector","setScopeOnDeclaredComponents","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","from","compilation","dir","isNgModule","scopes","exported","declared","importedTyped","importedScope","entry","exportedTyped","exportedScope","mapFn","out","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","directiveMetadata","preserveWhitespaces","viewQueries","extractQueriesMetadata","interpolation","flushModuleScopingQueueAsMuchAsPossible","hasSelectorScope","compileDirective","facade","typeArgumentCount","isContentQuery","lifecycle","usesOnChanges","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","isQueryAnn","queriesMeta","field","ann","convertToR3QueryMetadata","propertyName","convertToR3QueryPredicate","splitByComma","piece","compilePipe","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","USE_VALUE$1","EMPTY_ARRAY$3","convertInjectableProviderToFactory","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","preR3NgModuleCompile","USE_VALUE$2","isUseClassProvider","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","Injectable","SWITCH_COMPILE_INJECTABLE","render2CompileInjectable","injectableType","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","isPromise","isObservable","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","detectWTF","wtf","createScope","leave","scope","leaveScope","startTimeRange","rangeType","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","wtfStartTimeRange","wtfEndTimeRange","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","delete","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_R3__","createCompiler","compileNgModuleFactory","ApplicationRef","ngDoBootstrap","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","ApplicationRef_1","componentOrFactory","componentFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","QueryList$1","_results","flatten$2","flat","flatItem","last","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode__PRE_R3__","nativeNode","_debugContext","DebugElement__PRE_R3__","addChild","references","providerTokens","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","eAttrs","lContext","lNode","eClasses","classList","styleName","eStyles","style","getPropertyValue","children","getDebugNode__POST_R3__","_queryNodeChildrenR3","elementsOnly","_nativeNodeToDebugNode","getDebugNode","getDebugNode__PRE_R3__","indexDebugNode","DebugNode","DebugElement","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","MissingTranslationStrategy","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","APPLICATION_MODULE_PROVIDERS","ApplicationModule","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","_addDebugContext","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","elDef","selectorOrNode","ns","parentEl","ShadowDom","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","ViewContainerRef_","_data","templateRef","insert","createComponent","ngModuleRef","contextInjector","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","move","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyValue","attributeValue","setBindingDebugInfo","isAdd","styleValue","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","ɵangular_packages_core_core_s","ɵangular_packages_core_core_p","ɵangular_packages_core_core_q","ɵangular_packages_core_core_r","ɵangular_packages_core_core_g","ɵangular_packages_core_core_n","ɵangular_packages_core_core_o","ɵangular_packages_core_core_m","ɵangular_packages_core_core_l","ɵangular_packages_core_core_c","ɵangular_packages_core_core_d","ɵangular_packages_core_core_e","ɵangular_packages_core_core_f","ɵangular_packages_core_core_k","ɵangular_packages_core_core_t","ɵangular_packages_core_core_v","ɵangular_packages_core_core_u","ɵangular_packages_core_core_y","ɵangular_packages_core_core_w","ɵangular_packages_core_core_x","ɵangular_packages_core_core_bb","ɵangular_packages_core_core_bc","ɵangular_packages_core_core_bd","ɵangular_packages_core_core_be","ɵangular_packages_core_core_bh","ɵangular_packages_core_core_bk","ɵangular_packages_core_core_h","ɵangular_packages_core_core_i","ɵangular_packages_core_core_j","ɵangular_packages_core_core_a","ɵangular_packages_core_core_b","ɵangular_packages_core_core_bi","ɵangular_packages_core_core_z","ɵangular_packages_core_core_ba","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵNoopNgZone","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵgetInjectableDef","ɵinject","ɵsetCurrentInjector","ɵAPP_ROOT","ɵivyEnabled","ɵComponentFactory","ɵCodegenComponentFactoryResolver","ɵresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵdetectChanges","ɵrenderComponent","renderComponent","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","getRootContext$2","ɵsetClassMetadata","setClassMetadata","clazz","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵresetCompiledComponents","resetCompiledComponents","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵNG_ELEMENT_ID","ɵNG_COMPONENT_DEF","ɵNG_DIRECTIVE_DEF","ɵNG_INJECTABLE_DEF","ɵNG_INJECTOR_DEF","ɵNG_PIPE_DEF","ɵNG_MODULE_DEF","ɵNG_BASE_DEF","ɵbindPlayerFactory","bindPlayerFactory","ɵaddPlayer","addPlayer","getOrCreatePlayerContext","ɵgetPlayers","ɵcompileNgModuleFactory__POST_R3__","compileNgModuleFactory__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵgetDebugNode__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","srcMeta","hasAProvider","compilerMeta","ctorDeps","userDeps","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","injectChangeDetectorRef","ɵCompiler_compileModuleSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","_lContainer","_hostTNode","_hostView","_viewRefs","getParentInjectorTNode","startTNode","parentTNode_1","adjustedIdx","_adjustIndex","commentNode","nativeNextSibling","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","getOrCreateRenderer2","ɵgetModuleFactory__POST_R3__","getModuleFactory__POST_R3__","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵSWITCH_INJECTOR_FACTORY__POST_R3__","injectInjector","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","_e","resolveRendererType2","isFilled","None","ɵelementEventFullName","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue$1","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v7.2.0+10.sha-a75c734\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.rxjs.operators));\n}(this, (function (exports,rxjs,operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @publicApi\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        var fn = type;\n        if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef) {\n            return fn();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        componentResourceResolutionQueue.clear();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return component.templateUrl || component.styleUrls && component.styleUrls.length;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n        // NOTE: Under Ivy we may have both window & global defined in the Node\n        //    environment since ensureDocument() in render3.ts sets global.window.\n        if (typeof window != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            window['ngDevMode'] = newCounters;\n        }\n        if (typeof global != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            global['ngDevMode'] = newCounters;\n        }\n        if (typeof self != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            self['ngDevMode'] = newCounters;\n        }\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY_OBJ);\n        Object.freeze(EMPTY_ARRAY);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            attributes: componentDefinition.attributes || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MODULE_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have 'ngModuleDef' property.\");\n        }\n        return ngModuleDef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        assertEqual(node instanceof Node, true, 'The provided value must be an instance of a DOM Node');\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataInRange(arr, index) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var FLAGS = 1;\n    var PARENT = 2;\n    var NEXT = 3;\n    var QUERIES = 4;\n    var HOST = 5;\n    var HOST_NODE = 6; // Rename to `T_HOST`?\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var TAIL = 14;\n    var CONTAINER_INDEX = 15;\n    var CONTENT_QUERIES = 16;\n    var DECLARATION_VIEW = 17;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 18;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    var VIEWS = 1;\n    // PARENT, NEXT, QUERIES, and HOST are indices 2, 3, 4, and 5.\n    // As we already have these constants in LView, we don't need to re-create them.\n    var NATIVE = 6;\n    var RENDER_PARENT = 7;\n    // Because interfaces in TS/JS cannot be instanceof-checked this means that we\n    // need to rely on predictable characteristics of data-structures to check if they\n    // are what we expect for them to be. The `LContainer` interface code below has a\n    // fixed length and the constant value below references that. Using the length value\n    // below we can predictably gaurantee that we are dealing with an `LContainer` array.\n    // This value MUST be kept up to date with the length of the `LContainer` array\n    // interface below so that runtime type checking can work.\n    var LCONTAINER_LENGTH = 8;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, \n        /**\n         * Set to `true` if the token is a provider, and not a directive.\n         */\n        isProvider, injectImplementation) {\n            this.factory = factory;\n            this.isProvider = isProvider;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    var FactoryPrototype = NodeInjectorFactory.prototype;\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj != null && typeof obj == 'object' && Object.getPrototypeOf(obj) == FactoryPrototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        if (typeof value == 'object' && typeof value.type == 'function')\n            return value.type.name || value.type;\n        return '' + value;\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function loadInternal(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    /**\n     * Takes the value of a slot in `LView` and returns the element node.\n     *\n     * Normally, element nodes are stored flat, but if the node has styles/classes on it,\n     * it might be wrapped in a styling context. Or if that node has a directive that injects\n     * ViewContainerRef, it may be wrapped in an LContainer. Or if that node is a component,\n     * it will be wrapped in LView. It could even have all three, so we keep looping\n     * until we find something that isn't an array.\n     *\n     * @param value The initial value in `LView`\n     */\n    function readElementValue(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return readElementValue(lView[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return readElementValue(hostView[tNode.index]);\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        var slotValue = hostView[nodeIndex];\n        return slotValue.length >= HEADER_OFFSET ? slotValue : slotValue[HOST];\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 4 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 1 /* isComponent */) === 1 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isLContainer(value) {\n        // Styling contexts are also arrays, but their first index contains an element node\n        return Array.isArray(value) && value.length === LCONTAINER_LENGTH;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 128 /* IsRoot */) !== 0;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootView(target) {\n        ngDevMode && assertDefined(target, 'component');\n        var lView = Array.isArray(target) ? target : readPatchedLView(target);\n        while (lView && !(lView[FLAGS] & 128 /* IsRoot */)) {\n            lView = lView[PARENT];\n        }\n        return lView;\n    }\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[HOST_NODE];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[HOST_NODE];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n    var defaultScheduler = (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n        setTimeout // everything else\n    ).bind(_global);\n    /**\n     * Equivalent to ES6 spread, add each item to an array.\n     *\n     * @param items The items to add\n     * @param arr The array to which you want to add the items\n     */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[HOST_NODE];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n            lView = lView[DECLARATION_VIEW];\n            rootTNode = lView[HOST_NODE];\n        }\n        return lView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global.ng;\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't descend into ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LView\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(tView, tNode) {\n        if (tView.firstTemplatePass) {\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n                var def = tView.data[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, checkNoChangesMode) {\n        if (!checkNoChangesMode && currentView[FLAGS] & 32 /* RunInit */) {\n            executeHooks(currentView, tView.initHooks, tView.checkHooks, checkNoChangesMode);\n            currentView[FLAGS] &= ~32 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(currentView, allHooks, checkHooks, checkNoChangesMode) {\n        if (checkNoChangesMode)\n            return;\n        var hooksToCall = currentView[FLAGS] & 2 /* FirstLViewPass */ ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(currentView, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(currentView, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(currentView[arr[i]]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    var currentDirectiveDef = null;\n    function getCurrentDirectiveDef() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        currentDirectiveDef = def;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function enableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function disableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode) {\n        previousOrParentTNode = tNode;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsParent(value) {\n        isParent = value;\n    }\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (i.e. this previousOrParentTNode points to a node on which we\n     * create content queries).\n     */\n    function getOrCreateCurrentQueries(QueryType) {\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        // if this is the first content query on a node, any existing LQueries needs to be cloned\n        // in subsequent template passes, the cloning occurs before directive instantiation.\n        if (previousOrParentTNode && previousOrParentTNode !== lView[HOST_NODE] &&\n            !isContentQueryHost(previousOrParentTNode)) {\n            currentQueries && (currentQueries = lView[QUERIES] = currentQueries.clone());\n            previousOrParentTNode.flags |= 4 /* hasContentQuery */;\n        }\n        return currentQueries || (lView[QUERIES] = new QueryType(null, null, null));\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        if (view === void 0) { view = lView; }\n        return (view[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    function getFirstTemplatePass() {\n        return firstTemplatePass;\n    }\n    function setFirstTemplatePass(value) {\n        firstTemplatePass = value;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        var oldView = lView;\n        if (newView) {\n            var tView = newView[TVIEW];\n            firstTemplatePass = tView.firstTemplatePass;\n            bindingRootIndex = tView.bindingStartIndex;\n        }\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     */\n    function leaveView(newView) {\n        var tView = lView[TVIEW];\n        if (isCreationMode(lView)) {\n            lView[FLAGS] &= ~1 /* CreationMode */;\n        }\n        else {\n            executeHooks(lView, tView.viewHooks, tView.viewCheckHooks, checkNoChangesMode);\n            // Views are clean and in update mode after being checked, so these bits are cleared\n            lView[FLAGS] &= ~(8 /* Dirty */ | 2 /* FirstLViewPass */);\n            lView[FLAGS] |= 32 /* RunInit */;\n            lView[BINDING_INDEX] = tView.bindingStartIndex;\n        }\n        enterView(newView, null);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 1 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentLView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[HOST_NODE];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[HOST_NODE] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, token) {\n        bloomAdd(injectorIndex, view[TVIEW], token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 3 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                var savePreviousOrParentTNode = getPreviousOrParentTNode();\n                var saveLView = getLView();\n                setTNodeAndViewData(tNode, lView);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + stringify$1(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? findComponentView(lView)[HOST_NODE] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR];\n            if (moduleInjector) {\n                return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n            }\n            else {\n                return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringify$1(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponent(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param lView The view we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase) {\n        var tView = lView[TVIEW];\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringify$1(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(null, tData, lData, tNode);\n                var tView = lData[TVIEW];\n                if (value && factory.isProvider && value.ngOnDestroy) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(index, value.ngOnDestroy);\n                }\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        return typeof tokenId === 'number' ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    function injectInjector() {\n        var tNode = getPreviousOrParentTNode();\n        return new NodeInjector(tNode, getLView());\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = readElementValue(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = readElementValue(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 1 /* isComponent */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 1 /* isComponent */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                var localRefName = tNode.localNames[i];\n                var directiveIndex = tNode.localNames[i + 1];\n                result[localRefName] =\n                    directiveIndex === -1 ? getNativeByTNode(tNode, lView) : lView[directiveIndex];\n            }\n            return result;\n        }\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        var context = loadLContextFromNode(element);\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext(element) {\n        var context = loadLContextFromNode(element);\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element);\n        var lView = context.lView;\n        while (lView[PARENT] && lView[HOST] === null) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = lView[PARENT];\n        }\n        return lView[FLAGS] & 128 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated.\n     *\n     */\n    function getRootContext$1(target) {\n        var lViewData = Array.isArray(target) ? target : loadLContext(target).lView;\n        var rootLView = getRootView$1(lViewData);\n        return rootLView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext$1(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target);\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (!context)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringify$1(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrView any component or view\n     *\n     */\n    function getRootView$1(componentOrView) {\n        var lView;\n        if (Array.isArray(componentOrView)) {\n            ngDevMode && assertDefined(componentOrView, 'lView');\n            lView = componentOrView;\n        }\n        else {\n            ngDevMode && assertDefined(componentOrView, 'component');\n            lView = readPatchedLView(componentOrView);\n        }\n        while (lView && !(lView[FLAGS] & 128 /* IsRoot */)) {\n            lView = lView[PARENT];\n        }\n        return lView;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = readElementValue(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, lView[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        if (lView[bindingIndex] === NO_CHANGE) {\n            // initial pass\n            lView[bindingIndex] = value;\n        }\n        else if (isDifferent(lView[bindingIndex], value)) {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                if (!devModeEqual(lView[bindingIndex], value)) {\n                    throwErrorIfNoChangesMode(isCreationMode(lView), lView[bindingIndex], value);\n                }\n            }\n            lView[bindingIndex] = value;\n        }\n        else {\n            return false;\n        }\n        return true;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Retrieves the native node (element or a comment) for the parent of a given node. */\n    function getParentNative(tNode, currentView) {\n        return tNode.parent == null ? getHostNative(currentView) :\n            getNativeByTNode(tNode.parent, currentView);\n    }\n    /**\n     * Gets the host element given a view. Will return null if the current view is an embedded view,\n     * which does not have a host element.\n     */\n    function getHostNative(currentView) {\n        var hostTNode = currentView[HOST_NODE];\n        return hostTNode && hostTNode.type !== 2 /* View */ ?\n            getNativeByTNode(hostTNode, currentView[PARENT]) :\n            null;\n    }\n    function getLContainer(tNode, embeddedView) {\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = embeddedView[CONTAINER_INDEX];\n            return containerHostIndex > -1 ? embeddedView[PARENT][containerHostIndex] : null;\n        }\n        else {\n            // This is a inline view node (e.g. embeddedViewStart)\n            return embeddedView[PARENT][tNode.parent.index];\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? container[RENDER_PARENT] : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], beforeNode);\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], beforeNode);\n                if (renderParent)\n                    lContainer[RENDER_PARENT] = renderParent;\n                if (lContainer[VIEWS].length) {\n                    currentView = lContainer[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[HOST_NODE];\n                var head = componentHost.projection[tNode.projection];\n                // Must store both the TNode and the view because this projection node could be nested\n                // deeply inside embedded views, and we need to get back down to this particular nested view.\n                projectionNodeStack[++projectionNodeIndex] = tNode;\n                projectionNodeStack[++projectionNodeIndex] = currentView;\n                if (head) {\n                    currentView = componentView[PARENT];\n                    nextTNode = currentView[TVIEW].data[head.index];\n                }\n            }\n            else {\n                // Otherwise, this is a View or an ElementContainer\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.next === null && (tNode.flags & 2 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                nextTNode = tNode.next;\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[TVIEW].node;\n                    if (tNode === null || tNode === rootTNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = currentView[PARENT];\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */ && currentView[NEXT]) {\n                        currentView = currentView[NEXT];\n                        nextTNode = currentView[TVIEW].node;\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            nativeInsertBefore(renderer, parent, node, beforeNode || null);\n        }\n        else if (action === 1 /* Detach */) {\n            nativeRemoveChild(renderer, parent, node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LView, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LView.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0];\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param parentView The new parent of the inserted view\n     * @param index The index at which to insert the view\n     * @param containerIndex The index of the container node, if dynamic\n     */\n    function insertView(lView, lContainer, parentView, index, containerIndex) {\n        var views = lContainer[VIEWS];\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container's host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (containerIndex > -1) {\n            lView[CONTAINER_INDEX] = containerIndex;\n            lView[PARENT] = parentView;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 16 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @param detached Whether or not this view is already detached.\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex, detached) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!detached) {\n            addRemoveViewFromContainer(viewToDetach, false);\n        }\n        if (viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[CONTAINER_INDEX] = -1;\n        viewToDetach[PARENT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~16 /* Attached */;\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param tContainer The TContainer node associated with the LContainer\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, containerHost, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        detachView(lContainer, removeIndex, !!containerHost.detached);\n        destroyLView(view);\n    }\n    /** Gets the child of the given LView */\n    function getLViewChild(lView) {\n        var childIndex = lView[TVIEW].childIndex;\n        return childIndex === -1 ? null : lView[childIndex];\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 64 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var tNode;\n        if (state.length >= HEADER_OFFSET && (tNode = state[HOST_NODE]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, state);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer.length >= HEADER_OFFSET) {\n            var view = viewOrContainer;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[HOST_NODE];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup != null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var idx = tCleanup[i + 1];\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var native = readElementValue(lView[idx]);\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // DOM listener\n                        native.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else if (typeof tCleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = lCleanup[tCleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view, destroyHooks);\n        }\n    }\n    function getRenderParent(tNode, currentView) {\n        if (canInsertNativeNode(tNode, currentView)) {\n            // If we are asked for a render parent of the root component we need to do low-level DOM\n            // operation as LTree doesn't exist above the topmost host node. We might need to find a render\n            // parent of the topmost host node if the root component injects ViewContainerRef.\n            if (isRootView(currentView)) {\n                return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n            }\n            // skip over element and ICU containers as those are represented by a comment node and\n            // can't be used as a render parent\n            tNode = getHighestElementOrICUContainer(tNode);\n            var hostTNode = currentView[HOST_NODE];\n            return tNode.parent == null && hostTNode.type === 2 /* View */ ?\n                getContainerRenderParent(hostTNode, currentView) :\n                getParentNative(tNode, currentView);\n        }\n        return null;\n    }\n    function canInsertNativeChildOfElement(tNode) {\n        // If the parent is null, then we are inserting across views. This happens when we\n        // insert a root element of the component view into the component host element and it\n        // should always be eager.\n        if (tNode.parent == null ||\n            // We should also eagerly insert if the parent is a regular, non-component element\n            // since we know that this relationship will never be broken.\n            tNode.parent.type === 3 /* Element */ && !(tNode.parent.flags & 1 /* isComponent */)) {\n            return true;\n        }\n        // Parent is a Component. Component's content nodes are not inserted immediately\n        // because they will be projected, and so doing insert at this point would be wasteful.\n        // Since the projection would than move it to its final destination.\n        return false;\n    }\n    /**\n     * We might delay insertion of children for a given view if it is disconnected.\n     * This might happen for 2 main reasons:\n     * - view is not inserted into any container (view was created but not inserted yet)\n     * - view is inserted into a container but the container itself is not inserted into the DOM\n     * (container might be part of projection or child of a view that is not inserted yet).\n     *\n     * In other words we can insert children of a given view if this view was inserted into a container\n     * and\n     * the container itself has its render parent determined.\n     */\n    function canInsertNativeChildOfView(viewTNode, view) {\n        // Because we are inserting into a `View` the `View` may be disconnected.\n        var container = getLContainer(viewTNode, view);\n        if (container == null || container[RENDER_PARENT] == null) {\n            // The `View` is not inserted into a `Container` or the parent `Container`\n            // itself is disconnected. So we have to delay.\n            return false;\n        }\n        // The parent `Container` is in inserted state, so we can eagerly insert into\n        // this location.\n        return true;\n    }\n    /**\n     * Returns whether a native element can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     *\n\n     *\n     * @param tNode The tNode of the node that we want to insert.\n     * @param currentView Current LView being processed.\n     * @return boolean Whether the node should be inserted now (or delayed until later).\n     */\n    function canInsertNativeNode(tNode, currentView) {\n        var currentNode = tNode;\n        var parent;\n        currentNode = getHighestElementOrICUContainer(currentNode);\n        parent = currentNode.parent;\n        if (parent === null)\n            parent = currentView[HOST_NODE];\n        if (parent && parent.type === 2 /* View */) {\n            return canInsertNativeChildOfView(parent, currentView);\n        }\n        else {\n            // Parent is a regular element or a component\n            return canInsertNativeChildOfElement(currentNode);\n        }\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    /**\n     * Removes a native child node from a given native parent node.\n     */\n    function nativeRemoveChild(renderer, parent, child) {\n        isProceduralRenderer(renderer) ? renderer.removeChild(parent, child) :\n            parent.removeChild(child);\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The child that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        if (childEl === void 0) { childEl = null; }\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var renderer = currentView[RENDERER];\n            var renderParent = getRenderParent(childTNode, currentView);\n            var parentTNode = childTNode.parent || currentView[HOST_NODE];\n            if (parentTNode.type === 2 /* View */) {\n                var lContainer = getLContainer(parentTNode, currentView);\n                var views = lContainer[VIEWS];\n                var index = views.indexOf(currentView);\n                nativeInsertBefore(renderer, renderParent, childEl, getBeforeNodeForView(index, views, lContainer[NATIVE]));\n            }\n            else if (parentTNode.type === 4 /* ElementContainer */ ||\n                parentTNode.type === 5 /* IcuContainer */) {\n                var anchorNode = getNativeByTNode(parentTNode, currentView);\n                nativeInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.appendChild(renderParent, childEl) :\n                    renderParent.appendChild(childEl);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Gets the top-level element or an ICU container if those containers are nested.\n     *\n     * @param tNode The starting TNode for which we should skip element and ICU containers\n     * @returns The TNode of the highest level ICU container or element container\n     */\n    function getHighestElementOrICUContainer(tNode) {\n        while (tNode.parent != null && (tNode.parent.type === 4 /* ElementContainer */ ||\n            tNode.parent.type === 5 /* IcuContainer */)) {\n            tNode = tNode.parent;\n        }\n        return tNode;\n    }\n    function getBeforeNodeForView(index, views, containerNative) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[HOST_NODE];\n            return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes the `child` element from the DOM if not in view and not projected.\n     *\n     * @param childTNode The TNode of the child to remove\n     * @param childEl The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(childTNode, childEl, currentView) {\n        // We only remove the element if not in View or not projected.\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var parentNative = getRenderParent(childTNode, currentView);\n            nativeRemoveChild(currentView[RENDERER], parentNative, childEl);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var renderParent = getRenderParent(tProjectionNode, currentView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            nodeOrContainer[RENDER_PARENT] = renderParent;\n            var views = nodeOrContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                nodeOrContainer[RENDER_PARENT] = renderParent;\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be perfomed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode. In \"projection\" mode, we do not need to check types, so if tag name\n     * matches selector, we declare a match. In \"directive matching\" mode, we also check whether tNode\n     * is of expected type:\n     * - whether tNode has either Element or ElementContainer type\n     * - or if we want to match \"ng-template\" tag, we check for Container type\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        return currentSelector === tNode.tagName &&\n            (isProjectionMode ||\n                (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) ||\n                (tNode.type === 0 /* Container */ && currentSelector === NG_TEMPLATE_SELECTOR));\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(3 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 3 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null &&\n                    isNodeMatchingSelectorList(tNode, selectors[i], /* isProjectionMode */ true)) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * Combines the binding value and a factory for an animation player.\n     *\n     * Used to bind a player to an element template binding (currently only\n     * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n     * supported). The provided `factoryFn` function will be run once all\n     * the associated bindings have been evaluated on the element and is\n     * designed to return a player which will then be placed on the element.\n     *\n     * @param factoryFn The function that is used to create a player\n     *   once all the rendering-related (styling values) have been\n     *   processed for the element binding.\n     * @param value The raw value that will be exposed to the binding\n     *   so that the binding can update its internal values when\n     *   any changes are evaluated.\n     */\n    function bindPlayerFactory(factoryFn, value) {\n        return new BoundPlayerFactory(factoryFn, value);\n    }\n    var BoundPlayerFactory = /** @class */ (function () {\n        function BoundPlayerFactory(fn, value) {\n            this.fn = fn;\n            this.value = value;\n        }\n        return BoundPlayerFactory;\n    }());\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent && player.state === 0 /* Pending */) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANIMATION_PROP_PREFIX = '@';\n    function createEmptyStylingContext(element, sanitizer, initialStyles, initialClasses) {\n        return [\n            0,\n            [null, -1, false, sanitizer || null],\n            initialStyles || [null],\n            initialClasses || [null],\n            [0, 0],\n            element || null,\n            null,\n            null,\n            null,\n        ];\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[5 /* ElementPosition */] = element;\n        // this will prevent any other directives from extending the context\n        context[0 /* MasterFlagPosition */] |= 32 /* BindingAllocationLocked */;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContext(index, viewData) {\n        var storageIndex = index;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LView or an LContainer\n            var stylingTemplate = getTNode(index - HEADER_OFFSET, viewData).stylingTemplate;\n            if (wrapper !== viewData) {\n                storageIndex = HOST;\n            }\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isStylingContext(value) {\n        // Not an LView or an LContainer\n        return Array.isArray(value) && typeof value[0 /* MasterFlagPosition */] === 'number' &&\n            Array.isArray(value[2 /* InitialStyleValuesPosition */]);\n    }\n    function isAnimationProp(name) {\n        return name[0] === ANIMATION_PROP_PREFIX;\n    }\n    function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n        ref = ref || element;\n        if (playerContextIndex) {\n            playerContext[playerContextIndex] = player;\n        }\n        else {\n            playerContext.push(player);\n        }\n        if (player) {\n            player.addEventListener(200 /* Destroyed */, function () {\n                var index = playerContext.indexOf(player);\n                var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                // if the player is being removed from the factory side of the context\n                // (which is where the [style] and [class] bindings do their thing) then\n                // that side of the array cannot be resized since the respective bindings\n                // have pointer index values that point to the associated factory instance\n                if (index) {\n                    if (index < nonFactoryPlayerIndex) {\n                        playerContext[index] = null;\n                    }\n                    else {\n                        playerContext.splice(index, 1);\n                    }\n                }\n                player.destroy();\n            });\n            var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n            playerHandler.queuePlayer(player, ref);\n            return true;\n        }\n        return false;\n    }\n    function getPlayersInternal(playerContext) {\n        var players = [];\n        var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n        // add all factory-based players (which are apart of [style] and [class] bindings)\n        for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n            var player = playerContext[i];\n            if (player) {\n                players.push(player);\n            }\n        }\n        // add all custom players (not apart of [style] and [class] bindings)\n        for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n            players.push(playerContext[i]);\n        }\n        return players;\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getLContext(target);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return null;\n        }\n        var lView = context.lView, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContext(nodeIndex, lView);\n        return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n    }\n    function getPlayerContext(stylingContext) {\n        return stylingContext[8 /* PlayerContext */];\n    }\n    function allocPlayerContext(data) {\n        return data[8 /* PlayerContext */] =\n            [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n    }\n    function throwInvalidRefError() {\n        throw new Error('Only elements that exist in an Angular application can be used for animations');\n    }\n    function hasStyling(attrs) {\n        for (var i = 0; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (attr == 1 /* Classes */ || attr == 2 /* Styles */)\n                return true;\n        }\n        return false;\n    }\n    function hasClassInput(tNode) {\n        return tNode.flags & 8 /* hasClassInput */ ? true : false;\n    }\n\n    /**\n     * This file includes the code to power all styling-binding operations in Angular.\n     *\n     * These include:\n     * [style]=\"myStyleObj\"\n     * [class]=\"myClassObj\"\n     * [style.prop]=\"myPropValue\"\n     * [class.name]=\"myClassValue\"\n     *\n     * There are many different ways in which these functions below are called. Please see\n     * `interfaces/styles.ts` to get a better idea of how the styling algorithm works.\n     */\n    /**\n     * Creates a new StylingContext an fills it with the provided static styling attribute values.\n     */\n    function initializeStaticContext(attrs) {\n        var context = createEmptyStylingContext();\n        var initialClasses = context[3 /* InitialClassValuesPosition */] =\n            [null];\n        var initialStyles = context[2 /* InitialStyleValuesPosition */] =\n            [null];\n        // The attributes array has marker values (numbers) indicating what the subsequent\n        // values represent. When we encounter a number, we set the mode to that type of attribute.\n        var mode = -1;\n        for (var i = 0; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode === 2 /* Styles */) {\n                initialStyles.push(attr, attrs[++i]);\n            }\n            else if (mode === 1 /* Classes */) {\n                initialClasses.push(attr, true);\n            }\n            else if (mode === 3 /* SelectOnly */) {\n                break;\n            }\n        }\n        return context;\n    }\n    /**\n     * Designed to update an existing styling context with new static styling\n     * data (classes and styles).\n     *\n     * @param context the existing styling context\n     * @param attrs an array of new static styling attributes that will be\n     *              assigned to the context\n     * @param directive the directive instance with which static data is associated with.\n     */\n    function patchContextWithStaticAttrs(context, attrs, directive) {\n        // If the styling context has already been patched with the given directive's bindings,\n        // then there is no point in doing it again. The reason why this may happen (the directive\n        // styling being patched twice) is because the `stylingBinding` function is called each time\n        // an element is created (both within a template function and within directive host bindings).\n        var directives = context[1 /* DirectiveRegistryPosition */];\n        if (getDirectiveRegistryValuesIndexOf(directives, directive) == -1) {\n            // this is a new directive which we have not seen yet.\n            directives.push(directive, -1, false, null);\n            var initialClasses = null;\n            var initialStyles = null;\n            var mode = -1;\n            for (var i = 0; i < attrs.length; i++) {\n                var attr = attrs[i];\n                if (typeof attr == 'number') {\n                    mode = attr;\n                }\n                else if (mode == 1 /* Classes */) {\n                    initialClasses = initialClasses || context[3 /* InitialClassValuesPosition */];\n                    patchInitialStylingValue(initialClasses, attr, true);\n                }\n                else if (mode == 2 /* Styles */) {\n                    initialStyles = initialStyles || context[2 /* InitialStyleValuesPosition */];\n                    patchInitialStylingValue(initialStyles, attr, attrs[++i]);\n                }\n            }\n        }\n    }\n    /**\n     * Designed to add a style or class value into the existing set of initial styles.\n     *\n     * The function will search and figure out if a style/class value is already present\n     * within the provided initial styling array. If and when a style/class value is not\n     * present (or if it's value is falsy) then it will be inserted/updated in the list\n     * of initial styling values.\n     */\n    function patchInitialStylingValue(initialStyling, prop, value) {\n        // Even values are keys; Odd numbers are values; Search keys only\n        for (var i = 1 /* KeyValueStartPosition */; i < initialStyling.length;) {\n            var key = initialStyling[i];\n            if (key === prop) {\n                var existingValue = initialStyling[i + 1 /* ValueOffset */];\n                // If there is no previous style value (when `null`) or no previous class\n                // applied (when `false`) then we update the the newly given value.\n                if (existingValue == null || existingValue == false) {\n                    initialStyling[i + 1 /* ValueOffset */] = value;\n                }\n                return;\n            }\n            i = i + 2 /* Size */;\n        }\n        // We did not find existing key, add a new one.\n        initialStyling.push(prop, value);\n    }\n    /**\n     * Runs through the initial styling data present in the context and renders\n     * them via the renderer on the element.\n     */\n    function renderInitialStylesAndClasses(element, context, renderer) {\n        var initialClasses = context[3 /* InitialClassValuesPosition */];\n        renderInitialStylingValues(element, renderer, initialClasses, true);\n        var initialStyles = context[2 /* InitialStyleValuesPosition */];\n        renderInitialStylingValues(element, renderer, initialStyles, false);\n    }\n    /**\n     * This is a helper function designed to render each entry present within the\n     * provided list of initialStylingValues.\n     */\n    function renderInitialStylingValues(element, renderer, initialStylingValues, isEntryClassBased) {\n        for (var i = 1 /* KeyValueStartPosition */; i < initialStylingValues.length; i += 2 /* Size */) {\n            var value = initialStylingValues[i + 1 /* ValueOffset */];\n            if (value) {\n                if (isEntryClassBased) {\n                    setClass(element, initialStylingValues[i + 0 /* PropOffset */], true, renderer, null);\n                }\n                else {\n                    setStyle(element, initialStylingValues[i + 0 /* PropOffset */], value, renderer, null);\n                }\n            }\n        }\n    }\n    /**\n     * Adds in new binding values to a styling context.\n     *\n     * If a directive value is provided then all provided class/style binding names will\n     * reference the provided directive.\n     *\n     * @param context the existing styling context\n     * @param directiveRef the directive that the new bindings will reference\n     * @param classBindingNames an array of class binding names that will be added to the context\n     * @param styleBindingNames an array of style binding names that will be added to the context\n     * @param styleSanitizer an optional sanitizer that handle all sanitization on for each of\n     *    the bindings added to the context. Note that if a directive is provided then the sanitizer\n     *    instance will only be active if and when the directive updates the bindings that it owns.\n     */\n    function updateContextWithBindings(context, directiveRef, classBindingNames, styleBindingNames, styleSanitizer, onlyProcessSingleClasses) {\n        if (context[0 /* MasterFlagPosition */] & 32 /* BindingAllocationLocked */)\n            return;\n        // this means the context has already been patched with the directive's bindings\n        var directiveIndex = findOrPatchDirectiveIntoRegistry(context, directiveRef, styleSanitizer);\n        if (directiveIndex === -1) {\n            // this means the directive has already been patched in ... No point in doing anything\n            return;\n        }\n        // there are alot of variables being used below to track where in the context the new\n        // binding values will be placed. Because the context consists of multiple types of\n        // entries (single classes/styles and multi classes/styles) alot of the index positions\n        // need to be computed ahead of time and the context needs to be extended before the values\n        // are inserted in.\n        var singlePropOffsetValues = context[4 /* SinglePropOffsetPositions */];\n        var totalCurrentClassBindings = singlePropOffsetValues[1 /* ClassesCountPosition */];\n        var totalCurrentStyleBindings = singlePropOffsetValues[0 /* StylesCountPosition */];\n        var classesOffset = totalCurrentClassBindings * 4 /* Size */;\n        var stylesOffset = totalCurrentStyleBindings * 4 /* Size */;\n        var singleStylesStartIndex = 9 /* SingleStylesStartPosition */;\n        var singleClassesStartIndex = singleStylesStartIndex + stylesOffset;\n        var multiStylesStartIndex = singleClassesStartIndex + classesOffset;\n        var multiClassesStartIndex = multiStylesStartIndex + stylesOffset;\n        // because we're inserting more bindings into the context, this means that the\n        // binding values need to be referenced the singlePropOffsetValues array so that\n        // the template/directive can easily find them inside of the `elementStyleProp`\n        // and the `elementClassProp` functions without iterating through the entire context.\n        // The first step to setting up these reference points is to mark how many bindings\n        // are being added. Even if these bindings already exist in the context, the directive\n        // or template code will still call them unknowingly. Therefore the total values need\n        // to be registered so that we know how many bindings are assigned to each directive.\n        var currentSinglePropsLength = singlePropOffsetValues.length;\n        singlePropOffsetValues.push(styleBindingNames ? styleBindingNames.length : 0, classBindingNames ? classBindingNames.length : 0);\n        // the code below will check to see if a new style binding already exists in the context\n        // if so then there is no point in inserting it into the context again. Whether or not it\n        // exists the styling offset code will now know exactly where it is\n        var insertionOffset = 0;\n        var filteredStyleBindingNames = [];\n        if (styleBindingNames && styleBindingNames.length) {\n            for (var i_1 = 0; i_1 < styleBindingNames.length; i_1++) {\n                var name_1 = styleBindingNames[i_1];\n                var singlePropIndex = getMatchingBindingIndex(context, name_1, singleStylesStartIndex, singleClassesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = singleClassesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredStyleBindingNames.push(name_1);\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // just like with the style binding loop above, the new class bindings get the same treatment...\n        var filteredClassBindingNames = [];\n        if (classBindingNames && classBindingNames.length) {\n            for (var i_2 = 0; i_2 < classBindingNames.length; i_2++) {\n                var name_2 = classBindingNames[i_2];\n                var singlePropIndex = getMatchingBindingIndex(context, name_2, singleClassesStartIndex, multiStylesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = multiStylesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredClassBindingNames.push(name_2);\n                }\n                else {\n                    singlePropIndex += filteredStyleBindingNames.length * 4 /* Size */;\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // because new styles are being inserted, this means the existing collection of style offset\n        // index values are incorrect (they point to the wrong values). The code below will run through\n        // the entire offset array and update the existing set of index values to point to their new\n        // locations while taking the new binding values into consideration.\n        var i = 2 /* ValueStartPosition */;\n        if (filteredStyleBindingNames.length) {\n            while (i < currentSinglePropsLength) {\n                var totalStyles = singlePropOffsetValues[i + 0 /* StylesCountPosition */];\n                var totalClasses = singlePropOffsetValues[i + 1 /* ClassesCountPosition */];\n                if (totalClasses) {\n                    var start = i + 2 /* ValueStartPosition */ + totalStyles;\n                    for (var j = start; j < start + totalClasses; j++) {\n                        singlePropOffsetValues[j] += filteredStyleBindingNames.length * 4 /* Size */;\n                    }\n                }\n                var total = totalStyles + totalClasses;\n                i += 2 /* ValueStartPosition */ + total;\n            }\n        }\n        var totalNewEntries = filteredClassBindingNames.length + filteredStyleBindingNames.length;\n        // in the event that there are new style values being inserted, all existing class and style\n        // bindings need to have their pointer values offsetted with the new amount of space that is\n        // used for the new style/class bindings.\n        for (var i_3 = singleStylesStartIndex; i_3 < context.length; i_3 += 4 /* Size */) {\n            var isMultiBased = i_3 >= multiStylesStartIndex;\n            var isClassBased = i_3 >= (isMultiBased ? multiClassesStartIndex : singleClassesStartIndex);\n            var flag = getPointers(context, i_3);\n            var staticIndex = getInitialIndex(flag);\n            var singleOrMultiIndex = getMultiOrSingleIndex(flag);\n            if (isMultiBased) {\n                singleOrMultiIndex +=\n                    isClassBased ? (filteredStyleBindingNames.length * 4 /* Size */) : 0;\n            }\n            else {\n                singleOrMultiIndex += (totalNewEntries * 4 /* Size */) +\n                    ((isClassBased ? filteredStyleBindingNames.length : 0) * 4 /* Size */);\n            }\n            setFlag(context, i_3, pointers(flag, staticIndex, singleOrMultiIndex));\n        }\n        // this is where we make space in the context for the new style bindings\n        for (var i_4 = 0; i_4 < filteredStyleBindingNames.length * 4 /* Size */; i_4++) {\n            context.splice(multiClassesStartIndex, 0, null);\n            context.splice(singleClassesStartIndex, 0, null);\n            singleClassesStartIndex++;\n            multiStylesStartIndex++;\n            multiClassesStartIndex += 2; // both single + multi slots were inserted\n        }\n        // this is where we make space in the context for the new class bindings\n        for (var i_5 = 0; i_5 < filteredClassBindingNames.length * 4 /* Size */; i_5++) {\n            context.splice(multiStylesStartIndex, 0, null);\n            context.push(null);\n            multiStylesStartIndex++;\n            multiClassesStartIndex++;\n        }\n        var initialClasses = context[3 /* InitialClassValuesPosition */];\n        var initialStyles = context[2 /* InitialStyleValuesPosition */];\n        // the code below will insert each new entry into the context and assign the appropriate\n        // flags and index values to them. It's important this runs at the end of this function\n        // because the context, property offset and index values have all been computed just before.\n        for (var i_6 = 0; i_6 < totalNewEntries; i_6++) {\n            var entryIsClassBased = i_6 >= filteredStyleBindingNames.length;\n            var adjustedIndex = entryIsClassBased ? (i_6 - filteredStyleBindingNames.length) : i_6;\n            var propName = entryIsClassBased ? filteredClassBindingNames[adjustedIndex] :\n                filteredStyleBindingNames[adjustedIndex];\n            var multiIndex = void 0, singleIndex = void 0;\n            if (entryIsClassBased) {\n                multiIndex = multiClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n            }\n            else {\n                multiIndex =\n                    multiStylesStartIndex + ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleStylesStartIndex +\n                    ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n            }\n            // if a property is not found in the initial style values list then it\n            // is ALWAYS added incase a follow-up directive introduces the same initial\n            // style/class value later on.\n            var initialValuesToLookup = entryIsClassBased ? initialClasses : initialStyles;\n            var indexForInitial = getInitialStylingValuesIndexOf(initialValuesToLookup, propName);\n            if (indexForInitial === -1) {\n                indexForInitial = initialValuesToLookup.length + 1 /* ValueOffset */;\n                initialValuesToLookup.push(propName, entryIsClassBased ? false : null);\n            }\n            else {\n                indexForInitial += 1 /* ValueOffset */;\n            }\n            var initialFlag = prepareInitialFlag(context, propName, entryIsClassBased, styleSanitizer || null);\n            setFlag(context, singleIndex, pointers(initialFlag, indexForInitial, multiIndex));\n            setProp(context, singleIndex, propName);\n            setValue(context, singleIndex, null);\n            setPlayerBuilderIndex(context, singleIndex, 0, directiveIndex);\n            setFlag(context, multiIndex, pointers(initialFlag, indexForInitial, singleIndex));\n            setProp(context, multiIndex, propName);\n            setValue(context, multiIndex, null);\n            setPlayerBuilderIndex(context, multiIndex, 0, directiveIndex);\n        }\n        // the total classes/style values are updated so the next time the context is patched\n        // additional style/class bindings from another directive then it knows exactly where\n        // to insert them in the context\n        singlePropOffsetValues[1 /* ClassesCountPosition */] =\n            totalCurrentClassBindings + filteredClassBindingNames.length;\n        singlePropOffsetValues[0 /* StylesCountPosition */] =\n            totalCurrentStyleBindings + filteredStyleBindingNames.length;\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        var masterFlag = pointers(0, 0, multiStylesStartIndex) |\n            (onlyProcessSingleClasses ? 16 /* OnlyProcessSingleClasses */ : 0);\n        setFlag(context, 0 /* MasterFlagPosition */, masterFlag);\n    }\n    /**\n     * Searches through the existing registry of directives\n     */\n    function findOrPatchDirectiveIntoRegistry(context, directiveRef, styleSanitizer) {\n        var directiveRefs = context[1 /* DirectiveRegistryPosition */];\n        var nextOffsetInsertionIndex = context[4 /* SinglePropOffsetPositions */].length;\n        var directiveIndex;\n        var detectedIndex = getDirectiveRegistryValuesIndexOf(directiveRefs, directiveRef);\n        if (detectedIndex === -1) {\n            directiveIndex = directiveRefs.length / 4 /* Size */;\n            directiveRefs.push(directiveRef, nextOffsetInsertionIndex, false, styleSanitizer || null);\n        }\n        else {\n            var singlePropStartPosition = detectedIndex + 1 /* SinglePropValuesIndexOffset */;\n            if (directiveRefs[singlePropStartPosition] >= 0) {\n                // the directive has already been patched into the context\n                return -1;\n            }\n            directiveIndex = detectedIndex / 4 /* Size */;\n            // because the directive already existed this means that it was set during elementHostAttrs or\n            // elementStart which means that the binding values were not here. Therefore, the values below\n            // need to be applied so that single class and style properties can be assigned later.\n            var singlePropPositionIndex = detectedIndex + 1 /* SinglePropValuesIndexOffset */;\n            directiveRefs[singlePropPositionIndex] = nextOffsetInsertionIndex;\n            // the sanitizer is also apart of the binding process and will be used when bindings are\n            // applied.\n            var styleSanitizerIndex = detectedIndex + 3 /* StyleSanitizerOffset */;\n            directiveRefs[styleSanitizerIndex] = styleSanitizer || null;\n        }\n        return directiveIndex;\n    }\n    function getMatchingBindingIndex(context, bindingName, start, end) {\n        for (var j = start; j < end; j += 4 /* Size */) {\n            if (getProp(context, j) === bindingName)\n                return j;\n        }\n        return -1;\n    }\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyling` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classesInput The key/value map of CSS class names that will be used for the update.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classesInput, stylesInput, directiveRef) {\n        stylesInput = stylesInput || null;\n        var directiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        var element = context[5 /* ElementPosition */];\n        var classesPlayerBuilder = classesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(classesInput, element, 1 /* Class */) :\n            null;\n        var stylesPlayerBuilder = stylesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(stylesInput, element, 2 /* Style */) :\n            null;\n        var classesValue = classesPlayerBuilder ?\n            classesInput.value :\n            classesInput;\n        var stylesValue = stylesPlayerBuilder ? stylesInput.value : stylesInput;\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        var ignoreAllClassUpdates = limitToSingleClasses(context) || classesValue === NO_CHANGE ||\n            classesValue === context[6 /* CachedClassValueOrInitialClassString */];\n        var ignoreAllStyleUpdates = stylesValue === NO_CHANGE || stylesValue === context[7 /* CachedStyleValue */];\n        if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n            return;\n        context[6 /* CachedClassValueOrInitialClassString */] = classesValue;\n        context[7 /* CachedStyleValue */] = stylesValue;\n        var classNames = EMPTY_ARRAY;\n        var applyAllClasses = false;\n        var playerBuildersAreDirty = false;\n        var classesPlayerBuilderIndex = classesPlayerBuilder ? 1 /* ClassMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        var stylesPlayerBuilderIndex = stylesPlayerBuilder ? 3 /* StyleMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (!ignoreAllClassUpdates) {\n            if (typeof classesValue == 'string') {\n                classNames = classesValue.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n            else {\n                classNames = classesValue ? Object.keys(classesValue) : EMPTY_ARRAY;\n            }\n        }\n        var classes = (classesValue || EMPTY_OBJ);\n        var styleProps = stylesValue ? Object.keys(stylesValue) : EMPTY_ARRAY;\n        var styles = stylesValue || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased && !ignoreAllStyleUpdates) || (isClassBased && !ignoreAllClassUpdates);\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (processValue) {\n                var adjustedPropIndex = isClassBased ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var playerBuilderIndex = isClassBased ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    var flag = getPointers(context, ctxIndex);\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                    if (hasValueChanged(flag, value, newValue)) {\n                        setValue(context, ctxIndex, newValue);\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        var initialValue = getInitialValue(context, flag);\n                        // SKIP IF INITIAL CHECK\n                        // If the former `value` is `null` then it means that an initial value\n                        // could be being rendered on screen. If that is the case then there is\n                        // no point in updating the value incase it matches. In other words if the\n                        // new value is the exact same as the previously rendered value (which\n                        // happens to be the initial value) then do nothing.\n                        if (value != null || hasValueChanged(flag, initialValue, newValue)) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (hasValueChanged(flagToCompare, valueToCompare, newValue)) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            // same if statement logic as above (look for SKIP IF INITIAL CHECK).\n                            if (valueToCompare != null || hasValueChanged(flagToCompare, initialValue, newValue)) {\n                                setDirty(context, ctxIndex, true);\n                                playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        var newFlag = prepareInitialFlag(context, newProp, isClassBased, getStyleSanitizer(context, directiveIndex));\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        insertNewMultiProperty(context, ctxIndex, isClassBased, newProp, newFlag, newValue, directiveIndex, playerBuilderIndex);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 4 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased = (flag & 2 /* Class */) === 2 /* Class */;\n            var processValue = (!isClassBased && !ignoreAllStyleUpdates) || (isClassBased && !ignoreAllClassUpdates);\n            if (processValue) {\n                var value = getValue(context, ctxIndex);\n                var doRemoveValue = valueExists(value, isClassBased);\n                if (doRemoveValue) {\n                    setDirty(context, ctxIndex, true);\n                    setValue(context, ctxIndex, null);\n                    // we keep the player factory the same so that the `nulled` value can\n                    // be instructed into the player because removing a style and/or a class\n                    // is a valid animation player instruction.\n                    var playerBuilderIndex = isClassBased ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                    dirty = true;\n                }\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        var sanitizer = getStyleSanitizer(context, directiveIndex);\n        while (propIndex < propLimit) {\n            var isClassBased = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased && !ignoreAllStyleUpdates) || (isClassBased && !ignoreAllClassUpdates);\n            if (processValue) {\n                var adjustedPropIndex = isClassBased ? propIndex - classesStartIndex : propIndex;\n                var prop = isClassBased ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var value = isClassBased ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n                var flag = prepareInitialFlag(context, prop, isClassBased, sanitizer) | 1 /* Dirty */;\n                var playerBuilderIndex = isClassBased ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                var ctxIndex_1 = context.length;\n                context.push(flag, prop, value, 0);\n                setPlayerBuilderIndex(context, ctxIndex_1, playerBuilderIndex, directiveIndex);\n                dirty = true;\n            }\n            propIndex++;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n            setDirectiveDirty(context, directiveIndex, true);\n        }\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param offset The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, offset, addOrRemove, directiveRef) {\n        _updateSingleStylingValue(context, offset, addOrRemove, true, directiveRef);\n    }\n    /**\n     * Sets and resolves a single style value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param offset The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     * @param directiveRef an optional reference to the directive responsible\n     *    for this binding change. If present then style binding will only\n     *    actualize if the directive has ownership over this binding\n     *    (see styling.ts#directives for more information about the algorithm).\n     */\n    function updateStyleProp(context, offset, input, directiveRef) {\n        _updateSingleStylingValue(context, offset, input, false, directiveRef);\n    }\n    function _updateSingleStylingValue(context, offset, input, isClassBased, directiveRef) {\n        var directiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        var singleIndex = getSinglePropIndexValue(context, directiveIndex, offset, isClassBased);\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        var currDirective = getDirectiveIndexFromEntry(context, singleIndex);\n        var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n        if (hasValueChanged(currFlag, currValue, value) &&\n            allowValueChange(currValue, value, currDirective, directiveIndex)) {\n            var isClassBased_1 = (currFlag & 2 /* Class */) === 2 /* Class */;\n            var element = context[5 /* ElementPosition */];\n            var playerBuilder = input instanceof BoundPlayerFactory ?\n                new ClassAndStylePlayerBuilder(input, element, isClassBased_1 ? 1 /* Class */ : 2 /* Style */) :\n                null;\n            var value_1 = (playerBuilder ? input.value : input);\n            var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n            var playerBuildersAreDirty = false;\n            var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n            if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n                var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n                playerBuilderIndex = playerBuilder ? newIndex : 0;\n                playerBuildersAreDirty = true;\n            }\n            if (playerBuildersAreDirty || currDirective !== directiveIndex) {\n                setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex, directiveIndex);\n            }\n            if (currDirective !== directiveIndex) {\n                var prop = getProp(context, singleIndex);\n                var sanitizer = getStyleSanitizer(context, directiveIndex);\n                setSanitizeFlag(context, singleIndex, (sanitizer && sanitizer(prop)) ? true : false);\n            }\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value_1);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value_1, isClassBased_1) && valueExists(valueForMulti, isClassBased_1)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setDirectiveDirty(context, directiveIndex, true);\n                setContextDirty(context, true);\n            }\n            if (playerBuildersAreDirty) {\n                setContextPlayersDirty(context, true);\n            }\n        }\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param classesStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param stylesStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param directiveRef an optional directive that will be used to target which\n     *    styling values are rendered. If left empty, only the bindings that are\n     *    registered on the template will be rendered.\n     * @returns number the total amount of players that got queued for animation (if any)\n     */\n    function renderStyling(context, renderer, rootOrView, isFirstRender, classesStore, stylesStore, directiveRef) {\n        var totalPlayersQueued = 0;\n        var targetDirectiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        if (isContextDirty(context) && isDirectiveDirty(context, targetDirectiveIndex)) {\n            var flushPlayerBuilders = context[0 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n            var native = context[5 /* ElementPosition */];\n            var multiStartIndex = getMultiStartIndex(context);\n            var onlySingleClasses = limitToSingleClasses(context);\n            var stillDirty = false;\n            for (var i = 9 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var flag = getPointers(context, i);\n                    var directiveIndex = getDirectiveIndexFromEntry(context, i);\n                    if (targetDirectiveIndex !== directiveIndex) {\n                        stillDirty = true;\n                        continue;\n                    }\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var styleSanitizer = (flag & 4 /* Sanitize */) ? getStyleSanitizer(context, directiveIndex) : null;\n                    var playerBuilder = getPlayerBuilder(context, i);\n                    var isClassBased = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var readInitialValue = !isClassBased || !onlySingleClasses;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    // Note that we ignore class-based deferals because otherwise a class can never\n                    // be removed in the case that it exists as true in the initial classes list...\n                    if (!isClassBased && !valueExists(valueToApply, isClassBased) && readInitialValue) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    // if the first render is true then we do not want to start applying falsy\n                    // values to the DOM element's styling. Otherwise then we know there has\n                    // been a change and even if it's falsy then it's removing something that\n                    // was truthy before.\n                    var doApplyValue = isFirstRender ? valueToApply : true;\n                    if (doApplyValue) {\n                        if (isClassBased) {\n                            setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                        }\n                        else {\n                            setStyle(native, prop, valueToApply, renderer, styleSanitizer, stylesStore, playerBuilder);\n                        }\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            if (flushPlayerBuilders) {\n                var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n                var playerContext = getPlayerContext(context);\n                var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                    var builder = playerContext[i];\n                    var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                    var oldPlayer = playerContext[playerInsertionIndex];\n                    if (builder) {\n                        var player = builder.buildPlayer(oldPlayer, isFirstRender);\n                        if (player !== undefined) {\n                            if (player != null) {\n                                var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                                wasQueued && totalPlayersQueued++;\n                            }\n                            if (oldPlayer) {\n                                oldPlayer.destroy();\n                            }\n                        }\n                    }\n                    else if (oldPlayer) {\n                        // the player builder has been removed ... therefore we should delete the associated\n                        // player\n                        oldPlayer.destroy();\n                    }\n                }\n                setContextPlayersDirty(context, false);\n            }\n            setDirectiveDirty(context, targetDirectiveIndex, false);\n            setContextDirty(context, stillDirty);\n        }\n        return totalPlayersQueued;\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(prop, value);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(prop, value);\n            }\n        }\n        else if (value) {\n            value = value.toString(); // opacity, z-index and flexbox all have number values which may not\n            // assign as numbers\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native['style'].setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native['style'].removeProperty(prop);\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store, playerBuilder) {\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(className, add);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(className, add);\n            }\n        }\n        else if (add) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                native['classList'].add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                native['classList'].remove(className);\n        }\n    }\n    function setSanitizeFlag(context, index, sanitizeYes) {\n        if (sanitizeYes) {\n            context[index] |= 4 /* Sanitize */;\n        }\n        else {\n            context[index] &= ~4 /* Sanitize */;\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBasedValue(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 63 /* BitMask */) | (staticIndex << 6 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 6 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        var entryIsClassBased = flag & 2 /* Class */;\n        var initialValues = entryIsClassBased ? context[3 /* InitialClassValuesPosition */] :\n            context[2 /* InitialStyleValuesPosition */];\n        return initialValues[index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 6 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 6 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 9 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[0 /* MasterFlagPosition */]);\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function hasPlayerBuilderChanged(context, builder, index) {\n        var playerContext = context[8 /* PlayerContext */];\n        if (builder) {\n            if (!playerContext || index === 0) {\n                return true;\n            }\n        }\n        else if (!playerContext) {\n            return false;\n        }\n        return playerContext[index] !== builder;\n    }\n    function setPlayerBuilder(context, builder, insertionIndex) {\n        var playerContext = context[8 /* PlayerContext */] || allocPlayerContext(context);\n        if (insertionIndex > 0) {\n            playerContext[insertionIndex] = builder;\n        }\n        else {\n            insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            playerContext.splice(insertionIndex, 0, builder, null);\n            playerContext[0 /* NonBuilderPlayersStart */] +=\n                2 /* PlayerAndPlayerBuildersTupleSize */;\n        }\n        return insertionIndex;\n    }\n    function directiveOwnerPointers(directiveIndex, playerIndex) {\n        return (playerIndex << 16 /* BitCountSize */) | directiveIndex;\n    }\n    function setPlayerBuilderIndex(context, index, playerBuilderIndex, directiveIndex) {\n        var value = directiveOwnerPointers(directiveIndex, playerBuilderIndex);\n        context[index + 3 /* PlayerBuilderIndexOffset */] = value;\n    }\n    function getPlayerBuilderIndex(context, index) {\n        var flag = context[index + 3 /* PlayerBuilderIndexOffset */];\n        var playerBuilderIndex = (flag >> 16 /* BitCountSize */) &\n            65535 /* BitMask */;\n        return playerBuilderIndex;\n    }\n    function getPlayerBuilder(context, index) {\n        var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n        if (playerBuilderIndex) {\n            var playerContext = context[8 /* PlayerContext */];\n            if (playerContext) {\n                return playerContext[playerBuilderIndex];\n            }\n        }\n        return null;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 0 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 0 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 0 /* MasterFlagPosition */);\n    }\n    function limitToSingleClasses(context) {\n        return context[0 /* MasterFlagPosition */] & 16 /* OnlyProcessSingleClasses */;\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 0 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function setContextPlayersDirty(context, isDirtyYes) {\n        if (isDirtyYes) {\n            context[0 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n        }\n        else {\n            context[0 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n        }\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 4 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        var playerIndexA = getPlayerBuilderIndex(context, indexB);\n        var directiveIndexA = 0;\n        setPlayerBuilderIndex(context, indexA, playerIndexA, directiveIndexA);\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n        setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex, directiveIndexA);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBasedValue(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value, directiveIndex, playerIndex) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, 0);\n        setPlayerBuilderIndex(context, index, playerIndex, directiveIndex);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 4 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n    function prepareInitialFlag(context, prop, entryIsClassBased, sanitizer) {\n        var flag = (sanitizer && sanitizer(prop)) ? 4 /* Sanitize */ : 0 /* None */;\n        var initialIndex;\n        if (entryIsClassBased) {\n            flag |= 2 /* Class */;\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[3 /* InitialClassValuesPosition */], prop);\n        }\n        else {\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[2 /* InitialStyleValuesPosition */], prop);\n        }\n        initialIndex = initialIndex > 0 ? (initialIndex + 1 /* ValueOffset */) : 0;\n        return pointers(flag, initialIndex, 0);\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n    var ClassAndStylePlayerBuilder = /** @class */ (function () {\n        function ClassAndStylePlayerBuilder(factory, _element, _type) {\n            this._element = _element;\n            this._type = _type;\n            this._values = {};\n            this._dirty = false;\n            this._factory = factory;\n        }\n        ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n            if (this._values[prop] !== value) {\n                this._values[prop] = value;\n                this._dirty = true;\n            }\n        };\n        ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer, isFirstRender) {\n            // if no values have been set here then this means the binding didn't\n            // change and therefore the binding values were not updated through\n            // `setValue` which means no new player will be provided.\n            if (this._dirty) {\n                var player = this._factory.fn(this._element, this._type, this._values, isFirstRender, currentPlayer || null);\n                this._values = {};\n                this._dirty = false;\n                return player;\n            }\n            return undefined;\n        };\n        return ClassAndStylePlayerBuilder;\n    }());\n    function getDirectiveIndexFromEntry(context, index) {\n        var value = context[index + 3 /* PlayerBuilderIndexOffset */];\n        return value & 65535 /* BitMask */;\n    }\n    function getDirectiveIndexFromRegistry(context, directive) {\n        var index = getDirectiveRegistryValuesIndexOf(context[1 /* DirectiveRegistryPosition */], directive);\n        ngDevMode &&\n            assertNotEqual(index, -1, \"The provided directive \" + directive + \" has not been allocated to the element's style/class bindings\");\n        return index > 0 ? index / 4 /* Size */ : 0;\n        // return index / DirectiveRegistryValuesIndex.Size;\n    }\n    function getDirectiveRegistryValuesIndexOf(directives, directive) {\n        for (var i = 0; i < directives.length; i += 4 /* Size */) {\n            if (directives[i] === directive) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    function getInitialStylingValuesIndexOf(keyValues, key) {\n        for (var i = 1 /* KeyValueStartPosition */; i < keyValues.length; i += 2 /* Size */) {\n            if (keyValues[i] === key)\n                return i;\n        }\n        return -1;\n    }\n    function getSinglePropIndexValue(context, directiveIndex, offset, isClassBased) {\n        var singlePropOffsetRegistryIndex = context[1 /* DirectiveRegistryPosition */][(directiveIndex * 4 /* Size */) +\n            1 /* SinglePropValuesIndexOffset */];\n        var offsets = context[4 /* SinglePropOffsetPositions */];\n        var indexForOffset = singlePropOffsetRegistryIndex +\n            2 /* ValueStartPosition */ +\n            (isClassBased ?\n                offsets[singlePropOffsetRegistryIndex + 0 /* StylesCountPosition */] :\n                0) +\n            offset;\n        return offsets[indexForOffset];\n    }\n    function getStyleSanitizer(context, directiveIndex) {\n        var dirs = context[1 /* DirectiveRegistryPosition */];\n        var value = dirs[directiveIndex * 4 /* Size */ +\n            3 /* StyleSanitizerOffset */] ||\n            dirs[3 /* StyleSanitizerOffset */] || null;\n        return value;\n    }\n    function isDirectiveDirty(context, directiveIndex) {\n        var dirs = context[1 /* DirectiveRegistryPosition */];\n        return dirs[directiveIndex * 4 /* Size */ +\n            2 /* DirtyFlagOffset */];\n    }\n    function setDirectiveDirty(context, directiveIndex, dirtyYes) {\n        var dirs = context[1 /* DirectiveRegistryPosition */];\n        dirs[directiveIndex * 4 /* Size */ +\n            2 /* DirtyFlagOffset */] = dirtyYes;\n    }\n    function allowValueChange(currentValue, newValue, currentDirectiveOwner, newDirectiveOwner) {\n        // the code below relies the importance of directive's being tied to their\n        // index value. The index values for each directive are derived from being\n        // registered into the styling context directive registry. The most important\n        // directive is the parent component directive (the template) and each directive\n        // that is added after is considered less important than the previous entry. This\n        // prioritization of directives enables the styling algorithm to decide if a style\n        // or class should be allowed to be updated/replaced incase an earlier directive\n        // already wrote to the exact same style-property or className value. In other words\n        // ... this decides what to do if and when there is a collision.\n        if (currentValue) {\n            if (newValue) {\n                // if a directive index is lower than it always has priority over the\n                // previous directive's value...\n                return newDirectiveOwner <= currentDirectiveOwner;\n            }\n            else {\n                // only write a null value incase it's the same owner writing it.\n                // this avoids having a higher-priority directive write to null\n                // only to have a lesser-priority directive change right to a\n                // non-null value immediately afterwards.\n                return currentDirectiveOwner === newDirectiveOwner;\n            }\n        }\n        return true;\n    }\n    /**\n     * This function is only designed to be called for `[class]` bindings when\n     * `[ngClass]` (or something that uses `class` as an input) is present. Once\n     * directive host bindings fully work for `[class]` and `[style]` inputs\n     * then this can be deleted.\n     */\n    function getInitialClassNameValue(context) {\n        var className = context[6 /* CachedClassValueOrInitialClassString */];\n        if (className == null) {\n            className = '';\n            var initialClassValues = context[3 /* InitialClassValuesPosition */];\n            for (var i = 1 /* KeyValueStartPosition */; i < initialClassValues.length; i += 2 /* Size */) {\n                var isPresent = initialClassValues[i + 1];\n                if (isPresent) {\n                    className += (className.length ? ' ' : '') + initialClassValues[i];\n                }\n            }\n            context[6 /* CachedClassValueOrInitialClassString */] = className;\n        }\n        return className;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(lView) {\n        var tView = lView[TVIEW];\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = false;\n        setFirstTemplatePass(false);\n        // If this is a creation pass, we should not call lifecycle hooks or evaluate bindings.\n        // This will be done in the update pass.\n        if (!isCreationMode(lView)) {\n            var checkNoChangesMode = getCheckNoChangesMode();\n            executeInitHooks(lView, tView, checkNoChangesMode);\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            refreshContentQueries(tView);\n            executeHooks(lView, tView.contentHooks, tView.contentCheckHooks, checkNoChangesMode);\n            setHostBindings(tView, lView);\n        }\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        if (tView.expandoInstructions) {\n            var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n            setBindingRoot(bindingRootIndex);\n            var currentDirectiveIndex = -1;\n            var currentElementIndex = -1;\n            for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                var instruction = tView.expandoInstructions[i];\n                if (typeof instruction === 'number') {\n                    if (instruction <= 0) {\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\n                        // the current element and directive index.\n                        currentElementIndex = -instruction;\n                        // Injector block and providers are taken into account.\n                        var providerCount = tView.expandoInstructions[++i];\n                        bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                        currentDirectiveIndex = bindingRootIndex;\n                    }\n                    else {\n                        // This is either the injector size (so the binding root can skip over directives\n                        // and get to the first set of host bindings on this node) or the host var count\n                        // (to get to the next set of host bindings on this node).\n                        bindingRootIndex += instruction;\n                    }\n                    setBindingRoot(bindingRootIndex);\n                }\n                else {\n                    // If it's not a number, it's a host binding function that needs to be executed.\n                    if (instruction !== null) {\n                        viewData[BINDING_INDEX] = bindingRootIndex;\n                        instruction(2 /* Update */, readElementValue(viewData[currentDirectiveIndex]), currentElementIndex);\n                    }\n                    currentDirectiveIndex++;\n                }\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx - HEADER_OFFSET, tView.contentQueries[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i]);\n            }\n        }\n    }\n    function createLView(parentLView, tView, context, flags, rendererFactory, renderer, sanitizer, injector) {\n        var lView = tView.blueprint.slice();\n        lView[FLAGS] = flags | 1 /* CreationMode */ | 16 /* Attached */ | 32 /* RunInit */ |\n            2 /* FirstLViewPass */;\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR] = injector || parentLView && parentLView[INJECTOR] || null;\n        return lView;\n    }\n    function createNodeAtIndex(index, type, native, name, attrs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertLessThan(adjustedIndex, lView.length, \"Slot should have been initialized with null\");\n        lView[adjustedIndex] = native;\n        var tNode = tView.data[adjustedIndex];\n        if (tNode == null) {\n            // TODO(misko): Refactor createTNode so that it does not depend on LView.\n            tNode = tView.data[adjustedIndex] = createTNode(lView, type, adjustedIndex, name, attrs, null);\n        }\n        // Now link ourselves into the tree.\n        // We need this even if tNode exists, otherwise we might end up pointing to unexisting tNodes when\n        // we use i18n (especially with ICU expressions that update the DOM during the update phase).\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        if (tView.firstChild == null) {\n            tView.firstChild = tNode;\n        }\n        setPreviousOrParentTNode(tNode);\n        setIsParent(true);\n        return tNode;\n    }\n    function createViewNode(index, view) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        if (view[TVIEW].node == null) {\n            view[TVIEW].node = createTNode(view, 2 /* View */, index, null, null, null);\n        }\n        return view[HOST_NODE] = view[TVIEW].node;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function allocExpando(view) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n            tView.blueprint.push(null);\n            tView.data.push(null);\n            view.push(null);\n        }\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, renderer, queries, injectorIndex) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var lView = createLView(declarationView, tView, context, 4 /* CheckAlways */);\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        createViewNode(-1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        setIsParent(_isParent);\n        setPreviousOrParentTNode(_previousOrParentTNode);\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var oldView;\n        if (viewToRender[FLAGS] & 128 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(getRootContext(viewToRender));\n        }\n        else {\n            try {\n                setIsParent(true);\n                setPreviousOrParentTNode(null);\n                oldView = enterView(viewToRender, viewToRender[HOST_NODE]);\n                namespaceHTML();\n                tView.template(getRenderFlags(viewToRender), context);\n                // This must be set to false immediately after the first creation run because in an\n                // ngFor loop, all the views will be created together before update mode runs and turns\n                // off firstTemplatePass. If we don't set it here, instances will perform directive\n                // matching, etc again and again.\n                viewToRender[TVIEW].firstTemplatePass = false;\n                setFirstTemplatePass(false);\n                refreshDescendantViews(viewToRender);\n            }\n            finally {\n                leaveView(oldView);\n                setIsParent(_isParent);\n                setPreviousOrParentTNode(_previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n    function renderComponentOrTemplate(hostView, context, templateFn) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        var normalExecutionPath = !getCheckNoChangesMode();\n        try {\n            if (normalExecutionPath && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (isCreationMode(hostView)) {\n                // creation mode pass\n                if (templateFn) {\n                    namespaceHTML();\n                    templateFn(1 /* Create */, context);\n                }\n                refreshDescendantViews(hostView);\n                hostView[FLAGS] &= ~1 /* CreationMode */;\n            }\n            // update mode pass\n            templateFn && templateFn(2 /* Update */, context);\n            refreshDescendantViews(hostView);\n        }\n        finally {\n            if (normalExecutionPath && rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. Update block and create block are\n     * always run separately.\n     */\n    function getRenderFlags(view) {\n        return isCreationMode(view) ? 1 /* Create */ : 2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, tagName, attrs || null);\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        attachPatchData(native, lView);\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n        }\n        queueLifecycleHooks(tView, previousOrParentTNode);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n        if (attrs) {\n            // it's important to only prepare styling-related datastructures once for a given\n            // tNode and not each time an element is created. Also, the styling code is designed\n            // to be patched and constructed at various points, but only up until the first element\n            // is created. Then the styling context is locked and can only be instantiated for each\n            // successive element that is created.\n            if (tView.firstTemplatePass && !tNode.stylingTemplate && hasStyling(attrs)) {\n                tNode.stylingTemplate = initializeStaticContext(attrs);\n            }\n            setUpAttributes(native, attrs);\n        }\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstTemplatePass) {\n            var inputData = initializeTNodeInputs(tNode);\n            if (inputData && inputData.hasOwnProperty('class')) {\n                tNode.flags |= 8 /* hasClassInput */;\n            }\n        }\n        // There is no point in rendering styles when a class directive is present since\n        // it will take that over for us (this will be removed once #FW-882 is in).\n        if (tNode.stylingTemplate && (tNode.flags & 8 /* hasClassInput */) === 0) {\n            renderInitialStylesAndClasses(native, tNode.stylingTemplate, lView[RENDERER]);\n        }\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || getLView()[RENDERER];\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, viewData, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getFirstTemplatePass()) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, viewData, findDirectiveMatches(tView, viewData, previousOrParentTNode), previousOrParentTNode, localRefs || null);\n        }\n        instantiateAllDirectives(tView, viewData, previousOrParentTNode);\n        invokeDirectivesHostBindings(tView, viewData, previousOrParentTNode);\n        saveResolvedLocalsInData(viewData, previousOrParentTNode, localRefExtractor);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData =\n                createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice(),\n            childIndex: -1,\n            bindingStartIndex: bindingStartIndex,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            firstChild: null,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[CONTAINER_INDEX] = -1;\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function setUpAttributes(native, attrs) {\n        var renderer = getLView()[RENDERER];\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i++];\n            if (typeof attrName == 'number') {\n                if (attrName === 0 /* NamespaceURI */) {\n                    // Namespaced attributes\n                    var namespaceURI = attrs[i++];\n                    var attrName_1 = attrs[i++];\n                    var attrVal = attrs[i++];\n                    ngDevMode && ngDevMode.rendererSetAttribute++;\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                }\n                else {\n                    // All other `AttributeMarker`s are ignored here.\n                    break;\n                }\n            }\n            else {\n                /// attrName is string;\n                var attrVal = attrs[i++];\n                if (attrName !== NG_PROJECT_AS_ATTR_NAME) {\n                    // Standard attributes\n                    ngDevMode && ngDevMode.rendererSetAttribute++;\n                    if (isAnimationProp(attrName)) {\n                        if (isProc) {\n                            renderer.setProperty(native, attrName, attrVal);\n                        }\n                    }\n                    else {\n                        isProc ?\n                            renderer\n                                .setAttribute(native, attrName, attrVal) :\n                            native.setAttribute(attrName, attrVal);\n                    }\n                }\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener.\n     */\n    function listener(eventName, listenerFn, useCapture) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var tView = lView[TVIEW];\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            var renderer = lView[RENDERER];\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var useCaptureOrSubIdx = useCapture;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                var cleanupFn = renderer.listen(native, eventName, listenerFn);\n                lCleanup.push(listenerFn, cleanupFn);\n                useCaptureOrSubIdx = lCleanupIndex + 1;\n            }\n            else {\n                var wrappedListener = wrapListenerWithPreventDefault(listenerFn);\n                native.addEventListener(eventName, wrappedListener, useCapture);\n                lCleanup.push(wrappedListener);\n            }\n            tCleanup && tCleanup.push(eventName, tNode.index, lCleanupIndex, useCaptureOrSubIdx);\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var props;\n        if (outputs && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 2) {\n                    ngDevMode && assertDataInRange(lView, props[i]);\n                    var subscription = lView[props[i]][props[i + 1]].subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n        }\n        queueLifecycleHooks(getLView()[TVIEW], previousOrParentTNode);\n        decreaseElementDepthCount();\n        // this is fired at the end of elementEnd because ALL of the stylingBindings code\n        // (for directives and the template) have now executed which means the styling\n        // context can be instantiated properly.\n        if (hasClassInput(previousOrParentTNode)) {\n            var stylingContext = getStylingContext(previousOrParentTNode.index, lView);\n            setInputsForProperty(lView, previousOrParentTNode.inputs['class'], getInitialClassNameValue(stylingContext));\n        }\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            var renderer = lView[RENDERER];\n            var element_1 = getNativeByIndex(index, lView);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1, name) :\n                    element_1.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1, name, strValue) :\n                    element_1.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     */\n    function elementProperty(index, propName, value, sanitizer, nativeOnly) {\n        elementPropertyInternal(index, propName, value, sanitizer, nativeOnly);\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub components renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     */\n    function componentHostSyntheticProperty(index, propName, value, sanitizer, nativeOnly) {\n        elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadComponentRenderer);\n    }\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    function elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        if (value === NO_CHANGE)\n            return;\n        var lView = getLView();\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData;\n        var dataValue;\n        if (!nativeOnly && (inputData = initializeTNodeInputs(tNode)) &&\n            (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */) {\n                    setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n                }\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value) : value;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(lView, type, adjustedIndex, tagName, attrs, tViews) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && ngDevMode.tNode++;\n        var parent = getIsParent() ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && lView && parent !== lView[HOST_NODE];\n        var tParent = parentInSameView ? parent : null;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            directiveStart: -1,\n            directiveEnd: -1,\n            flags: 0,\n            providerIndexes: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: tParent,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(lView, inputs[i]);\n            lView[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    function setNgReflectProperties(lView, element, type, inputs, value) {\n        var _a;\n        for (var i = 0; i < inputs.length; i += 2) {\n            var renderer = lView[RENDERER];\n            var attrName = normalizeDebugBindingName(inputs[i + 1]);\n            var debugValue = normalizeDebugBindingValue(value);\n            if (type === 3 /* Element */) {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n            else if (value !== undefined) {\n                var value_1 = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setValue(element, value_1);\n                }\n                else {\n                    element.textContent = value_1;\n                }\n            }\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param tNodeFlags node flags\n     * @param direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNode, direction) {\n        var tView = getLView()[TVIEW];\n        var propStore = null;\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (end > start) {\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to register all\n     * dynamic style and class bindings on the element. Note for static values (no binding)\n     * see `elementStart` and `elementHostAttrs`.\n     *\n     * @param classBindingNames An array containing bindable class names.\n     *        The `elementClassProp` refers to the class name by index in this array.\n     *        (i.e. `['foo', 'bar']` means `foo=0` and `bar=1`).\n     * @param styleBindingNames An array containing bindable style properties.\n     *        The `elementStyleProp` refers to the class name by index in this array.\n     *        (i.e. `['width', 'height']` means `width=0` and `height=1`).\n     * @param styleSanitizer An optional sanitizer function that will be used to sanitize any CSS\n     *        property values that are applied to the element (during rendering).\n     *        Note that the sanitizer instance itself is tied to the `directive` (if  provided).\n     * @param directive A directive instance the styling is associated with. If not provided\n     *        current view's controller instance is assumed.\n     *\n     * @publicApi\n     */\n    function elementStyling(classBindingNames, styleBindingNames, styleSanitizer, directive) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = createEmptyStylingContext();\n        }\n        updateContextWithBindings(tNode.stylingTemplate, directive || null, classBindingNames, styleBindingNames, styleSanitizer, hasClassInput(tNode));\n    }\n    /**\n     * Assign static styling values to a host element.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array containing class and styling information. The values must be marked with\n     *              `AttributeMarker`.\n     *\n     *        ```\n     *        var attrs = [AttributeMarker.Classes, 'foo', 'bar',\n     *                     AttributeMarker.Styles, 'width', '100px', 'height, '200px']\n     *        elementHostAttrs(directive, attrs);\n     *        ```\n     *\n     * @publicApi\n     */\n    function elementHostAttrs(directive, attrs) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = initializeStaticContext(attrs);\n        }\n        patchContextWithStaticAttrs(tNode.stylingTemplate, attrs, directive);\n    }\n    /**\n     * Apply styling binding to the element.\n     *\n     * This instruction is meant to be run after `elementStyle` and/or `elementStyleProp`.\n     * if any styling bindings have changed then the changes are flushed to the element.\n     *\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n    components\n     *\n     * @publicApi\n     */\n    function elementStylingApply(index, directive) {\n        var lView = getLView();\n        var isFirstRender = (lView[FLAGS] & 2 /* FirstLViewPass */) !== 0;\n        var totalPlayersQueued = renderStyling(getStylingContext(index + HEADER_OFFSET, lView), lView[RENDERER], lView, isFirstRender, null, null, directive);\n        if (totalPlayersQueued > 0) {\n            var rootContext = getRootContext(lView);\n            scheduleTick(rootContext, 2 /* FlushPlayers */);\n        }\n    }\n    /**\n     * Update a style bindings value on an element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling element is updated as part of `elementStylingApply`.)\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `elementStlyingBindings`.\n     * @param value New value to write (null to remove). Note that if a directive also\n     *        attempts to write to the same binding value then it will only be able to\n     *        do so if the template binding value is `null` (or doesn't exist at all).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n    components\n     *\n     * @publicApi\n     */\n    function elementStyleProp(index, styleIndex, value, suffix, directive) {\n        var valueToAdd = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = stringify$1(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index + HEADER_OFFSET, getLView()), styleIndex, valueToAdd, directive);\n    }\n    /**\n     * Add or remove a class via a class binding on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case and, therefore,\n     * the class itself must already be applied using `elementStyling` within\n     * the creation block.\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param classIndex Index of class to toggle. This index value refers to the\n     *        index of the class in the class bindings array that was passed into\n     *        `elementStlyingBindings` (which is meant to be called before this\n     *        function is).\n     * @param value A true/false value which will turn the class on or off.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n    components\n     *\n     * @publicApi\n     */\n    function elementClassProp(index, classIndex, value, directive) {\n        var onOrOffClassValue = (value instanceof BoundPlayerFactory) ? value : (!!value);\n        updateClassProp(getStylingContext(index + HEADER_OFFSET, getLView()), classIndex, onOrOffClassValue, directive);\n    }\n    /**\n     * Update style and/or class bindings using object literal.\n     *\n     * This instruction is meant apply styling via the `[style]=\"exp\"` and `[class]=\"exp\"` template\n     * bindings. When styles are applied to the Element they will then be placed with respect to\n     * any styles set with `elementStyleProp`. If any styles are set to `null` then they will be\n     * removed from the element.\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n     *\n     * @publicApi\n     */\n    function elementStylingMap(index, classes, styles, directive) {\n        if (directive != undefined)\n            return hackImplementationOfElementStylingMap(index, classes, styles, directive); // supported in next PR\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var stylingContext = getStylingContext(index + HEADER_OFFSET, lView);\n        if (hasClassInput(tNode) && classes !== NO_CHANGE) {\n            var initialClasses = getInitialClassNameValue(stylingContext);\n            var classInputVal = (initialClasses.length ? (initialClasses + ' ') : '') + classes;\n            setInputsForProperty(lView, tNode.inputs['class'], classInputVal);\n        }\n        else {\n            updateStylingMap(stylingContext, classes, styles);\n        }\n    }\n    /* START OF HACK BLOCK */\n    function hackImplementationOfElementStylingMap(index, classes, styles, directive) {\n        throw new Error('unimplemented. Should not be needed by ViewEngine compatibility');\n    }\n    /* END OF HACK BLOCK */\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, lView[RENDERER]);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        setIsParent(false);\n        appendChild(textNative, tNode, lView);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n            var element_2 = getNativeByIndex(index, lView);\n            ngDevMode && assertDefined(element_2, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            var renderer = lView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.setValue(element_2, stringify$1(value)) :\n                element_2.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive, def);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, viewData, def, def.factory);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                queueInitHooks(directiveDefIdx, def.onInit, def.doCheck, tView);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!getFirstTemplatePass() && start < end) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, directive, def, i);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = getFirstTemplatePass();\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            var directive = viewData[i];\n            if (def.hostBindings) {\n                var previousExpandoLength = expando.length;\n                setCurrentDirectiveDef(def);\n                def.hostBindings(1 /* Create */, directive, tNode.index - HEADER_OFFSET);\n                setCurrentDirectiveDef(null);\n                // `hostBindings` function may or may not contain `allocHostVars` call\n                // (e.g. it may not if it only contains host listeners), so we need to check whether\n                // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n                // expando block, to make sure we execute it for DI cycle\n                if (previousExpandoLength === expando.length && firstTemplatePass) {\n                    expando.push(def.hostBindings);\n                }\n            }\n            else if (firstTemplatePass) {\n                expando.push(null);\n            }\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n    * On the first template pass, we need to reserve space for host binding values\n    * after directives are matched (so all directives are saved, then bindings).\n    * Because we are updating the blueprint, we only need to do this once.\n    */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(viewData, directive, def, directiveDefIdx) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        postProcessBaseDirective(viewData, previousOrParentTNode, directive, def);\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, directive, def.inputs, previousOrParentTNode);\n        }\n        if (def.contentQueries) {\n            def.contentQueries(directiveDefIdx);\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, previousOrParentTNode, directive, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        attachPatchData(directive, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n        // TODO(misko): setUpAttributes should be a feature for better treeshakability.\n        if (def.attributes != null && previousOrParentTNode.type == 3 /* Element */) {\n            setUpAttributes(native, def.attributes);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), viewData), viewData, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 1 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 1 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(previousOrParentTNode) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        var tView = getLView()[TVIEW];\n        (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n    */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'expected firstTemplatePass to be true');\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 1 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = flags & 1 /* isComponent */;\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), false, null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, previousOrParentTNode, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, previousOrParentTNode.index, createLView(lView, tView, null, def.onPush ? 8 /* Dirty */ : 4 /* CheckAlways */, rendererFactory, lView[RENDERER_FACTORY].createRenderer(native, def)));\n        componentView[HOST_NODE] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        componentView[HOST] = lView[previousOrParentTNode.index];\n        lView[previousOrParentTNode.index] = componentView;\n        if (getFirstTemplatePass()) {\n            queueComponentIndexForCheck(previousOrParentTNode);\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 3 /* SelectOnly */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, hostTNode, currentView, native, isForViewContainerRef) {\n        return [\n            isForViewContainerRef ? -1 : 0,\n            [],\n            currentView,\n            null,\n            null,\n            hostNative,\n            native,\n            getRenderParent(hostTNode, currentView) // renderParent\n        ];\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // TODO: consider a separate node type for templates\n        var tNode = containerInternal(index, tagName || null, attrs || null);\n        if (getFirstTemplatePass()) {\n            tNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor);\n        var currentQueries = lView[QUERIES];\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        attachPatchData(native, lView);\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n        }\n        queueLifecycleHooks(tView, tNode);\n        setIsParent(false);\n    }\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var tNode = containerInternal(index, null, null);\n        getFirstTemplatePass() && (tNode.tViews = []);\n        setIsParent(false);\n    }\n    function containerInternal(index, tagName, attrs) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n        var lContainer = lView[adjustedIndex] =\n            createLContainer(lView[adjustedIndex], tNode, lView, comment);\n        appendChild(comment, tNode, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, index + HEADER_OFFSET, lContainer);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = currentQueries.container();\n        }\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = loadInternal(tView.data, index);\n        setPreviousOrParentTNode(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setIsParent(true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        executeInitHooks(lView, tView, getCheckNoChangesMode());\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, previousOrParentTNode, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        for (var current = getLViewChild(lView); current !== null; current = current[NEXT]) {\n            // Note: current can be an LView or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LView\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var dynamicViewData = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT]);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param tContainerNode to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, tContainerNode, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, tContainerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, containerTNode, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent(true);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 4 /* CheckAlways */);\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            createViewNode(viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lView, lContainer[ACTIVE_INDEX], -1);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        var lView = getLView();\n        var viewHost = lView[HOST_NODE];\n        if (isCreationMode(lView)) {\n            refreshDescendantViews(lView); // creation mode pass\n            lView[FLAGS] &= ~1 /* CreationMode */;\n        }\n        refreshDescendantViews(lView); // update mode pass\n        leaveView(lView[PARENT]);\n        setPreviousOrParentTNode(viewHost);\n        setIsParent(false);\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex) {\n        var lView = getLView();\n        ngDevMode && assertDataInRange(lView, adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].data[adjustedElementIndex], 3 /* Element */);\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (4 /* CheckAlways */ | 8 /* Dirty */)) {\n            syncViewWithBlueprint(hostView);\n            checkView(hostView, hostView[CONTEXT]);\n        }\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 16 /* Attached */) === 16 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentView(getLView())[HOST_NODE];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                    componentChild.next = null;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsParent(false);\n        // re-distribution of projectable nodes is stored on a component's view level\n        var componentView = findComponentView(lView);\n        var componentNode = componentView[HOST_NODE];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        var projectedView = componentView[PARENT];\n        var projectionNodeIndex = -1;\n        while (nodeToProject) {\n            if (nodeToProject.type === 1 /* Projection */) {\n                // This node is re-projected, so we must go up the tree to get its projected nodes.\n                var currentComponentView = findComponentView(projectedView);\n                var currentComponentHost = currentComponentView[HOST_NODE];\n                var firstProjectedNode = currentComponentHost.projection[nodeToProject.projection];\n                if (firstProjectedNode) {\n                    projectionNodeStack$1[++projectionNodeIndex] = nodeToProject;\n                    projectionNodeStack$1[++projectionNodeIndex] = projectedView;\n                    nodeToProject = firstProjectedNode;\n                    projectedView = currentComponentView[PARENT];\n                    continue;\n                }\n            }\n            else {\n                // This flag must be set now or we won't know that this node is projected\n                // if the nodes are inserted into a container later.\n                nodeToProject.flags |= 2 /* isProjected */;\n                appendProjectedNode(nodeToProject, tProjectionNode, lView, projectedView);\n            }\n            // If we are finished with a list of re-projected nodes, we need to get\n            // back to the root projection node that was re-projected.\n            if (nodeToProject.next === null && projectedView !== componentView[PARENT]) {\n                projectedView = projectionNodeStack$1[projectionNodeIndex--];\n                nodeToProject = projectionNodeStack$1[projectionNodeIndex--];\n            }\n            nodeToProject = nodeToProject.next;\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param state The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, adjustedHostIndex, state) {\n        var tView = lView[TVIEW];\n        var firstTemplatePass = getFirstTemplatePass();\n        if (lView[TAIL]) {\n            lView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        lView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 4 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 8 /* Dirty */;\n        }\n    }\n    /** Wraps an event listener with preventDefault behavior. */\n    function wrapListenerWithPreventDefault(listenerFn) {\n        return function wrapListenerIn_preventDefault(e) {\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /** Marks current view and all ancestors dirty */\n    function markViewDirty(lView) {\n        while (lView && !(lView[FLAGS] & 128 /* IsRoot */)) {\n            lView[FLAGS] |= 8 /* Dirty */;\n            lView = lView[PARENT];\n        }\n        lView[FLAGS] |= 8 /* Dirty */;\n        ngDevMode && assertDefined(lView[CONTEXT], 'rootContext should be defined');\n        var rootContext = lView[CONTEXT];\n        scheduleTick(rootContext, 1 /* DetectChanges */);\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLView(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        if (isCreationMode(view)) {\n            checkView(view, context); // creation mode pass\n        }\n        checkView(view, context); // update mode pass\n        if (rendererFactory.end)\n            rendererFactory.end();\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChanges(component);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function checkView(hostView, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        var templateFn = hostTView.template;\n        var viewQuery = hostTView.viewQuery;\n        try {\n            namespaceHTML();\n            createViewQuery(viewQuery, hostView, component);\n            templateFn(getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView);\n            updateViewQuery(viewQuery, hostView, component);\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function createViewQuery(viewQuery, view, component) {\n        if (viewQuery && isCreationMode(view)) {\n            viewQuery(1 /* Create */, component);\n        }\n    }\n    function updateViewQuery(viewQuery, view, component) {\n        if (viewQuery && !isCreationMode(view)) {\n            viewQuery(2 /* Update */, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        markViewDirty(getComponentViewByInstance(component));\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        var lView = getLView();\n        return bindingUpdated(lView, lView[BINDING_INDEX]++, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     */\n    function allocHostVars(count) {\n        if (!getFirstTemplatePass())\n            return;\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(lView, bindingIndex++, values[i]) && (different = true);\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated(lView, lView[BINDING_INDEX], v0);\n        lView[BINDING_INDEX] += 1;\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated2(lView, lView[BINDING_INDEX], v0, v1);\n        lView[BINDING_INDEX] += 2;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated3(lView, lView[BINDING_INDEX], v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated4(lView, lView[BINDING_INDEX], v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        var contextLView = getContextLView();\n        return loadInternal(contextLView, index);\n    }\n    function loadQueryList(queryListIdx) {\n        var lView = getLView();\n        ngDevMode &&\n            assertDefined(lView[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        ngDevMode && assertDataInRange(lView[CONTENT_QUERIES], queryListIdx);\n        return lView[CONTENT_QUERIES][queryListIdx];\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(getLView(), index);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), getLView(), token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     */\n    function injectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     */\n    function registerContentQuery(queryList, currentDirectiveIndex) {\n        var viewData = getLView();\n        var tView = viewData[TVIEW];\n        var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n        if (getFirstTemplatePass()) {\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n            if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n            }\n        }\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode) {\n            if (tNode.inputs === undefined) {\n                // mark inputs as checked\n                tNode.inputs = generatePropertyAliases(tNode, 0 /* Input */);\n            }\n            return tNode.inputs;\n        }\n        return null;\n    }\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return getLView();\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds a player to an element, directive or component instance that will later be\n     * animated once change detection has passed.\n     *\n     * When a player is added to a reference it will stay active until `player.destroy()`\n     * is called. Once called then the player will be removed from the active players\n     * present on the associated ref instance.\n     *\n     * To get a list of all the active players on an element see [getPlayers].\n     *\n     * @param ref The element, directive or component that the player will be placed on.\n     * @param player The player that will be triggered to play once change detection has run.\n     */\n    function addPlayer(ref, player) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return;\n        }\n        var element$$1 = context.native;\n        var lView = context.lView;\n        var playerContext = getOrCreatePlayerContext(element$$1, context);\n        var rootContext = getRootContext$1(lView);\n        addPlayerInternal(playerContext, rootContext, element$$1, player, 0, ref);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n    /**\n     * Returns a list of all the active players present on the provided ref instance (which can\n     * be an instance of a directive, component or element).\n     *\n     * This function will only return players that have been added to the ref instance using\n     * `addPlayer` or any players that are active through any template styling bindings\n     * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n     *\n     * @publicApi\n     */\n    function getPlayers(ref) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return [];\n        }\n        var stylingContext = getStylingContext(context.nodeIndex, context.lView);\n        var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n        return playerContext ? getPlayersInternal(playerContext) : [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    /*\n     * Publishes a collection of default debug tools onto `window._ng_`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    var _published = false;\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getPlayers', getPlayers);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ngDevMode` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 8 /* Dirty */ | 128 /* IsRoot */ :\n            4 /* CheckAlways */ | 128 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLView(null, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            refreshDescendantViews(rootView); // creation mode pass\n            rootView[FLAGS] &= ~1 /* CreationMode */;\n            refreshDescendantViews(rootView); // update mode pass\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        var componentView = createLView(rootView, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 8 /* Dirty */ : 4 /* CheckAlways */, rendererFactory, renderer, sanitizer);\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n            tNode.flags = 1 /* isComponent */;\n            initNodeFlags(tNode, rootView.length, 1);\n            queueComponentIndexForCheck(tNode);\n        }\n        // Store component view at node index, with node as the HOST\n        componentView[HOST] = rootView[HEADER_OFFSET];\n        componentView[HOST_NODE] = tNode;\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var rootTNode = getPreviousOrParentTNode();\n            setCurrentDirectiveDef(componentDef);\n            componentDef.hostBindings(1 /* Create */, component, rootTNode.index - HEADER_OFFSET);\n            setCurrentDirectiveDef(null);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        queueInitHooks(dirIndex, def.onInit, def.doCheck, rootTView);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        queueLifecycleHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext$2(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext$2(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determines if a definition is a {@link ComponentDef} or a {@link DirectiveDef}\n     * @param definition The definition to examine\n     */\n    function isComponentDef$1(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef$1(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (rf, ctx, elementIndex) {\n                            superHostBindings_1(rf, ctx, elementIndex);\n                            prevHostBindings_1(rf, ctx, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                if (isComponentDef$1(definition) && isComponentDef$1(superDef)) {\n                    var prevViewQuery_1 = definition.viewQuery;\n                    var superViewQuery_1 = superDef.viewQuery;\n                    if (superViewQuery_1) {\n                        if (prevViewQuery_1) {\n                            definition.viewQuery = function (rf, ctx) {\n                                superViewQuery_1(rf, ctx);\n                                prevViewQuery_1(rf, ctx);\n                            };\n                        }\n                        else {\n                            definition.viewQuery = superViewQuery_1;\n                        }\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function (dirIndex) {\n                            superContentQueries_1(dirIndex);\n                            prevContentQueries_1(dirIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge Content Queries Refresh\n                var prevContentQueriesRefresh_1 = definition.contentQueriesRefresh;\n                var superContentQueriesRefresh_1 = superDef.contentQueriesRefresh;\n                if (superContentQueriesRefresh_1) {\n                    if (prevContentQueriesRefresh_1) {\n                        definition.contentQueriesRefresh = function (directiveIndex, queryIndex) {\n                            superContentQueriesRefresh_1(directiveIndex, queryIndex);\n                            prevContentQueriesRefresh_1(directiveIndex, queryIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueriesRefresh = superContentQueriesRefresh_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature.ngInherit) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                return \"break\";\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.afterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.afterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.afterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                    definition.onInit = definition.onInit || superPrototype.onInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature(definition) {\n        var publicToDeclaredInputs = definition.declaredInputs;\n        var publicToMinifiedInputs = definition.inputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (publicName) {\n            if (publicToDeclaredInputs.hasOwnProperty(publicName)) {\n                var minifiedKey = publicToMinifiedInputs[publicName];\n                var declaredKey_1 = publicToDeclaredInputs[publicName];\n                var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n                // Walk the prototype chain to see if we find a property descriptor\n                // That way we can honor setters and getters that were inherited.\n                var originalProperty = undefined;\n                var checkProto = proto;\n                while (!originalProperty && checkProto &&\n                    Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                    originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                    checkProto = Object.getPrototypeOf(checkProto);\n                }\n                var getter = originalProperty && originalProperty.get;\n                var setter_1 = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minifiedKey, {\n                    get: getter ||\n                        (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            simpleChanges = {};\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                        var currentChange = simpleChanges[declaredKey_1];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[declaredKey_1] =\n                                new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey_1] = value;\n                        }\n                        if (setter_1)\n                            setter_1.call(this, value);\n                    },\n                    // Make the property configurable in dev mode to allow overriding in tests\n                    configurable: !!ngDevMode\n                });\n            }\n        };\n        for (var publicName in publicToDeclaredInputs) {\n            _loop_1(publicName);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    }\n    // This option ensures that the ngOnChanges lifecycle hook will be inherited\n    // from superclasses (in InheritDefinitionFeature).\n    NgOnChangesFeature.ngInherit = true;\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            if (delegateHook)\n                delegateHook.apply(this);\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR$1 = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR$1); },\n        });\n        /** @internal */\n        Injector.__NG_ELEMENT_ID__ = function () { return SWITCH_INJECTOR_FACTORY(); };\n        return Injector;\n    }());\n    var SWITCH_INJECTOR_FACTORY__POST_R3__ = function () {\n        return injectInjector();\n    };\n    var SWITCH_INJECTOR_FACTORY__PRE_R3__ = noop;\n    var SWITCH_INJECTOR_FACTORY = SWITCH_INJECTOR_FACTORY__PRE_R3__;\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR$1 = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR$1; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR$1, { token: INJECTOR$1, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR$1 : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$1 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            var dedupStack = [];\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR$1, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                return nextInjector.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents, dedupStack); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            var ngModuleType = defOrWrappedDef.ngModule;\n            deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModuleType, providers); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$1) {\n                throw new Error(\"Cannot instantiate cyclic dependency! \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$1;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            var injectorDef = getInjectorDef(token);\n            if (injectorDef !== null) {\n                return injectorDef.factory;\n            }\n            else if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            else if (token instanceof Function) {\n                var paramLength = token.length;\n                if (paramLength > 0) {\n                    var args = new Array(paramLength).fill('?');\n                    throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n                }\n                return function () { return new token(); };\n            }\n            throw new Error('unreachable');\n        }\n        return injectableDef.factory;\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    var ngModuleDetail = '';\n                    if (ngModuleType && providers) {\n                        var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n                        ngModuleDetail =\n                            \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n                    }\n                    throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return value && typeof value == 'object' && USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent$$1 = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent$$1, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent$$1, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, true, directiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent$$1, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent$$1);\n                }\n                if (!isViewProvider && isComponent$$1 && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent$$1, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, true, directiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent$$1 && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        text(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        textBinding(0, bind(ctx.greeter.greet()));\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     *\n     * @param definition\n     */\n    function ProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver = function (def) {\n                return providersResolver(def, providers, viewProviders);\n            };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[HOST_NODE];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 64 /* Destroyed */) === 64 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~16 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 16 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = this._lView[PARENT][this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            result.push(getNativeByTNode(tNodeChild, lView));\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _renderer, _queries, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._renderer = _renderer;\n                    _this._queries = _queries;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container$$1, hostTNode, hostView, index) {\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._renderer, this._queries, this._injectorIndex);\n                    if (container$$1) {\n                        insertView(lView, container$$1, hostView, index, hostTNode.index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[HOST_NODE];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            var hostContainer = hostView[hostTNode.index];\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, getLView()[RENDERER], hostContainer[QUERIES], hostTNode.injectorIndex);\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this._lContainer[VIEWS].length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer[VIEWS].length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, this._hostTNode, this._hostView, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    insertView(lView, this._lContainer, this._hostView, adjustedIdx, this._hostTNode.index);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    this.detach(index);\n                    this.insert(viewRef, this._adjustIndex(newIndex));\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, this._hostTNode, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx, !!this._hostTNode.detached);\n                    var wasDetached = this._viewRefs.splice(adjustedIdx, 1)[0] != null;\n                    return wasDetached ? new ViewRef(view, view[CONTEXT], view[CONTAINER_INDEX]) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this._lContainer[VIEWS].length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostTNode, hostView, commentNode, true);\n            addToViewTree(hostView, hostTNode.index, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), getLView(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.directiveStart;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getLView());\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /** @internal */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /** @internal */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('7.2.0+10.sha-a75c734');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver$$1(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory$$1(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors = [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            var rootFlags = this.componentDef.onPush ? 8 /* Dirty */ | 128 /* IsRoot */ :\n                4 /* CheckAlways */ | 128 /* IsRoot */;\n            var rootContext = !isInternalRootView ? rootViewInjector.get(ROOT_CONTEXT) : createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootLView = createLView(null, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                // Transform the arrays of native nodes into a structure that can be consumed by the\n                // projection instruction. This is needed to support the reprojection of these nodes.\n                if (projectableNodes) {\n                    var index = 0;\n                    var tView = rootLView[TVIEW];\n                    var projection$$1 = tElementNode.projection = [];\n                    for (var i = 0; i < projectableNodes.length; i++) {\n                        var nodeList = projectableNodes[i];\n                        var firstTNode = null;\n                        var previousTNode = null;\n                        for (var j = 0; j < nodeList.length; j++) {\n                            if (tView.firstTemplatePass) {\n                                // For dynamically created components such as ComponentRef, we create a new TView for\n                                // each insert. This is not ideal since we should be sharing the TViews.\n                                // Also the logic here should be shared with `component.ts`'s `renderComponent`\n                                // method.\n                                tView.expandoStartIndex++;\n                                tView.blueprint.splice(++index + HEADER_OFFSET, 0, null);\n                                tView.data.splice(index + HEADER_OFFSET, 0, null);\n                                rootLView.splice(index + HEADER_OFFSET, 0, null);\n                            }\n                            var tNode = createNodeAtIndex(index, 3 /* Element */, nodeList[j], null, null);\n                            previousTNode ? (previousTNode.next = tNode) : (firstTNode = tNode);\n                            previousTNode = tNode;\n                        }\n                        projection$$1.push(firstTNode);\n                    }\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                addToViewTree(rootLView, HEADER_OFFSET, componentView);\n                refreshDescendantViews(rootLView);\n            }\n            finally {\n                leaveView(oldLView);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = createViewNode(-1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef$$1.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n            this.hostView.destroy();\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var elementValid = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    elementValid = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (elementValid && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Outputs only valid Elements.\n         *\n         * Invalid elements are skipped.\n         *\n         * @param element element to sanitize\n         * Returns true if the element is valid.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return false;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEX = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostproocess regexps\n    var PP_PLACEHOLDERS = /\\[(�.+?�?)\\]/g;\n    var PP_ICU_VARS = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICUS = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEX.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else if (block) { // Don't push empty strings\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        if (substring != '') {\n            results.push(substring);\n        }\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEX, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (blocks.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18nStart(index, message, subTemplateIndex) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        var viewData = getLView();\n        var expandoStartIndex = tView.blueprint.length - HEADER_OFFSET;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[HOST_NODE] ?\n            parentTNode.index - HEADER_OFFSET :\n            index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = templateTranslation.split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === '#') {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === '#') {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = value.split(ICU_REGEXP);\n                for (var j = 0; j < parts.length; j++) {\n                    value = parts[j];\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        allocExpando(viewData);\n                        var icuNodeIndex = tView.blueprint.length - 1 - HEADER_OFFSET;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parseICUBlock(value.substr(1, value.length - 2));\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (value !== '') {\n                        // Even indexes are text (including bindings)\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        // Create text nodes\n                        allocExpando(viewData);\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : value, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, tView.blueprint.length - 1 - HEADER_OFFSET), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: tView.blueprint.length - HEADER_OFFSET - expandoStartIndex,\n            expandoStartIndex: expandoStartIndex,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var viewData = getLView();\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== viewData[HOST_NODE]) {\n            tNode.parent = parentTNode;\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @publicAPI\n     */\n    function i18nPostprocess(message, replacements) {\n        //\n        // Step 1: resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n        //\n        var matches = {};\n        var result = message.replace(PP_PLACEHOLDERS, function (_match, content) {\n            if (!matches[content]) {\n                matches[content] = content.split('|');\n            }\n            if (!matches[content].length) {\n                throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n            }\n            return matches[content].shift();\n        });\n        // verify that we injected all values\n        var hasUnmatchedValues = Object.keys(matches).some(function (key) { return !!matches[key].length; });\n        if (hasUnmatchedValues) {\n            throw new Error(\"i18n postprocess: unmatched values - \" + JSON.stringify(matches));\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        //\n        // Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n        //\n        result = result.replace(PP_ICU_VARS, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        //\n        // Step 3: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n        // in case multiple ICUs have the same placeholder name\n        //\n        result = result.replace(PP_ICUS, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     */\n    function i18nEnd() {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(tView);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = getLView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // The last placeholder that was added before `i18nEnd`\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var visitedPlaceholders = readCreateOpCodes(rootIndex, tI18n.create, tI18n.expandoStartIndex, viewData);\n        // Remove deleted placeholders\n        // The last placeholder that was added before `i18nEnd` is `previousOrParentTNode`\n        for (var i = rootIndex + 1; i <= previousOrParentTNode.index - HEADER_OFFSET; i++) {\n            if (visitedPlaceholders.indexOf(i) === -1) {\n                removeNode(i, viewData);\n            }\n        }\n    }\n    function readCreateOpCodes(index, createOpCodes, expandoStartIndex, viewData) {\n        var renderer = getLView()[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedPlaceholders = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode =\n                    createNodeAtIndex(expandoStartIndex++, 3 /* Element */, textRNode, null, null);\n                setIsParent(false);\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[HOST_NODE];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode);\n                        destinationTNode.next = null;\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedPlaceholders.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode);\n                            if (currentTNode.type === 3 /* Element */) {\n                                setIsParent(true);\n                            }\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode);\n                        setIsParent(false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        elementAttribute(elementNodeIndex, attrName, attrValue);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createNodeAtIndex(expandoStartIndex++, 5 /* IcuContainer */, commentRNode, null, null);\n                        attachPatchData(commentRNode, viewData);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsParent(false);\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createNodeAtIndex(expandoStartIndex++, 3 /* Element */, elementRNode, tagNameValue, null);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsParent(false);\n        return visitedPlaceholders;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += stringify$1(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var attrName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementAttribute(nodeIndex, attrName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBinding(nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    var tIcuIndex = updateOpCodes[++j];\n                                    var tIcu = icus[tIcuIndex];\n                                    var icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    removeNode(nodeIndex_1, viewData);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], tIcu.expandoStartIndex, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        removeChild(removedPhTNode, removedPhRNode || null, viewData);\n        removedPhTNode.detached = true;\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n        var slotValue = load(index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                removeChild(removedPhTNode, lContainer[NATIVE] || null, viewData);\n            }\n            lContainer[RENDER_PARENT] = null;\n        }\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18n(index, message, subTemplateIndex) {\n        i18nStart(index, message, subTemplateIndex);\n        i18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     */\n    function i18nAttributes(index, values) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, \"You should only call i18nEnd on first template pass\");\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nAttributesFirstPass(tView, index, values);\n        }\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) ;\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                    }\n                    else {\n                        elementAttribute(previousElementIndex, attrName, value);\n                    }\n                }\n            }\n        }\n        tView.data[index + HEADER_OFFSET] = updateOpCodes;\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param expression The binding's new value or NO_CHANGE\n     */\n    function i18nExp(expression) {\n        if (expression !== NO_CHANGE) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     */\n    function i18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    var Plural;\n    (function (Plural) {\n        Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n        Plural[Plural[\"One\"] = 1] = \"One\";\n        Plural[Plural[\"Two\"] = 2] = \"Two\";\n        Plural[Plural[\"Few\"] = 3] = \"Few\";\n        Plural[Plural[\"Many\"] = 4] = \"Many\";\n        Plural[Plural[\"Other\"] = 5] = \"Other\";\n    })(Plural || (Plural = {}));\n    /**\n     * Returns the plural case based on the locale.\n     * This is a copy of the deprecated function that we used in Angular v4.\n     * // TODO(ocombe): remove this once we can the real getPluralCase function\n     *\n     * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n     */\n    function getPluralCase(locale, nLike) {\n        if (typeof nLike === 'string') {\n            nLike = parseInt(nLike, 10);\n        }\n        var n = nLike;\n        var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n        var i = Math.floor(Math.abs(n));\n        var v = nDecimal.length;\n        var f = parseInt(nDecimal, 10);\n        var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n        var lang = locale.split('-')[0].toLowerCase();\n        switch (lang) {\n            case 'af':\n            case 'asa':\n            case 'az':\n            case 'bem':\n            case 'bez':\n            case 'bg':\n            case 'brx':\n            case 'ce':\n            case 'cgg':\n            case 'chr':\n            case 'ckb':\n            case 'ee':\n            case 'el':\n            case 'eo':\n            case 'es':\n            case 'eu':\n            case 'fo':\n            case 'fur':\n            case 'gsw':\n            case 'ha':\n            case 'haw':\n            case 'hu':\n            case 'jgo':\n            case 'jmc':\n            case 'ka':\n            case 'kk':\n            case 'kkj':\n            case 'kl':\n            case 'ks':\n            case 'ksb':\n            case 'ky':\n            case 'lb':\n            case 'lg':\n            case 'mas':\n            case 'mgo':\n            case 'ml':\n            case 'mn':\n            case 'nb':\n            case 'nd':\n            case 'ne':\n            case 'nn':\n            case 'nnh':\n            case 'nyn':\n            case 'om':\n            case 'or':\n            case 'os':\n            case 'ps':\n            case 'rm':\n            case 'rof':\n            case 'rwk':\n            case 'saq':\n            case 'seh':\n            case 'sn':\n            case 'so':\n            case 'sq':\n            case 'ta':\n            case 'te':\n            case 'teo':\n            case 'tk':\n            case 'tr':\n            case 'ug':\n            case 'uz':\n            case 'vo':\n            case 'vun':\n            case 'wae':\n            case 'xog':\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ak':\n            case 'ln':\n            case 'mg':\n            case 'pa':\n            case 'ti':\n                if (n === Math.floor(n) && n >= 0 && n <= 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'am':\n            case 'as':\n            case 'bn':\n            case 'fa':\n            case 'gu':\n            case 'hi':\n            case 'kn':\n            case 'mr':\n            case 'zu':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ar':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'ast':\n            case 'ca':\n            case 'de':\n            case 'en':\n            case 'et':\n            case 'fi':\n            case 'fy':\n            case 'gl':\n            case 'it':\n            case 'nl':\n            case 'sv':\n            case 'sw':\n            case 'ur':\n            case 'yi':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                return Plural.Other;\n            case 'be':\n                if (n % 10 === 1 && !(n % 100 === 11))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                    !(n % 100 >= 12 && n % 100 <= 14))\n                    return Plural.Few;\n                if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                    n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'br':\n                if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                    return Plural.One;\n                if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                    return Plural.Two;\n                if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                    !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                        n % 100 >= 90 && n % 100 <= 99))\n                    return Plural.Few;\n                if (!(n === 0) && n % 1e6 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'bs':\n            case 'hr':\n            case 'sr':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14) ||\n                    f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                        !(f % 100 >= 12 && f % 100 <= 14))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'cs':\n            case 'sk':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'cy':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === 3)\n                    return Plural.Few;\n                if (n === 6)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'da':\n                if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                    return Plural.One;\n                return Plural.Other;\n            case 'dsb':\n            case 'hsb':\n                if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                    f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ff':\n            case 'fr':\n            case 'hy':\n            case 'kab':\n                if (i === 0 || i === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'fil':\n                if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                    v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                    !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ga':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === Math.floor(n) && n >= 3 && n <= 6)\n                    return Plural.Few;\n                if (n === Math.floor(n) && n >= 7 && n <= 10)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'gd':\n                if (n === 1 || n === 11)\n                    return Plural.One;\n                if (n === 2 || n === 12)\n                    return Plural.Two;\n                if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'gv':\n                if (v === 0 && i % 10 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 10 === 2)\n                    return Plural.Two;\n                if (v === 0 &&\n                    (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'he':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === 2 && v === 0)\n                    return Plural.Two;\n                if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'is':\n                if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ksh':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'kw':\n            case 'naq':\n            case 'se':\n            case 'smn':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                return Plural.Other;\n            case 'lag':\n                if (n === 0)\n                    return Plural.Zero;\n                if ((i === 0 || i === 1) && !(n === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'lt':\n                if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                    !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.Few;\n                if (!(f === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'lv':\n            case 'prg':\n                if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                    v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                    return Plural.Zero;\n                if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                    !(v === 2) && f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mk':\n                if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mt':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pl':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pt':\n                if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ro':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (!(v === 0) || n === 0 ||\n                    !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ru':\n            case 'uk':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && i % 10 === 0 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'shi':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                if (n === Math.floor(n) && n >= 2 && n <= 10)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'si':\n                if (n === 0 || n === 1 || i === 0 && f === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'sl':\n                if (v === 0 && i % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'tzm':\n                if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                    return Plural.One;\n                return Plural.Other;\n            // When there is no specification, the default is always \"other\"\n            // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n            // > other (required—general plural form — also used if the language only has a single form)\n            default:\n                return Plural.Other;\n        }\n    }\n    function getPluralCategory(value, locale) {\n        var plural = getPluralCase(locale, value);\n        switch (plural) {\n            case Plural.Zero:\n                return 'zero';\n            case Plural.One:\n                return 'one';\n            case Plural.Two:\n                return 'two';\n            case Plural.Few:\n                return 'few';\n            case Plural.Many:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    // TODO(ocombe): replace this hard-coded value by the real LOCALE_ID value\n                    var locale = 'en-US';\n                    var resolvedCase = getPluralCategory(bindingValue, locale);\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            expandoStartIndex: expandoStartIndex + 1, childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        var lView = getLView();\n        var worstCaseSize = Math.max.apply(Math, __spread(vars));\n        for (var i = 0; i < worstCaseSize; i++) {\n            allocExpando(lView);\n        }\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element$$1 = currentNode;\n                        var tagName = element$$1.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element$$1.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders);\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR$1) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        var _a;\n        var clazz = type;\n        if (decorators !== null) {\n            if (clazz.decorators !== undefined) {\n                (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n            }\n            else {\n                clazz.decorators = decorators;\n            }\n        }\n        if (ctorParameters !== null) {\n            // Rather than merging, clobber the existing parameters. If other projects exist which use\n            // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n            // but that is vanishingly unlikely.\n            clazz.ctorParameters = ctorParameters;\n        }\n        if (propDecorators !== null) {\n            // The property decorator objects are merged as it is possible different fields have different\n            // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n            // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n            // decorator that's also been downleveled.\n            if (clazz.propDecorators !== undefined) {\n                clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n            }\n            else {\n                clazz.propDecorators = propDecorators;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return isCreationMode() ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory(null);\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(index) {\n        return getLView()[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue(newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            getLView()[getBindingRoot()] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /** @internal */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            if (isContentQueryHost(tNode)) {\n                add(this.shallow, tNode);\n                if (tNode.parent && isContentQueryHost(tNode.parent)) {\n                    // if node has a content query and parent also has a content query\n                    // both queries need to check this node for shallow matches\n                    add(this.parent.shallow, tNode);\n                }\n                return this.parent;\n            }\n            isRootNodeOfQuery(tNode) && add(this.shallow, tNode);\n            return this;\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function isRootNodeOfQuery(tNode) {\n        return tNode.parent === null || isContentQueryHost(tNode.parent);\n    }\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryByReadToken(read, tNode, currentView) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = locateDirectiveOrProvider(tNode, currentView, read, false, false);\n            if (matchingIdx !== null) {\n                return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n            }\n        }\n        return null;\n    }\n    function queryByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function queryByTemplateRef(templateRefToken, tNode, currentView, read) {\n        var templateRefResult = templateRefToken[NG_ELEMENT_ID]();\n        if (read) {\n            return templateRefResult ? queryByReadToken(read, tNode, currentView) : null;\n        }\n        return templateRefResult;\n    }\n    function queryRead(tNode, currentView, read, matchingIdx) {\n        if (read) {\n            return queryByReadToken(read, tNode, currentView);\n        }\n        if (matchingIdx > -1) {\n            return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n        }\n        // if read token and / or strategy is not specified,\n        // detect it using appropriate tNode type\n        return queryByTNodeType(tNode, currentView);\n    }\n    function add(query, tNode) {\n        var currentView = getLView();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var result = null;\n                if (type === TemplateRef) {\n                    result = queryByTemplateRef(type, tNode, currentView, predicate.read);\n                }\n                else {\n                    var matchingIdx = locateDirectiveOrProvider(tNode, currentView, type, false, false);\n                    if (matchingIdx !== null) {\n                        result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                    }\n                }\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var matchingIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (matchingIdx !== null) {\n                        var result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    var QueryList_ = /** @class */ (function () {\n        function QueryList_() {\n            this.dirty = true;\n            this.changes = new EventEmitter();\n            this._values = [];\n            /** @internal */\n            this._valuesTree = [];\n        }\n        Object.defineProperty(QueryList_.prototype, \"length\", {\n            get: function () { return this._values.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"first\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[0] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"last\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[values.length - 1] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList_.prototype.filter = function (fn) {\n            return this._values.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList_.prototype.find = function (fn) {\n            return this._values.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList_.prototype.reduce = function (fn, init) {\n            return this._values.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList_.prototype.some = function (fn) {\n            return this._values.some(fn);\n        };\n        QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n        QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n        QueryList_.prototype.toString = function () { return this._values.toString(); };\n        QueryList_.prototype.reset = function (res) {\n            this._values = flatten(res);\n            this.dirty = false;\n        };\n        QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        QueryList_.prototype.setDirty = function () { this.dirty = true; };\n        QueryList_.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList_;\n    }());\n    var QueryList = QueryList_;\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, \n    // TODO: \"read\" should be an AbstractType (FW-486)\n    read) {\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        var queryList = new QueryList();\n        var queries = getOrCreateCurrentQueries(LQueries_);\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(getLView(), queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type);\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ɵdefineBase': defineBase,\n        'ɵdefineComponent': defineComponent,\n        'ɵdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ɵdefineNgModule': defineNgModule,\n        'ɵdefinePipe': definePipe,\n        'ɵdirectiveInject': directiveInject,\n        'ɵgetFactoryOf': getFactoryOf,\n        'ɵgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ɵinjectAttribute': injectAttribute,\n        'ɵtemplateRefExtractor': templateRefExtractor,\n        'ɵNgOnChangesFeature': NgOnChangesFeature,\n        'ɵProvidersFeature': ProvidersFeature,\n        'ɵInheritDefinitionFeature': InheritDefinitionFeature,\n        'ɵelementAttribute': elementAttribute,\n        'ɵbind': bind,\n        'ɵcontainer': container,\n        'ɵnextContext': nextContext,\n        'ɵcontainerRefreshStart': containerRefreshStart,\n        'ɵcontainerRefreshEnd': containerRefreshEnd,\n        'ɵloadQueryList': loadQueryList,\n        'ɵnamespaceHTML': namespaceHTML,\n        'ɵnamespaceMathML': namespaceMathML,\n        'ɵnamespaceSVG': namespaceSVG,\n        'ɵenableBindings': enableBindings,\n        'ɵdisableBindings': disableBindings,\n        'ɵallocHostVars': allocHostVars,\n        'ɵelementStart': elementStart,\n        'ɵelementEnd': elementEnd,\n        'ɵelement': element,\n        'ɵelementContainerStart': elementContainerStart,\n        'ɵelementContainerEnd': elementContainerEnd,\n        'ɵpureFunction0': pureFunction0,\n        'ɵpureFunction1': pureFunction1,\n        'ɵpureFunction2': pureFunction2,\n        'ɵpureFunction3': pureFunction3,\n        'ɵpureFunction4': pureFunction4,\n        'ɵpureFunction5': pureFunction5,\n        'ɵpureFunction6': pureFunction6,\n        'ɵpureFunction7': pureFunction7,\n        'ɵpureFunction8': pureFunction8,\n        'ɵpureFunctionV': pureFunctionV,\n        'ɵgetCurrentView': getCurrentView,\n        'ɵrestoreView': restoreView,\n        'ɵinterpolation1': interpolation1,\n        'ɵinterpolation2': interpolation2,\n        'ɵinterpolation3': interpolation3,\n        'ɵinterpolation4': interpolation4,\n        'ɵinterpolation5': interpolation5,\n        'ɵinterpolation6': interpolation6,\n        'ɵinterpolation7': interpolation7,\n        'ɵinterpolation8': interpolation8,\n        'ɵinterpolationV': interpolationV,\n        'ɵelementClassProp': elementClassProp,\n        'ɵlistener': listener,\n        'ɵload': load,\n        'ɵprojection': projection,\n        'ɵelementProperty': elementProperty,\n        'ɵcomponentHostSyntheticProperty': componentHostSyntheticProperty,\n        'ɵpipeBind1': pipeBind1,\n        'ɵpipeBind2': pipeBind2,\n        'ɵpipeBind3': pipeBind3,\n        'ɵpipeBind4': pipeBind4,\n        'ɵpipeBindV': pipeBindV,\n        'ɵprojectionDef': projectionDef,\n        'ɵpipe': pipe,\n        'ɵquery': query,\n        'ɵqueryRefresh': queryRefresh,\n        'ɵregisterContentQuery': registerContentQuery,\n        'ɵreference': reference,\n        'ɵelementStyling': elementStyling,\n        'ɵelementHostAttrs': elementHostAttrs,\n        'ɵelementStylingMap': elementStylingMap,\n        'ɵelementStyleProp': elementStyleProp,\n        'ɵelementStylingApply': elementStylingApply,\n        'ɵtemplate': template,\n        'ɵtext': text,\n        'ɵtextBinding': textBinding,\n        'ɵembeddedViewStart': embeddedViewStart,\n        'ɵembeddedViewEnd': embeddedViewEnd,\n        'ɵi18n': i18n,\n        'ɵi18nAttributes': i18nAttributes,\n        'ɵi18nExp': i18nExp,\n        'ɵi18nStart': i18nStart,\n        'ɵi18nEnd': i18nEnd,\n        'ɵi18nApply': i18nApply,\n        'ɵi18nPostprocess': i18nPostprocess,\n        'ɵsanitizeHtml': sanitizeHtml,\n        'ɵsanitizeStyle': sanitizeStyle,\n        'ɵdefaultStyleSanitizer': defaultStyleSanitizer,\n        'ɵsanitizeResourceUrl': sanitizeResourceUrl,\n        'ɵsanitizeScript': sanitizeScript,\n        'ɵsanitizeUrl': sanitizeUrl\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertNotExisting(id, existing && existing.moduleType);\n        modules.set(id, factory);\n    }\n    function assertNotExisting(id, type) {\n        if (type) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(id, ngModuleType) {\n        var existing = modules.get(id);\n        assertNotExisting(id, existing);\n        modules.set(id, ngModuleType);\n    }\n    function getModuleFactory__PRE_R3__(id) {\n        var factory = modules.get(id);\n        if (!factory)\n            throw noModuleError(id);\n        return factory;\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = modules.get(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__PRE_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$2 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$2, resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten$1(ngModule.imports || EMPTY_ARRAY$2, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten$1(ngModule.exports || EMPTY_ARRAY$2, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        if (ngModule.id) {\n            registerNgModuleType(ngModule.id, moduleType);\n        }\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$2,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$2).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$2).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef = getNgModuleDef(moduleType, true);\n        var errors = [];\n        ngModuleDef.declarations.forEach(verifyDeclarationsHaveDefinitions);\n        var combinedDeclarations = __spread(ngModuleDef.declarations.map(resolveForwardRef), flatten$1(ngModuleDef.imports.map(computeCombinedExports), resolveForwardRef));\n        ngModuleDef.exports.forEach(verifyExportsAreDeclaredOrReExported);\n        ngModuleDef.declarations.forEach(verifyDeclarationIsUnique);\n        ngModuleDef.declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten$1(ngModule.imports, unwrapModuleWithProvidersImports)\n                    .forEach(verifySemanticsOfNgModuleDef);\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents && ngModule.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + stringify$1(type) + \"' declared by the module '\" + stringify$1(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + stringify$1(type) + \" from \" + stringify$1(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                var modules = [existingModule, moduleType].map(stringify$1).sort();\n                errors.push(\"Type \" + stringify$1(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                    (\"Please consider moving \" + stringify$1(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                    (\"You can also create a new NgModule that exports and includes \" + stringify$1(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + stringify$1(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    component.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited\n     * by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten$1(ngModuleDef.exports.map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopes.compilation.directives)\n            .map(function (dir) { return getDirectiveDef(dir) || getComponentDef(dir); })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedTyped = imported;\n            if (!isNgModule(importedTyped)) {\n                throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedTyped);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedTyped = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedTyped)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedTyped);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedTyped)) {\n                scopes.exported.pipes.add(exportedTyped);\n            }\n            else {\n                scopes.exported.directives.add(exportedTyped);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$1(values, mapFn) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$1(value, mapFn)));\n            }\n            else {\n                out.push(mapFn ? mapFn(value) : value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + stringify$1(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + stringify$1(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var meta = __assign({}, directiveMetadata(type, metadata), { template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, viewQueries: extractQueriesMetadata(type, getReflect().propMetadata(type), isViewQuery), directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, \"ng://\" + stringify$1(type) + \"/template.html\", meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var facade = directiveMetadata(type, directive);\n                    ngDirectiveDef = getCompilerFacade().compileDirective(angularCoreEnv, \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\", facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY,\n            outputs: metadata.outputs || EMPTY_ARRAY,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: metadata.exportAs || null,\n            providers: metadata.providers || null,\n        };\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + stringify$1(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return queriesMeta;\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng://\" + stringify$1(type) + \"/ngPipeDef.js\", {\n                        type: type,\n                        name: type.name,\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true\n                    });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0];\n        };\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\n    var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__PRE_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__PRE_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$2 = getClosureSafeProperty;\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: ɵ0$2 });\n    var EMPTY_ARRAY$3 = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$1 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return inject(existingProvider_1.useExisting); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY$3))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = defineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n            return;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n                    var meta = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        typeArgumentCount: 0,\n                        providedIn: meta.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined\n                    };\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta.useClass;\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var ɵ0$3 = getClosureSafeProperty;\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: ɵ0$3 });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$2 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function render2CompileInjectable(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    var Compiler_compileModuleSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__PRE_R3__;\n    var Compiler_compileModuleAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        return new ModuleWithComponentFactories(Compiler_compileModuleSync__POST_R3__(moduleType), []);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__PRE_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_R3__;\n    function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        return Promise.resolve(new NgModuleFactory$1(moduleType));\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        var ApplicationRef_1;\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList$1 = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$2(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$2(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$2(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /** @internal */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /** @internal */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement && getComponent(nativeElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () { return getContext(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () { return this.nativeElement.nodeName; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            get: function () {\n                var context = loadLContext(this.nativeNode);\n                var lView = context.lView;\n                var tView = lView[TVIEW];\n                var tNode = tView.data[context.nodeIndex];\n                var properties = {};\n                // TODO: https://angular-team.atlassian.net/browse/FW-681\n                // Missing implementation here...\n                return properties;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var eAttrs = element.attributes;\n                    for (var i = 0; i < eAttrs.length; i++) {\n                        var attr = eAttrs[i];\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                var classes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var lNode = lContext.lView[lContext.nodeIndex];\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 9 /* SingleStylesStartPosition */; i < lNode.length; i += 4 /* Size */) {\n                            if (isClassBasedValue(lNode, i)) {\n                                var className = getProp(lNode, i);\n                                var value = getValue(lNode, i);\n                                if (typeof value == 'boolean') {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    classes[className] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eClasses = element.classList;\n                        for (var i = 0; i < eClasses.length; i++) {\n                            classes[eClasses[i]] = true;\n                        }\n                    }\n                }\n                return classes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                var styles = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var lNode = lContext.lView[lContext.nodeIndex];\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 9 /* SingleStylesStartPosition */; i < lNode.length; i += 4 /* Size */) {\n                            if (!isClassBasedValue(lNode, i)) {\n                                var styleName = getProp(lNode, i);\n                                var value = getValue(lNode, i);\n                                if (value !== null) {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    styles[styleName] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eStyles = element.style;\n                        for (var i = 0; i < eStyles.length; i++) {\n                            var name_1 = eStyles.item(i);\n                            styles[name_1] = eStyles.getPropertyValue(name_1);\n                        }\n                    }\n                }\n                return styles;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    function _queryNodeChildrenR3(parentNode, predicate, matches, elementsOnly) {\n        if (parentNode instanceof DebugElement__POST_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__POST_R3__) {\n                    if (elementsOnly ? node.nativeElement : true) {\n                        _queryNodeChildrenR3(node, predicate, matches, elementsOnly);\n                    }\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__PRE_R3__(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            return nativeNode.nodeType == Node.ELEMENT_NODE ?\n                new DebugElement__POST_R3__(nativeNode) :\n                new DebugNode__POST_R3__(nativeNode);\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode = getDebugNode__PRE_R3__;\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__PRE_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var SWITCH_IVY_ENABLED__PRE_R3__ = false;\n    var ivyEnabled = SWITCH_IVY_ENABLED__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue$1(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$4 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR$1);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR$1);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1 = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1 ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList$1();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵangular_packages_core_core_s = APPLICATION_MODULE_PROVIDERS;\n    exports.ɵangular_packages_core_core_p = _iterableDiffersFactory;\n    exports.ɵangular_packages_core_core_q = _keyValueDiffersFactory;\n    exports.ɵangular_packages_core_core_r = _localeFactory;\n    exports.ɵangular_packages_core_core_g = _appIdRandomProviderFactory;\n    exports.ɵangular_packages_core_core_n = DefaultIterableDifferFactory;\n    exports.ɵangular_packages_core_core_o = DefaultKeyValueDifferFactory;\n    exports.ɵangular_packages_core_core_m = DebugElement__PRE_R3__;\n    exports.ɵangular_packages_core_core_l = DebugNode__PRE_R3__;\n    exports.ɵangular_packages_core_core_c = injectInjectorOnly;\n    exports.ɵangular_packages_core_core_d = ReflectiveInjector_;\n    exports.ɵangular_packages_core_core_e = ReflectiveDependency;\n    exports.ɵangular_packages_core_core_f = resolveReflectiveProviders;\n    exports.ɵangular_packages_core_core_k = getModuleFactory__PRE_R3__;\n    exports.ɵangular_packages_core_core_t = wtfEnabled;\n    exports.ɵangular_packages_core_core_v = createScope;\n    exports.ɵangular_packages_core_core_u = detectWTF;\n    exports.ɵangular_packages_core_core_y = endTimeRange;\n    exports.ɵangular_packages_core_core_w = leave;\n    exports.ɵangular_packages_core_core_x = startTimeRange;\n    exports.ɵangular_packages_core_core_bb = injectAttributeImpl;\n    exports.ɵangular_packages_core_core_bc = getLView;\n    exports.ɵangular_packages_core_core_bd = getPreviousOrParentTNode;\n    exports.ɵangular_packages_core_core_be = nextContextImpl;\n    exports.ɵangular_packages_core_core_bh = BoundPlayerFactory;\n    exports.ɵangular_packages_core_core_bk = loadInternal;\n    exports.ɵangular_packages_core_core_h = createElementRef;\n    exports.ɵangular_packages_core_core_i = createTemplateRef;\n    exports.ɵangular_packages_core_core_j = createViewRef;\n    exports.ɵangular_packages_core_core_a = makeParamDecorator;\n    exports.ɵangular_packages_core_core_b = makePropDecorator;\n    exports.ɵangular_packages_core_core_bi = getClosureSafeProperty;\n    exports.ɵangular_packages_core_core_z = _def;\n    exports.ɵangular_packages_core_core_ba = DebugContext;\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.INJECTOR = INJECTOR$1;\n    exports.Injector = Injector;\n    exports.inject = inject;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList$1;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual;\n    exports.ɵisListLikeIterable = isListLikeIterable;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵinject = inject;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1;\n    exports.ɵdefineBase = defineBase;\n    exports.ɵdefineComponent = defineComponent;\n    exports.ɵdefineDirective = defineDirective;\n    exports.ɵdefinePipe = definePipe;\n    exports.ɵdefineNgModule = defineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵdirectiveInject = directiveInject;\n    exports.ɵinjectAttribute = injectAttribute;\n    exports.ɵgetFactoryOf = getFactoryOf;\n    exports.ɵgetInheritedFactory = getInheritedFactory;\n    exports.ɵtemplateRefExtractor = templateRefExtractor;\n    exports.ɵProvidersFeature = ProvidersFeature;\n    exports.ɵInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ɵNgOnChangesFeature = NgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵcontainer = container;\n    exports.ɵnextContext = nextContext;\n    exports.ɵelementStart = elementStart;\n    exports.ɵnamespaceHTML = namespaceHTML;\n    exports.ɵnamespaceMathML = namespaceMathML;\n    exports.ɵnamespaceSVG = namespaceSVG;\n    exports.ɵelement = element;\n    exports.ɵlistener = listener;\n    exports.ɵtext = text;\n    exports.ɵembeddedViewStart = embeddedViewStart;\n    exports.ɵquery = query;\n    exports.ɵregisterContentQuery = registerContentQuery;\n    exports.ɵprojection = projection;\n    exports.ɵbind = bind;\n    exports.ɵinterpolation1 = interpolation1;\n    exports.ɵinterpolation2 = interpolation2;\n    exports.ɵinterpolation3 = interpolation3;\n    exports.ɵinterpolation4 = interpolation4;\n    exports.ɵinterpolation5 = interpolation5;\n    exports.ɵinterpolation6 = interpolation6;\n    exports.ɵinterpolation7 = interpolation7;\n    exports.ɵinterpolation8 = interpolation8;\n    exports.ɵinterpolationV = interpolationV;\n    exports.ɵpipeBind1 = pipeBind1;\n    exports.ɵpipeBind2 = pipeBind2;\n    exports.ɵpipeBind3 = pipeBind3;\n    exports.ɵpipeBind4 = pipeBind4;\n    exports.ɵpipeBindV = pipeBindV;\n    exports.ɵpureFunction0 = pureFunction0;\n    exports.ɵpureFunction1 = pureFunction1;\n    exports.ɵpureFunction2 = pureFunction2;\n    exports.ɵpureFunction3 = pureFunction3;\n    exports.ɵpureFunction4 = pureFunction4;\n    exports.ɵpureFunction5 = pureFunction5;\n    exports.ɵpureFunction6 = pureFunction6;\n    exports.ɵpureFunction7 = pureFunction7;\n    exports.ɵpureFunction8 = pureFunction8;\n    exports.ɵpureFunctionV = pureFunctionV;\n    exports.ɵgetCurrentView = getCurrentView;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵrestoreView = restoreView;\n    exports.ɵcontainerRefreshStart = containerRefreshStart;\n    exports.ɵcontainerRefreshEnd = containerRefreshEnd;\n    exports.ɵqueryRefresh = queryRefresh;\n    exports.ɵloadQueryList = loadQueryList;\n    exports.ɵelementEnd = elementEnd;\n    exports.ɵelementProperty = elementProperty;\n    exports.ɵcomponentHostSyntheticProperty = componentHostSyntheticProperty;\n    exports.ɵprojectionDef = projectionDef;\n    exports.ɵreference = reference;\n    exports.ɵenableBindings = enableBindings;\n    exports.ɵdisableBindings = disableBindings;\n    exports.ɵallocHostVars = allocHostVars;\n    exports.ɵelementAttribute = elementAttribute;\n    exports.ɵelementContainerStart = elementContainerStart;\n    exports.ɵelementContainerEnd = elementContainerEnd;\n    exports.ɵelementStyling = elementStyling;\n    exports.ɵelementHostAttrs = elementHostAttrs;\n    exports.ɵelementStylingMap = elementStylingMap;\n    exports.ɵelementStyleProp = elementStyleProp;\n    exports.ɵelementStylingApply = elementStylingApply;\n    exports.ɵelementClassProp = elementClassProp;\n    exports.ɵtextBinding = textBinding;\n    exports.ɵtemplate = template;\n    exports.ɵembeddedViewEnd = embeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵload = load;\n    exports.ɵpipe = pipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵi18n = i18n;\n    exports.ɵi18nAttributes = i18nAttributes;\n    exports.ɵi18nExp = i18nExp;\n    exports.ɵi18nStart = i18nStart;\n    exports.ɵi18nEnd = i18nEnd;\n    exports.ɵi18nApply = i18nApply;\n    exports.ɵi18nPostprocess = i18nPostprocess;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵsanitizeHtml = sanitizeHtml;\n    exports.ɵsanitizeStyle = sanitizeStyle;\n    exports.ɵsanitizeUrl = sanitizeUrl;\n    exports.ɵsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_COMPONENT_DEF = NG_COMPONENT_DEF;\n    exports.ɵNG_DIRECTIVE_DEF = NG_DIRECTIVE_DEF;\n    exports.ɵNG_INJECTABLE_DEF = NG_INJECTABLE_DEF;\n    exports.ɵNG_INJECTOR_DEF = NG_INJECTOR_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_MODULE_DEF = NG_MODULE_DEF;\n    exports.ɵNG_BASE_DEF = NG_BASE_DEF;\n    exports.ɵbindPlayerFactory = bindPlayerFactory;\n    exports.ɵaddPlayer = addPlayer;\n    exports.ɵgetPlayers = getPlayers;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵSWITCH_INJECTOR_FACTORY__POST_R3__ = SWITCH_INJECTOR_FACTORY__POST_R3__;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$4;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵelementEventFullName = elementEventFullName;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue$1;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}